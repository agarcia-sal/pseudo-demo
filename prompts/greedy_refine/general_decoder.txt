You are an expert in in the domain of writing prompts for translating pseudocode to code.
Your task is to design a prompt that can effectively translate pseudocode into code. 
The prompt should be general and not specific to any given problem.
Only output one prompt.
Below is a previously developed prompt. Your goal is to enhance this solution to further improve its test-time performance:\n

{prompt}\n

Here are example outputs from the existing prompt as well as the scores across all problems:\n

{feedback}\n

These scores are normalized across all problems, with higher values indicating better performance. 
Higher scores means the decoded codes passed more test cases.
Analyze these evaluation results carefully to identify areas for improvement.\n\n
Then, implement your proposed improvements in a new prompt based on the previous solution provided.
You are encouraged to propose significant, innovative improvementsâ€”your prompt should be distinctly different and clearly superior. 
If you have a completely new and more effective approach, feel free to abandon the previous method and adopt your new approach. 
Your function has a {timeout}-second timeout; aim to return the best possible results within this limit.
The prompt should state the following:
Enclose all your code within a Python code block using: ```python ... ```. 
It is important to keep the same function name as in the pseudocode.
It is important to keep the same class names as the pseudocode and in the same class and object structures.
Do not use separator lines (e.g., '-----'). 
Ensure your code is as effective as possible. You may use any Python package. 