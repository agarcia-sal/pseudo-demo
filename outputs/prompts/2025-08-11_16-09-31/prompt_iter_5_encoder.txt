Generate concise, high-level pseudocode from the given problem description that is easy to read and understand. Use natural language combined with symbolic notations and abbreviations, favoring compact one-liners whenever possible. Number each step sequentially as shown below, without adding any explanations, comments, summaries, or notes—only the pseudocode itself should be output. Do not use any separator lines.

Follow this exact formatting style and structure:

1. x ← 0  
2. while x < n: x++

If defining functions, start with “in function <name>” and use indentation for nested blocks, but keep all lines succinct and clear. Prefer direct assignment and control flow statements with minimal verbosity. Use meaningful variable names but avoid unnecessary words.

Example of the pseudocode style your output should match:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Complete the pseudocode efficiently within a 5-second timeout, prioritizing correctness and clarity in concise form.