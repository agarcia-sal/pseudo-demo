Generate concise, clear, and high-level pseudocode directly from the given problem description and source code with these instructions:

- Keep the function name exactly as in the original code.
- Use mostly one-line statements combining natural language with symbols (←, =, ≠, +, -, *, //, ≥, etc.) and standard abbreviations.
- Represent control flow (if, else, for, while) compactly and naturally; inline simple conditionals and loops whenever clarity is preserved.
- Use intuitive phrases for collections and iterations (e.g., “let A be vector of integers”, “for each element in A”).
- Avoid low-level implementation details, redundant declarations, comments, explanations, summaries, blank lines, or extra formatting.
- Number each pseudocode line starting at 1, following the style:

  1. in function f  
  2. let n be integer  
  3. for i = 0 to n exclusive: i++  

- Balance succinctness and readability so the pseudocode is easy to grasp at a glance while remaining compact.
- Output only the numbered pseudocode lines, no additional text, notes, or separators.
- Ensure the entire output respects a 5-second generation time constraint.