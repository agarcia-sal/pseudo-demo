Generate concise, clear, and easy-to-read pseudocode that captures the original code’s logic and structure at a high level using mostly one-line statements.  
Keep all original class and function names unchanged and preserve the exact class-object hierarchy.  
Use a mix of natural language and common symbols/abbreviations for compactness and readability; avoid verbose explanations, comments, summaries, or clarification notes.  
Prefer symbolic expressions, control flows, and assignments; output pure pseudocode only.  
Use mostly one-liners but allow minimal nested structure if it improves clarity.  
Number each line sequentially starting at 1, strictly in this format:

1. x ← 0  
2. while x < n: x++

Do not include blank lines, separators, commentary, or additional formatting beyond numbered pseudocode lines.  
Ensure output fits within 5 seconds and covers complete, correct logic.  
Maintain moderate natural language—not overly terse or cryptic.  
Example style:
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A