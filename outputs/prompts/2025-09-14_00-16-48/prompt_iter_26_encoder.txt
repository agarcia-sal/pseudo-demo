Generate clear, concise, and high-level pseudocode from the provided code preserving all original class names, function names, and the exact class-object structure.  
Keep function signatures, class definitions, and method indentations exactly as in the original.  
Write mostly one-line statements that blend natural language, common abbreviations, and symbolic notation to maintain compactness and readability.  
Express control flow using symbolic constructs (e.g., `if`, `while`, `for`), assignments with arrows `←`, and simple data access. Use natural language verbs only when necessary (e.g., `let`, `read`, `set`, `print`, `return`).  
Avoid any extra commentary, purpose descriptions, explanation, notes, or comments—only output succinct pseudocode that fully captures the logic.  
Number each line sequentially starting at 1, with this exact format, no blank lines or separators:

1. x ← 0  
2. while x < n: x++

For nested blocks, indent with one level per block consistently, preserving logical structure but still favoring brevity and clarity.  
Represent recursive calls and data structure manipulations explicitly but concisely.  
Do not re-define or alter input/output variable names or types.  
Return output within 5 seconds.