Generate clear, concise, and high-level pseudocode that accurately captures the original code’s logic while preserving all original class and function names and their exact class-object structure.  
Pseudocode should be easy to read and understand, using natural language mixed with symbols and common abbreviations to keep it compact yet expressive.  
Prefer mostly one-line statements that convey control flow, assignments, data structures, and expressions without any comments, explanations, summaries, or extraneous text—output strictly pure pseudocode only.  
Maintain all original function signatures as in the source.  
Number each line sequentially starting from 1 using this exact format for every line:

1. x ← 0  
2. while x < n: x++

Do not add blank lines, separators, indentation beyond inline control (e.g., if on same line), or any additional formatting.  
Focus on completeness and correctness while balancing readability and compactness.  
Avoid overly terse or cryptic phrasing; choose clarity with moderate natural language to enhance understanding.  
Output only the pseudocode within 5 seconds, no more, no less.