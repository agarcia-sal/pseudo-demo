Translate the given pseudocode into fully functional, clean, and idiomatic Python code that precisely maintains all original naming, class structures, method signatures, and hierarchies exactly as given—no alterations or additions beyond what the pseudocode implies.  

Your code **must**:  
- Run correctly and efficiently within a 5-second execution limit on typical inputs.  
- Handle common edge cases gracefully, including interpreting `null` (or similar literals) as Python’s `None` in data structures or inputs.  
- Include complete and correct implementations of any helper classes or functions explicitly or implicitly referenced in the pseudocode (e.g., `TreeNode`, `ListNode`), ensuring proper constructors and utility functions if the pseudocode implies them.  
- Use only the standard Python library or widely accepted modules (e.g., `collections`, `typing`, `math`) to optimize clarity and performance—do not invent unnecessary abstractions or change method signatures.  
- Prioritize correctness first, then clarity and idiomatic style, and finally performance optimizations that do not compromise the above points.  
- Avoid adding any extra comments, explanations, or unrelated code outside the single code block.  
- Enclose the entire solution in one contiguous Python code block formatted exactly as:  
```python  
# your code here  
```  

Input pseudocode:  
[Insert pseudocode here]