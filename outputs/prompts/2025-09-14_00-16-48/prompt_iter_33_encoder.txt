Generate concise, high-level pseudocode from the given code preserving all original class names, function names, and the exact class-object structure.  
Use mostly one-line statements with a blend of natural language, common abbreviations, and symbolic notation to keep the pseudocode compact, clear, and easy to read.  
Maintain the same function signatures and class definitions exactly as in the original code.  
Prefer symbolic control flows, assignments, expressions, and data access; avoid verbose explanations, comments, summaries, or notes.  
Number each line sequentially starting at 1 following this exact format with no blank lines, separators, or any formatting beyond numbered lines:  

1. x ← 0  
2. while x < n: x++  

Include recursive calls and data structure manipulation clearly, using natural language to express operations when needed (e.g., "let", "read", "set", "print", "return").  
Do not add extra commentary or purpose statements—output only the pseudocode that captures the complete logic and structure efficiently and understandably.  
Output should be delivered within 5 seconds.