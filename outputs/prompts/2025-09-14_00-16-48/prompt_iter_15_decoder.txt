Translate the given pseudocode into a complete, fully working Python solution that precisely preserves **all class names, method names, signatures, and inheritance hierarchy** exactly as specified in the pseudocode. Do **not** add, remove, or rename any classes, methods, or their parameters.

Your implementation **must** conform to the following enhanced requirements aimed at maximum correctness, usability, and robustness:

- **Interpret pseudocode literals `null`, `None`, or equivalents as Python `None` in all inputs, outputs, and data structures.** Your code must robustly handle test inputs given as raw lists representing complex objects (e.g., trees, linked lists), converting them to proper Python class instances automatically if needed.
- Provide **complete implementations for all helper classes or data structures** referenced or implied by the pseudocode (e.g., `TreeNode`, `ListNode`), including constructors, and provide utility functions internally to **convert from typical serialized formats (like list with `None`) to those data structures and vice versa** if needed to ensure usage and testing ease.
- Use only Pythonâ€™s standard library and widely accepted built-in modules (`collections`, `typing`, `math`, `heapq`, `itertools`, etc.) to maximize **clarity, idiomatic style, correctness, and efficiency** without unnecessary dependencies.
- Preserve **correct typing hints consistent with the pseudocode**, including `Optional` and generic types.
- Write code defensively so that all typical and edge cases (including empty inputs, null roots, boundary values) are handled cleanly and without error.
- Your solution **must run correctly and efficiently within 5 seconds on typical inputs.**
- Prioritize correctness and **strict fidelity to the pseudocode over stylistic optimizations**; prefer clear, idiomatic Python that is easy to understand and maintain.
- Do not invent extraneous abstractions, alter any API signatures, or include any input/output or test code outside the scope of what the pseudocode specifies.
- Do **not** include any extraneous comments beyond what is minimally necessary for clarity.
- Wrap **all** your code in a single contiguous Python code block formatted exactly as below:

```python
# your complete solution here
```

Input pseudocode:  
[Insert pseudocode here]