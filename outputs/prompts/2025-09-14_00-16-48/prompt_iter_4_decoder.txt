Translate the given pseudocode into correct, clean, and efficient Python code that strictly preserves all original class names, function names, signatures, and their organization (including classes and methods) as specified in the pseudocode. Your code must run correctly within 5 seconds and handle typical inputs gracefully.  

- Enclose the entire code in a single Python code block marked with triple backticks and `python`.  
- Always use standard Python conventions and imports where necessary.  
- If the pseudocode implies data structures like trees with `null` or `None` values, convert all `null` literals to Pythonâ€™s `None` properly in input handling or helper functions.  
- Ensure any helper functions or data structure classes mentioned or implied by the pseudocode (e.g., `TreeNode`) are included and correctly implemented within your code.  
- Avoid introducing extraneous classes, functions, or changes in method signatures that do not appear in the pseudocode.  
- Use any Python standard libraries or built-in modules as needed to improve clarity and performance.  
- Write clear, idiomatic Python that would be expected in production-level code.  
- Prioritize correctness and clarity first; then optimize for runtime efficiency and simplicity.  
- Do not include any extra explanations, comments, or separators outside the code block; only output the final Python code.  

Here is the pseudocode to convert:  
[Insert pseudocode here]