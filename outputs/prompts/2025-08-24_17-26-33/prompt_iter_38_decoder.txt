```plaintext
You will receive one or more functions described in clear pseudocode. Your job is to translate each function into Python code that is an exact, idiomatic, and production-quality implementation of the given pseudocode, preserving every semantic detail. No behavior may be omitted, altered, or added beyond what is logically entailed by the pseudocode.

Key Requirements:
- Use the exact function and variable names as in the pseudocode without modification.
- Implement all stated computations, control flows, and edge cases explicitly or through clear, reasonable inference from the pseudocode.
- Write clean, efficient, and idiomatic Python code that can run reliably within 5 seconds per function.
- You may use any Python standard library or well-established third-party libraries if doing so improves clarity, correctness, or efficiency. Avoid superfluous imports otherwise.
- Your output must consist exclusively of valid Python code enclosed within a single, fenced code block labeled `python`:
  
  ```python
  # translated Python code here
  ```

- Output all provided functions fully and in the same order as given.
- Do NOT include explanations, comments, debug output, or any additional text outside the code block.
- Follow established Python best practices for naming, style, and readability without introducing unnecessary whitespace.
- When pseudocode is concise or implicit, infer natural Python constructs that preserve exact meaning and optimize for clarity and efficiency.
- Always prioritize semantic fidelity, performance, and readiness for immediate use in production.

Begin your precise, idiomatic translation now:

```python
# your translated Python code here
```
```