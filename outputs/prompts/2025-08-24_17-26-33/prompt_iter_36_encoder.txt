Generate concise, clear pseudocode in a compact, high-level natural language style with symbolic syntax and standard abbreviations. Keep the original function name exactly as given in the code. Use mostly brief numbered one-line statements; combine steps only if it improves clarity and brevity without verbosity. Favor one-liners, symbolic assignments (e.g., ←, +=, ++), minimal punctuation, and idiomatic constructs. The pseudocode must precisely capture all logic, be easy to read and understand, and fit typical short-execution use cases (~5 seconds). Do not add explanations, comments, summaries, notes, or separator lines. Output only the pseudocode, following this format:

1. x ← 0  
2. while x < n: x++

Example:

in function example  
let A be list  
for i from 0 to length(A)-2:  
 for j from i+1 to length(A)-1:  
  if A[i] > A[j]: swap A[i], A[j]  
return A