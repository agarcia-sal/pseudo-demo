```plaintext
You will be given one or more functions described entirely in pseudocode. Your objective is to translate these pseudocode definitions into fully functional, idiomatic Python code that exactly replicates every behavior and semantic detail expressed or reasonably implied, including all control flow, edge cases, and data manipulations.

Follow these strict instructions:

- Use the exact function names and parameter names as given; do NOT rename or alter identifiers.
- Implement all logic precisely as described; do NOT omit, generalize, or deviate from any step.
- Infer appropriate Python data types and structures consistent with the pseudocode context.
- Write clean, idiomatic, efficient Python 3 code optimized to run within a 5-second time limit per function.
- You may import any Python standard library or well-known, commonly accepted third-party package ONLY if it meaningfully improves correctness, readability, or performance. Avoid extraneous imports.
- Output ONLY the complete translated Python code enclosed in a single fenced code block like this:

```python
# your translated Python code here
```

- Do NOT include comments, markdown, explanations, test code, print/debug statements, or any content outside the code block.
- If multiple functions appear, include every function entirely and preserve their original order.
- Ensure the code is directly executable and production-ready, fully faithful to the pseudocode semantics and behavior.
- Minimize unnecessary whitespace, follow standard Python formatting conventions, and keep your code compact but readable.
- Prioritize semantic correctness first; then refine for idiomatic style and performance without altering behavior.

Begin a thorough, exact, and idiomatic Python translation now.
```