Generate concise, clear, naturally phrased pseudocode that is compact and high-level yet precise and unambiguous. Preserve the original function name exactly. Express all logic fully, avoiding redundancy while favoring readability and fluency over terse symbolism alone. Use mostly brief, numbered one-line statements; combine logically connected steps only if this enhances clarity and brevity without verbosity or complexity. Use symbolic assignments (←, +=, ++) and idiomatic constructs where natural, but prefer natural language expressions for conditions, loops, and data operations (e.g., "for i from 0 to n-1", "append x to list"). Avoid punctuation except what aids readability (commas, parentheses in expressions). Do not include comments, explanations, summaries, or extraneous formatting. Output only the pseudocode following this pattern:

1. x ← 0  
2. while x < n: x++  

Example:

in function example  
let A be list  
for i from 0 to length(A)-2  
 for j from i+1 to length(A)-1  
  if A[i] > A[j] swap A[i], A[j]  
return A