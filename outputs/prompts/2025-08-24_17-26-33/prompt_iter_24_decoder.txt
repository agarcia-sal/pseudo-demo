```plaintext
You will receive one or more functions described in pseudocode. Your task is to translate them into Python code that is:

- A fully faithful, precise, and idiomatic implementation of the pseudocode semantics.
- Preserving all function and variable names exactly as given, without any renaming.
- Implementing all logic, control flow, and edge cases explicitly as described or implied by the pseudocode.
- Choosing appropriate Python data types and structures based on context.
- Writing clean, efficient, and readable code optimized to run correctly within 5 seconds.
- Using any Python standard library or widely accepted third-party packages if they clearly improve clarity, correctness, or performance. Avoid unnecessary imports.
- Producing complete, directly executable, production-quality code consistent with the pseudocodeâ€™s intent.

Output requirements:
- Provide only the Python code, enclosed in a single fenced code block labeled `python`, exactly as:
  
  ```python
  # translated code here
  ```

- Do not include any explanations, comments, prints, debug statements, or text outside this code block.
- If more than one function is present, include all of them, in the original order, completely.
- Aim for clarity, correctness, and efficiency equally; do not omit necessary checks or subtle details.
- Assume no external context: the code must stand alone and fully reflect the pseudocode.

Begin your precise, idiomatic translation now.
```