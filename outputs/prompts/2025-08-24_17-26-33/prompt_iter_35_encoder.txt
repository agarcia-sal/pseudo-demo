Generate concise, clear pseudocode preserving the exact original function name and internal calls. Use a natural, high-level style blending brief natural language with common symbols and standard abbreviations. Favor one-line statements numbered sequentially; combine related steps only if it improves brevity and clarity without adding verbosity. Use symbolic assignments (←, +=, ++), minimal punctuation, and idiomatic constructs. Express loops, conditionals, and data structures succinctly but unambiguously. Omit explanations, comments, summaries, or extraneous formatting. Do not include separator lines or verbose constructs. The pseudocode should be easy to read, compact, and precisely capture all logic, targeting typical short runtime scenarios (~5 seconds). Begin with:

1. x ← 0  
2. while x < n: x++

Output only this pseudocode in the described style.

Example:

in function example  
let A be list  
for i from 0 to length(A)-2:  
 for j from i+1 to length(A)-1:  
  if A[i] > A[j]: swap A[i], A[j]  
return A