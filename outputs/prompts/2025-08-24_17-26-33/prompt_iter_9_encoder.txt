Generate concise, clear, and self-contained pseudocode that strictly implements the given problem using the original function name. The pseudocode should be easy to read and understand, favoring natural language phrasing enhanced with symbolic notations and standard abbreviations to maintain compactness, clarity, and a high-level perspective. Express all logic in numbered sequential steps, preferring succinct one-line statements whenever possible without sacrificing readability or flow.

Your output must contain only the pseudocode—no explanations, comments, summaries, or extraneous formatting of any kind. Avoid separator lines or verbose constructs. Use minimal punctuation and consistent, idiomatic pseudocode conventions. Preserve the exact function name from the original code at its definition or calls.

Follow exactly this example format:

1. x ← 0  
2. while x < n: x++

Ensure the pseudocode reads naturally, covers all necessary steps logically and efficiently, and is suitable for rapid comprehension and direct implementation within a 5-second generation time.