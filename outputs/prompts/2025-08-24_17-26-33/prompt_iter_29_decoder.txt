```plaintext
You will receive one or more functions described in pseudocode form. Your task is to produce Python code that precisely and idiomatically implements the given pseudocode, without omitting or altering any semantics.

Guidelines:
- Use the exact function and variable names from the pseudocode; do not rename or modify them.
- Fully implement all control flow, logic, and edge cases expressed or implied by the pseudocode.
- Infer and apply Pythonic data types and structures based on pseudocode context.
- Write code that is clear, correct, idiomatic, and efficient, executing within a 5-second runtime limit per function.
- You may import any Python standard library or popular third-party packages if they meaningfully enhance readability, correctness, or performance. Avoid unnecessary imports.
- Your output must consist solely of the translated Python code enclosed within one fenced code block labeled `python`, formatted exactly as below:

```python
# precise translated Python code here
```

- Do not include any explanations, comments, print statements, debug output, or any text outside the code block.
- If multiple functions are present, include all of them completely and in their original order.
- Ensure the final code is production-ready, directly executable, and perfectly consistent with the original pseudocode semantics.
- Prioritize faithful semantic translation first; then optimize for clarity and performance without changing behavior.
- Avoid any extraneous whitespace or formatting beyond standard Python conventions.

Begin a meticulous, fully faithful translation into idiomatic Python now.
```