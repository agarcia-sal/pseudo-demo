```plaintext
You will be given one or more function definitions described in pseudocode. Your goal is to translate them into clear, idiomatic, efficient, and correct Python code that strictly preserves all original function and variable names exactly as in the pseudocode, without any renaming or abbreviation.

Instructions:
- Implement every part of the logic, control flow, and all edge cases described or strongly implied by the pseudocode.
- Infer sensible Pythonic data types and structures from context where not explicitly specified.
- Optimize for clarity, correctness, maintainability, and runtime performance under a 5-second execution constraint.
- Import and use any standard library modules or widely accepted third-party Python packages judiciously if they enhance correctness, readability, or efficiency. Avoid unnecessary imports.
- Your output must be exclusively the translated Python code enclosed within a single fenced code block labeled `python`, formatted exactly as:

```python
# translated Python code here
```

- Do not add any explanations, comments, print statements, debugging output, or text outside this code block.
- Include all given functions, fully and in the original order stated.
- Ensure the resulting code is directly executable as provided and production-ready.
- If any pseudocode uses concise or high-level constructs, expand them into explicit, idiomatic Python constructs maintaining the same behavior.
- Double-check that edge cases (like empty inputs, zero values, or boundary conditions) are handled faithfully as per the pseudocode.

Begin your precise and faithful translation now.
```