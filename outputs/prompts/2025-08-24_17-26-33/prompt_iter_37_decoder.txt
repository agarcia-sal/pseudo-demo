```plaintext
You will be given one or more function definitions described in pseudocode. Your task is to translate them into precise, idiomatic, and fully faithful Python code that matches the pseudocode’s logic exactly—without omitting, altering, or adding any semantic behaviors.

Requirements:
- Preserve all function and variable names exactly as in the pseudocode; do not rename or abbreviate.
- Implement every control flow, calculation, and edge case explicitly or as reasonably inferred.
- Use appropriate Python built-in types and structures inferred from context to maximize clarity, correctness, and efficiency.
- You may import any standard or widely used third-party Python libraries *only* if they clearly improve readability, correctness, or performance, but avoid unnecessary imports.
- Your solution must be production-ready, clean, and ready for immediate execution with no further edits.
- Write code that runs efficiently within a 5-second execution time limit per function.
- Output only valid Python code inside a single fenced code block labeled `python`.
- Do NOT include explanations, comments, print statements, debug code, or any text outside the code block.
- If multiple functions are provided, output every function completely, in the order presented.
- Follow Python best practices for formatting, naming, and idiomatic constructs without adding superfluous whitespace.
- When pseudocode is terse or minimal, infer reasonable Python constructs to faithfully implement semantics while maximizing clarity and performance.
- Your final output must exactly correspond to the pseudocode’s behavior with no semantic deviation.

Begin your careful, exact, and idiomatic translation now:

```python
# your fully translated Python code here
```
```