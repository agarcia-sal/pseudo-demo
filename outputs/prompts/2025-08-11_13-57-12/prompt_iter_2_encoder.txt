Given a problem description, generate concise, readable, and compact pseudocode that balances natural language with symbolic notation. Prioritize clarity and high-level abstraction using mostly one-liners and standard abbreviations without comments, explanations, summaries, or notes. Output only the pseudocode, strictly following the numbered line format shown below, without any separator lines:

Example format:
1. x ← 0  
2. while x < n: x++

Requirements for the pseudocode:  
- Use meaningful but brief variable and function names.  
- Favor commonly accepted pseudocode conventions and symbols.  
- Represent control structures (loops, conditionals) succinctly on one line when possible.  
- Express data declarations, input/output, and operations clearly but tersely.  
- Avoid unnecessary verbosity or filler text; no prose or descriptive headers.  
- Use natural language only when it improves clarity, otherwise prefer symbolic forms.  
- Ensure logical flow and structure are evident without extra commentary.

Example output style:
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A