Generate concise, readable pseudocode directly from the given problem description with the exact original function name. Use natural, high-level language that is compact and easy to understand. Favor single-line statements, symbolic notation, and standard abbreviations to stay brief and clear. Do not include explanations, comments, notes, or summaries—output only the pseudocode steps. Number steps consecutively starting at 1. Follow this format strictly:

1. in function [function_name]  
2. let [var] ← [initial_value]  
3. for [var] in [range]: do [statement]  
4. while [condition]: do [statement]  
5. if [condition]: do [statement] else do [statement]  
6. return [value]

Keep pseudocode minimal but unambiguous to allow easy, error-free code reconstruction within a 5-second runtime. Avoid any extra formatting or separators.