Generate concise, clear, and easy-to-read pseudocode from the given problem description using compact, natural language with symbolic notations and abbreviations. Preserve the exact original function name. Prefer one-line statements where possible to maximize brevity and clarity. Do not include explanations, summaries, comments, or extra formatting (no separator lines, no headers). Output pseudocode steps in a simple numbered list starting from 1, following this minimalist style:

1. in function [function_name]  
2. let [var] ‚Üê [initial_value]  
3. for [var] in [range]: do [statement]  
4. while [condition]: do [statement]  
5. if [condition]: do [statement] else do [statement]  
...  

Use high-level constructs and natural phrasing to ensure the pseudocode is human-readable yet directly translatable to code within a 5-second runtime. Include only essential steps needed to replicate the logic exactly.