Generate concise, clear, and high-level pseudocode from the given problem description, prioritizing natural language for readability while incorporating symbolic notation and common abbreviations to keep it compact and precise.  
- Preserve all original class and function names exactly as provided, including their class/object structures without modification.  
- Use brief one-line statements where possible, employing symbols for assignments (←), increments (+=), comparisons (<, =, ≠), indexing ([]), infinity (∞), and familiar operations to maintain clarity and brevity.  
- Express control flow clearly with natural language keywords: IF, ELSE, FOR, WHILE, RETURN, FUNCTION, END FUNCTION, CLASS, etc., avoiding verbose commentary or added explanations.  
- Number each line starting at 1; indent all lines within control blocks consistently by one level per nesting. Example formatting:  
  1. SET x ← 0  
  2. WHILE x < n: x += 1  
- Explicitly define functions as FUNCTION <name>(parameters) … END FUNCTION; classes as CLASS <name>:  
- Do not introduce, rename, or remove variables, functions, or classes beyond those in the problem statement unless strictly necessary for abstract clarity.  
- Favor natural language for structure and simple operations; use symbolic notation for data manipulation and conditions to ensure succinctness and avoid ambiguity.  
- Minimize redundancy and excessive detail, keeping pseudocode compact yet complete and correct; if a statement fits naturally on one line, keep it that way; if complex, break into indented blocks.  
- Do not add comments, explanations, summaries, separators, or extra formatting beyond what is specified. Output only pseudocode lines.  
- Output efficiently within the 5-second limit.  

Example style:  

CLASS Solution:  
  FUNCTION calc_average(list_of_numbers)  
    SET total_sum ← 0  
    FOR each number IN list_of_numbers  
      INCREMENT total_sum BY number  
    SET average_value ← total_sum DIVIDED BY LENGTH OF list_of_numbers  
    RETURN average_value  
  END FUNCTION