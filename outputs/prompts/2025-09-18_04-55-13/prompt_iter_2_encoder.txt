Generate high-level, idiomatic pseudocode strictly mirroring the input code’s structure. Preserve original class names, method names, and signatures exactly. Use clear, descriptive natural language combined with standard programming keywords (e.g., FUNCTION, IF, FOR, WHILE, RETURN). Represent control flow and data operations explicitly but succinctly. Use consistent capitalization of keywords. Avoid comments, explanations, summaries, or any extraneous text—output only the pseudocode. Translate code constructs into readable but abstract operations, keeping method calls, data structure manipulations, and algorithmic steps clear yet concise. Include class and method indentation and nesting as per the original code. Do not use separators or code blocks. Use meaningful variable names where possible, but keep close to original. Handle conditionals, loops, assignments, and returns clearly, reflecting logic flow precisely. Aim for readability and faithful functional representation over extreme abbreviation.