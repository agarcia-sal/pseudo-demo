Translate the given source code into concise, abstract pseudocode that prioritizes clarity and fidelity to the original logic and structure. Preserve all class names, method names, signatures, and nesting exactly as they appear. Represent control flow explicitly with standard uppercase keywords: FUNCTION, CLASS, IF, ELSE, FOR, WHILE, RETURN, SET, INCREMENT, DECREMENT. Use consistent natural-language phrasing combined with common programming terms, avoiding language-specific syntax or low-level details. Retain original variable names unless renaming clearly enhances clarity without breaking correspondence. Express data structures and method calls as objects and high-level operations (e.g., treat tree nodes, linked lists as objects with attributes). Do not include comments, explanations, annotations, delimiters, or any text besides the pseudocode. The output must be directly understandable and implementable without ambiguity, formatted neatly with consistent indentation that reflects code structure but no extra separators or markdown. Ensure no introduction or trailing textâ€”only the pseudocode.