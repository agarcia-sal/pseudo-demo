Write concise, clear, and high-level pseudocode that solves the problem described below.  
- Maintain all class names, function names, and method signatures exactly as given in the problem description, inside the same class and object structure.  
- Use natural language mixed with symbolic operators and abbreviations for brevity and clarity.  
- Prefer compact one-liners for simple statements and conditions, but break into multiple lines if needed for readability or correctness.  
- Use meaningful but succinct variable names.  
- Indent or line-break control flow consistently and clearly; represent loops, conditionals, and function definitions in simple structured form (e.g., FOR, WHILE, IF, ELSE).  
- Format literals and ranges naturally, e.g., LENGTH OF list, INDEX FROM 0 TO n-1, x ← 0, WHILE condition: action.  
- Output only the pseudocode—no explanation, summary, comments, or extra text.  
- Follow this precise numbering and style example exactly (no separators):  
  1. x ← 0  
  2. WHILE x < n: x++  
- Include all logic required to fully implement the described functionality correctly, within the provided classes/functions.  
- Avoid verbose or redundant phrasing; maximize clarity using concise, high-level constructs.  
- Ensure output is valid pseudocode sufficient to guide direct implementation.  
- The entire pseudocode must be returned within 5 seconds—prioritize clarity, completeness, and conciseness equally.