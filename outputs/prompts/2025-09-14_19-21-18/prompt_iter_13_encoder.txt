Write concise, clear, and high-level pseudocode from the given problem description as follows:

- Preserve all original class names, function names, method signatures, and their nesting exactly as specified.
- Output only pseudocode—no comments, explanations, notes, summaries, or separators.
- Use natural language with simple, meaningful, yet compact variable names.
- Prefer symbolic operators and one-line statements where clarity is maintained.
- Structure control flow clearly using consistent indentation and line breaks.
- Format iterations and conditions naturally, e.g.,  
  `FOR i FROM 0 TO n-1`  
  `WHILE condition: action`  
- Express numeric/string literals and accesses naturally, e.g., `LENGTH OF list`, indexing from 0, assignment with arrows (←), and concise increments/decrements.
- Present any helper or nested functions inside the same class or function as described.
- Use minimal but complete statements to fully solve the problem.
- Follow this exact output style without extra separators, focusing on readability and compactness:  
  1. x ← 0  
  2. WHILE x < n: x++  
- Your pseudocode must be valid and sufficient to guide a correct implementation.
- No extra lines before, between, or after the pseudocode.
- Function timeout is 5 seconds—balance thoroughness, clarity, and brevity smoothly.