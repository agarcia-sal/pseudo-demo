Write concise, high-level pseudocode from the exact problem description as follows:  
- Preserve all class names, function names, method signatures, and object structures exactly as given.  
- Output only pseudocode—no explanations, comments, summaries, or notes of any kind.  
- Use natural language mixed with symbolic operators and abbreviations; prefer one-liners where clarity is maintained.  
- Use clear, consistent indentation or line breaks for structure; keep code easily readable and unambiguous.  
- Use meaningful but succinct variable names; write numeric and string literals naturally (e.g., LENGTH OF list, index FROM 0 TO n - 1, i ← 0, WHILE i < n: i++).  
- Format control flow and expressions compactly but never obscure logic necessary for correctness and completeness.  
- Follow this exact format with numbered lines and no extra separators or blank lines:  
  1. x ← 0  
  2. WHILE x < n: x++  
- Include all logic necessary for a correct, complete solution within the defined class and function contexts—do not rewrite or add additional classes unless specified.  
- Avoid verbose constructs; prefer idiomatic, high-level pseudocode expressions that balance conciseness and clarity.  
- The output should be valid, implementable pseudocode that a developer could directly use to guide implementation.  
- Respond within 5 seconds focusing on clarity, completeness, conciseness, and fidelity to the input specification.