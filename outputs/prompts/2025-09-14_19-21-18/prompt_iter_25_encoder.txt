Write precise, compact, and high-level pseudocode directly corresponding to the given problem description:  
- Preserve all class names, method names, signatures, and input/output formats exactly as stated.  
- Output only the pseudocode—no explanations, comments, summaries, or extraneous text.  
- Use clear, natural language phrasing combined with concise symbolic operators and standard abbreviations.  
- Organize control flow with consistent indentation or line breaks for readability; prefer terse one-liners where clarity is maintained.  
- Use meaningful yet succinct variable names; avoid verbose identifiers unless necessary for understanding.  
- Express numeric and string operations naturally (e.g., LENGTH OF list, index FROM 0 TO n-1, i ← 0, WHILE condition: action).  
- Follow this exact example structure without extra separators or blank lines:  
  1. x ← 0  
  2. WHILE x < n: x++  
- Ensure full, correct logic within each class/function scope to solve the problem completely.  
- Favor compact control structures and expressions unless a longer form clearly improves comprehension.  
- Your pseudocode must be sufficiently clear and complete to guide direct implementation.  
- The output timeout is 5 seconds — optimize for maximal clarity, correctness, and conciseness within this constraint.