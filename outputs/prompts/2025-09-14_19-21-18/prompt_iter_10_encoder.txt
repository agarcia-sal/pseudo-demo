Write concise, high-level pseudocode that faithfully represents the entire logic from the given problem description.  
- Preserve all class names, function names, method signatures, and object-oriented structure exactly as stated.  
- Output only the pseudocode; no explanations, summaries, comments, or notes of any kind.  
- Use full natural-language commands mixed with common symbolic operators and succinct abbreviations, emphasizing clarity and readability.  
- Prefer one-liner control and assignment statements when clarity is not sacrificed; indent blocks consistently for control flow (e.g., loops, conditionals).  
- Use meaningful but compact variable names; format literals and expressions naturally (e.g., LENGTH OF list, i ← 0, WHILE i < n: i++).  
- Follow this exact style and numbered line format without any additional separators or filler lines:  
  1. x ← 0  
  2. WHILE x < n: x++  
- Include all logic necessary to solve the problem completely and correctly within the specified class/method scope.  
- Avoid verbose constructs; prefer clean, tight pseudocode that could be directly understood and implemented.  
- The output pseudocode must enable correct implementation as-is.  
- Respond within a 5-second time limit, optimizing for brevity, naturalness, and completeness.