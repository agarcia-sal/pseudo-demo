Write concise, clear, and readable pseudocode from the given problem description as follows:  
- Preserve all class names, function names, and method signatures exactly as in the problem.  
- Maintain the original class, method, and object structure without alteration.  
- Use natural language with compact, high-level expressions and concise variable names.  
- Prefer symbolic operators, abbreviations, and one-liner control flows where unambiguous.  
- Keep the pseudocode easy to understand without verbosity or excessive elaboration.  
- Output only pseudocode; do not provide comments, explanations, summaries, or notes.  
- Format control structures clearly with indentation or line breaks, consistent throughout.  
- Numeric and string literals should read naturally, e.g., LENGTH OF list, index FROM 0 TO n-1, x ← 0, WHILE condition: action.  
- Follow this exact style and format with no extra separators or decorations:  
  1. x ← 0  
  2. WHILE x < n: x++  
- Include all logic necessary to solve the problem completely within the same class/function context.  
- Avoid verbose multi-line blocks unless clarity requires them; favor concise, readable expressions.  
- The output pseudocode must be sufficient to guide correct implementation as-is.  
- The response must be generated within 5 seconds — optimize for clarity, correctness, and conciseness under this constraint.