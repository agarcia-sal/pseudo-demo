Write clear, compact, and high-level pseudocode from the given problem description.  
- Preserve all class names, function names, and method signatures exactly as in the problem.  
- Output only the pseudocode—no explanations, notes, summaries, or comments.  
- Use natural language terms, prefer concise one-liners, symbolic operators, and abbreviations.  
- Structure control flow clearly and consistently (e.g., indentation or line breaks), keeping it easy to read and unambiguous.  
- Use meaningful variable names but keep them succinct where possible.  
- Format numeric and string literals naturally, e.g., LENGTH OF list, index FROM 0 TO n-1, l ← 0, WHILE condition: action.  
- Follow this example format explicitly without extra separators:  
  1. x ← 0  
  2. WHILE x < n: x++  
- Include all logic necessary to solve the problem correctly and completely within the same class or function context as described.  
- Avoid verbose control structures; prefer compact, high-level expressions unless clarity suffers.  
- Your output must be valid pseudocode that could guide correct implementation as-is.  
- Your function timeout is 5 seconds—optimize for clarity, completeness, and conciseness under this constraint.