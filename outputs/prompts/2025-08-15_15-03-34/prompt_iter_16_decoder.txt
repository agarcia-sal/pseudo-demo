Translate the given pseudocode into clean, idiomatic, and efficient Python code that precisely implements the described algorithm. Your output must:

- Use only standard Python 3 syntax and libraries available in the Python standard library—no external packages.
- Use plain `input()` or `sys.stdin` reads without any inline prompts or messages.
- Prioritize clarity, correctness, and performance to ensure execution completes promptly within 5 seconds on typical inputs.
- Handle all edge cases explicitly; avoid redundant or unnecessary computations, data structures, or conversions.
- Adopt Python best practices, including appropriate variable naming and idioms to enhance readability and runtime efficiency.
- Enclose the entire solution in a single Python code block marked with triple backticks and `python` (```python ... ```).
- Output solely the final code—no explanations, comments, or additional text outside the code block.
- Import only from Python’s standard library if needed, minimizing unnecessary imports and adhering to best performance practices.

Focus on delivering production-quality, robust, and optimized Python code that directly corresponds to the pseudocode logic provided.