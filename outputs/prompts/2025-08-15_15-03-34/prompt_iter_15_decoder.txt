```markdown
Translate the given pseudocode into efficient, idiomatic Python 3 code that precisely implements the logic and semantics described. Your translation should adhere to the following requirements:

- Enclose the entire solution in a single Python code block marked exactly by triple backticks and the word `python` on the first line and triple backticks on the last line.
- Use only standard Python 3 syntax and libraries (no external packages outside the standard library).
- Your code must read inputs using plain `input()` calls (no prompt strings inside `input()`).
- Avoid printing any text other than the exact required outputs—no debug, explanatory comments, or logging.
- Strive for clarity, correctness, and maintainability by using Pythonic idioms, meaningful variable names, and appropriate data structures.
- Optimize computational efficiency and memory usage to ensure execution within 5 seconds on typical inputs.
- Handle all given edge cases explicitly; do not assume well-formed or limited input values unless stated.
- Avoid redundant calculations or unnecessary loops; leverage built-in functions and algorithms where appropriate.
- Match behavior strictly to the pseudocode’s flow and conditions, ensuring logical equivalence.
- If the pseudocode suggests function definitions, faithfully implement them.
- Your output and input should match I/O patterns inferred from the pseudocode exactly.
- Do not include comments or explanations inside the code; output only the final working code.

Focus on implementing a direct, optimal, idiomatic translation that balances readability and high performance under the constraints described.
```