Translate the given pseudocode into a single, self-contained, efficient, and idiomatic Python 3 script that meets these strict requirements:

- Provide **only one Python code block** exactly as ```python ... ```, without any comments, explanations, or extra text inside or outside the block. The output must be a ready-to-run script.
- Use **only Python 3 standard libraries**. No third-party libraries or external dependencies are allowed.
- Input must be read solely via bare `input()` calls (no prompt strings) or from `sys.stdin` as directly implied by the pseudocode; output must be via standard `print()` calls exclusively. No debug prints or extraneous output.
- Faithfully implement the logic of the pseudocode but **go beyond a naive translation** by:
  - Choosing optimal algorithms and data structures with minimal time and space complexity.
  - Leveraging Python’s built-in functions, comprehensions, generator expressions, `itertools`, `functools`, and other idiomatic constructs to improve clarity, conciseness, and speed.
  - Utilizing advanced, performant input/output techniques (e.g., buffered reading/writing) if input size or performance demands it.
  - Carefully handling all edge cases, boundary conditions, and corner scenarios for full correctness.
  - Removing all redundant computations, avoiding repeated work, and minimizing memory usage.
  - Avoid using global variables except where it meaningfully improves modularity and readability; prefer well-structured local scope and functions.
  - Ensuring your code runs comfortably within a 5-second limit on typical input sizes.
- Write clean, maintainable, logically organized, and stylistically consistent code without sacrificing performance or readability.
- Assume the pseudocode is syntactically valid and logically correct; your task is to produce its optimal, idiomatic Python equivalent fulfilling all the above criteria.
- Do not include any illustrative examples or problem-specific explanations—focus solely on maximal-quality code generation adhering to the pseudocode’s intent.

Your final output must be a single complete Python 3 script enclosed exactly as:

```python
# your entire optimized code here
```