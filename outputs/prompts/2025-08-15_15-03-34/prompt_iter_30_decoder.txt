Translate the given pseudocode into highly optimized, clean, and idiomatic Python 3 code that precisely implements the described logic. Your solution should:

- Be enclosed entirely within a single Python code block starting with ```python and ending with ```, with no additional text outside the code block.
- Use only Python 3 standard libraries without any third-party imports.
- Read all inputs exclusively via bare `input()` or `sys.stdin` (no prompt strings or extra text).
- Employ the most efficient algorithms and data structures suitable to the task, optimizing runtime, memory usage, and I/O operations to comfortably run within a 5-second time limit.
- Use Pythonic idioms, built-ins, and comprehensions for maximum clarity and brevity, while maintaining readability and maintainability.
- Handle all edge and corner cases defensively to guarantee correctness on all valid inputs.
- Avoid redundant calculations, minimize variable usage, and eliminate unnecessary overhead.
- Produce no comments, debug statements, explanations, or logging; output only what the problem requires.
- Structure code clearly using functions or classes if it enhances understanding or performance.
- Assume the provided pseudocode is complete and intended logic; do not question its correctness, only translate it with best practices and improvements.

Your final submitted code must be a direct, runnable Python 3 script that passes all correctness and performance tests under the stated constraints.