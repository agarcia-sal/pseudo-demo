Translate the given pseudocode into clean, efficient, and idiomatic Python 3 code that strictly follows the original logic and semantics. Your translation must:

- Use only Python standard library modules (built-ins and those available by default in Python 3.x).
- Accept inputs using plain `input()` or standard input reading—do NOT include prompt strings inside `input()`.
- Enclose the entire solution in a single Python code block marked as ```python ... ```.
- Optimize for clarity, concise style, and time/memory efficiency to comfortably run within 5 seconds on typical inputs.
- Properly handle edge cases, avoid redundant computations, and favor Pythonic constructs such as list comprehensions, built-in functions, and appropriate data structures.
- Avoid printing or returning anything outside the final code block; output only the final code.
- Do not include explanations, comments, or debugging output.

Your solution will be evaluated on correctness, performance, and adherence to the pseudocode’s intent, so ensure the code is precise, robust, and directly mirrors the algorithm expressed in the pseudocode.