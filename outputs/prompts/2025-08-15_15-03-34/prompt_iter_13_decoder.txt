Translate the given pseudocode into precise, efficient, and idiomatic Python code with the following requirements:

- Use only Python’s built-in features and standard libraries; external packages are allowed only if they are part of the standard Python distribution.
- All input must be read via plain `input()` or `sys.stdin` without any user-facing prompts or messages.
- Output only the exact results requested by the pseudocode; do not include any explanatory or debugging text.
- Enclose the entire solution in a single Python code block marked with triple backticks and `python` at the start and triple backticks at the end.
- Implement all specified logic faithfully, ensuring correctness especially on edge cases.
- Optimize for clarity, efficiency, and readability: use appropriate data structures, algorithms, and Python idioms.
- Avoid redundant computations, unnecessary variable assignments, or excessively complex constructs.
- Write code that runs efficiently within a 5-second time budget on typical inputs.
- Your translation should be self-contained and ready to run without modification.

Focus on producing clean, direct, and performant Python code that closely aligns with the intent and structure of the pseudocode, while leveraging Python’s strengths to improve maintainability and speed.