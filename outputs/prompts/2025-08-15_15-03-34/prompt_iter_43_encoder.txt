Generate concise, high-level pseudocode from the problem description that is clear and easy to understand. Use mostly natural language infused with standard control flow keywords (if, else, for, while, function, return) and common symbolic operators (=, <, >, %, +, −, *, /, ←). Write mostly one-liners with minimal nesting; prefer compact expressions and abbreviations without verbose wording. Use descriptive but brief variable and data structure names without filler or unnecessary detail. Number each line sequentially starting at 1, following this exact format:  

1. x ← 0  
2. while x < n: x++  

Do not include comments, explanations, summaries, or notes—output only the pseudocode lines needed to fully and unambiguously capture the algorithm logic and flow. Exclude any extraneous initialization or implementation detail not essential to understanding or re-implementing the solution. Avoid separator lines, extra formatting, or markup. The final pseudocode must be self-contained, succinct, directly translatable to code, and generated within 5 seconds.