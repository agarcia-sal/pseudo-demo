Translate the provided pseudocode into a single, self-contained, highly efficient, and idiomatic Python 3 script that strictly adheres to the following criteria:

- Output exactly one Python code block formatted as
  ```python
  ...
  ```
  with no additional text, comments, or explanations inside or outside the block.
- Use only Python 3’s **standard library**; do not import or use any third-party packages.
- Read all inputs exclusively via `input()` (without prompt strings) or by reading directly from `sys.stdin` when appropriate, depending on the input format implied by the pseudocode.
- Implement the pseudocode logic precisely but improve it by:
  - Selecting optimal algorithms and data structures to minimize runtime and memory usage.
  - Exploiting Python’s built-in functions, comprehensions, generators, and idiomatic constructs to produce concise, readable, and maintainable code.
  - Ensuring input/output operations are minimal and efficient to comfortably meet a 5-second execution limit on typical problem inputs.
  - Robustly handling all edge cases and boundary conditions inferred from the pseudocode or typical usage.
  - Eliminating redundant calculations, unnecessary variables, and memory waste.
- Avoid printing anything other than the required output; no debugging, logging, or explanatory output is permitted.
- Write clean, clear, and maintainable code that emphasizes performance and correctness without sacrificing readability.
- Assume provided pseudocode is logically correct; your task is to convert it into the best possible Python solution that seamlessly passes correctness and efficiency tests.

Your response must be a ready-to-run Python 3 script enclosed solely within the specified code block and fully compliant with these instructions.