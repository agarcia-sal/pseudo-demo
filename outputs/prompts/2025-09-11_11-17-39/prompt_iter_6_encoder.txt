Generate clear, concise, and high-level pseudocode directly from the given problem description or code, preserving all original class names, function names, parameters, and their signatures exactly as in the source. Maintain the original object-oriented structure, including classes and methods.

Express the logic using predominantly natural language with standard symbolic notation and programming constructs (assignments using ←, conditionals, loops, function calls, returns), favoring compact, one-line statements wherever clarity allows. Use abbreviations and concise phrasing but keep pseudocode straightforward and easily readable.

Number every line sequentially starting at 1, using this exact format (including the assignment arrow ←):

1. x ← 0  
2. while x < n: x++

Do not insert blank lines or separators. Avoid any explanations, comments, summaries, or formatting other than the numbered pseudocode lines. Do not alter variable, function, or class names. Produce pseudocode that is logically complete, minimal in line count, and immediately understandable.

Example style your output should follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered pseudocode lines as specified; do not include anything else.