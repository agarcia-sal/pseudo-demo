Generate concise, high-level pseudocode from the given problem description or code that captures the entire logic while preserving all original class names, function names, parameters, and their signatures exactly as in the source. Keep the original object-oriented structure intact, including classes and methods.

Express logic predominantly in natural language with clear symbolic notation and standard programming constructs (assignments using ←, conditionals, loops, function calls, returns). Use compact, readable one-line statements wherever clarity allows. Avoid verbose phrasing; use meaningful abbreviations but maintain straightforward readability.

Number every line starting at 1, formatted exactly as:

1. x ← 0  
2. while x < n: x++

Do not add blank lines, separators, comments, explanations, or summaries. Do not modify variable, function, or class names. Produce pseudocode that is logically complete, minimal in line count, and easy to understand immediately.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered pseudocode lines as specified; output nothing else.