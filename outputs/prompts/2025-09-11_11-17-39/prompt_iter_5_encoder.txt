Generate concise, clear, and high-level pseudocode directly from the given problem description, preserving all original class names, function names, parameters, and their signatures exactly as in the source. Keep the original object-oriented structure, including classes and methods. Use mostly natural language with symbolic notation and standard programming constructs (assignments, loops, conditionals, function calls, returns). Prefer one-liners and compact expressions without sacrificing clarity. Omit any purpose statements, summaries, explanations, comments, or extra formatting—output only the numbered pseudocode lines.

Number each line sequentially starting from 1, using this exact format (including the arrow ← for assignments):

1. x ← 0  
2. while x < n: x++  

Do not add blank or separator lines. Maintain all variable, function, and class names verbatim from the original code. The pseudocode must be instantly understandable, logically complete, and minimal in line count, balancing brevity and readability.

Example style your output should follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A  

Return only the numbered pseudocode lines as specified; do not include anything else.