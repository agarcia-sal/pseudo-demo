Generate concise, readable pseudocode from the given problem description or source code that preserves all original class names, function names, parameters, and signatures exactly as given, maintaining the original class and object-oriented structure without alteration.

Use clear, mostly natural language combined with standard symbolic notation and common programming constructs: assignments (←), conditionals, loops, function calls, and returns. Express the logic compactly and at a high level, preferring one-line statements when clarity is preserved. Use abbreviations and concise phrasing but keep pseudocode straightforward and immediately understandable.

Number every pseudocode line sequentially starting at 1, following this precise format (including the assignment arrow ←):

1. x ← 0  
2. while x < n: x++

Do not include blank lines, separators, explanations, summaries, comments, or formatting beyond numbered lines. Do not rename or change variable, function, or class names. The pseudocode should be minimal in lines but logically complete and easy to follow.

Example style your output should follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered pseudocode lines as specified; output nothing else.