Generate concise, clear, and high-level pseudocode from the given problem description or code, strictly preserving all original class names, function names, parameters, and their signatures exactly as in the source. Retain the original object-oriented design with classes and methods.

Express logic predominantly in natural language combined with standard symbolic notation and programming constructs (assignment ←, conditionals, loops, function calls, returns). Use compact one-line statements wherever clarity permits, employing concise phrasing and abbreviations but ensuring readability and understandability.

Sequentially number every line starting at 1, following this exact format including the ← assignment arrow, with no blank lines or separator lines:

1. x ← 0  
2. while x < n: x++

Do not add any explanatory comments, summaries, or formatting beyond numbered pseudocode lines. Do not rename or alter any class, function, or variable names. Produce pseudocode that is logically complete, minimal in line count, and instantly comprehensible.

Example style your output should emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered pseudocode lines as specified; do not include anything else.