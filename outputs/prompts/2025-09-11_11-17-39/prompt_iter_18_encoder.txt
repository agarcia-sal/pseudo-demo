Generate clear, concise, and easy-to-read pseudocode from the given problem description or source code, preserving all original class names, function names, parameters, and signatures exactly as they appear, and maintaining the original class and object-oriented structures without any renaming or reorganization.

Use a compact, high-level style that blends natural language with standard symbolic notation and common programming constructs such as assignments (←), conditionals, loops, function calls, and returns. Favor one-line statements whenever clarity is retained; use abbreviations and concise phrasing but keep the pseudocode straightforward and immediately understandable.

Number every line sequentially starting at 1, strictly following this format (including the assignment arrow ←):

1. x ← 0  
2. while x < n: x++

Do not include blank lines, comments, separator lines, summaries, explanations, or formatting beyond these numbered lines. The pseudocode must be logically complete, minimal in line count, and easy to follow.

Example style your output should follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return exclusively the numbered pseudocode lines as specified; output nothing else.