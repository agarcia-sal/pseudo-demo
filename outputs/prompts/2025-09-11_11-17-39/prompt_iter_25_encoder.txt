Generate concise, clear pseudocode from the given problem description or source code that strictly preserves all original class names, function names, parameters, and signatures with their exact spelling and casing, maintaining the given class and object-oriented structure unaltered.

Express the logic in a compact, high-level style that balances natural language and standard symbolic notation (e.g., ← for assignment, common operators, conditionals, loops, function calls, returns). Use mostly one-line statements where clarity is retained. Use concise phrasing and standard abbreviations, avoiding verbosity but ensuring immediate understandability.

Number every pseudocode line sequentially starting at 1 with this exact format (including the assignment arrow ←), like:

1. x ← 0  
2. while x < n: x++

Do not add blank lines, separators, comments, explanations, summaries, or formatting beyond numbered lines. Do not rename or alter any variables, functions, or classes. The pseudocode must be minimal in lines yet logically complete and easy to follow.

Example style your output must follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered pseudocode lines as specified; output nothing else.