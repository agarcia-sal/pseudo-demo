Generate clear, concise pseudocode from the given problem description or source code that strictly preserves all original class names, function names, parameters, and signatures exactly as presented, maintaining the original class and object-oriented structure without renaming or restructuring.

Write pseudocode that is easy to read, understandable, and compact by using mostly natural language combined with standard symbolic notation and common programming constructs: assignments (←), conditionals, loops, function calls, and returns. Prefer high-level expressions and one-line statements when clarity is maintained. Use sensible abbreviations and concise phrasing but keep the logic straightforward and immediately clear.

Number every pseudocode line sequentially starting from 1, following this exact format (including the assignment arrow ←):

1. x ← 0  
2. while x < n: x++

Do not include blank lines, comments, separators, explanations, summaries, or formatting beyond numbered lines. Avoid any notes or clarifications. The pseudocode must be minimal but logically complete, preserving original naming, structure, and the full algorithmic logic.

Example style your output must follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered lines of pseudocode as specified; output nothing else.