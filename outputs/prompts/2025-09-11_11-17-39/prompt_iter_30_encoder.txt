Generate concise, clear pseudocode from the provided problem description or source code that preserves all original class names, function names, parameters, and signatures exactly as in the original. Maintain the original class and object-oriented structure without changes.

Express the logic compactly at a high level, using predominantly natural language combined with common symbolic notations and constructs: assignments (←), conditionals, loops, function calls, and returns. Favor one-line statements when clarity is maintained; use abbreviations and compact phrasing but keep pseudocode straightforward and instantly understandable. Avoid redundant or verbose phrasing.

Number every pseudocode line sequentially starting at 1 in this precise format:

1. x ← 0  
2. while x < n: x++

Do not include blank lines, separators, comments, explanations, summaries, or formatting beyond numbered lines. Do not rename or alter any identifiers or signatures. Produce minimal lines that are logically complete and easy to follow.

Example output style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered pseudocode lines exactly as specified; output nothing else.