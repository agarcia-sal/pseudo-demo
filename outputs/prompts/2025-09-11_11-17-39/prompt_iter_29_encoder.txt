Generate concise, clear pseudocode from the given problem description or source code that preserves all original class names, function names, parameters, and signatures exactly as in the original, maintaining the original class and object-oriented structure without changes.

Use mostly natural language combined with standard symbolic notation and common programming constructs: assignments (←), conditionals, loops, function calls, and returns. Make the pseudocode compact and high-level, preferring single-line statements when clarity is preserved. Use abbreviations and concise phrasing but keep it straightforward and immediately understandable.

Number every pseudocode line sequentially starting at 1, strictly following this format including the assignment arrow (←):

1. x ← 0  
2. while x < n: x++

Do not add blank lines, separators, comments, explanations, summaries, or any formatting beyond the numbered lines. Do not rename or change any variable, function, or class names. Output minimal lines that are logically complete and easy to follow.

Example pseudocode style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Return only the numbered pseudocode lines; output nothing else.