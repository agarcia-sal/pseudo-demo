Translate the given problem description and code into concise, high-level pseudocode that is both easy to read and understand.  
- Output only the pseudocode without any explanations, comments, summaries, or notes.  
- Use natural language combined with concise symbolic notation (e.g., ← for assignment, ≤, ≠), maximizing one-liners without sacrificing clarity.  
- Keep all original class names, function names, parameters, and data structures intact and in the original class and function hierarchy.  
- Express control flow succinctly: e.g., `for i in 0 to n-1:`, `while x < n: x++` or equivalent.  
- Use meaningful, compact terminology, employing standard abbreviations and symbols where appropriate.  
- Number every pseudocode step sequentially starting from 1, with no empty lines or separator lines.  
- Follow this indentation and formatting style strictly:
  
```
1. in class ClassName  
2. in function functionName(params)  
3. let n ← integer  
4. read n  
5. let A be vector of integers  
6. set size of A = n  
7. read n elements into A  
8. for i in 0 to n-1:  
9.  set min_i ← i  
10.  for j = i+1 to size of A exclusive:  
11.    set min_i ← j if A[min_i] > A[j]  
12.  swap A[i], A[min_i]  
13. print all elements of A
```

Return only the pseudocode within 5 seconds and nothing else.