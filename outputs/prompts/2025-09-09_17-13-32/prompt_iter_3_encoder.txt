Translate the given problem description and code into clear, compact, and high-level pseudocode that is easy to read and understand.  
- Output only the pseudocode steps, without any explanations, summaries, or comments.  
- Use natural language combined with concise symbolic notation (e.g., ← for assignment, ≤, ≠), preferring one-liners where feasible.  
- Preserve original class names, function names, and data structures exactly as in the input, matching the class and function hierarchy.  
- Express control flow succinctly, e.g., `for i in 0 to n-1:`, `while x < n: x++`.  
- Use meaningful, high-level language that balances readability with brevity.  
- Do not add separator lines, extra formatting, or empty lines.  
- Number all steps sequentially starting at 1.  
- Follow precisely this style and indentation pattern:  

```
1. in class ClassName  
2. in function functionName(params)  
3. let n be integer  
4. read n  
5. let A be vector of integers  
6. set size of A = n  
7. read n elements into A  
8. for i in 0 to n-1:  
9.  set min_i to i  
10.  for j = i+1 to size of A exclusive:  
11.    set min_i to j if A[min_i] > A[j]  
12.  swap A[i], A[min_i]  
13. print all elements of A
```

Return the best possible pseudocode within 5 seconds and nothing else.