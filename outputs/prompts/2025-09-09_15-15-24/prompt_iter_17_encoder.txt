Write pseudocode to directly implement the given problem’s code as a function with exactly the same name and parameters as in the original.  
Produce concise, compact, and high-level pseudocode that is easy to read and naturally expresses the algorithm.  
Prefer mostly natural language enriched with symbolic forms, idiomatic pseudocode abbreviations, and one-line statements whenever clear.  
Use consistent exact original function and variable names.  
Number each line starting at 1. Use indentation to denote blocks. Use this format:  

1. in function FuncName(args)  
2.  let x ← 0  
3.  while x < n: x++  
4.  return result  

Avoid comments, explanations, summaries, notes, or extra formatting; output only the essential pseudocode steps.  
Do not add separator lines, decorative elements, or verbose phrasing.  
Favor direct control structures, symbolic operators, and minimal verbosity without losing clarity.  
Preserve concise expressions for conditions and assignments (e.g., if cond: do; else: do).  
Generate the best compact and clear pseudocode within 5 seconds.