Write concise, compact pseudocode to directly implement the provided problem’s code as a function, keeping the original function name and parameter list exactly.  
Produce high-level, natural-language pseudocode enriched with symbolic operators, idiomatic abbreviations, and one-line statements wherever clarity permits.  
Use consistent original variable names and exact function names.  
Number each line starting at 1. Use indentation to denote structure, following this minimal format:  

1. x ← 0  
2. while x < n: x++  

Avoid comments, explanations, summaries, notes, or any extra formatting—output only the essential pseudocode statements.  
Do not insert separator lines or decorative elements.  
Favor clear, direct control flow, concise expressions for conditions and assignments, and natural phrasing without verbosity (e.g., “if cond: do; else: do”).  
Use simple, readable constructs and prefer one-line blocks when they enhance compactness without sacrificing clarity.  
Generate the best compact and readable pseudocode within 5 seconds.