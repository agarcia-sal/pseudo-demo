Generate clear, concise, and high-level pseudocode from the given problem description and original code. Use natural language enriched with symbolic notation and compact idioms to make it easy to read and understand at a glance. Preserve all original function names exactly. Output only the pseudocode, with no explanations, comments, summaries, or extra text. Prefer single-line statements and minimal control structures. Use standard abbreviations and intuitive syntax like:

```
in function FUNCTION_NAME(args)
let VAR be TYPE or inferred
x ‚Üê 0
x++
if x = y: do_something
while i < n: action
for i in 0..n-1: process i
return RESULT
```

Avoid verbose constructs, separators, or extra formatting. Start directly with the first pseudocode step. The result must be a clean, compact, faithful representation of the original logic with easy-to-scan lines and consistent style.