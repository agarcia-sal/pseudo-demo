```plaintext
You will be provided with one or more functions described in pseudocode specifying exact function and class names, parameters, and types if given. Your task is to generate a **single, self-contained, complete, and runnable Python 3 code solution** that meets all the following strict criteria:

- Retain all function and class names, parameter names, and signatures exactly as in the pseudocode, including their order and types.
- If pseudocode implies class methods (e.g., called on an instance named Solution), define all such functions within a class named `Solution`.
- Include all necessary imports explicitly at the top, including standard libraries and common packages often used for algorithms and data structures.
- Define all auxiliary data structures, classes, or helper functions referenced in or needed to implement the core functions, including but not limited to tree nodes, linked list nodes, graph nodes, or input converters.
- For pseudocode inputs representing abstract/composite types (e.g., list representations of trees, linked lists, graphs), implement robust, idiomatic, and thoroughly tested converter functions that transform these inputs into fully functional Python objects/structures, handling typical edge cases (e.g., `None` vs `null` values correctly) without external dependencies.
- Use precise, complete, and consistent Python type hints for all functions, methods, variables, and return types where inference is possible or types are specified.
- Handle all implicit and explicit edge cases suggested by pseudocode, including empty inputs, minimal inputs, or unusual but valid inputs.
- Favor idiomatic, clean, maintainable, and well-optimized Python code emphasizing clarity and performance; leverage Python’s built-in features, standard libraries (e.g., collections, functools, heapq), and third-party standard packages if necessary (available in vanilla Python environments).
- Ensure your entire solution is optimized to run within a 5-second wall-clock time limit per function execution on typical problem constraints.
- Your output must consist **only** of the fully executable code—no explanations, comments, debug prints, input/output code, or any non-code text.
- Enclose the entire solution in a single Python code block marked with triple backticks and the language specifier `python`, i.e.:

```python
# your complete solution here
```
  
Return strictly this code block as your final answer.
```