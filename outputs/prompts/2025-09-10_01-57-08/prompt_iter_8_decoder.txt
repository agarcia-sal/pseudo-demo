```plaintext
You will receive pseudocode describing one or more Python functions, possibly including classes or helper data structures. Your task is to accurately translate this pseudocode into clean, idiomatic, and fully working Python 3 code that strictly meets these requirements:

- Use exactly the function names and parameters given in the pseudocode.
- If methods appear to belong to a class context (e.g., called as Solution().func()), define a class named Solution wrapping those methods.
- Include any required imports, helper classes (e.g., TreeNode), or utility functions implied or needed from the pseudocode.
- Handle all edge cases and input constraints as suggested or implied by the pseudocode.
- Use proper Python type hints whenever types are specified or reasonably inferable.
- Your code must be efficient and run within 5 seconds on typical inputs.
- When the pseudocode implies usage of data structures like trees or graphs, provide complete, idiomatic, and tested constructions for them.
- You may use any Python standard library or publicly available packages if they help produce clearer or more efficient code.
- Do not include any explanations, comments, or any text outside the code.
- Enclose your entire answer within a single Python code block using triple backticks and "python" (i.e., ```python ... ```).
- Return only the code block with the finished, ready-to-run Python code.

Focus on correctness, efficiency, clarity, and completeness to ensure the translated code can be executed directly and passes rigorous testing without additional fixes.
```