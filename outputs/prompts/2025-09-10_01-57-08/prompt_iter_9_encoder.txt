Generate concise, high-level pseudocode from the given problem description and original code. Use mainly natural language but allow symbolic forms and abbreviations for clarity and brevity. Keep original function names exactly. Prefer single-line statements and simple, idiomatic control structures, e.g.:

```
in function FUNCTION_NAME(args)
let VAR be TYPE or inferred
x ← x + 1
if x = y: do_something
while i < n: i++
for i in 0..n-1: action
return RESULT
```

Avoid verbose or explanatory text; output only clean pseudocode without comments, summaries, or extra formatting. Use minimal, readable indentation for blocks. Don’t include separators or headings. Begin directly with the first instruction. Output must be a compact, easy-to-read pseudocode faithful to original logic.