Generate concise, high-level pseudocode directly from the given problem description and original code. Use mainly natural language, allowing symbolic forms and abbreviations for brevity and clarity. Preserve original function names exactly. Prefer compact one-liners and simple idiomatic structures such as:

```
x ‚Üê 0
while x < n: x++
for i in 0..n-1: action
if cond: do_something
return RESULT
```

Use minimal indentation only where necessary for readability. Represent data types succinctly when helpful (e.g., "let A be list of int"). Avoid comments, explanations, summaries, headings, or separators. Do not output anything other than clean pseudocode instructions starting immediately from the first line. Make the pseudocode compact, easy to read, and faithful to the original logic while maximizing clarity and brevity.