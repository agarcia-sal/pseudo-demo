Write pseudocode that strictly mirrors the original code’s logic and structure, preserving all class names, function names, and data structures exactly as given. Use clear, concise natural language enriched with symbolic operators, abbreviations, and compact high-level expressions. Prefer concise one-liners for simple statements and loops while maintaining readability. Number each line starting at 1, formatted as:

1. x ← 0  
2. while x < n: x++

Do not include any explanations, summaries, comments, or notes—only the pseudocode itself. Avoid separator lines or extra whitespace. The pseudocode should stay easy to read without sacrificing brevity or precision, fully capturing the solution’s flow to enable direct implementation. The output must respect the original class and method boundaries and conform to idiomatic pseudocode style with natural language terms alongside symbolic notation where appropriate. Aim to produce a minimal yet comprehensive pseudocode representation within a 5-second runtime limit.