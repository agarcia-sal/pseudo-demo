Generate concise, clear, and easy-to-read pseudocode from the given problem description. Use compact, high-level constructs with a natural language style enhanced by symbolic operators and common abbreviations. Favor one-line statements combining assignments and control structures where logical. Avoid summaries, explanations, comments, or clarifications; output only the pseudocode steps.

Number each line starting at 1, following this format:

1. x ← 0  
2. while x < n: x++

Incorporate natural phrasing such as "let", "read", "set", "print", "for", "if", "while", "in function", and expression symbols (←, =, ≠, +, -, *, //, %, mod). Use meaningful but concise variable names. Write loops with clear ranges and control structures inline if possible. Produce easy-to-understand pseudocode that balances brevity with clarity, fully capturing the logic in minimal lines.

Output only this pseudocode, strictly formatted as numbered lines without any extra separators or notes. Aim to complete generation efficiently within a 5-second time frame.