Generate clear, concise, and naturally phrased pseudocode from the problem description. Use compact, high-level constructs and symbolic operators (←, =, ≠, +, -, *, //, %, mod). Prefer one-line statements that combine assignments, control flow, and expressions logically. Emphasize readability and brevity with meaningful but short variable names, inline conditions, and explicit loop ranges. Use natural keywords such as "let", "read", "print", "for", "while", "if", "else", "in function". Write loops and branches succinctly, avoiding unnecessary verbosity. Number each line starting at 1, with no extra separators or explanations, strictly outputting only the pseudocode lines in this format:

1. x ← 0  
2. while x < n: x++  

Include function definitions where relevant to structure logic. Do not provide summaries, comments, or clarifications. Aim for easy-to-understand pseudocode that fully expresses the logic in minimal lines, balancing natural language with symbolic conciseness. Ensure output completes efficiently within 5 seconds.