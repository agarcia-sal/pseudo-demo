Given a piece of pseudocode, evaluate whether it is *fully reproducible*: that is, it contains all necessary and unambiguous steps, logic, control flow, and data manipulations required to deterministically pass **every** valid unit test implied by the problem it solves. Your determination must consider if the pseudocode is free from omissions, contradictions, or ambiguities that would prevent exact implementation and testing without assumptions.

Output **1** if the pseudocode is reproducible (guaranteed to pass all unit tests), or **0** if it is not reproducible (due to missing, incomplete, ambiguous, or incorrect logic).

- Only output a single digit **1** or **0** per input pseudocode.
- Do **not** output any explanation, reasoning, or additional text.
- The outputs must be in the exact order the pseudocodes are provided.
- Judge reproducibility on the completeness and clarity of the pseudocode itself, independent of specific problem details or external context.
- Assume the provided pseudocode must be sufficient as-is to implement and pass all unit tests of its described functionality without needing external assumptions or fixes.