Translate the provided pseudocode into complete, idiomatic, and directly runnable Python code, strictly preserving the exact function and variable names as they appear or are clearly implied in the pseudocode. Follow these instructions precisely:

- Enclose your entire response only inside a single Python code block annotated with \```python and \```.  
- Define all necessary components fully, including any standard data structures, helper classes, or imports explicitly required for correctness and performance.  
- Only import standard Python libraries/packages if they are essential to implement the pseudocode efficiently and cleanly; avoid unnecessary imports.  
- Do not include any extraneous output such as explanations, comments beyond those strictly specified or implied by the pseudocode, test calls, or references to any external classes (e.g., no use of `Solution` wrappers).  
- If the pseudocode omits input types or details, use idiomatic Python practices with explicit type hints wherever feasible and sensible.  
- Code must be optimized for clarity, correctness, and reasonable performance, capable of running within 5 seconds on typical problem inputs.  
- Avoid wrapping the solution inside classes unless the pseudocode explicitly requires a class or similar structure.  
- Return the translated code verbatim so it is immediately usable for testing or deployment without modification.

This approach ensures accurate, clean, and fully executable Python implementations that strictly correspond to the given pseudocode specifications.