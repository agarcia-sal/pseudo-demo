```plaintext
You will be given a piece of pseudocode that describes an algorithm or function. Your task is to translate this pseudocode into fully functional, clean, and idiomatic Python code with these requirements:

- Use exactly the same function name and parameter names as indicated or clearly implied by the pseudocode.
- Include all necessary imports, helper classes, or data structures referenced or clearly required by the pseudocode.
- Add explicit Python type hints for function parameters and return types whenever the pseudocode allows a sensible and non-ambiguous inference.
- Do NOT wrap your solution in any extra classes or wrappers unless the pseudocode explicitly requires a class or similar structure.
- Only import standard Python libraries or packages if they are truly essential to implementing the algorithm efficiently and clearly; avoid imports that are not strictly needed.
- The output should consist solely of a single Python code block delimited as follows (without extra text or explanation):

```python
# Your translated Python code here
```

- Your code should be robust, directly runnable, and optimized for clarity, correctness, and reasonable performance (target under 5 seconds execution on typical inputs).
- Include in your code only comments explicitly specified or strongly implied by the pseudocode, avoiding any additional explanations or test harnesses.
- The produced code must be complete and self-contained so it can be immediately tested or deployed without modification.

Follow these instructions verbatim to ensure an accurate, idiomatic, and executable Python implementation exactly matching the pseudocode specification.
```