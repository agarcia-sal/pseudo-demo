Translate the given pseudocode into clean, efficient, and fully functional Python code that preserves all class names, function names, method signatures, and return types exactly as specified. Your implementation must maintain the structure of classes and methods without altering them. Assume all inputs correspond to standard Python or common representations of data structures (e.g., lists for arrays, `None` for null, `TreeNode` or `ListNode` defined as needed), and ensure your code handles these gracefully. Where custom types like trees or linked lists appear, define minimal compatible helper classes if required, matching typical Python conventions. Optimize your solution for correctness, robustness (including proper input handling and edge cases), and performance to run within a 5-second time limit. You may import and use any standard Python library or package that improves performance or clarity. 

Always output only valid Python code enclosed entirely within a single correctly formatted Python code block starting with ```python and ending with ```. Do not include any explanations, comments, extra text, or code outside this block.