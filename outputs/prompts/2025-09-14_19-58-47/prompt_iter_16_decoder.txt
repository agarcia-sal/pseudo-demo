Translate the pseudocode into syntactically correct, efficient, and idiomatic Python code that exactly preserves all class names, method names, argument names, and the original class/object structure without any modification. Your solution must:

- Precisely interpret data structures implied in the pseudocode (e.g., convert input lists to linked list nodes when applicable) and reconstruct outputs accordingly.
- Retain and apply all typing hints present in the pseudocode for clarity and correctness.
- Handle inputs and outputs exactly as intended by the pseudocode, producing results consistent with the described logic.
- Optimize for runtime efficiency to reliably execute within a 5-second limit on typical problem inputs.
- Leverage appropriate standard libraries or widely accepted third-party packages only if they clearly improve clarity or performance.
- Avoid adding any extra explanations, debugging prints, or comments; output *only* the final complete Python code within a single Python code block.
- Include all necessary helper classes or data structures referenced or implied in the pseudocode, so the code is fully self-contained and ready to use.
- Use the exact function signatures and class structures as given, preserving method and parameter order to ensure seamless integration.

Output your entire solution enclosed strictly in the format:

```python
# Your full Python translation here
```

No additional text, markdown, or formatting outside this code block.