Translate the given pseudocode into fully functional, idiomatic Python code that strictly preserves all class names, method signatures, and class/object structures exactly as presented, without any deviation. Your translation must:

- Interpret and construct all data structures implied by the pseudocode (e.g., convert input lists to linked lists if indicated), ensuring input parameters and return types correspond exactly to those in the pseudocode.
- Maintain exact function and method names along with their signatures including all type annotations, matching those shown in the pseudocode.
- Deliver highly efficient, runtime-optimized, and memory-efficient code suitable to run within a 5-second execution constraint for any typical input.
- Utilize relevant standard Python libraries or performant third-party packages if they improve clarity, correctness, or execution speed.
- Avoid any extraneous output, comments, explanations, or debugging statements; produce only the minimal, ready-to-execute Python code.
- Guarantee the code is syntactically correct, self-contained, and executable without any modification or missing dependencies.
- Enclose the entire output strictly within a single Python code block using triple backticks and `python`.

Strictly output only the requested code in the exact format shown below:

```python
# Full translated code here preserving all class and method names and structures.
```