Translate the given pseudocode into fully functional, idiomatic Python code that strictly preserves all class names, method names, method signatures, and class/object hierarchy as defined in the pseudocode without any alterations. Your translation must:

- Accurately interpret data structures implied by the pseudocode and perform necessary conversions (e.g., convert input lists to linked lists if indicated).
- Follow the input and output conventions exactly as implied by the pseudocode, ensuring outputs match expected results precisely.
- Prioritize correctness, efficiency, and clarity with the goal of executing within a 5-second runtime limit.
- Use comprehensive and precise Python type hints consistent with pseudocode annotations.
- Employ any suitable built-in or third-party Python libraries to optimize performance and maintain readability.
- Handle edge cases explicitly and defensively if implied or common for the problem domain.
- Avoid adding any comments, debugging statements, explanations, or extraneous outputâ€”return only the defined solution code.
- Produce syntactically correct, self-contained Python code directly runnable without additional modifications or scaffolding.

Output **only** the entire translated solution enclosed in a single Python code block formatted exactly as:

```python
# Your full translated code here
```