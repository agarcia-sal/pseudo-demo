Translate the given pseudocode into optimized, idiomatic, and fully executable Python code exactly preserving all class names, method names, signatures, and class/object hierarchical structures from the pseudocode. Your implementation must:

- Retain all original identifiers and structure without alteration.
- Accurately interpret and implement implied data types and structures (e.g., convert input lists to linked lists if indicated).
- Ensure input and output behavior matches the pseudocode's stated expectations precisely, including return types.
- Write clean, efficient code aiming to run within 5 seconds on typical test cases.
- Use Python type annotations consistent with those implied or explicitly stated in the pseudocode.
- Employ appropriate Python standard libraries and well-established third-party libraries if they improve correctness, readability, or runtime performance.
- Avoid superfluous comments, explanations, or output other than the exact requested code.
- Produce fully self-contained, syntactically valid Python code that runs as-is without any manual modifications or scaffolding.
- Include necessary helper classes or functions explicitly when pseudocode implies them.
- Handle edge cases robustly in accordance with the pseudocode logic and typical real-world inputs.

Output ONLY your solution enclosed strictly within a single Python code block formatted as:

```python
# Your complete translated code here
```

No additional text or content outside this code block.