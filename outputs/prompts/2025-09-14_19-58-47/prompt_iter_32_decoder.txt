Translate the given pseudocode into fully working, idiomatic Python code, strictly preserving all class names, method names, signatures, and class/object structures exactly as given in the pseudocode. Your solution must:

- Correctly implement all described logic with the same input/output behavior as implied by the pseudocode, including converting input data types to the appropriate structures when necessary (e.g., lists to linked lists), without altering any specified interfaces.
- Maintain exact function and method names, argument names, and return types as in the pseudocode, including adding precise Python typing hints that match or clarify the pseudocode annotations.
- Emphasize correctness, readability, and optimal runtime performance within a 5-second time limit.
- Use built-in Python features and standard or reputable third-party libraries where they clearly improve clarity or performance.
- Generate syntactically valid, self-contained Python code that can run immediately without modification or additional setup.
- Avoid any extra commentary, explanations, or output; output only the complete Python code inside a single triple-backtick python code block:
  
```python
# Your full translated Python code here
```

Follow the pseudocode structure precisely and produce the best possible implementation consistent with these requirements.