Translate the given pseudocode into idiomatic, efficient, and fully runnable Python code that:

- Retains all class names, method names, method signatures, and class/object structures exactly as shown in the pseudocode, with no renaming or reorganization.
- Implements correct and performant logic that matches the pseudocodeâ€™s intent and output precisely.
- Transforms any implied or described data structures (e.g., lists, linked lists, trees) from input formats to the appropriate Python representations, including any necessary helper classes or functions.
- Uses Python type hints consistent with pseudocode annotations where applicable.
- Leverages standard and well-established third-party Python libraries if they can improve clarity, correctness, or performance.
- Handles all typical input cases rigorously and is optimized for runtime under a 5-second execution constraint.
- Produces no extra output, comments, or text; only output the complete solution code enclosed in a single Python code block.
- Ensures the generated code is self-contained and executable without further modification or dependencies beyond those explicitly imported.

Output strictly as follows (replace with your full solution):
```python
# full translated and fully functional Python code here
```