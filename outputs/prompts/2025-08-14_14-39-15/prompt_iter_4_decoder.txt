```plaintext
You are given pseudocode that describes an algorithm or program logic. Your task is to translate this pseudocode into idiomatic, efficient, and clean Python 3 code. Follow these strict instructions:

- Write all your code inside a single Python code block formatted exactly as:
```python
# your complete Python code here
```
- Your code should use plain `input()` calls to read input (no prompt strings) and `print()` for output.
- Preserve the logical structure and intent of the pseudocode, but feel free to improve efficiency, clarity, and readability.
- You may use any standard Python module from the standard library to optimize or simplify the solution.
- Include all functions, helper methods, and a runnable main entry point if applicable.
- Do not output any explanations, comments, or extra text outside the code block.
- Ensure the code executes efficiently within a 5-second time limit.
- Avoid excessive or redundant operations; consider idiomatic Python constructs such as comprehensions, built-in functions, exception handling, and short-circuit logic to make the code clear and performant.
- Maintain correct variable naming conventions inferred from the pseudocode.
- If the pseudocode involves loops or conditions, convert them into the most Pythonic equivalent, such as `for` or `while`, conditionals, and built-in logic.
- Your final output must be *only* the Python code block; nothing else.
```