Generate concise, clear, and high-level pseudocode from the provided problem description, preserving the exact original function name.  
Make the pseudocode easy to read and understand by using mostly natural language phrasing combined with compact symbolic notation and standard abbreviations.  
Favor concise one-line statements when clarity is maintained.  
Use consistent minimal formatting with line numbers and arrow assignment, as in:  
1. x ← 0  
2. while x < n: x++  
Do not include any explanatory comments, purpose statements, summaries, or notes—output only the pseudocode itself.  
Use natural control flow keywords and expressions (if, for, while, return, etc.), and keep data structures and operations explicit yet succinct.  
Avoid decorative or separator lines.  
Ensure the pseudocode is fully self-contained, directly implementable, and matches the original function signature exactly.  
Optimize for brevity, readability, and faithful semantic representation.  
Produce the entire pseudocode solution within a 5-second time limit; output the best possible version in that time.