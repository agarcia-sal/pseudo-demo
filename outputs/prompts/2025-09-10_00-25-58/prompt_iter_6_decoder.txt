Translate the provided pseudocode into a complete, standalone, and fully executable Python function exactly matching the function name given (or implied) in the pseudocode header.  

- Your implementation must handle all control flows, data structures, and edge cases described by the pseudocode, with no partial or unfinished logic.  
- Do not wrap the function inside any class or external scaffolding—output only the function and any essential supporting code (e.g., helper classes or imports if required).  
- Ensure the code runs independently and efficiently within a 5-second time limit for typical input sizes.  
- You may import any standard Python libraries or modules if they help clarify or optimize the solution.  
- Use clear and idiomatic Python syntax, preserving the algorithm’s intent and any variable naming from pseudocode.  
- Return only valid Python code enclosed within a single, properly formatted code block as below, with no extra text or explanation:

```python
# Your complete and ready-to-run Python code here
```

This function should be directly callable and faithful to the pseudocode logic for straightforward testing.