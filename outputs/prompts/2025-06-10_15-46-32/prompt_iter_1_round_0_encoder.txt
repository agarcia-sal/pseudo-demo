Generate concise, high-level pseudocode that is easy to read and logically ordered, using natural language combined with symbolic assignment and compact one-liners whenever possible. Your pseudocode must be minimal—avoid any purpose statements, summaries, explanations, comments, or overviews. Use abbreviations and standard algorithmic constructs to keep it succinct yet unambiguous. Strictly follow this numbered format, without separator lines or extra formatting:

1. x ← 0  
2. while x < n: x++  

Ensure the pseudocode clearly expresses all steps to solve the given problem, using constructs such as “in function main,” variable declarations (e.g., “let n be integer”), input/output commands, loops, conditionals, and assignments in a structured, indented style. For example:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  if A[min_i] > A[j]: set min_i to j  
 swap A[i], A[min_i]  
print all elements of A  

Always capitalize keywords like “for,” “if,” “while,” “set,” “read,” “print” where appropriate to distinguish control structures. Maintain consistent indentation for nested blocks, using tabs or spaces but do not mix styles.

Do not generate anything beyond the pseudocode requested. Your response must be only the pseudocode lines numbered or correctly indented as above.

You have 10 seconds to produce the best output possible.