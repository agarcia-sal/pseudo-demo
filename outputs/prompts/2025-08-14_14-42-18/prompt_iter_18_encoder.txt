Generate concise, clear, and easy-to-read pseudocode from the given problem description by expressing logic primarily in natural language with compact symbolic notation and standard abbreviations.  
Use brief, high-level one-line instructions combining action and control flow where appropriate, e.g.,  
`for i ← 0 to n-1: action`, `if cond: action`, `while cond: action`.  
Use meaningful, simple variable names and standard operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, etc.) to keep expressions compact yet clear.  
Number each pseudocode line starting at 1; each line must contain exactly one instruction or a single logically grouped concise expression.  
Avoid comments, explanations, or any text other than the numbered pseudocode lines.  
Output only the numbered pseudocode lines as plain text without extra labels, metadata, or separators.  

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i ← 0 to n-1:  
7. set min_i to i  
8. for j ← i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A