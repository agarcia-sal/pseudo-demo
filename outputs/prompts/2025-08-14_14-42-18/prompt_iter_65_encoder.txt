Generate concise, high-level pseudocode from the problem description emphasizing clarity and readability by blending natural language with common symbolic notation and standard abbreviations. Output only numbered lines starting at 1 with one complete instruction per line, using one-liners where natural (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`). Use meaningful simple variable names and familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, `←`) to keep lines short and compact. Avoid comments, explanations, or any text other than the pseudocode lines. Do not include formatting tags, separators, bullet points, or extra labels—only clean, numbered pseudocode lines that are easy to understand. Follow this example style exactly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A ← n  
6. read n elements into A  
7. for i ← 0 to size of A - 1:  
8. set min_i ← i  
9. for j ← i + 1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10. swap A[i], A[min_i]  
11. print all elements of A