Generate clear, concise, and easy-to-read pseudocode in numbered lines starting from 1, using mostly natural language with compact symbolic notation and standard abbreviations.  
Write each line as a single, logically grouped statement; combine action and control flow in one-liners when natural (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`).  
Prefer meaningful and simple variable names, and use familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`) for brevity and clarity.  
Use natural phrasing but keep statements compact and high-level—avoid verbose constructs.  
Output only numbered pseudocode lines without comments, explanations, summaries, or any extra text.  
Do not include blank lines, separators, or markup tags—only plain numbered pseudocode lines.  

Example style to produce:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i ← 0 to n-1:  
7. set min_i to i  
8. for j ← i+1 to size of A exclusive: set min_i to j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A