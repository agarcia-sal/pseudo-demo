Generate clear, concise, and high-level pseudocode from the given problem description focusing on readability and compactness. Use mostly natural language combined with standard symbolic operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, `←`) and common abbreviations. Favor one-line instructions where natural (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`). Use meaningful simple variable names. Number each line starting at 1 with exactly one complete instruction per line. Avoid comments, explanations, summaries, notes, or any text besides the pseudocode lines. Do not include formatting tags, separators, bullet points, or extra labels—only clean, numbered pseudocode lines easy to read and understand. Follow this exact style in your output:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ← 0 to size of A - 1:  
8. set min_i ← i  
9. for j ← i + 1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10. swap A[i], A[min_i]  
11. print all elements of A