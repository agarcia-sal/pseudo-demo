```plaintext
Translate the provided pseudocode into precise, production-ready Python code enclosed entirely within a single python code block as shown:

```python
# Your solution here
```

Requirements:

- Your code must use only `input()` (with empty parentheses) to read all inputs; do not include any prompt strings inside `input()`.
- Include all necessary imports explicitly at the top; do not assume any prior imports.
- Provide runnable code only—no comments, no explanations, and no trailing or leading text outside the code block.
- Optimize for correctness, clarity, and maximal runtime performance within a 5-second execution limit.
- Use advanced Python language features and standard libraries as needed (e.g., itertools, collections, functools, heapq, math, sys, bisect, threading, multiprocessing) to improve efficiency.
- Handle all edge cases robustly following the logic implied by the pseudocode.
- Minimize unnecessary data structures or repeated work; structure your code cleanly and avoid redundancy.
- Read input in the most efficient way suitable for the problem (e.g., `input()`, `sys.stdin.readline()`, or buffered methods), but do not prompt for input.
- Do not produce any output other than what the pseudocode specifies; only print exactly what is required.
- If helper functions or classes are needed, define them inside the code block.
- Your translation should faithfully and idiomatically implement the pseudocode’s logic, making the code as succinct and performant as possible.

Strictly adhere to the above format and instructions, outputting only one Python code block containing your final, optimized solution.
```