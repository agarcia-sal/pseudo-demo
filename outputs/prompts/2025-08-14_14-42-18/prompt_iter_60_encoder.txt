Generate concise, high-level pseudocode that is easy to read and understand by blending natural language with clear symbolic notation and common abbreviations. Prioritize compactness and clarity with mostly one-liners using familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, `←`). Use simple, meaningful variable names. Output only numbered lines starting at 1, each containing exactly one complete instruction or control statement. Prefer expressions like `for i ← 0 to n - 1:` or `if cond: action`. Avoid comments, explanations, summaries, labels, formatting tags, separators, or any extra text—only clean pseudocode lines. Follow this exact style and format:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ← 0 to size of A - 1:  
8. set min_i ← i  
9. for j ← i + 1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10. swap A[i], A[min_i]  
11. print all elements of A