Generate concise, clear pseudocode that is easy to read and understand by blending natural language with compact symbolic notation and common abbreviations. Structure output as numbered lines starting at 1, each containing exactly one complete instruction. Prefer short one-liners using familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, `←`) and control constructs (`for`, `while`, `if`, `else`, `return`) with natural language phrases only when needed for clarity. Use meaningful, simple variable names. Avoid comments, explanations, summaries, or any text besides the pseudocode lines. Do not include formatting tags, separators, bullet points, or extra labels—only clean, minimal, numbered pseudocode lines in a high-level style. Follow this example style exactly:  

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ← 0 to size of A - 1:  
8. set min_i ← i  
9. for j ← i + 1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10. swap A[i], A[min_i]  
11. print all elements of A