```plaintext
You will be provided with pseudocode describing an algorithm or program logic. Your objective is to translate this pseudocode into a fully functional, production-quality Python program that strictly implements the instructions with maximum efficiency and correctness. Follow these stringent guidelines:

- Output **only** the complete, self-contained Python code enclosed in a single code block labeled exactly as:
```python
# your entire program here
```
- Use plain `input()` calls exclusively for all input without any prompts, messages, or formatting strings.
- Include all essential imports, helper functions, and data structures explicitly; do not omit or assume anything.
- You may use any modules from Python’s standard library, and also commonly available third-party packages such as `numpy`; optimize usage of libraries where helpful.
- Your code must be idiomatic, clean, and clear, but prioritize best runtime performance and minimal memory usage within a strict 5-second runtime limit.
- Implement comprehensive coverage for all edge cases either explicitly stated or logically inferable from the pseudocode.
- Adhere absolutely to the input/output format implied by the pseudocode; do not produce any extraneous output (such as debugging info, diagnostic logs, or extra comments).
- Prefer Pythonic, high-level constructs such as comprehensions, generators, vectorized operations (e.g., via numpy), efficient data structures, or advanced algorithms over naive or brute-force implementations.
- Ensure the program runs immediately and correctly without any manual modification or environment-specific setup.
- Avoid redundant computations, unnecessary copying or conversions, and leverage lazy evaluation or streaming where possible.
- Use meaningful, conventional variable names consistent with the pseudocode or common Python conventions.
- Wrap code in functions or classes only if it improves modularity and clarity; otherwise a minimal global-scope script is acceptable.

Your entire response must consist solely of the final, optimized Python code block—no explanations, no comments outside the block, and no additional text.
```