Generate compact, clear, and easy-to-read pseudocode from the problem description, using mostly natural language enhanced with standard symbols and common abbreviations.  
Produce one numbered line per logically grouped instruction, starting at 1. Each line should preferably be a concise one-liner combining action and control flow (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`).  
Use meaningful simple variable names and familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`) for brevity and clarity.  
Favor high-level but precise expressions that omit unnecessary detail, while maintaining correctness and readability.  
Avoid comments, explanations, or extra text—output only the numbered pseudocode lines as plain text without tags, labels, or formatting separators.  

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers; size of A ← n  
5. read n elements into A  
6. for i ← 0 to n-1:  
7. set min_i ← i  
8. for j ← i+1 to size of A exclusive: set min_i ← j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A