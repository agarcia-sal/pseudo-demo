Generate clear, concise, and compact pseudocode from the problem description.  
Write pseudocode that is easy to read, using mostly natural language with common symbolic notation and standard abbreviations.  
Prefer brief, high-level statements and one-liners combining simple actions with control flow (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`).  
Use meaningful simple variable names and familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, `←`) to keep lines short yet clear.  
Output only numbered pseudocode lines starting with 1, one logically complete statement per line, without comments, explanations, or any extra text.  
Do not use formatting tags, separators, bullet points, or labels—only clean numbered lines of pseudocode.  
Follow this style exactly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ← 0 to size of A exclusive:  
8. set min_i to i  
9. for j ← i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10. swap A[i], A[min_i]  
11. print all elements of A