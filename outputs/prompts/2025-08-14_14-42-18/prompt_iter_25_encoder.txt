Generate concise, clear, and high-level pseudocode from the given problem description that is easy to read and understand.  
Use mostly natural language enriched with compact symbolic notation and common abbreviations to express logic.  
Prefer short, combined one-liners merging action and control flow where suitable (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`).  
Choose meaningful but simple variable names; use standard operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, `:=`) for clarity and brevity.  
Number each line starting from 1; each line must contain exactly one instruction or a logically grouped concise expression.  
Avoid comments, explanations, notes, summaries, or any text other than the numbered pseudocode lines.  
Output only the numbered pseudocode lines as plain text without extra labels, metadata, or delimiters.  

Example style to follow:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i ← 0 to n-1:  
7. set min_i ← i  
8. for j ← i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A