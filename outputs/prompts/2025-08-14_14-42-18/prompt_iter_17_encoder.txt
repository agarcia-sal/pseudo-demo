Generate concise, high-level pseudocode from the given problem description that is easy to read and understand.  
Express logic primarily using natural language with clear, compact symbolic notation and standard abbreviations.  
Use short one-liners that combine action with control flow where appropriate (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`).  
Prefer meaningful and simple variable names; use standard operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`) for clarity and brevity.  
Number each pseudocode line starting at 1; each line must contain exactly one instruction or a logically grouped concise expression.  
Do not include comments, explanations, summaries, or any text beyond the numbered pseudocode lines.  
Output only the numbered lines as plain text without extra labels, metadata, or formatting separators.  

Example style to emulate:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i ← 0 to n-1:  
7. set min_i to i  
8. for j ← i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A