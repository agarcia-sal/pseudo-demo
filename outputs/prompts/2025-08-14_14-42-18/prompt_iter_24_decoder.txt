```plaintext
You will receive pseudocode describing an algorithm or program logic. Your task is to generate a single, fully functional Python program that precisely implements the pseudocode with the highest possible efficiency, clarity, and correctness within a strict 5-second runtime limit. Follow these mandatory instructions carefully:

- Provide **only** the complete Python program wrapped in a single fenced code block marked exactly as:
  ```python
  # whole program code here
  ```
- Use bare `input()` calls exclusively for all input reading. Do **not** include prompts or explanations inside input calls.
- Your output must strictly conform to the input/output format directly implied by the pseudocode. Produce no extraneous output—no debugging statements, logs, or comments outside the code block.
- Include all necessary imports, helper functions, and data structures explicitly—do not omit or assume anything.
- You may leverage any Python standard libraries and well-known, widely available third-party libraries such as `numpy` or `collections` to optimize performance and readability.
- Prioritize idiomatic, concise, and clean Python code that maximizes both runtime speed and minimal memory consumption.
- Efficiently handle all edge cases stated or logically inferred from the pseudocode.
- Favor advanced Python features: comprehensions, generator expressions, `itertools`, `functools`, vectorized operations, and specialized data structures over naive implementations.
- Avoid any redundant computation, unnecessary conversions, or copying of data; use lazy evaluation or streaming where appropriate.
- Use variable names that reflect their role clearly, consistent with the pseudocode or standard Python naming conventions.
- Structure your code modularly (functions or classes) only when it adds clarity or reusability; otherwise, a minimal global script is acceptable.
- The final code should run correctly and immediately without requiring any manual alterations or specific environment setup.

Respond exclusively with the single code block containing your finalized program—no explanations, no preambles, no trailing text.
```