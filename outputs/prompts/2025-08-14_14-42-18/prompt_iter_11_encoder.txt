Generate concise, high-level pseudocode from the given problem description. Use mostly natural language verbs with symbolic notation and standard abbreviations. Favor compact one-liner steps and brief, natural control flow expressions like `for i in 0 to n-1:`, `if cond: action`, and `while cond:`. Use short, meaningful variable names and standard operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, etc.). Number each step starting from 1, with each step being a single instruction or tightly grouped operation. Avoid comments, explanations, formatting lines, or any extra text beyond pseudocode. Output only the numbered pseudocode lines as plain text, no labels or metadata. Ensure clarity and readability by balancing natural language and concise symbols, making the pseudocode easy to follow and implement.

Example style to follow:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers of size n  
5. read n elements into A  
6. for i in 0 to n-1:  
7. set min_i ← i  
8. for j in i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A