Generate clear, concise, and high-level pseudocode from the given problem description.  
Use mostly natural language verbs combined with symbolic notation and common abbreviations.  
Favor compact one-liner instructions and natural, brief control flow expressions (e.g., `for i in 0 to n-1:`, `if cond: action`, `while cond:`), enabling effortless readability.  
Use short, meaningful variable names and standard operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, etc.).  
Number each pseudocode step starting from 1. Each step should be a single instruction or a small, logically grouped operation line.  
Do not include comments, explanations, summaries, formatting lines, or any text beyond the pseudocode.  
Ensure pseudocode is self-sufficient and unambiguous, avoiding verbosity while maintaining clarity.  
Output only the numbered pseudocode lines as plain text, no extra labels or metadata.  

Example style to emulate:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i in 0 to n-1:  
7. set min_i ← i  
8. for j in i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A