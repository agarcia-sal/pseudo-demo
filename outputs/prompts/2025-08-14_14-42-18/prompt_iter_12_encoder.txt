Generate easy-to-read, compact, and high-level pseudocode from the given problem description.  
Use mostly natural language with concise symbolic notation and common abbreviations.  
Prefer short, clear one-liner instructions combining actions and control flow (e.g., `for i in 0 to n-1:`, `if cond: action`, `while cond:`).  
Use simple, meaningful variable names and standard operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, etc.) for clarity and brevity.  
Number each pseudocode line starting at 1, each line being a single instruction or a logically grouped compact expression.  
Avoid comments, explanations, summaries, formatting lines, or any text beyond the pseudocode steps.  
Output only the numbered lines as plain text with no extra labels or metadata.  

Example style to emulate:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i in 0 to n-1:  
7. set min_i to i  
8. for j in i+1 to size of A exclusive: min_i to j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A