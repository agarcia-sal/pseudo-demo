Generate concise, clear, high-level pseudocode from the problem description using mostly natural language commands combined with standard symbols and common abbreviations.  
Prefer compact one-line instructions and terse, natural control flow expressions (e.g., `for i in 0 to n-1:`, `if cond: action`, `while cond:`) to maximize readability and brevity.  
Use short meaningful variable names and standard operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, etc.).  
Number each line starting from 1; each line is a single instruction or a tightly grouped logical operation.  
Avoid any comments, explanations, summaries, headings, or extra text beyond the numbered pseudocode lines.  
Make pseudocode self-contained, unambiguous, and easy to understand, prioritizing natural phrasing over overly symbolic notation.  
Output only the numbered, plain-text pseudocode lines without labels or formatting lines.  

Example style to follow:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to n-1:  
8. set min_i ← i  
9. for j in i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10. swap A[i], A[min_i]  
11. print all elements of A