Generate clear, concise, and high-level pseudocode focused on readability and simplicity by blending natural language with common symbols and standard abbreviations. Use meaningful simple variable names, familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`, `←`), and prefer compact one-liners (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`). Number each line starting at 1 with exactly one complete instruction per line. Use natural language constructs for clarity (e.g., `let`, `read`, `set`, `print`) but keep lines short and direct. Avoid comments, explanations, or extra text. Do not include formatting tags, separators, or labels—only clean, numbered pseudocode lines that are easy to scan and understand. Follow this example style exactly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A ← n  
6. read n elements into A  
7. for i ← 0 to size of A - 1:  
8. set min_i ← i  
9. for j ← i + 1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10. swap A[i], A[min_i]  
11. print all elements of A