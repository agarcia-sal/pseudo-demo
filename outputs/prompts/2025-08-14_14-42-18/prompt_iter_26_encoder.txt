Generate clear, concise, and high-level pseudocode directly from the problem description, using mostly natural language enhanced with compact symbolic notation and standard abbreviations.  
Write each instruction as a single numbered line, starting at 1, with exactly one clear, logically grouped statement per line.  
Favor short one-liners combining action and control flow where sensible (e.g., `for i ← 0 to n-1:`, `if cond: action`, `while cond:`).  
Use meaningful, simple variable names. Employ familiar operators (`+`, `-`, `*`, `//`, `mod`, `<`, `=`, `!=`) for clarity and brevity.  
Avoid comments, explanations, or any text besides the numbered pseudocode lines.  
Output only the numbered lines as plain text without extra tags, labels, or formatting separators.  

Example style to follow:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i ← 0 to n-1:  
7. set min_i to i  
8. for j ← i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
9. swap A[i], A[min_i]  
10. print all elements of A