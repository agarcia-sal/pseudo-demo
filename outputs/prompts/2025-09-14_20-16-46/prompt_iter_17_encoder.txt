Write clear, concise pseudocode that preserves all original class and function/method names, parameter names, and the exact object-oriented structure as described in the problem. Use a compact, high-level style blending natural language with symbolic operators and standard pseudocode keywords (FUNCTION, CLASS, SET, FOR, WHILE, IF, ELSE, RETURN, IN, TO, BY, etc.). Present control flow and nesting with consistent indentation; prefer short one-line statements whenever clear. Retain meaningful variable names and keep each line as brief as possible without losing clarity. Use symbolic forms (e.g., +=, ==, <, >) combined naturally with readable phrases (e.g., LENGTH OF, DIVIDED BY). Explicitly end functions and classes with END FUNCTION or END CLASS as needed. Do not add comments, explanations, notes, summaries, or any text besides the pseudocode itself. Do not use separator lines or extraneous formatting.

Format example:

1. x ‚Üê 0  
2. while x < n: x++  

Example input Python code:

```python
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

Corresponding pseudocode output:

```
FUNCTION calc_average(list_of_numbers)
    SET total_sum TO 0
    FOR each number IN list_of_numbers
        INCREMENT total_sum BY number
    SET average_value TO total_sum DIVIDED BY LENGTH OF list_of_numbers
    RETURN average_value
END FUNCTION
```