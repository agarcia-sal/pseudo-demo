Write concise, clear, and readable pseudocode that faithfully preserves all original class names, method/function names, parameter names, types (if shown), and the exact class and object-oriented structure as described in the problem. Use a high-level, natural language style that smoothly blends symbolic operators and common abbreviations without verbose explanation or unnecessary detail. Favor compact one-line statements and succinct loops or conditionals, consistently indented to reflect structure and control flow, with explicit endings like END FUNCTION or END CLASS as applicable.

Output only pseudocode—no comments, summaries, notes, or explanations—and do not include separator lines.

Use full keywords such as CLASS, FUNCTION, SET, FOR, WHILE, IF, ELSE, RETURN, IN, TO, BY, etc., while mixing in symbolic operators and natural language naturally (e.g., "==", "+=", "DIVIDED BY", "LENGTH OF") to keep it concise yet easy to understand. Prefer meaningful variable and parameter names as given, and keep lines as short as possible without losing clarity.

Follow this format exactly, using one-liners for simple blocks, e.g.:

1. x ← 0  
2. while x < n: x++

Example:

If given Python code:

```python
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

Produce pseudocode:

```
FUNCTION calc_average(list_of_numbers)
    SET total_sum TO 0
    FOR each number IN list_of_numbers
        INCREMENT total_sum BY number
    SET average_value TO total_sum DIVIDED BY LENGTH OF list_of_numbers
    RETURN average_value
END FUNCTION
```