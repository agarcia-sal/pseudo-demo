Translate the provided pseudocode into clean, efficient, and idiomatic Python code with the following requirements:

- **Preserve all class names, function names, signatures, and the overall class structure exactly as given in the pseudocode.**  
- Fully implement the logic described in the pseudocode without adding or removing functionality.  
- Enclose the entire Python code within a single Python code block formatted as follows:

```python
# Your translated Python code here
```

- Ensure correctness, readability, and maintain Python conventions (PEP 8) where applicable.  
- Add necessary imports only if explicitly required by the logic. No unnecessary imports.  
- Handle common edge cases implied by the pseudocode to avoid runtime errors.  
- Avoid assumptions about input formats beyond those stated or logically inferred from the pseudocode. If the pseudocode implies custom data structures or object types (e.g., ListNode), define them appropriately.  
- Include appropriate return statements consistent with the functionâ€™s intention.  
- Optimize for clarity and maintainability; ensure variables and flow reflect the pseudocode semantics clearly.  
- Your solution must run within 5 seconds on typical modern hardware for reasonable input sizes.  
- Do **not** include print statements, test scaffolding, or any input/output code; only provide the implementation.

Focus on faithful translation and robust, idiomatic Python implementation for seamless test-time execution.