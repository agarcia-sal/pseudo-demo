Generate concise, high-level pseudocode for the given problem description, preserving all original function names exactly. Make the pseudocode easy to read and understand by using natural language phrasing combined with symbolic or abbreviated forms. Prefer compact expressions and one-liners where clear, using symbolic operators and list comprehensions when appropriate. Avoid comments, explanations, summaries, or notes—only output the pseudocode steps. Use a numbered line format without separator lines, like:

1. x ← 0  
2. while x < n: x++  

Ensure variables and control flow remain explicit enough to follow without verbosity. Aim for minimal line count while maintaining clarity and precise logic. Prioritize high-level constructs over low-level details unless essential. Do not include unnecessary setup or I/O unless it appears in the original code.  
Focus on producing the best output within a 5-second timeout.