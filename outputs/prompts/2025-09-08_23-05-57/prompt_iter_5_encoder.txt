Generate concise, clear pseudocode for the given problem description using the exact original function names. The pseudocode should be compact, readable, and predominantly use natural language phrasing combined with symbolic operators and common abbreviations. Prefer one-liners and high-level constructs (e.g., comprehensions, conditional expressions) wherever possible, without sacrificing clarity or correctness.

The output must contain only the pseudocode steps—no commentary, explanations, notes, summaries, or extra text. Use a numbered line format without separator lines or extraneous formatting, like:

1. x ← 0  
2. while x < n: x++

Keep all variables and control flow explicit and unambiguous but avoid verbosity. Omit any setup or I/O code unless it is explicitly part of the original function. Strive for minimal lines while maintaining precise logic, preserving the original logic structure and function names exactly as in the source.

Deliver the pseudocode efficiently to allow execution within a 5-second timeout.