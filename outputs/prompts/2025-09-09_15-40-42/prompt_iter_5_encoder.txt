Generate concise, compact, and high-level pseudocode from the given problem description and original code. Preserve the original function name exactly. Use natural language mixed with symbolic representations and common abbreviations for clarity and brevity. Prefer one-liners and minimal control structures, but break lines only for readability or necessity. Avoid comments, explanations, purpose statements, or any notes. Output only the pseudocode, structured with numbered lines as in this format:

1. x ← 0  
2. while x < n: x++  

Use clear but succinct variable naming aligned with the original code where possible. Represent data structures and operations naturally (e.g., lists, maps, conditionals, loops) but keep expressions terse. Do not include decorative separators or extra formatting beyond numbered lines. The goal is an easily understandable, directly executable high-level algorithmic sketch that balances natural language readability with brevity and rigor.

Your output must strictly be pseudocode—no narrative, no text beyond the lines of code. The function has a 5-second timeout; optimize clarity and conciseness within this constraint.