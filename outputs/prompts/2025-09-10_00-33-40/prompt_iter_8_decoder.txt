Translate the given pseudocode into a complete, executable Python 3 implementation that is clear, idiomatic, and efficient. Your translation must:

- Preserve all function and class names, parameters, and return types exactly as specified in the pseudocode.
- Fully define any classes or data structures introduced or implied by the pseudocode (including standard helpers like `ListNode` or `TreeNode`).
- Include all necessary standard library or typing imports that the code requires to run or be type-checked correctly.
- Handle edge cases implied by the pseudocode, especially proper initialization of mutable defaults or container variables.
- Avoid introducing any extra wrapper classes beyond those explicitly mentioned in the pseudocode.
- Ensure helper functions and data structure converters (e.g., list-to-linked-list) are included if relevant based on the pseudocode context or typical usage necessity.
- Write clean, readable Python code using best practices and type annotations where applicable.
- Do not refer to or assume undefined identifiers (e.g., `Solution`) unless they appear in the pseudocode, in which case define them completely.
- Your final output must be a standalone Python snippet suitable for direct execution or testing without any further modifications.
- Enclose the entire solution strictly within a Python code block as follows:

```python
# your full Python 3 code here
```

Pseudocode:
<insert pseudocode here>