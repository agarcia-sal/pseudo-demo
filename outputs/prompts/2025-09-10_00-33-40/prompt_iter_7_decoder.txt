Translate the provided pseudocode into fully functional, clear, and efficient Python 3 code, strictly preserving all function names, argument names, and signatures as given. If the pseudocode defines classes (e.g., `Solution`, `ListNode`), include their complete definitions accordingly so that the output is a self-contained snippet that can be executed independently. 

- Include all necessary imports (standard library or typing) that are implied by the pseudocode or required to make the code runnable.
- For data structures (e.g., linked lists), define any helper classes fully as needed.
- Do not nest your implementation inside any additional or external classes beyond whatâ€™s specified.
- Write clean, idiomatic Python code prioritizing readability and correctness, while maintaining reasonable efficiency for typical inputs.
- Avoid referencing undefined entities, especially `Solution`, unless explicitly defined in the pseudocode. If `Solution` is part of the pseudocode, define it fully.
- Your output must be a standalone Python script that can be run or tested without modifications.
- Enclose your entire Python code solution strictly within triple backticks followed by `python`:

```python
# Your complete Python implementation here
```

Pseudocode:
<insert pseudocode here>