Generate concise, easy-to-read pseudocode directly from the problem description, preserving all original function names exactly as given. Use mostly one-liners and symbolic notations with natural language for clarity and brevity, avoiding any explanatory comments, summaries, or overview text. Keep the pseudocode high-level and compact, expressing control flow with shortened constructs and minimal verbosity. Structure the output as numbered lines like this:

1. x ← 0  
2. while x < n: x++  

Do not add separator lines or headings. Favor symbolic operators and abbreviations, but always keep readability. Represent data types and collections naturally (e.g., “let A be array of integers”, “for i in 0 to n - 1:”). Include all key steps necessary to implement the algorithm logically and with the same function name and signature as in the original problem. Avoid expanding code into detailed low-level steps unnecessarily; instead, summarize repeated or clear patterns concisely. The output should be solely the pseudocode itself, nothing else.