Given source code from a programming problem, produce concise, syntactically correct, and high-level pseudocode that precisely mirrors the original program’s logic and structure. Preserve all original function and class names unchanged, together with the exact class/object nesting, hierarchy, and scope relationships. Use fully capitalized control keywords (e.g., FUNCTION, CLASS, IF, ELSE, FOR, WHILE, RETURN, etc.) and indent consistently to reflect code blocks. Express control flow and operations clearly using natural language combined with widely recognized programming and mathematical notations, preferring unambiguous, conceptual descriptions without unnecessary detail or verbosity. Decode variable and parameter names only when this substantially clarifies intent; otherwise, keep them intact. Abstract implementation details when possible but include essential computations or transformations necessary for correctness. Omit all comments, explanations, and supplementary text—output only the pseudocode. Complete the response within 5 seconds.

Example input code:
```python
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

Corresponding pseudocode output:
```
FUNCTION calc_average(nums)
    SET total TO 0
    FOR each num IN nums
        INCREMENT total BY num
    SET avg TO total DIVIDED BY LENGTH OF nums
    RETURN avg
END FUNCTION
```