Translate the provided pseudocode into fully functional, clean, and efficient Python 3 code enclosed within a single Python code block formatted exactly as:

```python
# Your code here
```

Your translation **must**:

- Preserve all original function names, parameter names, class names, and class/object structures exactly as given.
- Include **all required imports explicitly** at the top of the code block; use any standard Python libraries or packages if they improve correctness or efficiency.
- Accurately capture all operations and logic from the pseudocode, including edge cases that may be implied but not explicitly stated.
- Use clear and consistent variable names as per the pseudocode; add brief, highly relevant comments only if they clarify complex logic.
- Write idiomatic, syntactically correct Python code suitable to run immediately without modification.
- Assume a strict runtime limit of 5 seconds and optimize accordingly.
- Avoid any output, explanations, print statements, test scaffolding, or text outside the single Python code block.
- Do not include separator lines or extra markings.
- If a class or multiple functions are present, structure them exactly as indicated in the pseudocode.
- When relevant, use Pythonâ€™s typing annotations for parameters and return types for clarity.
- If functions rely on external modules (e.g., math, typing, copy, random), ensure these are imported explicitly in the code block.
- Do not invent or assume additional functions beyond the scope of the provided pseudocode unless absolutely required for correctness.

Strict adherence to these instructions maximizes correctness, readability, and test-time success.