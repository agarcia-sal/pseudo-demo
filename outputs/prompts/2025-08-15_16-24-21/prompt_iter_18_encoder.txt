Generate concise, easy-to-read pseudocode for the given problem description that balances natural language with symbolic notation and common abbreviations. Write in a compact, high-level style favoring mostly single-line statements without losing clarity. Number steps sequentially as:

1. x ← 0  
2. while x < n: x++  

Use minimal but clear keywords, no explanations, comments, summaries, or extra formatting (including no separator lines). Represent variables, assignments, loops, conditionals, and data structures in a natural, succinct way that stands on its own and is easy to follow. Use consistent style and punctuation, blending natural phrasing with symbolic logic. For complex conditions or control flow, combine where readable. Prefer simple phrases like “read n”, “let A be vector”, “for i in 0 to n-1”, “if condition then ...”, and “print result”.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A