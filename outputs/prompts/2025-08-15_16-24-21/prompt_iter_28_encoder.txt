Generate concise, easy-to-read pseudocode for the given problem description, using mostly natural language enhanced by clear symbolic notation and standard abbreviations. Write in a compact, high-level style favoring short, single-line statements while maintaining clarity. Number each step sequentially starting from 1, following the exact format below (no extra formatting or explanations):

1. x ← 0  
2. while x < n: x++  

Use minimal keywords without comments, summaries, or notes. Express variables, loops, conditions, assignments, functions, and data structures naturally but succinctly. Prefer clear one-liners and consistent style with common mathematical and programming symbols (e.g., ← for assignment, mod for remainder, ≤, ≠, etc.). Present loops and conditionals in-line when simple; use indentation and multiple lines only if necessary for readability. Avoid verbose phrases; use brief phrases like “let x be integer,” “read n,” “for i in 0 to n-1,” “if condition then action,” “print result,” etc.

Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A