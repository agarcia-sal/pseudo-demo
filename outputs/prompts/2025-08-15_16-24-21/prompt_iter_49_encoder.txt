Generate concise, clear pseudocode for the given problem description, combining natural language with symbolic notation and common abbreviations. Write in a compact, high-level style, favoring single-line statements wherever possible without sacrificing readability. Number each step sequentially starting from 1, as in:

1. x ← 0  
2. while x < n: x++  

Use minimal keywords only—no explanations, comments, summaries, or extra formatting (no separator lines). Represent variables, conditions, loops, assignments, functions, and data structures naturally but succinctly. Prefer constructive, imperative statements expressed plainly using familiar constructs (e.g., for, while, if, let, read, print, assign, function). Use consistent style and concise syntax that anyone with basic programming knowledge can understand instantly. The output should be a self-contained, easy-to-read pseudocode solution reflecting the original logic in a streamlined manner.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A