Generate concise, clear, and easy-to-read pseudocode for the given problem description using mostly natural language combined with symbolic notation and standard abbreviations. Write the pseudocode in a compact, high-level style using mostly single-line statements without sacrificing clarity or completeness. Number each step sequentially, with the format:

1. x ← 0  
2. while x < n: x++

Represent variables, assignments, loops, conditions, and data structures naturally and succinctly. Use simple keywords like read, let, if, for, while, print, function, return, and standard symbols for operators. Avoid verbose explanations, comments, summaries, or extra formatting; produce purely the pseudocode. Use natural phrasing such as “let A be vector of integers” or “for i in 0 to n-1”. Prefer minimal keywords and consistent style without ambiguous shorthand.

Output exact, self-explanatory pseudocode that stands alone, focusing on clarity through brevity and natural language flow. No separator lines or decorations.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A