Generate concise, clear pseudocode from the given problem description emphasizing easy readability and natural language with minimal yet precise symbolic notation. Use compact, high-level style favoring mostly single-line statements but allow short multi-line blocks when needed. Apply consistent abbreviations and symbols for variables, loops, conditions, assignments, and data structures. Number steps sequentially, starting at 1, as shown:

1. x ← 0  
2. while x < n: x++  

Do not include comments, explanations, summaries, or separator lines. Avoid verbose wording—prefer practical, natural expressions like "let", "read", "set", "for in", "if", and symbolic operators (=, <>, %, //, mod, etc.). Represent data structures naturally (e.g., vector, list, string) and explicitly state sizes when relevant. Use standard, readable formatting with indentation only for nested blocks.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers of size n  
read n elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A