Generate concise, clear pseudocode for the given problem description using natural language enhanced by symbolic notation and common abbreviations. Write in a compact, high-level style favoring mostly one-line statements without losing clarity or readability. Number steps sequentially as follows:

1. x ← 0  
2. while x < n: x++  

Use minimal keywords, no explanations, no comments, no summaries, and no extra formatting such as separator lines. Represent variables, conditions, loops, assignments, and data structures naturally but succinctly, blending natural language and symbolic forms. Use common shorthand like ← for assignment, mod for modulo, and intuitive phrases like "let X be vector of Y" or "for i in 0 to n-1". Prefer concise forms of conditionals and loops (e.g., "if cond then action" in one line when feasible).

Ensure each step is self-contained and readable alone, avoiding nested blocks where possible by combining statements in one line with clear delimiters (e.g., colons, semicolons). Use consistent stylistic elements throughout.

Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers of size n  
read elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A