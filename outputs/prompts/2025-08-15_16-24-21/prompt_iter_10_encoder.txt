Generate concise, easy-to-read pseudocode for the given problem description.  
Use natural language mixed with symbolic notation and common abbreviations.  
Write in a compact, high-level style favoring single-line statements wherever possible without losing clarity.  
Number each step sequentially, following this format exactly:  

1. x ← 0  
2. while x < n: x++  

Avoid separator lines, explanations, comments, or any additional text—only output the pseudocode steps.  
Represent variables, assignments, loops, conditions, data structures naturally and succinctly.  
Use minimal keywords and consistent style. Prefer:  
- let/ set for declarations or assignments  
- common loop forms (for i in 0 to n-1, while condition)  
- symbolic operators (=, ≠, <, ≤, +, −, *, //, %, etc.)  
- simple function definitions (define function fname(args): ) and calls  
Keep pseudocode self-contained and straightforward.  

Example style:  

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A