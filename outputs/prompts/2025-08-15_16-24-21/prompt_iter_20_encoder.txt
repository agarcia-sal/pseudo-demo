Generate concise, clear, and high-level pseudocode for the given problem description, using natural language blended with symbolic notation and common abbreviations. Favor brevity and readability by using mostly one-line statements and avoiding unnecessary verbosity while preserving clarity. Number each step sequentially like this:

1. x ← 0  
2. while x < n: x++

Define variables clearly but shortly, use natural expressions for data structures and control flow (loops, conditions, assignments). Use intuitive shorthand such as ← for assignment, mod for modulo, and simple keywords like let, read, print, for, while, if, else, return, function. Avoid comments, explanations, summaries, or any extra formatting (no separator lines, no blank lines).

The pseudocode must be self-contained, understandable alone, and use consistent styling throughout.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A ← n  
read n elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A