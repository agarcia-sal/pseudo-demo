Generate concise, clear, and high-level pseudocode for the given problem description. Use brief natural language combined with symbolic notation and common abbreviations. Prefer single-line statements and compact constructs without losing readability. Number each step sequentially as:

1. x ← 0  
2. while x < n: x++

Express variables, assignments, conditions, loops, and data structures naturally yet succinctly. Minimize keywords and avoid explanations, comments, summaries, or redundant formatting. Use natural language phrasing like “let,” “read,” “set,” “for,” and “if” but keep lines short and consistent. Represent loops in compact forms (e.g., “for i in 0 to n-1:” or “while condition: statement”) and preferred symbolic operators (“=”, “≠”, “←”, “+”, “%”).

The pseudocode must be self-contained, easy to follow, and concise, balancing natural expression with symbolic terseness. Do not include separators or extra sections.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i in 0 to n-1:  
 set min_i ← i  
 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
 swap A[i], A[min_i]  
print all elements of A