Generate concise, high-level pseudocode from the given problem description that is easy to read and self-explanatory. Use natural language blended with symbolic notation and common abbreviations. Favor brevity and clarity by expressing logic in compact one-line statements whenever possible, using sequential numbering for each step as in the format:

1. x ← 0  
2. while x < n: x++  

Use consistent minimal keywords and straightforward notation for variables, assignments, loops, conditions, and data structures. Represent data types naturally (e.g., “let A be vector of integers”), indicate sizes or ranges succinctly, and prefer expressions like “for i in 0 to n-1”, “if x = y”, and “print result”. Do not include comments, explanations, summaries, or extra formatting such as separator lines. Output only the pseudocode relevant to solving the problem, focusing on clarity through simplicity and uniform style.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j in i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A