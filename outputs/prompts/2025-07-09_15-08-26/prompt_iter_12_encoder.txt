Generate concise pseudocode from the given problem description. The pseudocode must be easy to read and understand, using predominantly natural language with symbolic representations and abbreviations, while remaining compact and high-level. Do not include purpose statements, explanations, summaries, or clarifying notes—output only the pseudocode steps. Prefer one-line instructions where possible, combining control statements and actions succinctly. Format each line starting with an incrementing step number, followed by a space and the instruction, for example:

1. x ← 0  
2. while x < n: x++  

Avoid separator lines or decorative characters. Use clear variable assignments, loops, conditionals, and function declarations as needed, mirroring typical pseudocode conventions but emphasizing natural phrasing and brevity. Aim for clarity first, then minimalism. The pseudocode should directly reflect the problem logic in a streamlined manner, suitable for fast comprehension and translation into code.