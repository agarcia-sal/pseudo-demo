Generate clear, concise pseudocode from the given problem description, prioritizing readability and understandability. Use mostly natural language combined with symbolic notation and standard abbreviations for a compact, high-level representation. Present the pseudocode as numbered steps, each starting with the line number followed by a period and a space, then the instruction. Prefer single-line statements for simple constructs; for loops or conditionals that naturally require multiple steps, indent subsequent lines by one tab. Avoid any comments, explanations, summaries, or notes. Do not include separator lines or extraneous formatting. The output should be strictly pseudocode reflecting the logic and flow of the problem using clear variable and structure naming. Follow this format exactly:

1. x ← 0  
2. while x < n: x++  
3. if A[x] > 0: print A[x]  

For example:

in function main  
let n be integer  
read n  
let A be vector of integers of size n  
read n elements into A  
for i from 0 to n - 1  
	tab set min_i ← i  
	tab for j from i+1 to n - 1  
	tab	tab if A[j] < A[min_i]: min_i ← j  
	tab swap A[i], A[min_i]  
print all elements of A

Keep the pseudocode compact, high-level, and easily comprehensible within a 5-second response time.