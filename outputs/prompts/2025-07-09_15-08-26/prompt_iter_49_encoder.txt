Generate clear, concise, and high-level pseudocode that directly implements the problem’s algorithm in readable natural language combined with standard symbolic notation and common abbreviations.  
Prefer compact one-line instructions that merge control flow and actions when it preserves clarity and brevity. Use concise declarations (e.g., “let x be integer,” “let A be vector of integers”), direct assignments, loops, conditionals, and functions as needed.  
Number each line starting at 1, followed by a space and the instruction, for example:

1. x ← 0  
2. while x < n: x++

Do not include any summaries, explanations, comments, clarifications, separator lines, or decorative formatting; output only the numbered pseudocode lines with no extra text.  
Favor natural phrasing that balances readability with compactness, minimizing verbosity while ensuring the logic flows intuitively. Use common control flow shorthand (e.g., “if condition: action”) and symbolic forms to keep code concise but understandable.  
Output must be solely the numbered pseudocode lines — no additional remarks, markup, or output beyond the pseudocode itself.