Generate concise, clear pseudocode directly reflecting the problem logic. Use predominantly natural language with symbolic representations and abbreviations to keep it compact and high-level. Avoid any explanations, summaries, purpose statements, or clarifying notes—output only the numbered pseudocode steps. Prefer short one-line instructions combining control flow and actions succinctly. Number each line starting at 1 with a period and a space, for example:

1. x ← 0  
2. while x < n: x++

Use clear variable declarations, assignments, loops, conditionals, and function definitions as needed, in typical pseudocode style but more natural and compact. Do not include separator lines, decorative characters, or formatting beyond simple line numbering. Emphasize natural phrasing and readability first, then minimalism, aiming for fast comprehension and ease of translation to code. For example:

in function main  
let n be integer  
read n  
let A be vector of integers of size n  
read elements into A  
for i from 0 to n-1  
  set min_i ← i  
  for j from i+1 to n-1: if A[j] < A[min_i] set min_i ← j  
  swap A[i], A[min_i]  
print all elements of A