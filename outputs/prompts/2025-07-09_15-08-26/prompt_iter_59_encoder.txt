Generate clear, concise pseudocode that directly and compactly implements the problem logic using mostly natural language enriched with standard symbolic notation and common abbreviations. Number each line starting at 1 followed by a space and a single instruction; favor one-line statements that combine control flow and actions whenever clarity and correctness remain intact (e.g.,  
1. x ← 0  
2. while x < n: x++  
). Declare variables succinctly (e.g., "let x be integer," "let A be vector of integers"), use direct assignments, loops, conditionals, and function definitions only as needed. Use indentation solely to show nesting clearly when unavoidable; otherwise, prefer flat, one-line constructs to keep the code compact and readable. Avoid any summaries, explanations, comments, formatting decorations, or separator lines; the output must be exclusively numbered pseudocode lines in the style demonstrated below. Prioritize readability through natural phrasing but maintain brevity by minimizing verbosity. The pseudocode should be easily understandable even if compact.  
Example style:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive: if A[min_i] > A[j]: set min_i to j  
 swap A[i], A[min_i]  
print all elements of A