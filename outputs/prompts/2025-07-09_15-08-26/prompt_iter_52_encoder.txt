Generate concise, easy-to-read, high-level pseudocode that implements the problem logic clearly using mostly natural language enhanced by standard symbolic notation and common abbreviations.  
Produce primarily one-line statements combining control flow and actions to keep the pseudocode compact without losing clarity or correctness.  
Number each line starting at 1, followed by a space, then the pseudocode instruction, for example:

1. x ← 0  
2. while x < n: x++  

Include succinct declarations (e.g., "let x be integer," "let A be vector of integers"), assignments, loops, conditionals, and function definitions as needed.  
Favor natural phrasing to maximize readability but keep all statements brief and precise. Use symbolic operations and abbreviations where unambiguous.  
Indent only when necessary to represent nested blocks (such as a loop or conditional containing multiple statements); otherwise, prefer single-line constructs.  
Do not include any summaries, explanations, comments, clarifications, or decorative formatting. Output exclusively numbered pseudocode lines and nothing else—no section breaks, separator lines, or notes.  
Use the exact format shown and avoid verbose or overly minimal stylings.  
The output must be solely the numbered pseudocode lines following the above style and requirements.