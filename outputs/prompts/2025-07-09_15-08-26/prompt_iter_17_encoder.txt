Generate concise, clear, and high-level pseudocode from the problem description, using mostly natural language with symbolic notation and common abbreviations. Write compact one-line instructions whenever possible, combining control flow statements and actions succinctly. Number each line starting from 1, followed by a period and a space, then the pseudocode instruction, for example:

1. x ← 0  
2. while x < n: x++  

Avoid any explanatory text, purpose statements, summaries, or clarifying notes—output only the pseudocode steps. Do not include decorative or separator lines.

Use common pseudocode constructs—variable declarations, assignments, loops, conditionals, function definitions—in a style that balances readability and brevity. Favor natural phrasing without verbose language, and ensure pseudocode directly models the problem logic in a streamlined fashion for easy comprehension and direct translation into code. Keep indentation minimal but meaningful for nested blocks.  

Example style to match:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A