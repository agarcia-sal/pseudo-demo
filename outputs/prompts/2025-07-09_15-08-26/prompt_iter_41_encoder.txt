Generate concise, high-level pseudocode that implements the core logic clearly and compactly using mostly one-line instructions, symbolic notation, and common abbreviations. Write in natural, easy-to-read language that balances brevity with clarity. Include variable and data structure declarations (e.g., "let x be integer," "let A be vector of integers"), direct assignments, loops, conditionals, and function definitions as needed, avoiding verbosity. Number each line starting at 1, followed by a space and the instruction, for example:

1. x ← 0  
2. while x < n: x++

Use indentation to denote code blocks inside loops or conditionals only when necessary for readability; otherwise, condense control flow and statements on the same line without losing clarity. Do not include summaries, explanations, comments, or formatting decorations. Avoid separator lines or notes. Output must be only the numbered pseudocode lines—no extra text or explanation.

Example style the pseudocode should follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A