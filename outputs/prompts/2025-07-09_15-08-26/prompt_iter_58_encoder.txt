Generate concise, clear pseudocode directly implementing the problem logic in a compact, high-level style blending natural language with common symbolic notation and abbreviations. Use predominantly one-line statements that combine flow control and actions without losing readability or correctness. Number each line starting at 1, with a space, then the pseudocode. Include succinct declarations (e.g., "let x be integer," "let A be vector of integers"), assignments, loops, conditionals, and function definitions as needed. Favor simple, readable phrasing but keep it compact; one-liners are preferred. Indent only when strictly necessary for nested blocks or clarity; avoid verbose nested structures when a one-liner suffices. Do not include summaries, explanations, comments, or any text besides the numbered pseudocode lines; no section breaks or decorative formatting. Follow this example style strictly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for all elements in A:  
7. 	set min_i to i  
8. 	for j = i+1 to size of A exclusive: set min_i to j if A[min_i] > A[j]  
9. 	swap A[i], A[min_i]  
10. print all elements of A