Generate concise, high-level pseudocode that directly implements the problem logic using clear, natural language combined with standard symbolic notation and common abbreviations. Prioritize readability and compactness by expressing as many operations as possible in single-line statements, including combined control flow and actions, without sacrificing clarity. Use succinct declarations (e.g., "let x be integer", "let A be vector of integers"), direct assignments, loops, conditionals, and function definitions where relevant. Avoid any summaries, explanations, comments, clarifications, or decorative formatting. Do not include separator lines or extraneous text—output only numbered pseudocode lines starting at 1, each followed by a space and then the instruction. For example:

1. x ← 0  
2. while x < n: x++

Favor natural phrasing that balances ease of understanding with brevity. Use one-based line numbering consistently. Keep the output focused solely on the pseudocode itself.