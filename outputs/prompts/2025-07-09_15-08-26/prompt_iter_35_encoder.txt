Generate clear, concise, and compact pseudocode that precisely implements the problem logic using mostly natural language combined with standard symbolic notation and common abbreviations. Prefer one-line instructions that integrate control flow and actions when it maintains clarity and brevity. Number each line starting at 1, followed by a space and the instruction, for example:

1. x ← 0  
2. while x < n: x++  

Use succinct declarations (e.g., "let x be integer," "let A be vector of integers"), direct assignments, loops, conditionals, and function definitions as needed. Write pseudocode in a high-level style, mixing symbolic and natural expressions to maximize readability and compactness. Avoid explanations, summaries, comments, notes, or decorative formatting. Do not include separator lines or any lines other than numbered pseudocode.

Focus on delivering only the numbered pseudocode lines that are straightforward, easy to understand, and maintain a balanced natural flow with well-known programming conventions.

Example style to emulate:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  if A[min_i] > A[j]: set min_i to j  
 swap A[i], A[min_i]  
print all elements of A