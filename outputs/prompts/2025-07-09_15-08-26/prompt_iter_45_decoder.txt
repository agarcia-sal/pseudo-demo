```python
Translate the entire provided pseudocode into a single, fully self-contained, and immediately runnable Python 3 program. Your output must be **only** the complete Python code, enclosed precisely within one Python code block as:

```python
# your full Python 3 code here
```

Follow these strict guidelines to maximize correctness, efficiency, and idiomatic clarity:

- Use `input()` for **all** input reading exactly as specified, with no prompt strings or additional text.
- Implement absolutely every explicit and implicitly required step in the pseudocode, covering all edge cases and input constraints faithfully.
- Output exactly as dictated, with no extra prints, debugging statements, explanations, or comments except minimal inline comments for complex logic if necessary.
- Employ clean, readable, and idiomatic Python 3 code following best practices for performance and robustness.
- You may freely import and utilize any **standard library or widely accepted third-party Python packages** (e.g., `collections`, `heapq`, `math`, `itertools`, `bisect`, `numpy`, etc.) that help create clearer, faster, or more elegant solutions within a strict runtime cap of 5 seconds.
- Keep your implementation fully self-sufficient—ready to run flawlessly when pasted into any Python 3 environment without any edits or additional setup.
- Do not include separator lines, textual descriptions, or any output outside the single Python code block.
- Ensure your program is robust against malformed inputs as per pseudocode instructions or common interpretation; handle exceptions only if the pseudocode implies it.
- Focus on maximizing fidelity to the pseudocode logic, output formatting, edge case coverage, and runtime efficiency simultaneously.

This refined prompt prioritizes strict adherence to input/output protocols, idiomatic style, comprehensive interpretation of pseudocode semantics (including subtle ones), and robust yet elegant use of Python’s ecosystem, to consistently achieve maximal test-time accuracy and speed.
```