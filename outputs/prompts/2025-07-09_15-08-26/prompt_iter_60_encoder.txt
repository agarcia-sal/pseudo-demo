Generate concise, high-level pseudocode that clearly implements the problem logic using predominantly natural language combined with common symbolic notation and standard abbreviations.  
Output only numbered lines starting at 1, each line with a single pseudocode statement or a control structure header optionally followed by an inline simple action, to keep code compact yet readable.  
Prefer one-line statements wherever possible, merging control flow and actions (e.g., loops with inline increments, conditionals with direct assignments). Use indentation minimally and only to distinguish nested blocks when the logic cannot fit in one line.  
Include succinct declarations (e.g., "let x be integer," "let A be vector of integers"), assignments, conditionals, loops, and function definitions as needed.  
Avoid comments, explanations, summaries, decorative formatting, or separator lines; produce only numbered pseudocode lines exactly as specified.  
Favor natural phrasing for readability but keep pseudocode succinct and direct. Avoid verbose or overly formal constructs.  
Do not prefix with section titles or output extra text—only the final numbered pseudocode lines.  
Follow this number and formatting style precisely:  
1. x ← 0  
2. while x < n: x++  
Use consistent common symbols (← for assignment, ++ or -- for increments/decrements, typical logical operators), and keep line length moderate to aid readability.