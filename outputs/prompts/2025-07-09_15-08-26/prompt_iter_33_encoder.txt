Generate clear, concise pseudocode that directly implements the problem logic in a compact, high-level style using mostly natural language combined with standard symbolic notation and common abbreviations. Write mostly one-line instructions that blend control flow and actions when this keeps the code brief but readable. Number each line starting at 1, followed by a space and the instruction, for example:

1. x ← 0  
2. while x < n: x++

Use succinct declarations like "let x be integer," "let A be vector of integers," direct assignments, loops, conditionals, and function definitions as needed. Prefer natural phrasing that balances clarity and brevity, avoiding verbosity. Do not provide summaries, explanations, comments, clarifications, or decorative formatting. Avoid separator lines or any notes. Output only the numbered pseudocode lines—no extra text or explanation. Keep indentation or spacing minimal but sufficient for understanding nested blocks, using consistent style as shown below.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j=i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A