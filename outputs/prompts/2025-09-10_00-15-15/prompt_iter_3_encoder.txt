Generate concise, clear pseudocode from the given problem description, preserving all original function names exactly.  
Write pseudocode that is readable and intuitive, blending natural language with succinct, high-level programming constructs.  
Use symbolic assignments (←, +=, -=, etc.) and prefer one-liners for simple statements and control flow when possible (e.g., `while condition: action`).  
Indent only multi-statement blocks minimally for clarity, avoiding verbose variable names, comments, explanations, or summaries.  
Do not include any notes, purpose statements, or separator lines.  
Follow this format exactly:

1. var ← value  
2. while condition: action

Make the pseudocode compact but easy to follow; favor clarity over extreme terseness where needed.  
Focus on a structured, logical flow that programmers can quickly grasp and implement.  
Example:

in function exampleFunc  
let n be integer  
read n  
let A be vector of integers of size n  
for i from 0 to n-1: read A[i]  
sum ← 0  
for x in A: sum += x  
print sum