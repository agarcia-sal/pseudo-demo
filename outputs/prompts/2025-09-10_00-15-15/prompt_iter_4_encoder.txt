Generate clear, concise pseudocode from the given problem description. Retain all original function names exactly as in the source. Use natural language combined with compact, high-level programming constructs and symbolic operators (e.g., ←, +=, -=, ==, !=). Prioritize single-line statements and inline simple control structures (e.g., `if condition: action`, `while cond: action`). When multiple steps are needed, use indentation but keep blocks minimal and readable. Avoid comments, explanations, summaries, or notes—output only pseudocode. Do not use separator lines or verbose variable names—use clear abbreviations where unambiguous. Follow this precise numbered format:

1. x ← 0  
2. while x < n: x++  

Example output style:  
in function exampleFunc  
let n be integer  
read n  
let A be vector of integers with size n  
for x in A: read x  
sum ← 0  
for v in A: sum += v  
print sum

Your pseudocode should be intuitive for programmers, easy to read, and compact enough to complete generation within 5 seconds.