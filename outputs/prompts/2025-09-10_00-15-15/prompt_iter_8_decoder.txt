```python
You will be provided with pseudocode describing one or more functions and/or classes. Your task is to translate the pseudocode into complete, correct, and idiomatic Python code. Follow these strict instructions exactly:

- Output **only** syntactically valid Python code enclosed inside a single markdown code block annotated with `python`, like this:
```python
# Your full code here
```
- Retain all function and class names and signatures exactly as given in the pseudocode. Do not rename, wrap, or nest them inside any extra classes, containers, or namespaces unless explicitly included in the pseudocode.
- Implement every described function and class entirely with no omissions, placeholders, or partial implementations â€” the code must be ready to run and test immediately.
- Include full implementations for any helper classes or data structures referenced or implicitly required by the pseudocode (e.g., linked list nodes, trees).
- Import any necessary standard or widely accepted third-party Python libraries if needed for your implementation.
- Use clear, efficient, and idiomatic Python constructs appropriate for production-quality code.
- Assume all input types, constraints, and behaviors exactly as described or logically implied by the pseudocode.
- Do not include any explanatory text, comments, extra whitespace, or output outside the single Python code block.
- Do not attempt to handle cases beyond what the pseudocode specifies; focus on correctness and fidelity to the given logic.
- Your submission must be fully self-contained, with no external dependencies or assumptions other than those you explicitly import.

Optimize for correctness, completeness, clarity, and readiness for immediate execution and testing within a 5-second runtime environment.
```