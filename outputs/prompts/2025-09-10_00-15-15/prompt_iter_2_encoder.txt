Generate concise, readable pseudocode from the given problem description. Keep all original function names unchanged. Use natural language combined with compact, high-level programming constructs. Prioritize one-liners, symbolic assignments (←, +=, -=, etc.), and abbreviations where clear. Do not include any purpose statements, summaries, explanations, comments, or notes—output only the pseudocode itself. Maintain clarity and flow by formatting control structures inline when simple (e.g., `while condition: action`). Follow this format precisely:

1. var ← value  
2. while condition: action

If needed, use indentation for multi-step blocks, but keep code minimal. Avoid separator lines, verbose variable names, or expanded explanations. Your output should be intuitive to programmers but succinct enough to fit within typical time constraints (5 seconds). For example:

in function exampleFunc  
let n be integer  
read n  
let arr be list of integers with size n  
for i from 0 to n-1: read arr[i]  
set sum ← 0  
for x in arr: sum += x  
print sum