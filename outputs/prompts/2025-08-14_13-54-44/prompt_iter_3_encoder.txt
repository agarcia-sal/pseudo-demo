Generate concise, clear, and easy-to-understand pseudocode from the given problem description. Use natural language combined with symbolic notations and abbreviations to keep the pseudocode compact and high-level. Prefer concise one-liners for simple steps and loops. Structure control flows with indentation but keep lines brief. Avoid explanations, comments, summaries, or any non-pseudocode text—output only the pseudocode steps. Follow this format precisely:

1. x ← 0  
2. while x < n: x++  

Use constructs like `let`, `read`, `for`, `if`, `while`, `print`, `set`, and simple operations (`+`, `-`, `*`, `//`, `mod`, comparisons). Represent conditions and assignments compactly but clearly. Use meaningful, short variable names where possible. Do not use separator lines or extra markup. The pseudocode should balance readability and brevity and be fully generated within a 5-second timeout.