Generate concise, compact, and easy-to-read pseudocode from the given problem description. The pseudocode should be high-level, using mostly natural language mixed with symbolic notation and standard abbreviations. Prefer single-line statements where possible; condense conditions and loops without sacrificing clarity. Use common control structures (if, else, for, while) and clearly assign/update variables with arrows (←). Avoid any explanation, commentary, or summary—output only the pseudocode steps.

Structure the output as numbered lines starting at 1, following this format precisely:

1. x ← 0  
2. while x < n: x++

Use consistent indentation for nested blocks, minimal but sufficient for readability. Represent sequences, collections, and common operations naturally (e.g., “read n”, “for i in 1 to n”, “print result”). Use symbolic math operators and concise expressions wherever appropriate.

Do not insert any extra text, titles, or separators—only the numbered pseudocode steps in a clean, consistent style. The goal is a balance of clarity, brevity, and natural phrasing that can be read and understood easily within a few seconds.