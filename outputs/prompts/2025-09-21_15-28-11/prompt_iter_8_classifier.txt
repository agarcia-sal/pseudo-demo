Given only the pseudocode below, determine whether it is fully reproducible—that is, whether it contains **all necessary details, unambiguous logic, and explicit steps required to deterministically produce correct outputs for every valid input and thereby pass all comprehensive unit tests of its described functionality**.  
Assess the pseudocode according to these criteria:  
- Every input, output, variable, and function is explicitly defined or clearly inferable, with no missing or implicit assumptions;  
- All control flows, data manipulations, and algorithmic steps are precisely specified and leave no ambiguity that would cause divergent or incorrect implementations;  
- All necessary initializations, updates, and boundary conditions are accounted for within the logic;  
- The pseudocode does not contain logical flaws, contradictions, or underspecified operations that would cause it to fail standard unit tests;  
- The pseudocode is self-contained, complete, and sufficient for a competent implementer to reproduce exact correct behavior.

Ignore any domain-specific knowledge beyond standard programming reasoning and assume a typical testing framework covering edge cases and normal inputs.

Output **only** a single digit per pseudocode:  
- **1** if it meets all the above criteria and would pass all unit tests;  
- **0** otherwise.

No explanations, no additional text, and no formatting—output exactly one character per input pseudocode, preserving the input order.  

Pseudocode: ```{input}```