Given the pseudocode below, determine whether it is fully reproducible—meaning it will **unfailingly pass all relevant unit tests for its specified functionality**—by rigorously evaluating if it meets every criterion below simultaneously:  
  
- **Complete**: All inputs, outputs, variables, data structures, and helper functions are explicitly declared; no needed components or steps are missing or implied without clarification.  
- **Unambiguous**: Every operation, condition, loop, and assignment has clearly defined semantics without contradictory or vague expressions that could lead to multiple interpretations.  
- **Deterministic and logically consistent**: The control flow and data manipulations produce exactly one well-defined result for every valid input; no conflicting states, undefined variables, or infinite loops exist.  
- **Sufficiently detailed**: Initializations, updates, boundary conditions, and edge cases are all explicitly handled; no assumptions depend on external context or prior knowledge.  
- **Self-contained**: No unstated dependencies, side effects, or external state affect its correctness or completeness.  
  
Your judgment must be based strictly on the provided pseudocode text, ignoring external commentary or example outputs. Respond only with a single digit per input pseudocode:  
- Output **1** if and only if the pseudocode meets *all* the above conditions and can be relied upon to pass all unit tests unconditionally.  
- Output **0** otherwise.  
  
Return no text, no explanation, and no formatting—only the sequence of 1s and 0s exactly matching the input pseudocode order.  
  
Pseudocode: ```{input}```