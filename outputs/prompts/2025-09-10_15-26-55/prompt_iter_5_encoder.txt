Generate concise, clear, and readable pseudocode directly from the given problem description. Keep it high-level and compact by mixing natural language with symbolic notations and abbreviations. Do not include any explanations, summaries, comments, or meta-statements—only the pseudocode steps. Maintain the exact function names as in the original code. Favor one-liners where clarity permits, using constructs like:

1. x ← 0  
2. while x < n: x++  

Structure pseudocode logically and consistently, using indentation to show blocks. Use simple control flow keywords (e.g., if, while, for, return) and data operations clearly. Avoid verbose or overly detailed implementation-specific code; focus on algorithmic essence. Do not insert separator lines or extraneous formatting. Your output should be solely the stepwise pseudocode implementation that a competent programmer could follow to reimplement the solution within a 5-second time budget.