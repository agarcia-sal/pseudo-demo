Generate concise, clear, and high-level pseudocode from the given problem description, using predominantly natural language keywords combined with standard symbolic operators and common abbreviations. Express logic in mostly one-line statements without comments or explanations. Use indentation only to show nested control flow clearly. 

Follow these guidelines:

- Use natural-language keywords (read, print, let, set, if, else, for, while, break, return, function) plus symbols (←, =, ≠, <, ≤, >, ≥, +, –, *, /, mod, div).
- Use short, meaningful variable names and standard abbreviations (cnt, idx, rv, tmp, len).
- Prefer compact, idiomatic control flow expressions (e.g., if cond: action else: action).
- Use high-level operations by naming standard routines concisely (e.g., sort A, split s by space, join list with "").
- Avoid unnecessary verbosity; favor clarity with minimal tokens per line.
- Number each line starting from 1, without extra formatting or separators.
- Do not add comments, summaries, or explanation lines.
- Do not add separator lines or extraneous formatting.
- Output only the numbered pseudocode lines complying with this exact format style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i in 0 to n–1:  
7.   set min_i ← i  
8.   for j in i+1 to n–1: if A[j] < A[min_i]: min_i ← j  
9.   swap A[i], A[min_i]  
10. print all elements of A