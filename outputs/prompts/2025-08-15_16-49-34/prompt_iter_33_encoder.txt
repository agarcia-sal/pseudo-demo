Generate concise, easy-to-read pseudocode directly from the problem description using clear, natural language with symbolic operators and standard abbreviations. Write mostly one-line statements combining brevity and clarity, expressing control flow simply and compactly without extra explanation, comments, or formatting.

Use these conventions:  
- Operations with keywords: read, print, let, set, if, else, for, while, break, return, function  
- Symbols: ←, =, ≠, <, ≤, >, ≥, +, –, *, /, div, mod  
- Variables: brief names (cnt, idx, rv, tmp, len)  
- High-level operations named succinctly (sort A, split s by " ", join list with "")  
- One-line control flow forms (e.g., if cond: action else: action)  
- Indent nested blocks only, no extra lines or separators  
- Number each line sequentially starting at 1, no extra marks or blank lines  

Output only the pseudocode lines in this form:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i in 0 to n–1:  
7.   set min_i ← i  
8.   for j in i+1 to n–1: if A[j] < A[min_i]: min_i ← j  
9.   swap A[i], A[min_i]  
10. print all elements of A