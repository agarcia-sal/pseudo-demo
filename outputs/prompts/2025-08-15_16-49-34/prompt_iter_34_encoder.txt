Generate clear, concise pseudocode directly from the problem description.  
Use mostly natural language mixed with standard symbols (←, =, ≠, <, ≤, >, ≥, +, –, *, /, mod) and common abbreviations (cnt, idx, rv, tmp, len).  
Write compact one-line statements combining assignments, conditions, loops, and expressions.  
Express control flow with minimal words and clear indentation to show nested blocks. Prefer these forms:  
- if cond: action else: action  
- for var in range: action  
- while cond: action  
Use brief variable names and concise high-level operations (e.g., sort A, split s by space, join list with "").  
Number each line from 1 without extra formatting or separators.  
Do not include comments, explanations, summaries, or additional formatting. Output only the numbered pseudocode lines.  
Aim for readability through natural language clarity balanced with brevity, fitting within a 5-second generation limit.  

Example style:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to n–1:  
8.   set min_i ← i  
9.   for j in i+1 to n–1: if A[j] < A[min_i]: min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A