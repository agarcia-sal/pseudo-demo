Translate the provided pseudocode into a single, efficient, idiomatic, and executable Python code snippet. Your output must be a **standalone Python code block** enclosed exactly like this:

```python
# your code here
```

with **no explanations, comments, extraneous whitespace, blank lines, or anything else** outside the code block.

Follow these strict guidelines:

- Use `input()` for input reading unless the pseudocode or input size strongly indicates using faster I/O like `sys.stdin.readline()` with stripping.
- Translate the pseudocode logic **exactly as specified**, but optimize for clarity, Python idioms, and performance using built-ins, comprehensions, unpacking, `itertools`, `collections`, `heapq`, `bisect`, `math`, or other standard libraries.
- Avoid redundant variables or computations, unnecessary loops, and verbose constructs.
- Use meaningful variable names derived from pseudocode identifiers when available; otherwise, choose clear, concise, and Pythonic variable names.
- Include necessary imports **only at the very top** and only those that are actually used.
- Ensure the code runs correctly immediately as-is without need for additional context or modification.
- Output must precisely match the pseudocode’s output format: no additional text, debugging, prompts, or separators.
- If the problem scale or nature calls for optimized I/O or algorithmic improvements, implement them accordingly.
- Do **not** include any output other than what the pseudocode specifies.

After this prefix, append the pseudocode to translate exactly as given. Your response should be **only the prompt** above—no solution or additional text.