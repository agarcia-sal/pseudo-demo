Generate clear, concise, and easy-to-read pseudocode directly from the given problem description. Use mostly one-line statements with natural language, symbolic shortcuts, and abbreviations for variables and operations. Write compact, high-level pseudocode showing control flow simply and clearly. Avoid comments, explanations, summaries, or any notes. Follow this exact style:

1. x ← 0  
2. while x < n: x++  

Prefer:

- One-liners with simple indentation for nested blocks  
- Symbols for assignments (←), comparisons (=, ≠), arithmetic (+, –, *, /, mod)  
- Common abbreviations (e.g., cnt, idx, rv)  
- Natural language keywords (read, print, let, set, for, if, else, while, break, return)  
- Minimal verbosity, directly expressing core logic and flow  

Do not use separator lines or extraneous formatting. Output only the pseudocode lines numbered sequentially starting at 1. Prioritize clarity and brevity within a 5-second generation limit.