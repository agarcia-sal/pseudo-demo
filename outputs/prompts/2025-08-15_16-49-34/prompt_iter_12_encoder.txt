Generate concise, clear, and easy-to-read pseudocode directly from the given problem description. Use mostly one-line statements combining natural language, symbolic operators (←, =, ≠, <, ≤, >, ≥, +, –, *, /, mod), and common variable abbreviations (e.g., cnt, idx, rv) to express core logic succinctly. Write compact, high-level pseudocode emphasizing straightforward control flow with minimal verbosity. Use natural language keywords such as read, print, let, set, for, if, else, while, break, return. Avoid comments, explanations, summaries, or notes. Number output lines sequentially starting from 1. Prefer simple indentation for nested blocks but keep statements primarily one-liners. Do not include separator lines or extraneous formatting.  
Output only the pseudocode. Follow this exact style:

1. x ← 0  
2. while x < n: x++

Example:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i ← i  
 for j ← i+1 to size of A – 1  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A