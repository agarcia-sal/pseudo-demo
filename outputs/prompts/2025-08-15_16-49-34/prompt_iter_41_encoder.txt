Generate concise, clear pseudocode directly from the given problem description, prioritizing readability with mostly natural language keywords and minimal but consistent symbolic notation. Use brief variable names and standard abbreviations. Write compact one-line statements for assignments, expressions, conditions, loops, and function definitions. Express control flow clearly but succinctly, using indentation only for nested blocks. Avoid any comments, explanations, or formatting beyond numbering lines sequentially starting from 1. Do not include separator lines or extra whitespace.

Use these conventions:  
- Natural language keywords like: let, read, print, if, else, for, while, break, return, function, in  
- Operators and symbols: ←, =, ≠, <, ≤, >, ≥, +, -, *, /, mod, div  
- Concise control flow like:  
  if cond: action else: action  
- Compact, high-level routine naming: sort A, split s by space, join list with ""  
- Brief variable names (cnt, idx, rv, tmp, len)  
- Prefer one-liners with indentation solely to denote blocks  

Output only the numbered pseudocode lines, examples:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. read n elements into A  
6. for i in 0 to n-1:  
7.   set min_i ← i  
8.   for j in i+1 to n-1: if A[j] < A[min_i]: min_i ← j  
9.   swap A[i], A[min_i]  
10. print all elements of A