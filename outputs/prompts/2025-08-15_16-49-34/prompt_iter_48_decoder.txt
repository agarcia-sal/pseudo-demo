Translate the given pseudocode into a single, clean, and self-contained Python script enclosed strictly within a triple-backtick Python code block (```python ... ```). Your translation must:

- Use plain `input()` for all input operations unless the pseudocode implies very large inputs, where `sys.stdin.readline()` may be used for efficiency.
- Avoid all explanatory comments, debug prints, prompts, blank lines, or any non-functional code—output only the exact code needed to implement the pseudocode’s logic.
- Faithfully preserve the pseudocode’s behavior while applying best-practice Python idioms, concise constructs (such as comprehensions, unpacking, and built-ins), and relevant standard libraries (e.g., `sys`, `math`, `collections`, `itertools`) or well-known third-party libraries only if they bring a clear benefit.
- Guarantee that the generated code is immediately runnable without requiring modifications or additional context.
- Optimize input/output speed and algorithmic efficiency so the code executes within 5 seconds on typical input constraints, avoiding redundant calculations or inefficient loops.
- Produce output exactly as defined by the pseudocode, with no extra text formatting or messages.
- Prioritize clarity together with performance: write elegant, straightforward, and maintainable code that avoids verbosity yet remains understandable.
- You may import any Python standard library or widely accepted third-party packages to maximize correctness and runtime efficiency, but keep dependencies minimal unless justified by significant gains.

Here is the pseudocode to translate: