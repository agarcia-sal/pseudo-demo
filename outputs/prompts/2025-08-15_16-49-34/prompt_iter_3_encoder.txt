Generate clear, concise, and easy-to-read pseudocode directly from the given problem description. Use a compact, high-level style that blends natural language with symbolic notation, prioritizing readability and clarity through minimal verbosity. Avoid comments, explanations, summaries, or any extraneous formatting. Output only the numbered pseudocode lines starting at 1, using mostly single-line statements with simple indentation for nested blocks. Use symbolic operators (← for assignment, =, ≠, <, > for comparisons; +, –, *, /, mod for arithmetic) and common variable abbreviations (e.g., idx, cnt, rv). Employ natural language keywords such as read, print, let, set, for, while, if, else, break, return. Express control flow clearly but tersely, e.g.:

1. x ← 0  
2. while x < n: x++  

Omit separator lines or any non-pseudocode text. Keep the pseudocode compact yet expressive enough to reflect all core logic and control structures, enabling easy human understanding within a short glance.