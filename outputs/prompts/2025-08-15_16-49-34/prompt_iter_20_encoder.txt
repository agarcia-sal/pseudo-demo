Generate brief, clear, and easy-to-read pseudocode directly from the given problem description. Use mostly concise one-line statements blending natural language with symbolic notation and common abbreviations for variables and operations. The pseudocode should be compact and high-level, focusing on core logic and control flow without verbosity or extra explanation. Avoid comments, summaries, or notes. Number lines sequentially starting at 1.

Follow these conventions:

- Use natural language keywords such as: read, print, let, set, for, if, else, while, break, return, function  
- Use symbolic operators for assignment (←), equality (=), inequality (≠), and arithmetic (+, –, *, /, mod)  
- Prefer standard abbreviations (e.g., cnt, idx, rv, len, tmp)  
- Format control flow with simple indentation and one-liners where feasible (e.g., if condition: action)  
- Define functions inline with 'function name' and succinct body  
- Use natural language phrases for declarations (e.g., let x be integer, set size of A = n)  
- Avoid separators, extraneous formatting, or unnecessary line breaks  
- Output only pseudocode lines exactly as per above style, with no extra text or formatting  

Example style your output should follow:
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to n–1:  
8.   set min_i ← i  
9.   for j in i+1 to n–1: if A[min_i] > A[j]: min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A