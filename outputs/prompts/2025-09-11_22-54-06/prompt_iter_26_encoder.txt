Generate concise, clear, and high-level pseudocode from the given problem description or code, strictly preserving all original class names, function names, parameters, their signatures, and nesting/indentation exactly as in the source. Use natural language mixed with standard symbols and common abbreviations to keep the pseudocode compact yet readable. Prefer succinct one-line statements combining conditions and actions, and avoid verbose explanations or summaries. Represent control flow and data manipulations simply but precisely, avoiding language-specific syntax or ambiguities—make the pseudocode self-contained and independently understandable.

Number each output line sequentially starting from 1, in this exact format with no extra text, comments, separators, or explanations:

1. let count ← 0  
2. for i in 0 to n-1: if A[i] > 0: count++  

Retain all class and function declarations verbatim, with original indentation. Do not add input/output commands unless explicitly present in the original code or problem description. Avoid any extra commentary, notes, or meta-text—only output the pseudocode lines. Ensure the entire output completes within 5 seconds.