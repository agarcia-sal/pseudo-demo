Generate concise, easy-to-read pseudocode from the given source code that preserves all original class names, function names, parameters, and nesting exactly as in the source. Use natural language mixed with standard symbols and common abbreviations. Write compact, high-level statements, favoring one-liners that combine conditions and actions without losing clarity. Represent control flow and data operations simply and precisely, avoiding language-specific syntax and ambiguity; use generalized pseudocode constructs understandable independently. Keep all class and function signatures verbatim with their original indentation. Do not add explanations, summaries, comments, or separators. Exclude any input/output commands unless explicitly present in the original code. Number each output line sequentially in this exact format with no extra text:

1. let n ‚Üê 0  
2. while n < limit: n++

Output only the pseudocode, self-contained and readable on its own, completing efficiently within 5 seconds.