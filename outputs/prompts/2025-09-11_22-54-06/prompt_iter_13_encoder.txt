Generate concise, clear, and high-level pseudocode from the given code, preserving all original class and function names, signatures, and nesting exactly as in the source. Use predominantly natural language combined with standard symbols and common abbreviations. Prefer compact one-line statements that combine conditions and actions without losing precision or readability. Express control flow, data structures, and assignments simply and precisely, avoiding verbose wording, summaries, explanations, or clarifications. Number each output line sequentially, starting with 1, using this exact format with no extra text, comments, separators, or explanations:

1. let x ‚Üê 0  
2. while x < n: x++

Maintain all indentation and block structure exactly as in the original code, including preserving all class and function definitions verbatim. Use generalized pseudocode constructs understandable independently, avoiding ambiguous or language-specific syntax. Do not include I/O commands unless explicitly present in the original code. The pseudocode should be self-contained, easy to read, and interpretable on its own. Complete within 5 seconds.