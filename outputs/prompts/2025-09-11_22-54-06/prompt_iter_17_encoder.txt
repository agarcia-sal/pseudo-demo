Generate concise, clear, high-level pseudocode from the given code, preserving all original class and function names, parameters, and nesting structure exactly as in the source. Use mostly natural language with common standard symbols and common abbreviations. Express each statement precisely but compactly—prefer simple one-line statements combining conditions and actions where natural. Maintain control flow and data representations faithful to the original but avoid verbose or language-specific syntax; use generic pseudocode constructs easily understandable without extra context.

Number each output line sequentially starting at 1 with no extra text, comments, separators, or explanations. Retain all indentation and blank lines exactly as in the original code to reflect structure clearly.

Do not add input/output instructions unless explicitly present in the original code. The output must be self-contained and interpretable without supplementary info. Complete efficiently within 5 seconds.

Use this line format exactly:

1. let x ← 0  
2. while x < n: x++

Example style for pseudocode lines:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A