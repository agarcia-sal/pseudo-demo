Generate concise, clear, and easy-to-read pseudocode from the given code using mostly natural language enriched with standard symbols and common abbreviations. Keep all original class and function names, parameters, and their nesting exactly as in the source, preserving indentation strictly. Express logic at a high level, favoring compact one-line statements that combine conditionals and actions wherever possible. Use simple, unambiguous generalized pseudocode constructs understandable without language-specific syntax. Avoid input/output statements unless explicitly present in the original code. Number every output line sequentially starting at 1 in this exact format with no additional text, comments, separators, or explanations:

1. let n ‚Üê 0  
2. while n < limit: n++

Retain original class and function structures and signatures verbatim. Reflect data structures and control flow faithfully but succinctly. Do not add purpose summaries or clarifications. Ensure output is self-contained and independently interpretable. Complete generation efficiently within 5 seconds.