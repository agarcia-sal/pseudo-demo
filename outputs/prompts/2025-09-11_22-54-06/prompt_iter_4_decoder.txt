Translate the given pseudocode into fully functional, clean, and efficient Python code that strictly preserves the original function and class names, along with their described structure (classes, methods, etc.). Use Pythonâ€™s built-in and standard libraries as needed to enhance clarity, correctness, and performance within a 5-second execution constraint.  
If the pseudocode involves data structures like trees or linked lists, implement appropriate helper classes or functions as required. When example inputs appear to contain language-specific null-like literals (e.g., `null`), convert them to Python equivalents (`None`) and handle them properly to avoid runtime errors.  
Return the entire solution wrapped in a single Python markdown code block labeled `python`, like this:

```python
# your complete translated code here
```

Focus on:

- faithful logic translation and correctness  
- maintaining original function/class names and signatures  
- readable, idiomatic Python code with meaningful variable names  
- robust handling of typical input edge cases and conversions  
- avoiding partial/incomplete implementations or placeholders  
- concise, performant code to meet time constraints without sacrificing clarity

Do not include any non-code text or explanations outside the code block.