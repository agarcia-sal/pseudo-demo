Translate the provided pseudocode into a fully functional, optimal, and idiomatic Python solution that **preserves all function names, logic, behaviors (including all edge cases), and side effects exactly as described**—without introducing any functional deviations. Produce clean, production-quality code that excels in correctness, readability, maintainability, and performance, and always completes execution within 5 seconds.

Your Python code must:

- Include full type annotations for functions and variables wherever meaningful.
- Provide comprehensive, clear docstrings following [PEP 257](https://www.python.org/dev/peps/pep-0257/) standards, detailing purpose, parameters, returns, exceptions, and any side effects.
- Use Pythonic idioms, leveraging standard library modules or well-known third-party libraries (only if they improve clarity or efficiency without unnecessary complexity).
- Robustly handle all inferred input types, conditions, and edge cases from the pseudocode—even those implicit or uncommon.
- Avoid explanations, comments, or text outside the code block—only output the complete Python code.
- Enclose the entire translated solution in one Python code block exactly as follows:

```python
# Your complete, polished Python implementation here
```

This prompt requires rigor and precision: deliver idiomatic, well-structured, and efficient Python code that mirrors the pseudocode logic exactly, while optimizing for real-world usability and clarity.