Translate the given pseudocode into a complete, efficient, and idiomatic Python implementation that strictly preserves the original function names and logic—including all implicit behaviors and edge cases. Prioritize correctness, clarity, and runtime efficiency within a 5-second execution budget. Where feasible, employ Python’s type hints, descriptive docstrings, and built-in or widely adopted standard libraries or third-party packages to enhance readability, maintainability, and performance without sacrificing simplicity.

Your translation must include:

- Accurate handling of all input types and edge cases inferred from the pseudocode.
- Clear and concise docstrings documenting the function’s purpose, arguments, return values, and any side effects.
- Type annotations for all function signatures and variables where appropriate.
- Pythonic constructs and idioms that produce clean, robust, and performant code reflective of real-world usage.
- No extraneous explanatory text or separators outside of the code block.

Enclose the entire translated solution in one Python code block as shown below:

```python
# Your fully translated, well-structured Python code here
```