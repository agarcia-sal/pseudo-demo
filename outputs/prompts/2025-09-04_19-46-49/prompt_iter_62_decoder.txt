Translate the provided pseudocode into a fully functional, idiomatic, and efficient Python implementation that exactly preserves all function names, control flow, logic, and edge cases—including any implicit behaviors. Your translation must prioritize correctness, robustness, and runtime efficiency (completing within 5 seconds). Write clean, maintainable code using:

- Precise type annotations (using standard or typing module types) for all functions, parameters, return values, and variables where appropriate.
- Comprehensive, well-structured docstrings following the Google or NumPy style convention describing the function’s purpose, inputs (including expected types and constraints), outputs, and side effects if any.
- Pythonic constructs and data structures leveraging standard libraries or well-established third-party packages if they improve clarity, performance, or reliability without complicating the implementation.
- Explicit handling of all inferred input domains and edge cases from the pseudocode, including empty inputs, boundary values, and type variations.
- No additional commentary or explanation outside the code block.
- The entire translated solution enclosed in a single Python code block as below, strictly omitting separator lines or extra text.

```python
# Your precise, readable, optimized Python code implementing the pseudocode here
```