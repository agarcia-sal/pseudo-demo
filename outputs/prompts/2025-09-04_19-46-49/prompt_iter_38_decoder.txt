Translate the given pseudocode into a fully working, clean, and optimized Python solution that precisely preserves all function names, inputs, outputs, logic flow, and subtle behaviorsâ€”including edge cases implicit in the pseudocode. Your implementation must:

- Use Python 3.9+ type annotations comprehensively for all function signatures, variables, and return types.
- Include clear, concise, and complete docstrings in [Google style](https://google.github.io/styleguide/pyguide.html#381-docstrings) that explain purpose, parameters, return values, exceptions, and side effects as relevant.
- Employ idiomatic Python constructs and efficient algorithms, exploiting standard library modules and reputable third-party packages only when they enhance clarity, performance, or robustness without undue complexity.
- Handle all reasonable input types and corner cases inferred from the pseudocode without requiring external clarifications.
- Optimize for readability and maintainability while respecting a maximum runtime of 5 seconds.
- Maintain faithful naming to the functions and variables indicated in the pseudocode.
- Enclose the entire solution exclusively within a single Python code block using triple backticks and `python`.
- Avoid all explanatory comments or text outside the code block.

Output only the translated Python code in the specified code block format.

```python
# Your precise, production-ready Python code here
```