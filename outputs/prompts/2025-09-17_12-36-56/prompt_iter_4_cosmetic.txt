Given the original pseudocode, produce a rewritten version that fulfills the following criteria:

- The output consists solely of pseudocode without any explanations, comments, or metadata.
- Preserve all function names exactly as in the original.
- Preserve all class names exactly as in the original, maintaining the original class and object structure without modification.
- Retain complete original functionality and logic, producing code that is semantically equivalent to the input.
- Maximize syntactic and structural diversity by employing any or all of the following transformative strategies as appropriate:
  - Rename variables and temporary identifiers consistently but distinctly from originals.
  - Alter control flow constructs (e.g., replace loops with equivalent recursion or alternative looping styles).
  - Reorder independent statements where logically valid.
  - Substitute equivalent expressions and data structures.
  - Change indentation styles or line organization while preserving syntax.
  - Introduce helper variables or merge steps to vary granularity.
  - Replace compound conditionals with nested conditionals or vice versa.
  - Reformulate arithmetic or logical expressions to different but equivalent forms.
  - Use alternate but valid pseudocode keywords or conventions (e.g., FOR vs. WHILE, SET vs. ASSIGN).
- Avoid introducing any new functions, classes, or changing function signatures.
- The final output must be fully self-contained pseudocode, as different as possible from the original in syntax and presentation, yet functionally identical.

Only return the rewritten pseudocode.