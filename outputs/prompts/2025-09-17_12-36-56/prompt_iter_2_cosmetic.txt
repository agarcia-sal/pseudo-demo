Given the original pseudocode, produce a thoroughly rewritten version that preserves *exactly* the same functionality, including all logic, control flow, and structure, but maximally differs in syntax, expression, variable naming, control constructs, and formatting. Maintain all original function and class names unchanged, and strictly retain the same class-object hierarchy as in the input. Avoid adding or removing any comments or explanationsâ€”output only the transformed pseudocode. Consider diverse syntactic alternatives: rearrange statements where order is non-essential, substitute equivalent control structures (e.g., replace WHILE with FOR if appropriate), rename all variables except function and class identifiers using consistent alternative names or generic placeholders, modify expression styles (e.g., replace explicit IF-ELSE nesting with guard clauses or switch-like constructs), and vary formatting conventions (indentation, parentheses, operators) to maximize surface-level dissimilarity while preserving semantics fully. The output must be solely the pseudocode text representing this deeply refactored but functionally identical version.