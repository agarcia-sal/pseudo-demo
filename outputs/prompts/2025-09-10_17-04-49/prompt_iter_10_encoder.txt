Generate concise, clear, high-level pseudocode for the provided problem description, strictly preserving original class names, function names, parameters, and class/object nesting as given in the original code. Use predominantly natural language combined with common symbolic notation and short meaningful abbreviations. Favor compactness and readability, expressing most statements in one line with minimal indentation only for nested blocks.

- Exact function signatures must remain unchanged.
- Original class declarations and their nesting must be retained exactly.
- Use intuitive, brief variable names or symbols.
- Follow consistent, standard pseudocode conventions (e.g., assignment arrow `←`, keywords `let`, `for`, `if`, `return`).
- Write control flow succinctly, like `if cond: stmt` or `for i in range:` on one line when possible.
- Do not include comments, explanations, summaries, notes, or separators.
- Number output lines sequentially starting at 1, for example:  
  1. x ← 0  
  2. while x < n: x++

Example style:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A