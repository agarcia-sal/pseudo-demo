Generate clear, concise, high-level pseudocode strictly preserving original class names, function names, parameters, and nesting. Use mostly natural language enhanced with common symbols and short intuitive abbreviations. Favor one-line statements and minimal indentation for nested blocks to maximize compactness and readability:

- Keep all function signatures unchanged.
- Maintain original class declarations and their nesting exactly as given.
- Use brief, meaningful variable names or symbols.
- Follow standard pseudocode conventions (assignment arrow ←, keywords let, for, if, return).
- Write control flows succinctly: use one-liners like `if cond: stmt` or `for i in range:` when possible.
- Output only the pseudocode steps, numbered starting at 1.
- Do not include comments, explanations, summaries, notes, or separators.

Example format:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8. set min_i to i  
9. for j = i+1 to size of A exclusive  
10.  set min_i to j if A[min_i] > A[j]  
11. swap A[i], A[min_i]  
12. print all elements of A