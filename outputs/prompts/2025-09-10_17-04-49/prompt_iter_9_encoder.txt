Generate concise, high-level pseudocode directly reflective of the given problem’s code structure, preserving all original class names, method names, and their exact signatures without alteration. The pseudocode must be clean, readable, and compact—favoring natural language with standard pseudocode symbols (`←`, `let`, `for`, `if`) and mostly one-liner statements. Retain original nesting and indentation strictly for control flow clarity, minimizing verbosity. Use short, clear variable names and concise expressions. Avoid explanations, comments, summaries, or any formatting beyond simple line numbering starting at 1 (e.g.,  
1. x ← 0  
2. while x < n: x++). Do not add separator lines or extraneous formatting. The style should resemble:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A