Generate concise, easy-to-read, high-level pseudocode strictly preserving all original class names, function names, parameters, and their nesting as in the original code. Use mostly natural language mixed with common symbolic notation and short meaningful abbreviations. Keep pseudocode compact, favoring one-liner statements and minimal indentation only for nested blocks. Use consistent standard pseudocode keywords (`let`, `for`, `if`, `return`, `while`, etc.) and assignment arrow `←`.

- Retain exact function signatures and class/object declarations with original nesting.
- Prefer brief intuitive variable names or symbols.
- Write control flows succinctly, using one-line `if cond: stmt` or `for i in range:` forms where possible.
- Do not include any comments, explanations, summaries, or separators.
- Number output lines sequentially starting at 1, e.g.:
  1. x ← 0  
  2. while x < n: x++

Example style:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A