Translate the given code into concise, clear, high-level pseudocode that fully preserves the original structure and essential logic: all variable declarations, assignments, function calls, conditionals, loops, and control flows.  
Use mostly natural language with minimal symbolic notation and standard abbreviations for compactness and readability. Prefer succinct one-line statements for simple control flow where clear.  
Omit low-level details and boilerplate that do not affect understanding or change logic, even if important, to keep output short. Do not include explanations, comments, summaries, or separators—output only the numbered pseudocode lines starting from 1.  
Use consistent assignment symbols (“←” or “=”, choose one) and “let” for declarations. Indent minimally and consistently to indicate nesting clearly.  
Use common shorthand and symbols (++, --, ←) and abbreviations (func, arr, idx) as appropriate.  
Follow this minimal example style exactly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set length of A ← n  
6. read n elements into A  
7. for i from 0 to n-1:  
8.  let min_i ← i  
9.  for j from i+1 to n-1: min_i ← j if A[min_i] > A[j]  
10.  swap A[i], A[min_i]  
11. print all elements of A