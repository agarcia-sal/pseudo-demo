Translate the given code into clear, concise pseudocode that precisely preserves its original structure and control flow. Express all variable assignments, function calls, loops, and conditionals in a uniform, simple way using mostly natural language combined with concise symbolic notation and common abbreviations. Your pseudocode must be easy to read, high-level, and compact—favor single-line statements and omit less critical details if that reduces length without losing essential logic.

- Output only the pseudocode with no comments, explanations, summaries, or extra text.
- Number each line starting at 1, followed by a period and a space.
- Use natural language keywords like “let,” “set,” “read,” “print,” and direct conditional expressions.
- Write assignments with a symbolic arrow ←.
- Represent loops and conditionals clearly but succinctly, preferably as one-liners (e.g., “while x < n: x++”).
- Keep indentation minimal but sufficient to show block structure.
- Avoid redundancy and verbosity; brevity and clarity are paramount.
- Do not use separator lines or any extra formatting.

Example style to follow:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A ← n  
6. read n elements into A  
7. for i from 0 to size of A exclusive:  
8.  set min_i ← i  
9.  for j from i+1 to size of A exclusive: min_i ← j if A[min_i] > A[j]  
10.  swap A[i], A[min_i]  
11. print all elements of A