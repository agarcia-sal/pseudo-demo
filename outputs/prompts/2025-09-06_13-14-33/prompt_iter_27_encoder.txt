Generate concise, high-level pseudocode for the given problem description, preserving the original function name exactly. Use mostly one-line, brief, symbolic statements mixing natural language and standard operators (←, =, ≠, +, -, *, /, mod) for variables, control flow, and data structures. Favor clarity with minimal indentation or spacing only to show blocks clearly. Avoid explanations, comments, summaries, or extra formatting—output only the pseudocode itself. Number each step sequentially starting at 1, using the format:

1. x ← 0  
2. while x < n: x++

Use natural keywords like function, let, read, if, else, for, while, return, but keep lines compact and expressive. Make it standalone and easy to understand without external context. Prioritize correctness, clarity, and brevity within a 5-second generation limit. Do not add separator lines or notes.  
Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i ← i  
 for j ← i + 1 to size(A) exclusive  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A