Translate the pseudocode below into a clean, production-ready Python implementation within a single code block formatted exactly as:

```python
# Complete implementation here (including imports, helper classes/functions)

```

Guidelines for your translation:

- Preserve all function and class names exactly as in the pseudocode, with identical parameters and order.
- Apply complete, precise Python type annotations everywhere, using `typing` constructs (`List`, `Dict`, `Set`, `Tuple`, `Optional`, `Union`, `Generator`, etc.) as appropriate.
- Use modern, idiomatic Python (3.8+). Favor `@dataclass`, comprehensions, `functools.lru_cache`, `itertools`, `collections` modules, and concise constructs for clarity, efficiency, and maintainability.
- Include every necessary helper function, class, or data structure so the code runs standalone without missing dependencies.
- Implement robust input validation and boundary checks inferred from the pseudocode intent to prevent errors and handle edge conditions gracefully.
- Optimize for runtime efficiency (within 5 seconds) using the most suitable algorithms and data structures; leverage efficient standard library and widely used third-party libraries if they enhance performance or clarity.
- Minimize code verbosityâ€”write self-explanatory, expressive code that requires no explanatory comments.
- Import any standard or publicly available third-party Python package if it meaningfully improves code quality, performance, or readability.
- Do not output any extraneous text or explanation outside the code block.

The pseudocode to convert is provided exactly between triple backticks:

```
[insert pseudocode here]
```