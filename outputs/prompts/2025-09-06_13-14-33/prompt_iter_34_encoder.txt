Generate concise, compact pseudocode for the given problem description that preserves the original function name exactly. Use mostly one-line statements blending natural language with symbolic operators (←, =, ≠, +, -, *, /, mod) and standard control structures (for, while, if, else, return, function). Prefer brief, high-level steps expressed in a readable style, avoiding unnecessary indentation or blank lines but indent or space minimally to clarify nested blocks. Avoid comments, explanations, summaries, or formatting separators—output only the pseudocode instructions numbered sequentially starting from 1.

Use natural keywords like let, read, define, append, set, push, pop, swap, function, return. Write control flow compactly, e.g.:

1. x ← 0  
2. while x < n: x++  
3. if x = y: return x  

Ensure pseudocode is complete, standalone, and understandable without external context. Favor clarity and correctness while maximizing brevity and readability and fit within a 5-second generation limit.