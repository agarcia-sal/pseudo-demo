Generate concise, clear pseudocode that directly implements the given problem’s logic using mostly one-line statements with minimal but sufficient indentation to indicate nested blocks. Preserve the original function name exactly. Prefer natural language combined with standard symbolic notation (←, =, ≠, +, -, *, /, mod, ∈) and control keywords (function, let, read, for, if, else, while, return, append, push, pop). Use compact expressions and incorporate common abbreviations where clear. Number every statement sequentially starting at 1. Avoid explanations, comments, summaries, notes, or decorative lines—output pseudocode only. Structure control flow with clear, high-level constructs rather than verbose detail. Example format:

1. function exampleFunction(arg)  
2. let x ← 0  
3. while x < arg: x ← x + 1  
4. return x