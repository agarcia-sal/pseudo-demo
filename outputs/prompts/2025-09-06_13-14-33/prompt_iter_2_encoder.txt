Generate concise, high-level pseudocode for the given problem description using the same function name as in the original code. Make it easy to read by blending natural language with symbolic notation, favoring compact, mostly one-line statements and abbreviations. Avoid explanations, summaries, comments, or clarifying notes—output only the pseudocode. Structure steps clearly and sequentially, for example:

1. x ← 0  
2. while x < n: x++  

Prefer natural phrasing like "let", "read", "for", "if", "return", but keep lines brief and expressive. Use symbolic operators (←, =, ≠, +, -, *, /, mod) and standard control structures. Use indentation or spacing only for clarity in nested blocks, but keep overall length minimal. Do not include separator lines or extra formatting. The pseudocode must be complete and stand alone, understandable without context. Your function has a 5-second timeout—optimize for correctness and clarity within this limit.