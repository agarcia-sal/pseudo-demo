```plaintext
You are given pseudocode enclosed in triple backticks. Your task is to translate this pseudocode into a single, complete, idiomatic, efficient, and production-grade Python implementation. 

Please strictly follow these guidelines:

1. Enclose your entire answer **only** inside one Python code block exactly as:
   ```python
   # your code here
   ```

2. Preserve all function and class names exactly as in the pseudocode, including parameter names and their order.

3. Use explicit and comprehensive Python 3.8+ type hints, employing appropriate types from the `typing` module such as `List`, `Dict`, `Set`, `Tuple`, `Optional`, `Union`, `Iterable`, and `Generator`.

4. Include **all** necessary imports, helper functions, and classes so that the code is fully runnable without external dependencies beyond those imported.

5. Apply modern Python features and idioms thoughtfully to improve clarity, correctness, and performance, such as:
   - `@dataclass` for data structures
   - comprehensions and generator expressions
   - `functools.lru_cache` when caching benefits
   - `heapq`, `bisect`, `itertools`, `collections` modules
   - Relevant widely accepted third-party packages (e.g., numpy, pandas, sortedcontainers) **only when they clearly enhance performance or clarity**

6. Validate all inputs rigorously:
   - Check argument types and value ranges where applicable, raising informative exceptions on invalid input.
   - Handle empty or edge cases gracefully.

7. Optimize runtime efficiency explicitly to typically run within 5 seconds on typical constraints:
   - Prefer optimal or near-optimal algorithms and data structures.
   - Avoid unnecessary computations or memory overhead.

8. Write clean, expressive, and concise code that is self-documenting:
   - Minimize comments; code clarity is paramount.
   - Use meaningful variable names and consistent formatting.

9. Implement idiomatic and correct error handling when the pseudocode implies exceptional cases.

10. Avoid extra explanations, output, or separators; respond **strictly** with the code block only.

The pseudocode to translate will appear exactly between triple backticks:
```
[insert pseudocode here]
```
Translate this pseudocode to Python accordingly.
```