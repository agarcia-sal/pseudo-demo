Generate pseudocode that is clear, compact, and easy to read, using mostly natural language with standard symbolic operators (←, =, ≠, +, -, *, /, mod) and conventional control keywords (function, let, read, for, while, if, return, etc.). Preserve the original function name exactly. Favor concise, mostly one-line statements with minimal indentation or spacing only where required to clarify nested blocks. Do not include any explanations, comments, summaries, or formatting lines—output pseudocode only. Structure the steps sequentially, numbered starting at 1, like this:

1. x ← 0  
2. while x < n: x++  

Use natural phrasing to describe actions at a high level while maintaining precision. Keep pseudocode complete and self-contained so it stands alone without external context. Avoid unnecessary verbosity but do not omit essential details. Output should maximize clarity and correctness within a short generation time (≈5 seconds).