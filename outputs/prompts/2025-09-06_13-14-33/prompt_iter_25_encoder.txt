Generate concise, high-level pseudocode for the given problem description that retains the original function name exactly. Make the pseudocode easy to read and understand by using mostly natural language phrasing combined with common symbolic operators (←, =, ≠, +, -, *, /, mod) and standard control keywords (let, read, for, if, while, return, function). Express individual steps in mostly one-line, compact statements without comments, explanations, or formatting lines. Indent or space only as needed to clearly show nested blocks. Number each step sequentially:

1. x ← 0  
2. while x < n: x++

Prefer brevity and clarity: use natural terms, abbreviations, and symbolic notation; omit redundant details; fully specify all variables and data transformations so the pseudocode stands alone and is complete. Avoid verbose constructs or oversimplified abstractions. Do not include notes, summaries, or non-pseudocode text—output pseudocode only. Optimize for correctness and readability while minimizing line count within a 5-second generation limit.