Generate concise, high-level pseudocode for the given problem description, preserving all original function names exactly. Use mostly one-line statements combining natural language and common symbolic operators (←, =, ≠, +, -, *, /, mod) and standard control keywords (let, read, for, while, if, else, return, function). Write compact, clear code without comments, explanations, summaries, or formatting lines—only pseudocode steps. Number all steps sequentially starting at 1, indent or use spacing only to clarify nested blocks as shown:

1. x ← 0  
2. while x < n: x++  

Favor readability by blending succinct natural phrasing with symbolic notation. Use expressive but brief statements that are standalone and complete, making the solution easy to understand without external context. Avoid verbose constructions; strive for clarity with minimal lines and use standard idioms for loops, conditionals, data structures, and common operations. Do not include any separators or explanatory text. The output must be pure pseudocode only, ready for immediate interpretation or implementation.