Generate concise, high-level pseudocode for the given problem description preserving the original function name exactly. Use mostly one-line statements blending natural language and symbolic operators (e.g., ←, =, ≠, +, -, *, /, mod) and standard control structures (if, else, while, for, return, function). Prefer compact, expressive abbreviations without comments, explanations, or any extra text. Number each step sequentially starting at 1, indent or space only to clarify nested blocks minimally. Output pseudocode only—no formatting lines or summaries. Follow this style strictly:

1. x ← 0  
2. while x < n: x++  

Ensure the pseudocode is standalone, clear, complete, and easy to read within a 5-second generation limit. Use natural keywords like let, read, define, but keep lines brief and focused. Avoid long expansions; instead, favor direct, succinct expressions and preserve control flow clarity. Output just the pseudocode with the same function name and no additional content.