Generate concise, clear pseudocode that preserves the original function name exactly. Write high-level, compact steps primarily as one-liners, using natural but brief language combined with standard symbolic operators (←, =, ≠, +, -, *, /, mod) and conventional control keywords (let, read, for, while, if, else, return, function). Structure your pseudocode sequentially and numerically (e.g., 1. x ← 0; 2. while x < n: x++), indenting or spacing only as needed to clarify nested logic. Avoid explanations, comments, summaries, or formatting lines—output pseudocode only. Ensure pseudocode is complete and standalone, understandable without external context. Prefer concise expressions, abbreviations, and natural phrasing that retain correctness and clarity, optimizing for a brief, readable style that fits within a 5-second generation constraint.