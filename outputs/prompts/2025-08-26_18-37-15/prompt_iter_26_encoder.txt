Generate easy-to-read, compact, and high-level pseudocode directly from the problem description, preserving original function names exactly. Use natural language phrasing combined with succinct symbolic notation (e.g., ←, ∈, mod, | |). Favor meaningful variable names close to original identifiers. Express control flow and operations as one-liners, inline conditionals, comprehensions, and chained expressions wherever they enhance brevity without sacrificing clarity. Number every line starting from 1 as:

`<step number>. <instruction>`

Example:  
`1. x ← 0`  
`2. while x < n: x++`

Avoid comments, explanations, summaries, or separator lines. Output only pseudocode—no restating the problem or function purpose. Complete output within 5 seconds.