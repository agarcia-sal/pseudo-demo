Generate compact, natural, and easy-to-read pseudocode directly from the problem description, preserving all original function names exactly. Use meaningful variable names reflecting original identifiers. Express control flow and operations succinctly with symbolic notation (←, ∈, mod, | |), inline conditionals, comprehensions, chained expressions, and one-liners where they improve clarity without verbosity or ambiguity. Number every line starting at 1 as:

`<step number>. <instruction>`

Examples of concise symbolic expressions and one-liners are encouraged:
- Use `for x ∈ collection:` for loops
- Use inline `if` for conditional assignments or returns
- Use comprehensions like `[f(x) for x ∈ list if cond]`
- Use symbols such as ← for assignment, ∈ for membership, | | for absolute value

Do not include comments, explanations, summaries, or separators. Do not restate or explain the problem or function purpose — output only pseudocode. Complete output within 5 seconds.

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8.   set min_i to i  
9.   for j = i+1 to size of A exclusive  
10.    set min_i to j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A