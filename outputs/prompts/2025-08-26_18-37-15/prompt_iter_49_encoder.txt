Generate concise, high-level pseudocode that is easy to read and naturally understandable, directly derived from the problem description. Preserve all original function names exactly. Use meaningful variable names reflecting original identifiers. Express control flow and operations compactly with symbolic notation (←, ∈, mod, | |), inline conditionals, chained statements, comprehensions, and one-liners when clarity and brevity improve. Number every line starting at 1 as:

`<line number>. <instruction>`

Examples of acceptable forms:
`1. in function main`  
`2. let n be integer`  
`3. for i ∈ 0 to n-1: x++`  
`4. if a < b: return a else return b`

Omit comments, explanations, summaries, or restatements of the problem. Avoid separators or notes. Output only the pseudocode at a high abstraction level with natural phrasing suitable for human reading. Begin at line 1 and complete promptly (within 5 seconds).

Example style:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers with size n  
5. for i ∈ 0 to n-1  
6.   read A[i]  
7. for i ∈ 0 to n-1  
8.   set min_i ← i  
9.   for j ∈ i+1 to n-1  
10.    set min_i ← j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A