Generate compact, clear, and easily readable pseudocode directly from the problem description that balances natural language with concise notation. Preserve all original function names exactly. Use meaningful variable names derived from the original identifiers. Represent control flow, conditions, and operations succinctly and elegantly—prefer one-liners, inline conditionals, symbolic operators (←, ∈, mod, | |), chained statements, comprehensions, and abbreviations when they enhance brevity without sacrificing clarity or correctness. Number every line starting from 1, using the format:

`<line number>. <instruction>`

Adopt a high-level, natural but precise style that flows smoothly, avoiding verbosity and excessive detail. Do not provide comments, explanations, summaries, or notes. Do not restate the problem or describe the pseudocode’s purpose. Output only the pseudocode. Omit separator lines. Ensure the output completes within 5 seconds.

Example:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ∈ 0 to |A|-1  
8.   set min_i ← i  
9.   for j = i+1 to |A| exclusive: min_i ← j if A[min_i] > A[j]  
10.  swap A[i], A[min_i]  
11. print all elements of A