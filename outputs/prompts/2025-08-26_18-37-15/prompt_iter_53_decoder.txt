Translate the given pseudocode into a concise, idiomatic, and efficient Python implementation that strictly preserves all function names, signatures, and type annotations exactly as given. Your code should be runnable as-is within 5 seconds, fully self-contained, and should precisely mirror the logic and behavior described in the pseudocode without adding any extra functionality or I/O operations.

Guidelines:
- Enclose the entire Python solution in a single, well-formatted code block:
```python
# your translated Python code here
```
- Retain every function’s name, parameters, return types, and annotations exactly as in the pseudocode.
- Import any necessary standard or third-party libraries only if they improve clarity, correctness, or performance.
- Implement all functions completely, including any helper functions, imports, and return statements.
- Avoid superfluous comments or explanations—only include comments that clarify subtle logic required for correctness or optimization.
- Assume all inputs and outputs use conventional Python data structures relevant to the context.
- Prioritize code clarity, readability, maintainability, and optimal runtime efficiency to meet the 5-second execution constraint.
- Do not split code into multiple blocks or include outputs other than the Python code itself.

Your response should be production-quality Python code, faithfully reflecting the pseudocode’s logic, optimized and ready for immediate use.