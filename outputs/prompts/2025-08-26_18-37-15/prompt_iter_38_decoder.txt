Translate the given pseudocode into clean, idiomatic, and fully functional Python code that exactly preserves all specified function names, signatures, and type annotations. Your implementation must directly reflect the pseudocode logic without adding unnecessary behavior or input/output handling, and must run efficiently within 5 seconds.

Instructions:
- Return only the complete Python implementation enclosed in a single code block formatted as:
```python
# your complete and tested Python code here
```
- Keep all function names and signatures exactly as in the pseudocode, including all type annotations.
- Import any standard or third-party libraries explicitly if they improve clarity, correctness, or performance.
- Implement all functions and necessary helpers fully, including proper return statements.
- Avoid any explanatory text, debug output, or extraneous commentsâ€”only include comments essential to understanding complex logic.
- Assume inputs and outputs use standard Python data types appropriate to the problem, unless the pseudocode specifies otherwise.
- Optimize your solution for clarity, maintainability, correctness, and efficiency, leveraging Pythonic idioms and best practices.
- Do not include redundant code or placeholder logic; your code should be ready for production use.