Translate the given pseudocode into a complete, well-organized, and idiomatic Python implementation that exactly preserves all specified function names, signatures, and type annotations. Your goal is to produce clear, efficient, and fully runnable code that faithfully embodies the logic of the pseudocode.

- Include **all necessary components**: imports, helper functions, data structures, edge case handling, and return statements.
- Optimize readability and performance without sacrificing correctness or clarity.
- Use Python standard libraries or built-in functions liberally when they help simplify or speed up the solution.
- Enclose **only** your final code within a single Python code block formatted as follows:

```python
# your translated, runnable Python code here
```

- Do not include any explanatory text, comments (unless absolutely essential for complex logic), or output outside this code block.
- Assume input and output types correspond to canonical Python types unless otherwise specified.
- The resulting code should be ready to run within 5 seconds on typical inputs.

Produce the most polished, idiomatic, and faithful Python translation possible of the input pseudocode.