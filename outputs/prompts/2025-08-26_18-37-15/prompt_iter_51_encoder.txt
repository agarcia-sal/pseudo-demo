Generate concise, high-level, and easy-to-read pseudocode directly from the problem description. Use natural language with precision, preserving all original function names exactly. Prefer meaningful variable names from original code identifiers. Express control flow and operations succinctly using symbolic notations (←, ∈, mod, | |), inline and chained statements, comprehensions, and one-liners whenever they improve compactness and clarity without losing meaning. Number every line starting from 1 as follows:

`<line number>. <instruction>`

Use this minimalistic style, omitting comments, explanations, summaries, or any additional text. Do not restate or refer to the problem or your intent. Avoid separator lines. Maintain a high abstraction level and clear readability.

Example output style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ∈ 0 to |A|-1  
8.   set min_i ← i  
9.   for j = i+1 to |A| exclusive  
10.    set min_i ← j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A