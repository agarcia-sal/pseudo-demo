Generate clear, concise pseudocode directly from the problem description that is easy to read, natural yet compact, and expressed at a high abstraction level. Retain all original function names exactly. Use meaningful variable names derived from those in the original code. Represent control flow and operations succinctly with symbolic notation (←, ∈, | |, mod), inline conditionals, chained or single-line statements, and comprehensions whenever they improve brevity without losing clarity. Prefer one-liners and avoid unnecessary verbosity. Number every line sequentially starting from 1 as:

`<line number>. <instruction>`

Use natural but precise language, e.g., "let x be integer", "for i ∈ 0 to |A|-1", or "if a = b: return True".

Omit all comments, explanations, notes, summaries, and separator lines. Do not restate or reference the problem. Output only the pseudocode, maintaining a smooth flow and readability. Complete output within 5 seconds.

Example style:
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ∈ 0 to |A|-1  
8.   set min_i ← i  
9.   for j ∈ i+1 to |A|-1: min_i ← j if A[min_i] > A[j]  
10.   swap A[i], A[min_i]  
11. print all elements of A