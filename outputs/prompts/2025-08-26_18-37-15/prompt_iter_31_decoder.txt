Translate the given pseudocode into a complete, fully executable, idiomatic, and optimized Python implementation that strictly maintains all function names, signatures, and type annotations exactly as specified. Your solution must be fully self-contained and performant within a 5-second runtime limit, directly reflecting the pseudocode’s logic without adding any unrelated functionality.

Guidelines:
- Provide your entire solution enclosed in **one** Python code block formatted exactly as:
```python
# translated Python code here
```
- Preserve all original function names, parameters, return types, and type hints exactly as in the pseudocode.
- Import only those Python standard libraries or well-known third-party packages that directly enhance code clarity, correctness, or efficiency.
- Fully implement every function and necessary helper(s) within the code, including all return statements.
- Avoid any explanations, extra comments (except minimal comments only when the logic is subtle or non-obvious), and no additional text outside the code block.
- Assume standard Python data structures for inputs/outputs unless pseudocode specifies otherwise.
- Optimize for readability, correctness, and runtime efficiency simultaneously — do not use unnecessary loops, redundant constructs, or inefficient concatenations.
- Ensure your code is idiomatic Python (use list comprehensions, built-ins, or relevant standard functions where appropriate).
- Do not add any I/O code or testing harnesses.

Produce production-quality, maintainable Python code that faithfully implements the pseudocode in a clear, concise, and optimized manner.