Generate concise, high-level pseudocode directly from the problem description that balances natural language with precise symbolic notation. Always preserve the exact original function names and derive meaningful variable names from identifiers given. Express control structures and operations succinctly using symbolic operators (←, ∈, mod, | |), one-liners, inline conditionals, comprehensions, and chained statements whenever these improve clarity and reduce verbosity without sacrificing meaning. Number every line sequentially starting at 1 in the format:

`<line number>. <instruction>`

Use natural but compact wording, favoring readability and abstraction over low-level detail. Avoid restating the problem, explanations, comments, summaries, or separator lines. Output only the pseudocode. Complete response quickly (within 5 seconds).

Example style:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8.   set min_i to i  
9.   for j=i+1 to size of A exclusive  
10.    set min_i to j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A