Translate the given pseudocode into a complete, idiomatic, and efficient Python implementation that precisely preserves all function names, signatures, and type annotations as stated. Your solution must be fully self-contained and optimized to run correctly within 5 seconds. Strictly follow the logic and intent of the pseudocode without extraneous features or I/O.

Guidelines:
- Provide only valid Python code enclosed exclusively inside one Python code block, formatted exactly as:
```python
# your code here
```
- Maintain all function definitions exactly as specified in the pseudocode, including their names, parameters, and type hints.
- Import any standard or third-party Python libraries only if they significantly enhance clarity, correctness, or runtime efficiency.
- Fully implement every function and any necessary helper functions, including appropriate return statements.
- Avoid adding comments or explanatory text unless it is indispensable for clarifying subtle or complex sections of code.
- Assume inputs and outputs utilize conventional Python data types consistent with typical programming tasks, unless otherwise specified in the pseudocode.
- Prioritize clean, maintainable, and performant code that directly mirrors the pseudocodeâ€™s behavior without unnecessary complexity or debug output.

Your ultimate goal is to deliver polished, production-quality Python code that maximizes fidelity to the pseudocode, correctness, and readability while reliably completing execution within the time constraints.