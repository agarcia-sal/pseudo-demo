Generate clear, concise, and natural pseudocode directly from the problem description, preserving the exact original function name. Use meaningful variable names reflecting original identifiers. Express logic at a high level, compactly and understandably, favoring natural language with minimal but precise symbolic notation (e.g., ←, ∈, mod, | |). Prefer one-line statements, inline conditionals, comprehensions, and chained expressions when clarity is improved without verbosity. Number each line starting from 1 using this format:

`<step number>. <instruction>`

Instructions should be straightforward and easy to read, avoiding unnecessary detail or redundancy. Omit explanations, comments, summaries, restatements of the problem, and separator lines. Format examples:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8.   set min_i to i  
9.   for j = i+1 to size of A exclusive  
10.    set min_i to j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A  

Complete within 5 seconds. Output only pseudocode.