Generate concise, natural, and high-level pseudocode directly from the problem description, prioritizing readability and clarity while remaining compact. Preserve all original function names exactly as given. Use meaningful variable names closely derived from the original code. Express control flow and operations succinctly with symbolic notation (e.g., ←, ∈, mod, | |), inline conditionals, chained expressions, and comprehensions when they enhance clarity without verbosity or ambiguity. Favor one-liners where possible. Number every line starting at 1 using this exact format:

`<step number>. <instruction>`

(e.g., `1. x ← 0` or `2. while x < n: x++`)

Do not provide comments, explanations, summaries, or notes. Avoid separator lines and redundant phrasing. Output only pseudocode. Complete output within 5 seconds.

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8.   set min_i to i  
9.   for j=i+1 to size of A exclusive  
10.    set min_i to j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A