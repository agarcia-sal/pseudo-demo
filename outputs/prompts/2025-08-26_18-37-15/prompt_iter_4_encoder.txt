Generate concise, natural, and high-level pseudocode from the given problem description. The output must be clear, readable, and compact, favoring natural language with symbolic notation and standard abbreviations. Keep all original function names exactly as in the source. Use meaningful variable names close to the original code. Express control flow and data operations succinctly, preferring one-liners, inline conditionals, chained statements, and set/list comprehensions when these enhance clarity without loss of meaning. Number each pseudocode line starting from 1 with the format: "`<step number>. <instruction>`" (e.g., `1. x ← 0` or `2. while x < n: x++`). Do not include comments, explanations, summaries, meta text, or separator lines. Avoid redundancy and verbosity. Complete output within 5 seconds.

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8.   set min_i to i  
9.   for j=i+1 to size of A exclusive  
10.    set min_i to j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A