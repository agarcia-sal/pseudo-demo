Generate concise, natural pseudocode that is easy to read and understand, using compact, high-level expressions. Retain all original function names exactly as given. Use meaningful variable names aligned with the original identifiers. Prefer symbolic notation (←, ∈, mod, | |), inline conditionals, chained statements, comprehensions, and one-liners to express control flow and operations clearly without verbosity. Number every line starting at 1 with this exact format:

`<step number>. <instruction>`

Example:  
`1. x ← 0`  
`2. while x < n: x++`

Do not provide any comments, clarifications, summaries, or notes. Do not restate the problem or function purpose. Avoid separator lines or extra formatting. Output only crisp pseudocode that fits within 5 seconds.