Generate clear, concise, and natural pseudocode directly from the problem description, keeping it high-level and easy to read yet compact. Retain all original function names exactly as given. Use meaningful variable names that closely reflect original identifiers. Express control flow and operations succinctly, employing symbolic notation (e.g., ←, ∈, mod, | |), inline conditionals, chained expressions, comprehensions, and one-liners wherever they enhance clarity without verbosity or ambiguity. Number every line starting from 1 using this exact format:

`<step number>. <instruction>`

For example:  
`1. x ← 0`  
`2. while x < n: x++`

Avoid comments, explanations, summaries, notes, or separator lines. Do not restate the problem or function purpose—output only pseudocode. Complete output within 5 seconds.

Example style:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8.   set min_i to i  
9.   for j=i+1 to size of A exclusive  
10.    set min_i to j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A