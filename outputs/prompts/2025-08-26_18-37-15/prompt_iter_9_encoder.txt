Generate concise, clear, and high-level pseudocode from the given problem description, prioritizing readability and natural language while maintaining compactness. Preserve all original function names exactly as in the source. Use meaningful variable names closely mirroring the original code. Express control flow and data operations succinctly, favoring one-line statements, symbolic notation (e.g., ←, ∈, mod, | |), inline conditionals, chained operations, and set/list comprehensions where they improve clarity without loss of meaning. Number every line from 1 using this exact format:

`<step number>. <instruction>`

(e.g., `1. x ← 0` or `2. while x < n: x++`).

Avoid comments, summaries, explanations, purpose statements, or separator lines. Eliminate redundancy and verbosity. Output only the pseudocode, nothing else. Complete within 5 seconds.

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
8.   set min_i to i  
9.   for j=i+1 to size of A exclusive  
10.    set min_i to j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A