Generate clear, concise, and high-level pseudocode directly from the problem description. Preserve all original function names exactly. Use meaningful variable names based on original identifiers. Prefer natural yet compact language that remains easy to read and understand. Express control flow and operations succinctly with symbolic notation (←, ∈, mod, | |), inline conditionals, chained statements, comprehensions, and one-liners when they improve brevity without loss of clarity. Number every line starting from 1 as:

`<line number>. <instruction>`

Use consistent indentation to reflect nested blocks or scopes. Avoid comments, explanations, summaries, or separator lines. Output only the pseudocode, omitting any restatements or purpose descriptions. Finish output within 5 seconds.

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ∈ 0 to |A|-1  
8.   set min_i ← i  
9.   for j = i+1 to |A| exclusive  
10.    set min_i ← j if A[min_i] > A[j]  
11.   swap A[i], A[min_i]  
12. print all elements of A