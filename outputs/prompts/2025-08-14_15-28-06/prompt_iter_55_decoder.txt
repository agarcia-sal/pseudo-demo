```python
# Task: Translate the given pseudocode into a single, fully functional, efficient, and idiomatic Python 3 script
# that precisely implements the stated logic and requirements.
#
# Requirements:
# - Output only one complete Python code block wrapped in ```python ... ```, without any comments or explanation outside the block.
# - Use only plain input() calls without embedded prompt strings for all input reading.
# - Choose clear, descriptive variable and function names reflecting their purposes, inferred from the pseudocode.
# - Handle all edge cases and input constraints robustly to guarantee no runtime exceptions.
# - Optimize for performance and memory usage by:
#   * Selecting the most suitable algorithms and data structures;
#   * Eliminating unnecessary computations, redundant data passes, and overly nested loops;
#   * Leveraging Python built-ins and standard libraries for clarity and speed;
#   * Documenting the use of advanced input/output techniques (e.g., sys.stdin.readline) **only** when large inputs justify it.
# - Use standard Python libraries freely, including commonly accepted third-party modules if they simplify or speed up the solution without adding overhead.
# - Include only concise, meaningful inline comments clarifying subtle, complex, or crucial implementation details.
# - Produce a single standalone script with no placeholders, debug prints, extra blank lines, or split segments.
# - Do not add headings, separators, or explanations before or after the code block.

```python
# Your complete, optimized Python 3 implementation here
```
```