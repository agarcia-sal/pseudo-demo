Generate concise, high-level pseudocode directly from the problem description that is easy to read and understand. Use mostly natural language enhanced with standard symbolic operators (←, =, mod, etc.) and brief control structures: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Express steps in mostly compact one-liners; indent only for nested control flow strictly for clarity. Prefer meaningful but concise variable and function names reflecting the problem context. Use symbolic assignments and expressions such as “read integer n”, “for i = 0 to n-1”, “if x mod 2 = 0”, or “print result”. Do not include comments, explanations, or empty lines. Output only a numbered list of steps starting at 1 in this exact format:

1. statement  
2. next statement  
3. etc.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i = 0 to n-1  
 set min_i ← i  
 for j = i+1 to n-1  
  if A[min_i] > A[j] then set min_i ← j  
 swap A[i], A[min_i]  
print all elements of A