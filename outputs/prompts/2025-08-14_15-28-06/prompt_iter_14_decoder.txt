Translate the given pseudocode into robust, idiomatic, and high-performance Python code enclosed within a single Python code block. Your solution must:

- Exactly mimic the input/output implied by the pseudocode, using plain `input()` calls without prompts, and printing output strictly as specifiedâ€”no additional text or explanations.
- Handle all described cases and edge conditions efficiently, with attention to time and memory constraints to reliably complete within 5 seconds.
- Use only standard Python libraries or widely available, well-maintained packages; prioritize built-in functions, comprehensions, and efficient algorithms.
- Derive meaningful variable names from the pseudocode context while maintaining concise and clear code.
- Include minimal comments only where complex or nontrivial logic occurs, avoiding redundant annotations.
- Avoid unnecessary whitespace or verbose constructs; write clean, readable, and idiomatic Pythonic code.
- Guarantee all code is inside a single Python code block formatted exactly as:

```python
# your translated code here
```

No text or explanation should appear outside the code block.