```python
# Convert the provided pseudocode into a complete, efficient, and correct Python 3 program.
# Follow these detailed instructions precisely:
# - Enclose your entire solution inside a single Python fenced code block ```python ... ```.
# - Use plain input() without arguments for *all* input reading; no prompt strings.
# - Output strictly only what the pseudocode requires, without any extra characters, blank lines, or debug info.
# - Use meaningful, self-explanatory variable names drawn from the pseudocodeâ€™s context, ensuring clarity.
# - Handle all input constraints and edge cases gracefully and correctly.
# - Prioritize optimal time and memory complexity by selecting the best algorithms and data structures.
# - Use Python standard libraries freely if they bring clarity, correctness, or speed benefits.
# - Resort to advanced input/output techniques (like sys.stdin.readline) only if necessary for large inputs and justify their use.
# - Keep the code clean, readable, and maintainable: include brief clarifying comments only on complex or non-obvious logic.
# - Avoid redundant calculations and needless repetition by applying proven optimization techniques.
# - Make sure the final code is directly executable and fully solves the problem as described by the pseudocode.
#
# Start your implementation immediately below, enclosed in a Python code block:

```python
# your implementation here
```
```