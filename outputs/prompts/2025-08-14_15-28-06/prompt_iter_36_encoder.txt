Generate concise, high-level pseudocode from the given problem description that is easy to read and understand. Use mostly natural language blended with standard symbolic operators (←, =, mod, etc.) and concise control structures (`if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`). Favor one-line statements and minimal indentation strictly to clarify nested logic. Use compact, descriptive variable and function names reflecting the problem context. Prefer natural expressions such as “read integer n”, “for i = 0 to n-1”, “if x mod 2 = 0”, “print result”. Avoid explanations, summaries, comments, empty lines, or decorative formatting. Output steps as a numbered list starting at 1, exactly formatted as:

1. x ← 0  
2. while x < n: x++  
3. ...  

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A