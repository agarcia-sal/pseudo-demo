Generate concise, clear, and high-level pseudocode from the given problem description.  
Use mostly natural language with symbolic operators (←, =, mod, etc.) and common abbreviations, aiming for a blend that keeps the code both easy to read and compact.  
Output only the step-by-step pseudocode—omit any explanations, summaries, notes, or comments.  
Prefer expressing statements as one-liners where clarity is preserved. Use simple, consistent control flow and variable assignments that reflect natural human reasoning.  
Use minimal formatting with numbered lines starting at 1, following this pattern:

1. variable ← initial value  
2. while condition: statement  
3. for each element in collection: action

Avoid decorative lines, separators, or extra whitespace.  
Favor natural language constructs like “read input,” “print result,” “for each,” “set,” “let,” “if,” “while,” and “function.”  
Keep all identifiers and constructs concise but descriptive enough for clarity.  
The pseudocode should be readable, compact, and high-level, suitable for quick understanding and implementation within a 5-second runtime limit.