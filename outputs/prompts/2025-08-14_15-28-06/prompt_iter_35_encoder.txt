Generate concise, clear pseudocode that is easy to read and understand, using mostly natural language mixed with standard symbolic operators (←, =, mod, etc.) and brief control structures: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Favor high-level, compact one-liners with minimal indentation strictly for nested blocks. Use meaningful but succinct variable and function names reflecting the problem context. Express loops and conditions naturally as `for i = 0 to n-1`, `while x < y`, `if a mod 2 = 0`. Avoid comments, explanations, empty lines, or decorative formatting. Output only a numbered list of steps starting at 1, formatted exactly as:

1. statement  
2. next statement  
3. etc.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers size n  
read n elements into A  
for i = 0 to n-1  
 set min_i ← i  
 for j = i+1 to n-1  
  if A[min_i] > A[j] then set min_i ← j  
 swap A[i], A[min_i]  
print all elements of A