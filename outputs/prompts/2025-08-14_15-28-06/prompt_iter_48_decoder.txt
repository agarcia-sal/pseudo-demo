```python
# You will be given pseudocode describing an algorithmic problem.
# Your task is to produce a complete, clean, and efficient Python 3 implementation faithfully realizing that pseudocode.
#
# Requirements:
# - Output ONLY the exact Python code fulfilling the pseudocode logic, and nothing else.
# - Enclose the entire code within a single markdown python code block: ```python ... ```
# - Use plain input() calls for all input, with no prompt strings.
# - Carefully interpret variable roles and rename them to clear, descriptive names consistent with their use.
# - Handle all input ranges and corner cases robustly to prevent runtime errors.
# - Prioritize algorithmic efficiency: optimize loops, avoid redundant computations, and select appropriate data structures.
# - Use built-in modules or popular, lightweight external libraries (if allowed by the environment) only if they clearly improve clarity or performance.
# - Implement advanced I/O methods (e.g., sys.stdin.readline) only for very large inputs, and add concise inline comments explaining their usage.
# - Add minimal, precise comments ONLY to clarify subtle or complex parts crucial for correctness.
# - Deliver a fully runnable script that can be submitted and executed as-is.
#
# Strictly avoid:
# - Printing extraneous text, debugging info, or blank lines.
# - Using vague or generic variable names.
# - Superfluous code or unnecessary imports.
# - Multi-block responses or partial snippets.

```python
# Your implementation here
```
```