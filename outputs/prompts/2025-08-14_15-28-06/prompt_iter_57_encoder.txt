Generate concise, high-level pseudocode that is easy to read and understand, using a blend of natural language and minimal symbolic notation (←, =, mod, etc.). Express operations mostly in one-liners with clear, consistent control structures: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Use descriptive but brief variable/function names reflecting the problem context. Avoid explanations, comments, empty lines, or decorative formatting. Format output strictly as a numbered list starting at 1, each step a complete statement or compact control structure line, using indentations only for nested flow clarity. Favor natural, readable phrasing like:

1. read integer n  
2. let i ← 0  
3. while i < n: i++  
4. if x mod 2 = 0 then print x else print "odd"

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i = 0 to size of A exclusive  
 set min_i ← i  
 for j = i+1 to size of A exclusive  
  if A[min_i] > A[j] then set min_i ← j  
 swap A[i], A[min_i]  
print all elements of A