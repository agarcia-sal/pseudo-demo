```python
# Convert the given pseudocode into a clean, fully functional, and highly efficient Python 3 program.
#
# Instructions:
# - Provide your complete solution enclosed within a single Python code block: ```python ... ```.
# - Use plain input() for reading all inputs; avoid prompt strings or extra input instructions.
# - Output only exactly what the pseudocode requiresâ€”no additional text, debug info, or blank lines.
# - Use descriptive, context-appropriate variable names derived logically from pseudocode variables and operations.
# - Thoroughly address all input ranges and edge cases.
# - Optimize your code for runtime and memory efficiency using appropriate algorithms, data structures, and techniques.
# - You are free to import any standard Python library or well-known, widely available third-party packages for correctness, clarity, or performance.
# - Apply efficient I/O methods (like sys.stdin.readline) only if the input size justifies it, adding a concise inline comment explaining this decision.
# - Avoid redundant calculations and minimize memory usage through smart coding approaches.
# - Add brief, clear comments solely when the implementation contains complex or non-obvious logic essential for understanding.
# - The provided code must be immediately executable, fully implementing the pseudocode logic accurately and optimally.
#
# Begin your solution immediately after this comment, within a single fenced Python code block:

```python
# Your implementation here
```
```