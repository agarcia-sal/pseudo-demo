Generate concise, high-level pseudocode that balances natural language and minimal symbolic notation (←, =, mod, /, ++, etc.) for clarity and brevity. Use mostly one-liner statements except when indentation improves flow readability. Apply consistent control keywords: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Choose short but meaningful variable/function names reflecting the context. Use simple plural forms like `for all elements in X` to express iteration succinctly. Avoid comments, explanations, or empty lines. Output only the pseudocode as a numbered list starting at 1, indent nested blocks by one level for control structures only. Favor natural phrasing mixed with symbolic operators for compactness, for example:

1. x ← 0  
2. while x < n: x++  
3. if x mod 2 = 0 then print x else print "odd"  

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A