Generate clear, concise pseudocode directly from the given problem description. Use mostly natural language with symbolic operators (←, =, mod, /, etc.) and brief, consistent control structures: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Write mostly one-line statements, using indentation only to clarify nested control flow. Use compact, meaningful variable and function names reflecting the problem domain. Prefer high-level, expressive statements over overly detailed, low-level operations. Use natural expressions like “read integer n”, “for i = 0 to n-1”, “if x mod 2 = 0”, “print result”. Avoid comments, explanations, empty lines, or decorative formatting. Output only the numbered list of pseudocode steps starting at 1, formatted exactly as:

1. statement  
2. next statement  
3. etc.

Example:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A