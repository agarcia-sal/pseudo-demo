```python
# Task: Convert the given pseudocode into a full, clean, efficient, and well-structured Python 3 program matching the logic precisely.
#
# Instructions:
# - Output only the complete Python code enclosed in a single ```python ... ``` block; no explanation, no extra text.
# - Use plain input() calls without prompt strings for all inputs.
# - Rename variables meaningfully based on their roles and context from the pseudocode.
# - Ensure correct handling of all edge cases and input constraints to avoid runtime errors.
# - Optimize code for time and space efficiency:
#   * Prefer appropriate data structures and algorithms;
#   * Avoid redundant computations and unnecessary loops;
#   * Use built-in functions and idiomatic Python for clarity and speed.
# - You may import any standard or popular third-party library if it clearly benefits clarity, correctness, or performance without overcomplicating.
# - Use advanced input/output methods (like sys.stdin.readline) **only** when handling very large input sizes and document this choice with concise inline comments.
# - Add only succinct comments that clarify non-obvious, subtle, or critical parts of the implementation.
# - Produce a single file/script that runs standalone and produces the desired output exactly as specified.
# - Do not include debugging prints, placeholders, or extraneous blank lines.
# - Do not produce multiple snippets or partial code sections.
# - No separators or heading lines; just the code block.

```python
# Your Python implementation here
```
```