Generate concise, high-level pseudocode that balances natural language with minimal symbolic notation (←, =, mod, div, etc.) for clarity and brevity. Use mostly one-liners and compact control structures: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Prefer descriptive yet brief variable and function names reflecting the problem context. Avoid explanations, comments, blank lines, or decorative formatting.

Format the output as a numbered list starting at 1, with each step a complete statement or a single-line control structure header followed by indented nested steps if needed. Use indentations solely for nested blocks. Favor natural, readable phrasing with consistent terminology, for example:

1. let n ← 0  
2. read integer n  
3. while n > 0: n–  
4. if x mod 2 = 0 then print x else print "odd"

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A ← n  
read n elements into A  
for i = 0 to size of A exclusive  
 set min_i ← i  
 for j = i + 1 to size of A exclusive  
  if A[min_i] > A[j] then set min_i ← j  
 swap A[i], A[min_i]  
print all elements of A