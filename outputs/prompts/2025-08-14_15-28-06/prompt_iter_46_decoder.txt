```python
# Translate the given pseudocode into a clean, correct, and performant Python 3 program.
#
# Guidelines:
# - Output ONLY the exact Python code implementing the pseudocode, enclosed in one code block: ```python ... ```.
# - Use plain input() calls without any prompt strings for all inputs.
# - Produce output exactly as specified by the pseudocodeâ€”no extra text, debug prints, or blank lines.
# - Derive clear, meaningful variable names logically consistent with the pseudocode, avoiding generic names.
# - Handle all input ranges and edge cases rigorously to prevent runtime issues.
# - Prioritize efficient algorithms and data structures to improve runtime and memory usage.
# - Minimize redundancy, optimize loops, and avoid unnecessary recomputations.
# - Use Python built-in libraries and widely used external packages if they enhance clarity, correctness, or performance.
# - Implement advanced I/O strategies (e.g., sys.stdin.readline) ONLY when justified by input size, and explain concisely inline.
# - Add brief, targeted comments ONLY for non-trivial or subtle logic critical for understanding or correctness.
# - Deliver a complete, runnable solution that directly and optimally realizes the pseudocode logic.

```python
# Your implementation here
```
```