Generate clear, concise, and easy-to-understand pseudocode from the given problem description.  
Write compact, high-level steps mixing natural language with symbolic operators (←, =, mod, //, etc.) and common abbreviations, focusing on readability and brevity.  
Use mostly one-line statements when clarity is maintained. Prefer natural constructs like “read,” “print,” “for each,” “if,” “while,” “function,” “set,” and “let.”  
Label lines with ascending numbers starting at 1, following this exact format (examples):  

1. x ← 0  
2. while x < n: x ← x + 1  
3. for each item in collection: action  

Avoid any explanations, summaries, comments, or notes. Output only the pseudocode steps strictly.  
Keep variable names concise yet descriptive enough to understand their role without ambiguity.  
Do not insert decorative lines, separators, extra blank lines, or verbose formatting.  
Aim for pseudocode that balances natural language fluency and symbolic precision so it’s instantly clear, implementable, and fits within a 5-second interpretation limit.