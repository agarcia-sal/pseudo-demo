Generate concise, easy-to-read pseudocode from the given problem description. Use mostly natural language with symbolic operators (←, =, mod, +, -, *, /, etc.) and minimal keywords: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Prefer compact one-line statements; use indentation only for clarity in nested control flow. Use descriptive but concise variable and function names reflecting problem context. Express input/output clearly like “read integer n”, “print result”. Avoid comments, explanations, summaries, empty lines, or decorative formatting. Output exactly as a numbered list starting from 1, e.g.,

1. let n ← integer read  
2. let i ← 0  
3. while i < n:  
  do something  
4. print result

Use these forms:

- assignment: `let var ← expression` or `set var ← expression`  
- loops: `for var = start to end` or `while condition`  
- conditionals: `if condition then`, `else if condition then`, `else`  
- function: `function name(arguments)` and `return value`

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers size n  
read elements into A  
for i = 0 to n-1  
 set min_i ← i  
 for j = i+1 to n-1  
  if A[min_i] > A[j] then set min_i ← j  
 swap A[i], A[min_i]  
print elements of A