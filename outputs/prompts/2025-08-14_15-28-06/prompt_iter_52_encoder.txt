Generate concise, clear, and easy-to-read pseudocode directly from the given problem description. Use mostly natural language enhanced with common symbolic operators (←, =, mod, /, etc.) and brief, standard control structures: `if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`. Favor a compact, high-level style with mostly one-line statements and minimal indentation strictly for nested flow. Prefer meaningful but terse variable and function names tied to the problem context. Use symbolic assignment (←) and natural expressions like “read integer n”, “for i = 0 to n-1”, “if x mod 2 = 0”, “print result”. Avoid comments, explanations, empty lines, or decorative formatting. Format output exactly as a numbered list starting at 1, with each step a single concise command or statement:

1. statement  
2. next statement  
3. etc.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i = 0 to n-1  
 let min_i ← i  
 for j = i+1 to n-1  
  if A[min_i] > A[j] then let min_i ← j  
 swap A[i], A[min_i]  
print all elements of A