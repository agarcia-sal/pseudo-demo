Generate concise, high-level pseudocode from the problem description that is easy to read and understand. Use mostly natural language combined with standard symbolic operators (`←`, `=`, `mod`, etc.) and brief, one-line control statements (`if`, `else if`, `else`, `for`, `while`, `function`, `read`, `print`, `let`, `set`, `return`). Favor compact statements and meaningful variable/function names reflecting the problem context. Use natural expressions such as “read integer n”, “for i = 0 to n-1”, “if x mod 2 = 0”, “print result”. Avoid explanations, comments, empty lines, or decorative formatting. Use minimal indentation only to clarify nested control flow. Output only a numbered list starting at 1, with each step as a single line. Format output exactly as:

1. statement  
2. next statement  
3. etc.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i ← i  
 for j = i+1 to size of A exclusive  
  set min_i ← j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A