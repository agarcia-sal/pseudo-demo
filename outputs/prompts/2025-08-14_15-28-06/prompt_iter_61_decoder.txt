```python
# Task: Translate the given pseudocode into a single, fully functional, idiomatic Python 3 script 
# that precisely implements the described logic and handles all edge cases robustly.
#
# Requirements: 
# - Provide only one contiguous Python 3 code block enclosed by ```python ... ``` with no extra text.
# - Use plain input() calls without prompt strings for all inputs.
# - Infer meaningful, descriptive names for variables and functions based solely on the pseudocode meaning.
# - Ensure resiliency to all edge conditions; avoid errors and consider performance constraints.
# - Optimize for time and memory efficiency by:
#   * Choosing the most appropriate data structures and algorithms derivable from the pseudocode;
#   * Minimizing loops and redundant computations while preserving clarity;
#   * Exploiting Python built-ins, the standard library, and widely used, dependency-free packages if they boost clarity or speed;
#   * Employ advanced input/output methods (e.g., sys.stdin.readline) only when input sizes warrant it;
# - Inline comments only where necessary to clarify uncommon or subtle logic.
# - Do not add placeholders, debugging output, explanation text, separators, or fragmented code snippets.
#
# Deliver a clean, standalone, runnable Python script precisely implementing the logic.

```python
# Your best performant, clean, idiomatic Python 3 code below
```
```