```plaintext
You are given a piece of pseudocode. Translate it into clean, idiomatic, and efficient Python code that exactly replicates the pseudocodeâ€™s logic and behavior.

Requirements:
- Read all inputs strictly using `input()` without any prompts or arguments.
- Produce output exactly as shown or implied by the pseudocode; no extra prints, messages, or debugging info.
- Handle all edge cases and optimize for performance to run within 5 seconds.
- Use only Python standard libraries and widely-used public packages if absolutely necessary, prioritizing built-in functionality.
- Employ meaningful variable names derived naturally from the pseudocode but keep code concise and readable.
- Avoid unnecessary comments; include only minimal ones where complex logic needs clarification.
- Wrap the entire solution inside a single Python code block like this:

```python
# your translated code here
```

- Avoid adding any text or explanation outside the code block.
- Leverage Pythonic constructs, built-in functions, and idioms to enhance clarity and efficiency.
- If the pseudocode implies multiple inputs or lines, read and parse them exactly as specified.
- Do not include placeholder or example inputs; code must be general and reusable as per the pseudocode.
```