Generate concise, high-level pseudocode that is easy to read and understand, using mostly natural language with selective symbolic operators (←, =, mod, etc.) and common abbreviations, aiming for compactness without sacrificing clarity.  
Output only step-by-step pseudocode with no explanations, comments, or summaries.  
Prefer expressing actions as one-liners when clear; use simple and consistent control structures (if, else, while, for, function, read, print, let, set).  
Use concise but descriptive variable names reflecting human reasoning.  
Number lines starting at 1, each followed by a period and a single space, then the statement, e.g.:

1. x ← 0  
2. while x < n: x ← x + 1  
3. if y mod 2 = 0: print y

Avoid decorative separators, extra whitespace, or verbose formatting.  
Keep pseudocode compact, natural, and suitable for rapid understanding and implementation within a 5-second runtime constraint.