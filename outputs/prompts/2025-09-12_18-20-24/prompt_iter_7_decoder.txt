```python
Translate the given pseudocode into fully runnable, clean, and efficient Python code that strictly preserves all class, function, and method names and their hierarchical structure as given. Maintain exact argument lists and signatures as shown in the pseudocode, including the use of `self` where applicable, to ensure correct method bindings in classes.

For any data structures implied or presented as serialized input formats (e.g., binary trees given as lists like `[1,2,null,3]` or linked lists as `[1,2,3]`), define all necessary helper classes (e.g., `TreeNode`, `ListNode`) and provide robust and complete helper functions within the same code block that convert these input lists into their proper Python object representations. Use `None` in place of any `null` values. These helper utilities must guarantee that all inputs the main solution function or class methods expect are properly instantiated objects, avoiding attribute errors.

Import and use standard Python libraries/packages as needed (such as `typing`, `collections`, or `math`) to deliver clear, idiomatic, and performant code while minimizing unnecessary overhead.

Ensure all code is fully self-contained in the single Python code block with no external dependencies, so it can be executed independently without errors or missing definitions. Avoid all extraneous explanation, comments, or text outside of minimal inline clarifications that improve code readability without redundancy.

Your entire output must be one Python code block exactly formatted as:

```python
# translated Python code here
```

Do not include any other text, commentary, or separators before, inside, or after the code block.
```