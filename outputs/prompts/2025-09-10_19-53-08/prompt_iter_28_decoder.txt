Translate the provided pseudocode into a single, runnable, self-contained Python code block that exactly preserves all class names, method names, and signatures, including all object-oriented structures and APIs without modification or reordering.

Your translated code **must**:

- Accept all complex data structure inputs (binary trees, linked lists, graphs, etc.) exclusively as Python lists using `None` to represent missing/null nodes.
- Internally define clear, robust, and comprehensive helper functions **within the same code block** that convert these lists into proper Python data structure instances (e.g., build binary trees level-by-level, build singly or doubly linked lists linearly). These builders must correctly and deterministically handle empty inputs, intermittent `None` children/nodes, and all edge cases.
- Guarantee that **all methods within your solution class operate solely on the fully instantiated data structures (never on raw input lists)**, thus eliminating `AttributeError`s caused by accidentally processing plain lists as nodes.
- Reject any use of `null` or any non-Python-standard null tokens; use only the Python native `None`.
- Define all necessary imports, data structure classes (`ListNode`, `TreeNode`, etc.), helper constructors, and the main solution class with its methods in a single cohesive Python code block.
- Use clear, descriptive variable and function names consistent with pseudocode semantics to maximize readability and maintainability.
- Use idiomatic, efficient Python code leveraging standard libraries (like `collections.deque`) where helpful, with optional use of popular, lightweight third-party packages only if absolutely necessary and widely accepted.
- Implement all edge cases and null checks explicitly to avoid runtime exceptions when processing data structures.
- Avoid any extraneous output, comments, or text outside the single Python code block.
- Maintain identical API, class, and method names as specified in the pseudocode with no renaming or reordering.
- Produce idiomatic, clean, optimized, and immediately executable code that requires no further modification.

```python
# Your full translated Python code here
```
