Generate concise, compact, and easy-to-read pseudocode directly from the given problem description. The pseudocode must:

- Preserve original class names, method names, parameters, and code structure exactly as in the source code.
- Use mostly one-liner statements with symbolic operators and common abbreviations where appropriate.
- Be high-level and natural-language based but precise, avoiding overly verbose or low-level details.
- Avoid any purpose statements, summaries, comments, explanations, or notes.
- Follow this exact line-numbered format starting from 1:

1. x ← 0  
2. while x < n: x++  

- Maintain the same class and function structure as in the original code (e.g., class definition and methods within).
- Express control flow and data operations clearly but compactly (e.g., "if x < y: ...", "for i in range(n): ...").
- Output only the pseudocode lines—no extra text or separators.
- Focus on clarity, compactness, and correctness to be efficient within a 5-second generation limit.