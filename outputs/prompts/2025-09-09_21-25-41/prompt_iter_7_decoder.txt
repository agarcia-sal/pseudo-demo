```python
Translate the given pseudocode into a complete, fully functional, and optimized Python implementation, strictly preserving all original function names and signatures exactly as provided.

- If the pseudocode references any data structures or helper classes (e.g., ListNode, TreeNode), define them fully and correctly so the code is runnable and testable.
- Produce self-contained code that requires no additional definitions or external context beyond standard Python and standard libraries.
- Use efficient and Pythonic constructs appropriate to each algorithm, ensuring runtime and memory efficiency within a 5-second execution constraint.
- Import only standard Python libraries or modules where necessary to enhance clarity and performance.
- If the pseudocode is incomplete or implies auxiliary functions, implement them fully without altering the intended logic.
- Handle all relevant edge cases robustly and avoid assuming ideal inputs unless explicitly specified.
- Output only code within a single Python code block (triple backticks + "python"), with no additional commentary, explanation, or text before or after.
- If your solution involves classes, ensure state is correctly maintained and methods properly encapsulated to enable direct use as intended by the pseudocode.
- You may apply advanced Python features (e.g., functools.lru_cache, heapq, collections, itertools) to optimize your translation.

Pseudocode:
```
{pseudocode}
```
```