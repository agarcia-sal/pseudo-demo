Generate concise, high-level pseudocode from the given problem description that is easy to read and understand. Use more natural language combined with symbolic notation and common abbreviations to keep it compact without losing clarity. Express control structures and operations clearly, favoring one-line statements wherever possible. Use intuitive, descriptive variable names without explicit type declarations unless necessary for clarity. Avoid comments, explanations, summaries, or any notes; output only pseudocode lines.

Number each line starting at 1, following this exact format:

1. x ← 0  
2. while x < n: x++

Structure pseudocode to clearly reflect the algorithm’s logic with simple loops, conditionals, assignments, function definitions, and calls. Prefer meaningful natural wording over cryptic symbols, but keep it succinct. Avoid unnecessary verbosity or low-level detail; aim for clarity and brevity enabling comprehension within 5 seconds.

Output only the numbered pseudocode lines, with no titles, separators, extra text, or formatting beyond line numbers and pseudocode lines themselves.