Generate clear, concise, and high-level pseudocode from the given problem description using a blend of natural language, common abbreviations, and symbolic notation to keep it compact yet easy to understand. Express control flow and operations succinctly, favoring single-line statements wherever meaningful. Use intuitive, descriptive variable and function names without explicit type annotations unless essential for clarity. Avoid comments, explanations, summaries, or any meta-text—output only the pseudocode lines.

Number each line starting at 1, formatted exactly as:

1. x ← 0  
2. while x < n: x++

Structure the pseudocode to clearly reflect the algorithm’s logic with simple constructs: assignments, conditionals, loops, function definitions and calls. Prioritize brevity without sacrificing readability—use natural wording over cryptic symbols but keep it compact. Omit unnecessary low-level details and verbose phrasing. Ensure the resulting pseudocode can be fully grasped within about 5 seconds.

Output only the numbered pseudocode lines with no headings, separators, extra text, or formatting beyond line numbers and pseudocode lines themselves.