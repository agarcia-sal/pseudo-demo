Generate concise, easy-to-read pseudocode for the given problem description and code. The pseudocode must:

- Use mostly natural language with symbolic notation, emphasizing brevity, clarity, and a high-level overview.  
- Keep original function names and argument names exactly as in the code.  
- Prefer one-liners and standard control structures (if, for, while, etc.); use common abbreviations and symbolic operators where appropriate.  
- Avoid all explanations, comments, notes, or summaries—only output pseudocode steps.  
- Format output as numbered lines starting at 1, each line containing a single pseudocode statement or control structure, e.g.:  
  1. x ← 0  
  2. while x < n: x++  
- Do not add separator lines, blank lines, or extra formatting outside line numbers and statements.  
- Make the pseudocode self-contained, complete, and logically aligned with the original implementation.  
- Use natural language to name variables and actions when suitable but keep it compact and unambiguous.  
- Ensure output fits within a 5-second generation limit.