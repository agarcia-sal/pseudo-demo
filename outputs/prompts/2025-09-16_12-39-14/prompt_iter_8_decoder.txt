Translate the given pseudocode into clean, well-structured, and efficient Python code that preserves all class names, function names, and their original hierarchical structures exactly as specified in the pseudocode. The implementation must be fully functional, self-contained, and optimized for correctness and performance within a 5-second execution constraint. If needed, you may import any standard Python libraries or modules to achieve the best solution.

Adhere strictly to the following instructions:

- Do not add any explanatory text or comments outside the Python code block.
- Enclose the entire Python implementation in a single, properly formatted code block:  
  ```python  
  # Your Python code here  
  ```
- Keep all class definitions, method signatures, and function names exactly as in the pseudocode.
- Maintain consistent indentation and idiomatic Python style for readability.
- Handle necessary input types and outputs exactly as implied by the pseudocode.
- Replace non-Python constructs or placeholders (such as pseudocode-specific keywords or symbols) with valid Python syntax.
- Ensure all variables (including constants, sets, lists, and other data structures) are correctly initialized according to the pseudocode logic.
- Avoid unnecessary or excessive recursion depth; prefer iterative approaches or safe recursion patterns where appropriate.
- Appropriately handle edge cases and input constraints inferred from the pseudocode.
- Do not include test code, input/output code, or main guards.
- The solution should be ready for immediate execution and testing as-is.

Implement the conversion now.