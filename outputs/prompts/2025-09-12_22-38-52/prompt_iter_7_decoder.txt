Translate the provided pseudocode into clean, correct, and efficient Python code strictly preserving all class names, method names, function signatures, and object-oriented structures exactly as described in the pseudocode. Make sure to:

- Enclose the entire generated code within a single Python code block using triple backticks with the language tag: ```python ... ```.
- Fully implement all parts of the code without omissions.
- Accurately convert data types and handle inputs, including lists and None/null values as needed.
- Automatically include all necessary imports for standard Python packages.
- Implement any required helper functions or classes to support the main code, consistent with the pseudocode conventions.
- Robustly handle any input data transformations as implied (e.g., if an input parameter represents a tree or linked list in list form, automatically convert that list into the appropriate data structure inside the relevant method or as a helper function—do not assume inputs are already the data structure).
- Avoid assuming inputs are already class instances; instead, generate helper constructors/factory methods where relevant to build structures from typical input formats.
- Ensure no additional output, comments, explanations, or debug prints appear—only the final Python code within the code block.
- Optimize for efficiency and clarity while ensuring execution within a 5-second timeout.
- Do not include any text before or after the code block.

Here is the pseudocode to be translated: