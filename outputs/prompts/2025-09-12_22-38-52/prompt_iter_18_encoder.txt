Generate clear, compact, high-level pseudocode that is easy to read and understand.  
Retain all original class names, function names, parameter names, and their exact nesting/structure as in the source code.  
Start each class with the exact original declaration line. Start each function with:  
    in function <function_name> (parameters)  
Use mostly natural language with concise symbolic operators and common abbreviations.  
Favor one-line or minimal-line statements where possible, using simple control flow forms like:  
    if condition then  
    while condition do  
    for var in range do  
Use concise actions such as let, read, write, return, call, append, swap. Avoid verbose syntax or language-specific types unless verbatim in declarations.  
Do not include comments, explanations, summaries, or purpose statements—output only numbered pseudocode lines.  
Number each line sequentially starting at 1, formatted as:  
1. x ← 0  
2. while x < n do x++  
Avoid blank or separator lines within output.  
Ensure brevity without sacrificing clarity by balancing natural language with concise expressions.  
Output must be runnable and readable within 5 seconds.