Generate concise, clear, and easy-to-read pseudocode for the given problem description, using mostly natural language with symbolic notations and abbreviations to keep it compact and high-level.  
- Output only the pseudocode; do not include purpose statements, summaries, explanations, or clarifying comments.  
- Keep all original function names exactly as in the source code.  
- Prefer short, clear one-liners and simple control structures (loops, conditionals) that reflect the logic plainly and naturally.  
- Number each step starting at 1, formatting exactly as:  
 
  1. x ← 0  
  2. while x < n: x++  

- Avoid any separator lines or extra formatting characters.  
- Use straightforward terms for data structures (list, map, array) and standard operators.  
- Strive for brevity without losing clarity—natural language flow is preferred inside lines for readability.  

Example style to emulate:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A