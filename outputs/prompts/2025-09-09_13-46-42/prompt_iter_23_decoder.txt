Translate the given pseudocode into a fully self-contained, directly runnable Python 3 program that meets all of the following stringent requirements:

- Use **exactly the same** function names, parameter names, class names, and variable names as in the pseudocode, with zero renaming or abstraction.
- Implement every user-defined class, helper function, and data structure explicitly or implicitly referenced by the pseudocode; rely **only on the Python Standard Library** unless explicitly stated otherwise.
- Ensure your solution handles **all edge cases, constraints, and error conditions** implied or suggested by the pseudocode gracefully and correctly.
- Optimize for maximum runtime efficiency and memory usage so the solution consistently runs within 5 seconds per test, while producing clean, idiomatic, and readable Python code.
- Include **precise Python type hints** on all functions, parameters, return types, variables, and class attributes to enable robust static analysis.
- Do **not** add any comments, debug or print statements, placeholder code, or extraneous explanations.
- Output the solution enclosed solely within one Python code block formatted as:

```python
# Complete and exact Python implementation here
```

This prompt demands a minimal, production-quality implementation that requires **no further modification or enhancement** to pass comprehensive correctness, robustness, and performance tests against the original pseudocode specification.