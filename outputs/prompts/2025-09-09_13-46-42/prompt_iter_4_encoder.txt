Generate concise, clear, and easy-to-understand pseudocode for the given problem description. Keep it high-level, using mostly natural language with symbolic notations and abbreviations where useful.  
- Do not add purpose statements, summaries, explanations, or clarifying notes. Only output the pseudocode.  
- Retain original function names exactly as in the source code.  
- Use compact one-liners, simple loops, and conditionals. Prefer brevity without sacrificing clarity.  
- Format steps as numbered lines starting at 1, following this style exactly:  

1. x ← 0  
2. while x < n: x++  

- Avoid separator lines or extra formatting characters.  
- When describing data structures or operations, use straightforward terms like "list," "map," "array," and standard operators.  
- Reflect control flow and logic simply and intuitively, favoring natural language flow inside lines for readability.  

Example style to emulate:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A