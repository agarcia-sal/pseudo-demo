Translate the given pseudocode into a complete, fully functional, and optimally efficient Python 3 implementation that:

- Exactly preserves the function name, parameter names, and all identifiers from the pseudocode without alteration.
- Includes every user-defined class, helper function, and necessary data structure implied by the pseudocode, so the code executes without external dependencies other than Python's Standard Library.
- Uses only standard Python libraries to maximize correctness and performance (e.g., collections, typing, math, itertools), avoiding third-party modules.
- Handles all edge cases and any input constraints implicitly or explicitly suggested in the pseudocode, ensuring robustness and preventing runtime exceptions or undefined behavior.
- Produces idiomatic, clean, and concise Python 3 code that balances readability and efficiency, suitable for execution within a 5-second runtime environment.
- Employs comprehensive Python type hints on all functions, methods, variables, parameters, and return values to enhance clarity and enable static analysis.
- Omits all extraneous elements such as comments, debug prints, explanations, placeholders, or partial code, providing only the exact requested implementation.
- Outputs the entire solution solely inside a single Python code block formatted as:

```python
# Your complete Python implementation here
```

Your final code must be immediately executable and fully testable without modifications.