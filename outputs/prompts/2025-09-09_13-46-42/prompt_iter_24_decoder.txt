Translate the given pseudocode into a single, fully executable Python 3 script that strictly adheres to the following advanced criteria:

- Use **exactly the same names** (functions, parameters, variables, classes) as in the pseudocode with zero renaming, aliasing, or abstraction.
- Implement all explicitly or implicitly referenced classes, helper functions, and data structures **completely and correctly**.
- Handle **all plausible edge cases, input constraints, and error conditions** that the pseudocode implies, even if not explicitly stated.
- Optimize your implementation to consistently run under **5 seconds per test**, including efficient use of time and memory, by applying best algorithmic practices and Pythonic idioms.
- Provide **full, precise Python 3 type hints** on every function signature, variable, attribute, and intermediate value, ensuring flawless static type checking compatibility.
- Use **only standard Python 3 libraries**, except when the pseudocode explicitly permits additional packages; no placeholders, comments, example inputs, debugging, or explanatory text.
- Output your entire solution enclosed exactly within a single Python code block as shown below, with no additional text or markup:

```python
# Complete, production-ready Python 3 code implementing the pseudocode exactly
```

This prompt demands a minimal, production-grade, self-contained script requiring **no further adjustment** and passing exhaustive correctness, robustness, and performance tests at runtime.