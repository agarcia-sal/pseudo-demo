Translate the provided pseudocode into a complete, self-contained, and fully executable Python 3 implementation that strictly maintains the original function name, parameter names, control flow, and return type without deviation. Your output must:

- Be enclosed exclusively within a single Python code block, formatted as:
```python
# Your entire Python implementation here
```

- Include all user-defined classes, helper functions, and data structures implied or required by the pseudocode so that the code runs correctly without any external dependencies beyond the Python Standard Library.

- Only import standard Python libraries when absolutely necessary; however, to maximize efficiency and expressiveness, you are allowed to use any Python standard library modules (e.g., `collections`, `typing`, `math`, etc.). Do not use third-party or external modules.

- Produce clean, idiomatic, and optimized Python 3 code that balances clarity, maintainability, and performance — the implementation must reliably handle typical cases plus edge cases inferred from the pseudocode within a 5-second runtime constraint.

- Annotate all functions, methods, parameters, return types, and user-defined classes comprehensively with Python type hints to facilitate static analysis and improve readability.

- Preserve all identifiers from the pseudocode (function names, parameter names, and variables) exactly as given, avoiding unnecessary renaming while ensuring semantic alignment.

- Robustly handle any potential edge cases, invalid inputs, or boundary conditions implied by the pseudocode, to prevent runtime exceptions or undefined behavior.

- Avoid including any explanatory comments, debug prints, placeholder code, partial solutions, or extraneous output — provide only the exact code that implements the pseudocode fully and correctly.

- Ensure that the output is a complete and executable code snippet that can be immediately used or tested without modification.

Your final submission will be directly evaluated and deployed. Prioritize correctness, completeness, clarity, and efficiency under these constraints.