Translate the provided pseudocode into fully working, clean, and efficient Python code with the following constraints and enhancements:

- Preserve all original class names, function names, parameters, and class/object structures exactly as specified in the pseudocode.
- Implement all data structures (e.g., trees, linked lists) represented as lists or other forms in the pseudocode by converting input lists into proper Python node-based structures, using helper functions if necessary.
- Use standard Python idioms and conventions (e.g., use `None` instead of `null`), and include all required imports explicitly.
- Write code that handles all edge cases properly and avoids any runtime errors; ensure logically complete code without dangling or partial fragments.
- Optimize for correctness and time efficiency to run within a 5-second time limit.
- Allowed to use any standard Python libraries or modules to simplify and enhance clarity, correctness, and performance.
- Provide meaningful comments only where code complexity or intent is unclear; avoid redundant or excessive comments.
- Do not include extraneous explanations or output outside the requested code.
- Enclose the entire solution in a single Python code block as shown below.
- Maintain readability, clarity, and idiomatic Python style following best practices.

```python
# Your fully functional translated code here
```