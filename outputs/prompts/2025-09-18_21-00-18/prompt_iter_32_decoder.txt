Translate the given pseudocode into clean, correct, and efficient Python code, strictly preserving all class names, function names, signatures, and their class/object structures exactly as specified in the pseudocode. Your translation must:

- Convert input representations like lists for linked lists or trees into proper Python data structures using helper functions, ensuring no runtime errors or type mismatches.
- Include all necessary imports and utility/helper functions within the code.
- Handle all edge and boundary cases robustly.
- Use idiomatic Python conventions and optimize for clarity, correctness, and performance under a 5-second runtime limit.
- Return or output results exactly as intended in the pseudocode.
- Avoid incomplete code fragments, extraneous print/debug statements, or unrelated comments. Include only concise comments that clarify non-trivial logic.
- Use standard Python libraries or modules whenever beneficial.
- Enclose the entire translated code in one properly formatted Python code block, like this:

```python
# your translated code here
```

Produce code ready for direct execution and testing without any further modification.