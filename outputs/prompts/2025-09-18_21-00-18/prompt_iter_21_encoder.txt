Given source code containing classes, functions, and related code elements, produce a strictly hierarchical, fully abstract pseudocode that:

- Keeps all original class names, function names, and exact parameter names unchanged; preserves precise nesting and structural hierarchy of classes, methods, inner functions, and other code blocks exactly as in the source.
- Uses consistent indentation to represent all code blocks and scopes clearly.
- Uses only uppercase pseudocode control keywords: CLASS, FUNCTION, IF, ELSE IF, ELSE, FOR, WHILE, RETURN, AND, OR, NOT, END FUNCTION, END CLASS, END IF, END FOR, END WHILE.
- Expresses all operations, conditions, and control flows fully in descriptive natural language; avoids any programming symbols, literal notation, or contractions.
- Converts every arithmetic and logical operator to capitalized full-word equivalents, for example: PLUS, MINUS, MULTIPLIED BY, DIVIDED BY, MODULO, EQUALS, NOT EQUALS, LESS THAN, LESS THAN OR EQUAL TO, GREATER THAN, GREATER THAN OR EQUAL TO, AND, OR, NOT.
- Uses standardized, precise verbs for data manipulation: SET variable TO value, INCREMENT variable BY amount, DECREMENT variable BY amount, APPEND element TO list, REMOVE element FROM list, ASSIGN reference TO object, CALL function WITH PARAMETERS.
- Describes indexing and element access in clear natural language, e.g., element at position index OF collection, substring from position start TO end OF string.
- Presents conditional expressions completely, without abbreviation or shorthand.
- Describes loop iterations explicitly and naturally, for example: FOR each element IN collection, FOR index FROM start TO end, WHILE condition HOLDS.
- Represents constructors and all special methods verbatim by their exact names and parameters.
- Abstracts complex data structures, initializations, conversions, or helper routines as separate FUNCTIONS with their original names, summarizing their behavior without language-specific syntax.
- Omits all literal delimiters and symbols such as brackets, braces, quotes, commas, colons, periods, semicolons, or other special characters in the data or code.
- Outputs pseudocode onlyâ€”no comments, explanations, meta text, or any extraneous content before, after, or within the pseudocode.
- Terminates all blocks explicitly (e.g., END IF, END FOR, END FUNCTION, END CLASS).
- Keeps the style concise yet clear, favoring moderately complex natural language phrasing to maximize readability while preserving abstraction and precision.
- Produces final output exclusively as pseudocode maintaining the exact original class and function names and their parameter lists.

Example style for a function named calc_average operating on list_of_numbers:

FUNCTION calc_average(list_of_numbers)  
    SET total_sum TO zero  
    FOR each number IN list_of_numbers  
        INCREMENT total_sum BY number  
    END FOR  
    SET average_value TO total_sum DIVIDED BY the LENGTH OF list_of_numbers  
    RETURN average_value  
END FUNCTION