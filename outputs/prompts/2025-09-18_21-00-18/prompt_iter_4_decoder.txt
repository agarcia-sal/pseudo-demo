Translate the provided pseudocode into clear, correct, and efficient Python code, strictly preserving all class names, function names, and their signatures as given in the pseudocode. Your translation must maintain the same class structure and method organization. 

- Enclose the entire code only within a Python code block formatted like this:

```python
# translated code here
```

- When translating, ensure:  
  * Input lists or arrays containing null-like values are converted to valid Python `None` objects.  
  * Any repeated data structures or utilities (e.g., TreeNode, ListNode, helper functions) are fully implemented if implied by pseudocode.  
  * Code is robust against invalid inputs or edge cases as suggested by the pseudocode logic.  
  * Use appropriate Python data structures and standard libraries for optimal performance.  
  * Avoid extraneous output, explanations, or comments except where necessary to clarify complex logic and maintain readability.  
  * Preserve the original function and method signatures exactly, including parameters and return types if specified.  
  * Avoid placeholdersâ€”produce fully runnable implementations.  

- Optimize for runtime performance and correctness within a 5-second time limit, favoring idiomatic Python while respecting the problem constraints.  
- Import and use any Python standard or external packages if they speed up or clarify the solution.  
- Do not include any text outside the code block.

Your output should be only the translated Python code enclosed in the Python code block as specified above.