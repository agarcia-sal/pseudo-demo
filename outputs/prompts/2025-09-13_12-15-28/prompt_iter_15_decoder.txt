Translate the provided pseudocode into clean, production-quality Python code with the following mandatory requirements:

- Use **exactly the same class names, method/function names, signatures, input/output formats, data structures, and nesting structure** as specified in the pseudocode. Do not alter, omit, or invent new components.
- Your entire response must be **only one Python code block** starting with three backticks and `python` and ending with three backticks. No narrative, explanation, comments, or any other text outside the code block.
- Implement the logic as fully, accurately, and efficiently as possible, covering all behaviors and edge cases implied by the pseudocode.
- Optimize for **clarity, idiomatic style, and runtime performance** (targeting execution under 5 seconds for typical inputs).
- You may import any Python standard or well-known third-party libraries **only if they improve code simplicity, clarity, or performance**, but do not import unnecessary modules.
- Exclude any debugging/logging/print statements or inline explanatory comments.
- Assume the pseudocode fully defines the required functionality. Do not infer, add, or speculate beyond what is given.
- Preserve original data structures and class hierarchy exactly; do not flatten or restructure beyond faithful translation.
- The code must be **ready to run as-is**, reflecting exactly what the pseudocode dictates.

Here is the pseudocode to translate: