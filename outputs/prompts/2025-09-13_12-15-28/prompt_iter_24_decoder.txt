Translate the provided pseudocode into complete, working, and highly efficient Python code that meets these strict requirements:

- Retain **all original class names, function/method names, signatures, input/output formats, and data structures exactly as given in the pseudocode**; do not change or rename anything.
- Produce your entire output as a single contiguous Python code block labeled explicitly with triple backticks and `python` (```python ... ```). **Do not** include any comments, explanations, or extra text outside this block.
- Fully implement the pseudocodeâ€™s logic, carefully handling all explicit and implied edge cases to ensure maximal correctness and robustness for all possible inputs.
- Write clean, idiomatic, and memory- and CPU-efficient Python code optimized to run well within a 5-second time constraint on typical inputs.
- Import and use any Python standard libraries or third-party packages if they improve clarity, correctness, or performance, but avoid unnecessary or unused imports.
- Preserve the exact structure, nesting, and hierarchy of classes and methods as specified in the pseudocode; do not flatten or restructure them.
- Do not introduce any debugging, print, logging, or unrelated code fragments.
- Do not add or assume any functionality or API beyond what is explicitly described or implied by the pseudocode.
- Treat the pseudocode as complete and self-contained; translate it faithfully, without omissions or unwarranted additions.
- Ensure the final code style is consistent, professional, and production-quality.

Here is the pseudocode to translate: