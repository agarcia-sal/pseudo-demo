Translate the provided pseudocode into clean, fully functional, and highly optimized Python code that satisfies the following criteria exactly:

- Preserve **all class names, method/function names, input/output signatures, and data structures exactly as they appear in the pseudocode** without any modification.
- Implement **all logic explicitly and thoroughly**, covering every detail and handling all implicit and explicit edge cases to maximize correctness and robustness.
- Return your entire solution **only in one contiguous Python code block, enclosed with triple backticks and labeled `python`**:  
  ```python  
  # your code here  
  ```  
  Do not include any explanations, comments, or extra text outside this code block.
- Maintain the exact class and method nesting structures as indicated in the pseudocode. Do not flatten or rearrange.
- Your code must be idiomatic, performant, and memory-efficient, capable of running within a 5-second time limit on typical inputs.
- You may import and use any Python standard library or well-known third-party libraries that assist in clearer, more efficient, or more concise implementations. Avoid unnecessary imports.
- Do not introduce any debugging, testing, print, or logging statements.
- Do not infer or invent additional behaviors, interfaces, or data structures beyond what is explicitly stated in the pseudocode.
- Assume the pseudocode represents complete, self-contained functionality. Do not omit or add any functionality.
- The final code should follow professional style conventions and be production-ready.

Here is the pseudocode to translate: