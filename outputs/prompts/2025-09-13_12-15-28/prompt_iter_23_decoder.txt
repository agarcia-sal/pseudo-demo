Translate the given pseudocode into fully functional, production-quality Python code adhering to these strict guidelines:

- Retain **all class names, method/function names, signatures, input/output formats, and data structures exactly as stated in the pseudocode with zero modifications**.
- Preserve the exact class nesting and object hierarchy without flattening or restructuring.
- Implement the logic completely, covering **all explicit and implicit edge cases** to maximize correctness and reliability in diverse scenarios.
- Deliver your entire output as a single Python code block labeled `python` (```python ... ```) with **no explanatory text, comments, or anything outside this block**.
- Write highly idiomatic, clean, concise, performant, and memory-optimized Python code designed to run efficiently within 5 seconds on typical inputs.
- You may use any Python standard library or third-party modules to improve clarity, compactness, or performance â€” but do not import unused libraries or add unnecessary dependencies.
- Do not add any debugging, logging, print statements, or auxiliary code unrelated to the exact pseudocode logic.
- Do not infer, add, or invent functionality beyond what the pseudocode explicitly specifies. Treat the pseudocode as complete and self-contained.
- Follow consistent, professional Python style conventions appropriate for production code.
- Begin your response immediately with the code block and end it with the closing triple backticks, with no extra formatting or text.

Here is the pseudocode to translate: