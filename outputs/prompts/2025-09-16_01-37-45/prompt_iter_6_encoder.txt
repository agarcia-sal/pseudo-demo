Write clear, concise, and high-level pseudocode directly from the problem description, preserving all function and class names exactly as given, including their full hierarchy and structure within classes or objects.

Use predominantly natural language enriched with essential symbolic notations (such as ←, +, ==, etc.) and intuitive abbreviations to keep the pseudocode compact yet highly readable. Favor one-liner statements when appropriate, omit verbose control keywords, and do not include separator lines or extra blank lines.

Format pseudocode with line numbers as follows:

1. x ← 0  
2. while x < n: x++  

Maintain consistent indentation to reflect logical blocks, but keep the style minimal and high-level. 

Output only the pseudocode—no explanations, notes, comments, or summaries.

Example:

If the input code is:
```python
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

The output pseudocode should be:
```
FUNCTION calc_average(nums)
    SET total TO 0
    FOR num IN nums
        INCREMENT total BY num
    SET avg TO total DIVIDED BY LENGTH OF nums
    RETURN avg
END FUNCTION
```