```python
Translate the given pseudocode into clean, fully functional, idiomatic, and highly efficient Python code, preserving exactly all class names, function names, method signatures, and class/object hierarchy as presented. Follow these updated instructions strictly:

- Output only one code block enclosing the entire solution as:
```python
# translated code here
```

- Do not modify any original class or function names, signatures, or hierarchy.

- Convert pseudocode data structures and values to the most natural, performant Python equivalents (e.g., lists for arrays, dicts for maps, sets for lookup, deque for double-ended queues, None for null). Use Python's built-in types and standard libraries to maximize clarity and performance.

- Translate control flow, looping ranges, and logical checks precisely, ensuring correctness and efficiency, avoiding extraneous or redundant operations.

- Handle all implied edge cases, input constraints, and boundary conditions explicitly, guaranteeing robust, error-free code that confidently runs within a 5-second time limit.

- Favor Pythonic idioms and leverage standard Python modules (e.g., collections, heapq, functools) to optimize runtime and readability. Avoid importing obscure or unnecessary libraries.

- Implement memoization, caching, or data structure enhancements if they improve correctness, robustness, or runtime efficiency without changing algorithmic logic.

- Do not introduce any explanatory comments, print statements, or code outside the single requested Python code block.

- Do not invent, omit, or alter problem logic or algorithmic flow; the output must be a faithful and exact implementation of the provided pseudocode.

- Assume input data matches problem constraints strictly. Defensive checks are encouraged only where pseudocode implies or suggests special handling.

Your goal: produce a single Python snippet, fully executable and encapsulated inside one Python markdown code block, that faithfully embodies the given pseudocode with maximum correctness, clarity, and performance, strictly adhering to these rules.
```