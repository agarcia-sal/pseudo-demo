Translate the given pseudocode into clean, fully functional, and idiomatic Python code that strictly preserves all original class names, function names, method signatures, and class/object hierarchies exactly as specified. Your generated code must satisfy these requirements:

- Output *only* a **single** Python code block formatted precisely as:

```python
# Your complete translated code here
```

- Keep all class and function names, signatures, and nesting exactly as in the pseudocode without any renaming, restructuring, or omission.

- Faithfully implement all data structures and constructs implied by the pseudocode, converting abstract elements (e.g., `null`, ranges, iteration constructs) into valid, efficient Python equivalents.

- Import and use any relevant built-in or standard Python libraries necessary to write performant, correct, and idiomatic Python solutions. Avoid unnecessary or redundant imports.

- Incorporate minimal helper functions or classes only when explicitly required to correctly and efficiently realize the logic of the pseudocode.

- Ensure your translated code handles all edge cases and input constraints as indicated or logically implied by the pseudocode.

- Do not add any explanation, comments, debugging statements, prints, or extra text outside of the single Python code block.

- Strictly implement the algorithm as described without altering logic or inventing missing details; faithfully realize the intended behavior.

- Prioritize clarity, conciseness, and performance to guarantee the code runs efficiently within typical 5-second time limits.

Your response must contain only the code, fully enclosed within the specified Python code block with no other content before or after.