Write clear, concise, and high-level pseudocode from the given problem description, strictly preserving all original function and class names, including their exact hierarchy and nesting inside classes or objects.

Make the pseudocode easy to read and understand by using natural language combined with well-chosen symbolic notations (e.g., ←, +, ==) and common abbreviations. Prefer one-liners when suitable and avoid verbose control keywords. Use compact, expressive statements that convey the algorithm clearly yet succinctly.

Number each line starting from 1, following the exact formatting style below (no separator lines or extra blank lines):

1. x ← 0  
2. while x < n: x++

Output only the pseudocode—do not include explanations, summaries, comments, or extraneous notes.

Example:

If the code is:
```python
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

Output pseudocode exactly as:
```
FUNCTION calc_average(nums)
    SET total TO 0
    FOR num IN nums
        INCREMENT total BY num
    SET avg TO total DIVIDED BY LENGTH OF nums
    RETURN avg
END FUNCTION
```