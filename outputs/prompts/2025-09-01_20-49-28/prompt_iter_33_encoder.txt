Generate concise, clear, and high-level pseudocode that directly implements the given solution using the exact original function name(s). Use a natural language style blended with symbolic expressions, abbreviations, and one-liners whenever possible. Write pseudocode that is compact yet fully understandable without filler words like “let,” “set,” or “initialize” unless absolutely necessary for clarity. Prefer implicit looping constructs (for all, for i in range, etc.), combined statements, and straightforward return expressions. Avoid explanations, comments, headers, separators, or summaries—output only numbered pseudocode lines. Follow this format precisely:

1. x ← 0  
2. while x < n: x++

Ensure each solution is self-contained, preserving original function signatures, and balances brevity with clarity. An exemplary style is:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A