Generate concise, clear, and high-level pseudocode that precisely implements the logic of the original code, preserving all original function and parameter names exactly. Favor natural language phrasing blended with symbolic operators and abbreviations for compactness. Use simple, direct control structures (e.g., if, else if, for i in range, for each) and avoid unnecessary filler words such as “let,” “set,” or “initialize” unless they improve clarity or specify data types. Prefer implicit iterations, one-liners, and direct assignments or returns. No comments, explanations, headers, summaries, or separators—only numbered pseudocode lines starting at 1, formatted as:

1. x ← 0  
2. while x < n: x++

Produce a complete, self-contained pseudocode solution that balances brevity with readability and fully expresses the algorithm. Use idiomatic pseudocode syntax but keep it intuitive. Preserve original function signatures exactly. Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A