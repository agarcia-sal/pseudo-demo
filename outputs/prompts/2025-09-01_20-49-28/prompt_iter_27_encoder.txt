Generate clear, compact, and easy-to-read pseudocode that directly implements the original solution, preserving exact original function names and signatures. The pseudocode should blend natural language with symbolic expressions, abbreviations, and one-liners to remain high-level yet complete and unambiguous. Use simple, standard control flow constructs (if, else if, for i in range, for each) and direct assignments without filler words like “let,” “set,” or “initialize” unless essential for clarity. Prefer implicit loops and concise expressions for brevity; use straightforward return statements. Do not include comments, explanations, summaries, or separators; output only the numbered pseudocode lines. Format as:

1. x ← 0  
2. while x < n: x++

Ensure the pseudocode solution is self-contained and fully implements the original logic, striking a balance between brevity and clarity. Emulate this style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A