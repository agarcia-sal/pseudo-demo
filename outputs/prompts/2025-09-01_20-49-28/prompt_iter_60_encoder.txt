Generate concise, high-level pseudocode that preserves the original function name and parameters exactly.  
Make the pseudocode compact, readable, and easy to understand by blending natural language with symbolic operators, abbreviations, and implicit expressions.  
Favor one-liners and terse control structures (e.g., if, else if, for i in range, for each) and direct assignments using ←, ++, -- without filler phrases like “let,” “set,” or “initialize” unless essential.  
Use clear, idiomatic iterations (e.g., for i in range, for each x in collection).  
Write direct return statements with no added explanation or comments.  
Output only numbered lines formatted as:  
1. x ← 0  
2. while x < n: x++  
  
Ensure each pseudocode snippet is complete, self-contained, and faithful to the original logic, optimizing for brevity without sacrificing clarity or correctness.  
Avoid headers, explanations, summaries, comments, separators, or metadata—output solely the numbered pseudocode lines.