Generate clear, concise, high-level pseudocode that directly implements the solution using the exact original function names. Prioritize readability by blending straightforward natural language with compact symbolic expressions, abbreviations, and mostly one-liners. Use simple, explicit control structures like “for each,” “for i in range,” “if condition: action,” and direct assignments without filler words (“let,” “set,” “initialize”) unless absolutely needed for clarity. Represent operations and conditions succinctly with common symbols (←, +=, ≠, =, <, max, abs) and implicit looping constructs. Return values using plain “return” statements. Exclude all explanations, comments, summaries, or separators; output only the numbered pseudocode lines in this exact format:

1. x ← 0  
2. while x < n: x++

Ensure the pseudocode stands alone as a complete, minimal, understandable solution. Follow this sample style precisely for formatting and structure:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A