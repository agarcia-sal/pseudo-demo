Generate concise, clear, and easy-to-read pseudocode that closely implements the original solution with exact original function names. Use a natural-language style combined with symbolic notation, abbreviations, and one-liner statements to keep it compact and high-level. Favor simple, idiomatic control flow constructs (e.g., if, else if, for i in range, for each) and direct assignments without unnecessary keywords like “let,” “set,” or “initialize,” unless essential for clarity or type indication. Prefer implicit iteration and expressions for brevity. Output only the pseudocode lines, numbered sequentially starting at 1, with no comments, explanations, summaries, or separators. Use straightforward return statements that directly express result values. Format should follow:

1. x ← 0  
2. while x < n: x++

Ensure each pseudocode solution is standalone, fully clear, and balances brevity with readability while strictly preserving original function signatures. Emulate this style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A