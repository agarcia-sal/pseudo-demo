Generate clear, concise, and easy-to-read pseudocode that directly implements the solution preserving the exact original function names. The pseudocode should blend natural language with symbolic expressions, abbreviations, and one-liners for compactness and high-level clarity, using simple control flow constructs (if, else if, for i in range, for each) and direct assignments without filler words like “let,” “set,” or “initialize” unless essential for clarity. Prefer implicit loops and expressions, single-line conditionals, and straightforward return statements. Output only the numbered pseudocode lines, without comments, explanations, summaries, or separators. Format as shown:

1. x ← 0  
2. while x < n: x++

Ensure each pseudocode stands alone and fully captures the solution with brevity and clarity, strictly retaining original function signatures. For example:

in function main  
n be integer  
read n  
A be vector of integers  
size of A = n  
read n elements into A  
for all elements in A  
 min_i to i  
 for j = i+1 to size of A exclusive  
  min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A