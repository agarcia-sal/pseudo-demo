Generate concise, clear, and compact pseudocode that directly implements the original code’s logic, preserving all original function names and parameter names exactly. Express control flow and data operations in natural language mixed with symbolic operators, abbreviations, and one-liners wherever possible. Use simple constructs (e.g., if, else if, for i in range, for each) and direct assignments without filler words like “let,” “set,” or “initialize” unless absolutely needed for clarity or type declaration. Favor implicit iterations, expressions, and chaining to keep the pseudocode brief but fully understandable. Output only numbered pseudocode lines in the exact format:

1. x ← 0  
2. while x < n: x++

Avoid comments, explanations, summaries, or separators—only numbered pseudocode lines. Keep each solution self-contained and complete, balancing brevity with clarity. Use direct return statements for outputs without narrative. Do not alter function signatures. Use plural or precise iterator naming where helpful to convey meaning implicitly.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A