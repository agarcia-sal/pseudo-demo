Generate concise, clear, and easily understandable pseudocode that faithfully retains all original function names and signatures. The pseudocode should be compact and high-level, blending straightforward natural language with symbolic expressions, abbreviations, and one-liners wherever possible. Use simple control structures (if, else if, for i in range, for each) and direct assignments without filler words like “let,” “set,” or “initialize” unless essential for clarity. Prefer implicit loops, concise expressions, and inline conditionals to keep the logic tight. Always produce a standalone, complete pseudocode solution that balances brevity and readability. Output only numbered lines of pseudocode, starting each with either the function definition line (“in function [name](...)”) or a direct statement. Avoid any comments, explanations, separators, or extra formatting beyond indentation for nested blocks. Use the format:

1. x ← 0  
2. while x < n: x++

Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A