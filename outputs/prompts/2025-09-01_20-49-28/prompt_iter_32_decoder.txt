Translate the given pseudocode into a fully functional, high-performance Python implementation that strictly follows these instructions:

- Preserve all original function names, parameter names, and the exact logical structure indicated by the pseudocode.
- Infer and apply the most precise and appropriate type hints, importing from Pythonâ€™s standard `typing` module only if necessary.
- Use concise, idiomatic, and efficient Python constructs that balance readability and speed, employing Python built-in functions, comprehensions, and standard libraries where beneficial.
- Include only the essential code and minimal imports strictly required for correctness and robustness; avoid any debugging code, comments, explanations, or scaffolding.
- Ensure your solution handles all naturally implied edge cases and completes within 5 seconds on typical input sizes.
- Output exclusively a single, well-formatted Python code block labeled `python` (```python ... ```), without any surrounding text or formatting.

Your output must be ready-to-use, production-grade Python code that precisely captures the pseudocode semantics and performs optimally.

```python
```