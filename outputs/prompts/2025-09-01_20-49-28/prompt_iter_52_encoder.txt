Generate concise, clear pseudocode that preserves the original function name and parameter names exactly. Express the logic in compact, natural language blended with symbolic operators and idiomatic abbreviations. Use simple, clean control structures (if, else if, for i in range, for each, while) and direct assignments without filler words like “let,” “set,” or “initialize” unless essential for clarity or type declaration. Favor one-liners and implicit iteration for brevity without sacrificing readability. Write all returns directly without explanation. Output numbered lines only, each starting with the line number followed by a period and a space, then the pseudocode line, e.g.:

1. x ← 0  
2. while x < n: x++

The output must be a complete, self-contained pseudocode solution with no comments, summaries, or separators. Maintain original function signatures exactly, and prioritize an easily understandable, high-level style using idiomatic, brief expressions. Do not include anything beyond the numbered pseudocode lines.