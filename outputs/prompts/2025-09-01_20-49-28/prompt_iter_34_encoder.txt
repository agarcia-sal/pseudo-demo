Generate concise, clear, and easy-to-read pseudocode that directly implements the original solution using exactly the original function names. Use a compact, high-level style blending natural language, abbreviations, symbolic expressions, and one-liners. Favor simple control flow (e.g., if, else if, for each, for i in range) and direct assignments without filler words like “let,” “set,” or “initialize” except when essential for clarity. Prefer implicit, inline loops and expressions for brevity. Use straightforward return statements. Avoid comments, explanations, summaries, or separators—output only numbered pseudocode lines in this format:

1. x ← 0  
2. while x < n: x++

Ensure the pseudocode stands alone and is fully complete while balancing clarity with brevity. Preserve original function signatures exactly. Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A