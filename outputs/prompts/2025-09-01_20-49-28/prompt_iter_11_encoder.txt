Generate clear, concise, and easily readable pseudocode that directly implements the solution using the exact original function names. Write pseudocode that is compact and high-level, blending natural language with symbolic expressions, abbreviations, and one-liners whenever possible. Use simple control flow (e.g., if, else if, for each, for i in range) and direct assignments without filler words like “let,” “set,” or “initialize” unless needed for essential clarity. Prefer implicit loops and expressions for brevity. Use straightforward return statements for outputs. Avoid any comments, explanations, summaries, or separators—output only the numbered pseudocode lines. Format as:

1. x ← 0  
2. while x < n: x++

Ensure each pseudocode solution is complete and stands alone, balancing brevity with full clarity and preserving original function signatures. Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A