Generate concise, high-level pseudocode that faithfully implements the problem’s solution using the exact original function names. Blend clear natural language with compact symbolic expressions, abbreviations, and one-liners to maximize readability and brevity. Use simple control structures and direct assignments without filler words like “let,” “set,” or “initialize” unless necessary for clarity. Prefer implicit looping constructs such as “for each,” “for i in range,” or “for all items.” Return values must use straightforward “return” statements. Avoid explanations, comments, notes, summaries, or separators—output only the pseudocode itself. Format the output as numbered lines in this style:

1. x ← 0  
2. while x < n: x++  

Ensure the pseudocode stands alone as a complete, understandable solution with minimal verbosity and maximal clarity. Here is an example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A