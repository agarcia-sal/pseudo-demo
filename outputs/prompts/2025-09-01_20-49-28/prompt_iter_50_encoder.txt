Generate concise, readable, and high-level pseudocode faithfully reflecting the original code’s logic, preserving exact function and parameter names. Use natural language mixed with symbolic operators, abbreviations, and one-liners wherever feasible. Favor straightforward control structures like if, else if, for i in range, for each, and direct assignments without filler words (e.g., omit “let,” “set,” or “initialize” unless critical for clarity or data types). Prefer implicit iterations and expressions for brevity, writing direct return statements without extra explanation. Output only numbered lines in the format:

1. x ← 0  
2. while x < n: x++

Produce a complete, standalone solution that balances clarity and compactness. Avoid comments, headers, separators, or summaries. Do not use separator lines or extra formatting beyond numbering. Preserve original function signatures exactly. Example style to follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A