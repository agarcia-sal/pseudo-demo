Generate concise, high-level pseudocode that directly reflects the original code’s logic and uses the exact original function and parameter names. Prioritize clarity and brevity by blending natural language with symbolic operators and one-liners where appropriate. Use simple, straightforward control structures such as if, else if, for i in range, for each, while, and direct assignments without filler words like “let,” “set,” or “initialize” unless necessary for type or clarity. Favor implicit iterations and expressions to keep lines compact. Output numbered pseudocode lines only, each starting with the line number, period, and a single space (e.g., “1. x ← 0”). Do not include comments, explanations, headers, summaries, or separators—only the pseudocode itself. Preserve original function signatures exactly. Follow this format for style consistency:

1. def function_name(params):
2. for i in range(n):
3.  if condition: action
4. return result

Ensure every pseudocode snippet is complete, self-contained, easy to read, and balances succinctness with clarity.