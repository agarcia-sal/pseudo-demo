```python
Translate the given pseudocode into a fully working, idiomatic, and production-grade Python implementation that strictly:

- Retains all function names, parameter names, and logical flow exactly as in the pseudocode, never inventing behavior beyond what is specified.
- Derives precise and accurate type hints from the pseudocode inputs and outputs; include standard typing imports only if needed.
- Includes comprehensive handling of all edge cases implied or reasonably inferable from the input domain.
- Uses only minimal necessary imports from the standard library or highly justified third-party packages, prioritizing built-in language features for clarity and performance.
- Generates concise, clear, and optimized code leveraging Pythonic constructs (comprehensions, generators, built-ins) without sacrificing readability or correctness.
- Avoids redundant calculations, needless intermediate variables, or extraneous code; the output should be minimal but fully robust.
- Excludes any logging, debugging, comments, or extraneous text.
- Ensures runtime efficiency such that the implementation completes typical inputs well within 5 seconds.
- Outputs exclusively a single, labeled Python code block in the format: ```python ... ```; no additional commentary or explanation outside the code block.

Adhere strictly to these instructions to produce idiomatic, performant, and correct Python code that mirrors the given pseudocode logic precisely.
```