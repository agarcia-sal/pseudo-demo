Generate concise, clear, and easily understandable pseudocode that faithfully implements the solution using the exact original function name and signatures. Write compact, high-level pseudocode blending natural language with symbolic expressions, abbreviations, and one-liner statements whenever appropriate. Use straightforward control flow structures such as if, else if, for, for each, while, and direct assignments without filler words like “let,” “set,” or “initialize” unless absolutely necessary for clarity. Prefer implicit loops, list comprehensions, and concise expressions to minimize verbosity while preserving full correctness and readability. Avoid comments, explanations, summaries, headings, notes, or separators; output only the numbered pseudocode lines. Format pseudocode as follows:

1. x ← 0  
2. while x < n: x++

Ensure each pseudocode solution is self-contained and clear. Follow the example style below exactly:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A