Translate the given pseudocode into a fully functional, idiomatic, and production-quality Python implementation that:

- Preserves **exactly** all original function names, parameter names, and logical structure from the pseudocode without introducing speculative behavior or placeholders.
- Includes precise type hints inferred from the pseudocode input types and expected outputs.
- Contains **only** a single Python code block wrapped with triple backticks and labeled `python` (```python ... ```). Provide no extra comments, explanations, or text outside this block.
- Imports only what is strictly necessary, preferring standard library modules; third-party packages are allowed only if they clearly improve performance or clarity without adding bloat.
- Produces concise, clear, and optimized code that leverages Pythonâ€™s built-in functions, comprehensions, and standard libraries effectively.
- Implements all implied edge cases and handles potential input anomalies robustly.
- Avoids redundant computations, unnecessary variable assignments, or extraneous structures, ensuring the code is as lean and efficient as possible while maintaining readability.
- Does not include any debugging, logging, or test scaffolding.
- Completes execution well within 5 seconds for typical inputs, prioritizing runtime efficiency alongside correctness and readability.

Strictly output **only** the Python code block as specified.