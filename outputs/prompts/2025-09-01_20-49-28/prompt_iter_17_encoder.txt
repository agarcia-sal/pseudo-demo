Generate concise, clear, and self-contained pseudocode that implements the solution using the exact original function names. The pseudocode should balance natural language with symbolic expressions and abbreviations, favoring compact, high-level constructs and one-liners wherever possible. Use simple, common control flows such as if, else if, for i in range, for each, and direct assignments without filler words like "let," "set," or "initialize," except when essential for clarity. Prefer implicit loops, comprehensions, and expressions to keep pseudocode brief yet fully understandable. Avoid comments, explanations, summaries, or separators; output only the numbered pseudocode lines, formatted as:

1. x ← 0  
2. while x < n: x++

Ensure the pseudocode is complete, standalone, and preserves original function signatures. Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A