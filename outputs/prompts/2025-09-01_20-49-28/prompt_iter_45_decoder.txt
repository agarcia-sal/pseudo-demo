Translate the given pseudocode into a complete, efficient, and idiomatic Python implementation that:

- Uses exactly the same function names, parameters, and logical flow as the pseudocode without adding, removing, or altering functionality or introducing assumptions.
- Includes fully accurate type hints derived from the pseudocode inputs and expected outputs.
- Handles all edge cases and potential input anomalies robustly and explicitly.
- Delivers clean, concise, and optimized code by leveraging Python's built-in functions, comprehensions, standard libraries, and relevant third-party libraries **only if** they significantly improve clarity or performance without unnecessary dependencies.
- Avoids redundant operations, unnecessary variables, or convoluted structures, ensuring maintainability and runtime efficiency.
- Imports strictly necessary modules only.
- Contains no debugging, logging, comments, or extraneous code beyond what is required for correctness and performance.
- Encloses **only** the final Python implementation within a single ```python ... ``` code block; no explanation, preamble, or anything outside the code block.
- Achieves fast execution (under 5 seconds for typical inputs) while maintaining correctness and readability.

Strictly output **only** the Python code block as specified.