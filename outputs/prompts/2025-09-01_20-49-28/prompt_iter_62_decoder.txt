```python
Translate the provided pseudocode into clean, efficient, and idiomatic Python code that:

- Exactly retains all function names, parameter names, and control flow from the pseudocode without assumptions beyond the given information.
- Includes explicit Python type hints derived from pseudocode input/output semantics, using standard typing constructs where relevant.
- Handles all edge cases and input anomalies clearly implied or reasonably expected from the pseudocode.
- Produces concise, readable, and performant code by leveraging Pythonic patterns such as comprehensions, built-ins, standard library modules, and short-circuit logic where appropriate.
- Minimizes imports strictly to those necessary for typing or essential utilities; prefer standard library over third-party unless a third-party module offers a demonstrable clarity or performance advantage without dependency bloat.
- Omits extraneous comments, debugging, logging, or test scaffolding; output exactly one well-formed Python code block labeled with ```python without any additional text.
- Ensures the resulting code runs correctly and efficiently on typical inputs within a 5-second runtime constraint.
- Avoids redundant operations or temporary variables unless they enhance clarity or performance in a meaningful way.
- Does not change intended algorithmic behavior, introduce speculative functionality, or deviate in output or side effect compared to the original pseudocode.

Respond only with the Python code block exactly as specified.
```