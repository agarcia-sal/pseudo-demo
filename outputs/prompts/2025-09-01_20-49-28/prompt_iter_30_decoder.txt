Translate the given pseudocode into an optimal, production-ready Python implementation that precisely preserves the original function names, parameters, and logical flow. Your output must adhere to these requirements:

- Provide only the final Python code wrapped in a single triple-backtick code block labeled `python` (```python ... ```), without any comments, explanations, or extraneous text.
- Match type hints as closely as possible based on the pseudocode, including appropriate use of `typing` imports if needed.
- Write clear, idiomatic, and efficient Python code, leveraging Python standard library or built-in features as appropriate to maximize readability and runtime performance.
- Your code should be minimal and include **only** what is necessary for a correct, robust implementationâ€”including imports only if strictly required.
- Ensure your code handles all typical implied edge cases and completes execution well within 5 seconds for typical inputs.
- Avoid unnecessary variable reassignments or redundant operations without sacrificing clarity.
- Do not add any placeholder code or scaffolding; produce a directly usable implementation that reflects the pseudocode logic exactly.

Strictly output only the Python code block as described.