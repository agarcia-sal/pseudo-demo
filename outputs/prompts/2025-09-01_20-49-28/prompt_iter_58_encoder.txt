Generate concise, clear pseudocode that closely mirrors the original code’s logic and uses the exact original function and parameter names. Express the solution in a natural, compact, high-level style blending minimal natural language with symbolic operators and one-liner constructs where appropriate. Write simple, direct control structures (e.g., if, else if, for i in range, for each) and assignments—avoid filler words like “let,” “set,” or “initialize” unless needed for clarity or specifying data types. Favor implicit iterations and expressions for brevity without sacrificing understandability. Write direct return statements without explanations, comments, or annotations. Omit headers, summaries, or separators. Output only numbered lines, formatted as:  
1. x ← 0  
2. while x < n: x++  

Ensure the pseudocode is self-contained, faithful to the original code, preserves original function signatures, and is easy to read. Prioritize one-liners and symbolic brevity but keep clarity intact.

Example style:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A