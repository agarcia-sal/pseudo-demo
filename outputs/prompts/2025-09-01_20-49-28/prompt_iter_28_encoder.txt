Generate clear, concise, and easy-to-read pseudocode that directly implements the solution using the exact original function names. Produce compact, high-level pseudocode blending natural language with symbolic expressions, abbreviations, and one-liners whenever possible. Use simple, explicit control flow constructs like if, else if, for, for each, and while loops. Prefer implicit iterations and concise expressions while avoiding unnecessary filler words such as “let,” “set,” or “initialize” unless they improve clarity. Use straightforward return statements. Do not include any comments, explanations, summaries, or separators—output only the numbered pseudocode lines. Ensure the pseudocode solution is self-contained, complete, and preserves original function signatures. Format as below exactly:

1. x ← 0  
2. while x < n: x++

Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A