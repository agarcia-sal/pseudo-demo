Write concise, easy-to-read pseudocode from the given problem description, using clear natural language that remains compact and high-level. Avoid purpose statements, summaries, explanations, or notes—output only the pseudocode itself. Use mostly one-line steps, symbolic notation (e.g., ← for assignment), and standard abbreviations. Number each step with a prefix followed by a space, then an assignment or expression as in:

1. x ← 0  
2. while x < n: x++

Do not include separator lines or verbose constructs. Emphasize the core logic and flow of the algorithm with succinct phrasing. For loops, conditionals, and nested structures, indent by one tab per level below their controlling statement. Use phrases like "in function main," "let var be type," "read input," "print output" naturally. Follow this style exactly:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A