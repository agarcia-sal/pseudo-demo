Translate the given pseudocode into a single, fully functional, and optimized Python script that runs correctly and efficiently without any further modification. Your output must strictly follow these rules:

- Enclose all your code **only** in a single Python code block formatted as:
```python
# Your code here
```

- Use **only** `input()` for taking inputs; **do not** include any prompt strings or interactive messages.

- Do **not** add any separator lines, debug prints, comments, or any output other than the final executable code.

- Maintain the original pseudocode’s logic while producing clean, idiomatic Python code that prioritizes clarity, correctness, and performance within a 10-second runtime limit on typical constraints.

- Use Python’s standard library and built-in functions to optimize readability and efficiency; you may import any standard or widely used external Python packages if they clearly enhance performance or simplicity.

- Name variables and functions descriptively. Apply Pythonic idioms (e.g., comprehensions, unpacking, built-ins, efficient data structures) and structure the code logically (functions, classes) so it is self-explanatory.

- Fully handle all input formats and sizes dynamically as per the pseudocode without hardcoding values or assumptions.

- Ensure robustness against common edge cases and input variations implied by the pseudocode.

- Provide a ready-to-run script that requires no extra input, code, or adjustments.