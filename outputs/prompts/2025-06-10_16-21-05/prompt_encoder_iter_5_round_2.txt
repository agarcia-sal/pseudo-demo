Write concise, high-level pseudocode that is easy to read and understand, directly from the problem description. Use natural yet compact language, favor symbolic notation, common abbreviations, and one-line statements whenever possible. Represent control flow and nesting clearly with indentation. Do not include any purpose, summary, comments, explanations, or clarifications—output only the pseudocode steps.

Format each step as a numbered line beginning with an integer and a space, followed immediately by an assignment, expression, or control statement. Use arrow (←) or standard symbols for assignments and succinct keywords for control structures. Use natural phrasing for declarations like “let x be integer.” Avoid verbose syntax or separator lines.

Example pseudocode style to follow exactly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
 8. set min_i to i  
 9. for j = i+1 to size of A exclusive  
  10. set min_i to j if A[min_i] > A[j]  
 11. swap A[i], A[min_i]  
12. print all elements of A