Write clear, compact, and easy-to-read pseudocode that directly translates the problem description into algorithmic steps. Use natural yet concise high-level language, combining symbolic notation and common abbreviations. Output only the pseudocode—no purpose, summaries, explanations, or comments.

Format each statement as a numbered line starting with an integer and a space, then a single assignment or expression. Favor one-line constructs and concise expressions. Use indentation (e.g., tab or 1-2 spaces) to indicate nesting in control flow. Avoid separator lines or verbose code.

Example format to follow:

1. x ← 0  
2. while x < n: x++  

Example pseudocode style the output should resemble:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A