Write clear, compact, easy-to-read pseudocode directly from the problem description. Use natural, high-level language with concise expressions and common abbreviations. Avoid explanations, summaries, purpose statements, or clarifications. Output only numbered pseudocode steps, one statement per line unless a short loop or conditional fits naturally in one line.

Format each step as:  
**\<line number>. \<statement>**  
Use symbolic operators (e.g., ←, ++, <, >) and brief control structures. Indent nested blocks by one tab per level. Prefer single-line loops and conditionals where it enhances brevity and clarity, e.g.,  
`2. while x < n: x++`

Do not include separator lines or verbose constructs.

Example pseudocode style to emulate:

```
in function main
let n be integer
read n
let A be vector of integers
set size of A = n
read n elements into A
for all elements in A
 set min_i to i
 for j = i+1 to size of A exclusive
  set min_i to j if A[min_i] > A[j]
 swap A[i], A[min_i]
print all elements of A
```