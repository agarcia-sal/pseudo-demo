Translate the given code into clear, concise pseudocode that faithfully preserves all control flow, variable assignments, function calls, and loops using a consistent, simple style.  
Use natural language combined with compact symbols and abbreviations for a high-level, readable representation emphasizing brevity and clarity.  
Prefer one-liners whenever possible; merge simple statements when it reduces line count without losing logic.  
Express input/output plainly (e.g., “read x”, “print y”). Declare variables only if it clarifies meaning (e.g., “let x be integer”).  
Represent loops and conditions naturally but tersely (e.g., “for i = 0 to n-1”, “if x > y then”).  
It is acceptable to omit some details or simplify expressions if it helps keep the pseudocode short and focused on core logic.  
Do not add explanations, summaries, comments, or extra text—output only numbered lines starting from 1 with no blank or separator lines.  
Use a unified style throughout, avoiding verbose or language-specific idioms.  
Example format to follow strictly:

1. in function main  
2. let n be integer  
3. read n  
4. for i = 0 to n-1:  
5. &emsp;process element i  
6. print result