Translate the given code into concise, uniform pseudocode that strictly preserves all original control flows, variable assignments, function calls, and loops.  
Use mostly natural language with compact symbolic notation and standard abbreviations for clarity and brevity. Favor one-liners when possible but indent nested blocks.  
Express I/O plainly (e.g., “read x”, “print y”). Declare variables only if it aids clarity (e.g., “let x be integer”).  
Represent loops and conditionals tersely and naturally (e.g., “for i ← 0 to n-1”, “if x > y then”).  
Omit less essential details or complex expressions if that significantly shortens pseudocode without breaking core logic or flow.  
Do not add explanations, comments, or summaries—output only pseudocode lines starting from 1 with no empty or separator lines. Use a consistent style throughout.  
Use the below minimalist format and style as a guide (do not add line numbers in output):

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i ← 0 to size of A - 1  
 set min_i ← i  
 for j ← i + 1 to size of A - 1  
  if A[j] < A[min_i] then set min_i ← j  
 swap A[i], A[min_i]  
print all elements of A