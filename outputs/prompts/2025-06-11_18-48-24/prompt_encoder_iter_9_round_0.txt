Translate the given code into concise, clear pseudocode that exactly preserves its control flow, variable assignments, function calls, and loops.  
Use mostly natural language with compact symbolic notation and common abbreviations to keep the pseudocode high-level and readable. Prefer one-line statements; use indentation only for nested blocks.  
Represent inputs/outputs plainly (e.g., “read x”, “print y”). Declare variables only if it aids understanding (e.g., “let x be integer”).  
Express loops and conditionals simply and naturally (e.g., “for i ← 0 to n-1”, “if x > y then”).  
Omit details or complex expressions if this reduces verbosity without losing core logic or structure.  
Output only the pseudocode lines, numbered sequentially from 1, without empty or separator lines, extra comments, explanations, or summaries. Use a single consistent style throughout.  

Example style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ← 0 to size of A - 1  
8. &emsp;set min_i ← i  
9. &emsp;for j ← i + 1 to size of A - 1  
10. &emsp;&emsp;set min_i ← j if A[j] < A[min_i]  
11. &emsp;swap A[i], A[min_i]  
12. print all elements of A