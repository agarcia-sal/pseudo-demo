Translate the given code into clear, compact pseudocode that strictly preserves the original control flow, variable assignments, function calls, and loops in a uniform, readable style.  
Use natural language enhanced with concise symbolic notation and abbreviations to keep pseudocode high-level and easy to understand, favoring one-line statements wherever feasible.  
Omit any explanations, summaries, purpose statements, or notes. Output only the pseudocode lines numbered sequentially as:

1. x ← 0  
2. while x < n: x++  

Include variable declarations simply and only when they clarify (e.g., “let x be integer”), state input/output plainly (e.g., “read n”, “print x”), and represent all control constructs naturally but concisely (e.g., “for i = 0 to n-1”, “if x > y then”).  
It is acceptable to omit some details or minor operations if this reduces line count without losing essential logic or structure.  
Avoid all additional formatting or separator lines; produce nothing but the numbered pseudocode lines.  
Assume a strict 10-second runtime limit — maximize precision and conciseness while preserving essential logic and structure.