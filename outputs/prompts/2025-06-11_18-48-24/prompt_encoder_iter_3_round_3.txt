Translate the given code into concise, clear pseudocode that precisely preserves all control flow, variable assignments, function calls, and loops with consistent, simple syntax.  
Use natural language combined with concise symbols and abbreviations to keep pseudocode high-level, readable, and mostly one-line per statement.  
Express all input/output operations plainly (e.g., “read x”, “print y”) and declare variables only when it improves clarity (e.g., “let x be integer”).  
Represent all loops and conditionals naturally but tersely (e.g., “for i = 0 to n-1”, “if x > y then”).  
It is acceptable to omit less critical details or minor expressions to shorten output without losing core logic or structure.  
Do not include explanations, summaries, comments, or any extra text—output only the numbered pseudocode lines, starting at 1 with no blank or separator lines.  
Use one unified style for all constructs and avoid verbose or language-specific idioms.  
Example format to follow strictly:

1. in function main  
2. let n be integer  
3. read n  
4. for i = 0 to n-1:  
5. &emsp;process element i  
6. print result  

Prioritize compactness and clarity to maximize correctness and completeness within a 10-second runtime constraint.