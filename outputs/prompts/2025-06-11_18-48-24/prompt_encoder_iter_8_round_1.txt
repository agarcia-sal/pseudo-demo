Translate the given code into concise, high-level pseudocode that clearly preserves all control flows (conditions, loops), variable assignments, function calls, and data structures in a simple, uniform style.  
Express logic using mostly natural language with compact symbolic notation and standard abbreviations; favor terse, readable one-liners, but use indentation for nested blocks.  
Declare variables only if it clarifies understanding (e.g., “let x be integer”); otherwise omit explicit declarations. Represent input/output plainly (e.g., “read x”, “print y”).  
Loops and conditionals should be natural, brief, and consistent (e.g., “for i ← 0 to n - 1”, “if x > y then”).  
It is acceptable to omit less crucial details or complex expressions if this reduces verbosity without losing essential structure or meaning.  
Do not include explanations, comments, or summaries—output only the numbered pseudocode lines starting at 1, without empty or separator lines. Use a single, consistent style throughout.  

Example format:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i ← 0 to n - 1  
8. &emsp;set min_i ← i  
9. &emsp;for j ← i + 1 to n - 1  
10. &emsp;&emsp;if A[j] < A[min_i] then set min_i ← j  
11. &emsp;swap A[i], A[min_i]  
12. print all elements of A