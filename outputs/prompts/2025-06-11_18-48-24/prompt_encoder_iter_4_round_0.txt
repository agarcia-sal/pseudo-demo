Translate the given code into clear, uniform pseudocode that preserves all control flow, variable assignments, function calls, and loops with simple, consistent syntax.  
Express statements compactly using natural language combined with concise symbols and abbreviations, favoring one-liners when possible.  
Use straightforward expressions for input/output (e.g., “read x”, “print y”) and declare variables only if it makes the logic clearer (e.g., “let x be integer”).  
Write loops and conditionals plainly but tersely (e.g., “for i = 0 to n-1”, “if x > y then”).  
It is acceptable to omit minor details or complex expressions if doing so shortens output without losing the core structure or control flow.  
Do not include explanations, comments, summaries, or any additional text—output **only** the numbered pseudocode lines, starting at 1, no blank or separator lines.  
Use consistent style and avoid verbose, language-specific idioms or formatting.  
Example style to follow strictly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be list of integers with size n  
5. read n elements into A  
6. for i = 0 to n-1:  
7. &emsp;set min_i ← i  
8. &emsp;for j = i+1 to n-1:  
9. &emsp;&emsp;if A[j] < A[min_i] then min_i ← j  
10. &emsp;swap A[i], A[min_i]  
11. print all elements of A

Prioritize compactness and clarity to ensure correctness and completeness within a 10-second runtime constraint.