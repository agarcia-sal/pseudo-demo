Translate the given code into concise, easy-to-read pseudocode that strictly preserves its original structure and all control flow elements—such as variable assignments, function calls, conditionals, and loops—in a uniform and simple style.  
Use primarily natural language enriched with succinct symbolic notation and standard abbreviations to keep the pseudocode high-level, compact, and clear. Favor one-line statements whenever possible.  
It’s acceptable to omit details or minor operations if doing so shortens the output without losing the essential logic or structure.  
Do not include any explanations, summaries, comments, or notes—output only the pseudocode itself.  
Declare variables only when necessary for clarity (e.g., “let x be integer”), and express input/output plainly (e.g., “read n”, “print x”). Represent control constructs naturally and succinctly (e.g., “for i = 0 to n-1”, “if x > y then … else …”).  
Number each line sequentially starting from 1, following this exact format:  

1. x ← 0  
2. while x < n: x++  

Do not use any separator lines, extra formatting, or additional text.  
Assume a strict 10-second runtime limit—maximize clarity and precision while minimizing line count, preserving all essential code logic and flow.