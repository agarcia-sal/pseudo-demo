Translate the given code into clear, concise pseudocode that strictly preserves the original code’s structure—including all control flows, variable assignments, function calls, and loops—expressing them uniformly and simply.  
Use natural language combined with symbolic notation and abbreviations to keep it compact and high-level, preferring single-line statements where possible. Omit detailed explanations or clarifications, and exclude any purpose, summaries, or notes.  
Produce only the pseudocode numbered per line in this format:  

1. x ← 0  
2. while x < n: x++  

When appropriate, declare variables with their type simply (e.g., “let x be integer”), state input/output operations plainly (e.g., “read n”, “print x”), and describe loops and conditions naturally but succinctly (e.g., “for i = 0 to n-1”, “if x > y then”).  
It is acceptable to omit some internal details or minor operations if doing so meaningfully reduces the total line count without losing key structural logic.  
Do not include separator lines, commentary, or extra formatting—only the numbered pseudocode lines.  
Assume a 10-second timeout; aim to produce the most precise and compact pseudocode possible within this limit.