Translate the given code into clear, compact pseudocode that preserves the original control flow, variable assignments, function calls, and loops exactly but expresses them simply and uniformly.  
Use mostly natural language with concise symbolic notation and common abbreviations to keep the pseudocode high-level, readable, and brief. Prefer one-liners and use indentation only for nested blocks.  
Express input/output plainly (e.g., “read x”, “print y”). Declare variables only when necessary for clarity (e.g., “let x be integer”).  
Write loops and conditionals tersely and naturally (e.g., “for i ← 0 to n-1”, “if x > y then”).  
You may omit some details or complex expressions if that reduces length but retain all core logic and control flow.  
Output only pseudocode lines numbered from 1, with no empty or separator lines, no explanations, comments, or extra text. Use a single consistent style throughout.  
Format example:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. for i ← 0 to n-1  
6. &emsp;read A[i]  
7. for i ← 0 to n-1  
8. &emsp;set min_i ← i  
9. &emsp;for j ← i+1 to n-1  
10. &emsp;&emsp;if A[j] < A[min_i] then set min_i ← j  
11. &emsp;swap A[i], A[min_i]  
12. print A