Write pseudocode that directly implements the exact solution described in the problem, preserving all original function names and signatures.  
Use concise, readable, high-level natural language with compact expressions, symbolic notations, and abbreviations where clear.  
Prefer single-line statements and minimal indentation while maintaining logical clarity.  
Output the pseudocode as a numbered list of steps, strictly following this format:

1. x ← 0  
2. while x < n: x++  

Do not include any explanations, comments, summaries, or notes—only the pseudocode itself.  
Avoid headers, separators, or extra formatting.  
Ensure the pseudocode is compact but completely captures the algorithm’s logic efficiently and fits within a 5-second execution constraint.  
Use natural language flows (e.g., "for each", "if", "else", "while"), keeping it clear yet succinct.  
Example style to emulate:

in function main  
let n be integer  
read n  
let A be array of integers size n  
read elements of A  
for i from 0 to n-1  
 set min_i ← i  
 for j from i+1 to n-1  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print A elements