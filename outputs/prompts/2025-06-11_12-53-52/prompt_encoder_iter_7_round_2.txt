Generate concise, high-level pseudocode from the given problem description that is easy to read and understand. Use natural language enriched with symbolic representations and abbreviations to keep it compact and clear. Write pseudocode as a sequence of simple, mostly one-line algorithmic steps without any explanations, summaries, or notes. Follow this exact numbering format for each line:

1. variable ← value  
2. while condition: operation

Avoid comments, extraneous formatting, or separator lines. Focus solely on the core algorithmic logic, expressing loops, conditionals, and assignments succinctly but unambiguously. Use meaningful but brief variable names and keep statements as tight as possible while maintaining readability. Assume the pseudocode reader is familiar with standard control flow and data structure idioms.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Your output must contain only pseudocode following this style and constraints. Your processing time is limited to 10 seconds; produce the best, most precise pseudocode within this time.