Generate concise, high-level pseudocode for the given problem description. Do not include any explanations, summaries, purpose statements, or clarifications—output only the pseudocode. The pseudocode should be easy to read and understand, using clear natural language combined with symbolic notations and abbreviations where appropriate. Favor compact expressions and one-liners without comments or separators. Structure numbered steps as in the example below, blending imperative phrases with simple control flow syntax:

1. variable ← value  
2. while condition: operation  

Produce pseudocode that captures the essential algorithmic workflow clearly and succinctly, emphasizing clarity and brevity. Avoid verbose constructs; prefer symbolic operations and short descriptive names. Your output should reflect a natural, readable style suitable for immediate implementation. The function has a 10-second timeout; maximize output quality within this limit.

Example of desired pseudocode style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A