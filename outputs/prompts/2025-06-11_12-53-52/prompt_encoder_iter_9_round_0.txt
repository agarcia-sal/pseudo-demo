Generate concise, high-level pseudocode from the provided problem description. The pseudocode must be easy to read and understand, using clear natural language combined with symbolic notations and abbreviations where appropriate. Focus on brevity and clarity, expressing algorithmic steps primarily as one-liners or compact statements without comments, explanations, summaries, or overview notes. Avoid any extra text; output pseudocode only.

Follow this format exactly without separator lines or additional formatting:

1. variable ← value  
2. while condition: operation  

Use structures such as "in function main", "let variable be type", simple loops ("for i = 0 to n-1"), and assignments. Prefer natural language phrases like "read", "print", "set", and concise control flow forms.

Example style your output should emulate:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A  

Produce the best, most clear and succinct pseudocode possible within a 10-second generation limit.