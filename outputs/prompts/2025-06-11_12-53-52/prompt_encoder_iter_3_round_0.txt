Generate concise, high-level pseudocode from the given problem description. The pseudocode must be clear, easy to read, and focused solely on the algorithmic steps without any purpose, explanations, summaries, or comments. Use natural language intermixed with symbolic forms and abbreviations when appropriate. Keep it compact and prefer one-line statements that smoothly express logic and flow.

Follow this precise numbering and indentation style for structure and clarity:

1. x ← 0  
2. while x < n: x++  

Structure blocks with consistent indentation (using tabs or spaces) beneath control statements; use minimal lines but maintain readability.

Do not include separator lines, annotations, or extraneous text—only the pseudocode itself.

Example output style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A