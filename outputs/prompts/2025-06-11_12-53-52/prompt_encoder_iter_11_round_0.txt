Generate clear, concise, high-level pseudocode from the given problem description using mostly natural language combined with symbolic notation and abbreviations as needed. The pseudocode must be easy to read and understand while remaining compact and focused strictly on algorithmic steps—exclude any explanations, summaries, comments, or notes. Use mostly one-line statements, structuring loops, conditionals, and function definitions naturally and succinctly with clear logical flow. Prefer short variable names and symbolic forms without sacrificing clarity. Do not insert separator lines or extra spacing. Output only the pseudocode, nothing else.

Follow this exact format example:

1. x ← 0  
2. while x < n: x++  

Example pseudocode style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A