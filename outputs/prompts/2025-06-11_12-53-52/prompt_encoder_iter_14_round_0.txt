Generate clear, concise, high-level pseudocode from the given problem description using mostly natural language enriched with symbolic notation and standard abbreviations. The pseudocode should capture the essential algorithmic steps in a compact, logical flow, prioritizing readability and brevity without omitting necessary details. Output only the pseudocode—no explanations, comments, summaries, or extra text. Prefer mostly one-liner statements and succinct control structures, using short yet meaningful variable names and natural expressions for conditions and operations. Follow this exact format for step numbering and syntax:

1. variable ← value  
2. while condition: operation  
3. for i = start to end exclusive: operation  

Use standard constructs for loops, conditionals, and function definitions in a natural, consistent style. Avoid separator lines, extra blank lines, or verbose formatting. Output the pseudocode directly, nothing else.

Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A