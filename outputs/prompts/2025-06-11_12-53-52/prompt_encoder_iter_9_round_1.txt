Generate clear, concise, and high-level pseudocode strictly from the given problem description. Use natural language combined with symbolic notation and abbreviations to keep it compact and easy to follow. Write mostly one-liners and simple statements focused solely on algorithmic steps—no purpose, explanations, summaries, or comments. Follow this exact style and format:

1. x ← 0  
2. while x < n: x++  

Use natural phrasing like "let", "read", "set", "for", "if", "swap", "print", "call function", etc. Prefer expressions that blend programming constructs and plain language for readability and brevity. Use indentation to show nested blocks but avoid verbose detail or extra text. Do not include separator lines or extra headings.

Example pseudocode style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A  

Focus entirely on the algorithmic procedure to solve the problem, maximizing clarity, brevity, and readability within a 10-second generation limit.