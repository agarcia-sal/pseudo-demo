Generate concise, high-level pseudocode from the given problem description. The pseudocode must be easy to read and understand, using natural language combined with symbolic notation and standard abbreviations. Write compact algorithmic steps, preferably as one-liners without comments, explanations, or overview statements—output only the pseudocode. Use clear, direct commands and control structures, following this format exactly:

1. x ← 0  
2. while x < n: x++

Start with defining main function if relevant. Use meaningful variable names but keep them short. Represent loops, conditions, and assignments succinctly. Avoid separator lines or extra formatting. Aim for clarity and brevity while fully capturing the algorithm’s logic and flow. Do not include any extra text beyond the pseudocode. Your function has a 10-second timeout; produce the most effective pseudocode within this limit.