Generate clear, concise, and high-level pseudocode from the given problem description. Produce only the pseudocode itself—no explanations, summaries, comments, or notes. Use mostly natural language with symbolic representations and abbreviations to keep it compact and easy to read. Prefer single-line statements wherever possible, emphasizing a clear step-by-step algorithmic flow.

Follow this exact format for each line:
1. variable ← value  
2. while condition: operation  
3. for var = start to end: operation  

Use clean indentation to show structure where appropriate, but avoid verbose detail. The pseudocode should clearly capture all critical algorithmic steps needed to solve the problem in a readable, succinct way.

Do not include section headers, separators, or any non-algorithmic text. Your output should be solely structured pseudocode reflecting the core logic and flow.

The runtime limit is 10 seconds; focus on delivering the most accurate, compact pseudocode within that time.

Example:

in function main  
let n be integer  
read n  
let A be vector of integers with size n  
read n elements into A  
for i = 0 to n-1:  
 set min_i ← i  
 for j = i+1 to n-1:  
  if A[min_i] > A[j]: set min_i ← j  
 swap A[i], A[min_i]  
print all elements of A