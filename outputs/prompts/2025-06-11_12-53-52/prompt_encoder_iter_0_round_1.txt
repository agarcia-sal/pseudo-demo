Generate clear, concise, and high-level pseudocode directly from the problem description. The pseudocode should be easy to read and understand, using natural language blended with symbolic notation and abbreviations where suitable. Output only the pseudocode—no explanations, summaries, comments, or overview statements.

Structure the pseudocode compactly, preferably as one-liners or short blocks that focus solely on algorithmic steps. Use consistent indentation for nested constructs and represent assignments, loops, and conditionals clearly but succinctly. Follow this exact style:

1. x ← 0  
2. while x < n: x++

Avoid any separator lines or additional formatting beyond simple numbered steps and indentation.

Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j from i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A