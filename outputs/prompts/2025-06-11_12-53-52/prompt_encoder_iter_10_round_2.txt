Generate concise, high-level pseudocode directly from the problem description. Use natural language combined with symbolic notation and abbreviations for clarity and brevity. Make pseudocode easy to read, compact, and strictly focused on algorithmic steps—no explanations, summaries, or comments. Prefer mostly one-line statements; structure loops, conditionals, and function definitions naturally and succinctly. Use clear yet short variable names and symbolic forms where suitable. Do not add separator lines, extra spacing, or any text besides pseudocode.

Follow this precise format:

1. x ← 0  
2. while x < n: x++

Example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A