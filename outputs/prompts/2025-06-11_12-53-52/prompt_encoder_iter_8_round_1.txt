Generate clear, concise, and high-level pseudocode from the given problem description. Your output must contain only the pseudocode—no purpose, explanation, summary, or notes. Use natural language combined with symbolic expressions and abbreviations to keep it compact and easy to read. Prefer succinct one-line statements and avoid verbose syntax. Follow this exact formatting style and example:

1. x ← 0  
2. while x < n: x++  

Structure your pseudocode around core algorithmic steps, using control flow and assignments naturally, e.g.:  

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A  

Do not include separator lines, comments, or additional formatting. The output should be strictly pseudocode that a programmer can easily translate to code. Your output has a 10-second time budget—produce the highest-quality pseudocode within this limit.