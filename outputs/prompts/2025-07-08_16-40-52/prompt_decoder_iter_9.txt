Generate concise, easy-to-read pseudocode from the given problem description. The pseudocode should be compact and high-level, using a blend of natural language, symbolic notation, and abbreviations to maintain clarity and brevity. Prefer mostly one-liners with minimal verbosity, ensuring the logic is explicit and structured clearly.

Do not include any purpose statements, summaries, explanations, comments, overview, or notes—only the pseudocode steps. Number each step as shown below (no separator lines):

1. x ← 0  
2. while x < n: x++  

Use constructs like:  
- “let” or “set” for variable declarations and assignments  
- “read” for input operations  
- “print” for output  
- typical control flows (for, while, if, etc.) in compact form  
- concise conditional expressions inline where suitable  

Example style to emulate:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
	set min_i to i  
	for j = i+1 to size of A exclusive  
		set min_i to j if A[min_i] > A[j]  
	swap A[i], A[min_i]  
print all elements of A  

Complete your response within 5 seconds and prioritize producing the best, most precise pseudocode you can in that time.