Write concise, clear pseudocode that is easy to read and understand, using natural language phrasing combined with symbolic assignments and standard programming abbreviations. Express the algorithm compactly and at a high level, favoring one-liners and succinct constructs for loops, conditionals, and assignments without extra commentary, explanations, or summaries. Number each step sequentially as follows:

1. x ← 0  
2. while x < n: x++  

Use natural language verbs like "read," "print," "set," "let," "for," "if," "while," and "return" to describe operations clearly and directly. Represent data types explicitly only when essential (e.g., "let n be integer"). Avoid verbose phrases, unnecessary punctuation, and separators such as lines or dashes. Use concise expressions for conditions and arithmetic. Structure nested logic with indentation or clear spacing but keep it compact (prefer one-liners when possible). Your output must be strictly pseudocode steps only—no explanations or notes.

Example style to follow:  

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j from i+1 to size of A - 1  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A