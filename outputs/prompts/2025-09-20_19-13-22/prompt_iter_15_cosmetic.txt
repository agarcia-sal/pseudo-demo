Rewrite the provided pseudocode into a new, functionally identical version that differs as extensively as possible in all aspects of syntax, structure, control flow, variable usage, and formatting, without changing any behavior.  
- Preserve **all original function names exactly**, including signatures, and **all original class names with their class and object hierarchy untouched**.  
- Maximize syntactic and structural diversity by applying transformations such as:  
  * Converting loops between `FOR`, `WHILE`, and recursion.  
  * Reordering independent statements where possible.  
  * Using alternative conditional structures (e.g., `IF-ELSE` vs. early returns).  
  * Renaming all local variables and parameters consistently but differently.  
  * Re-expressing expressions with algebraic rearrangements or equivalent operators.  
  * Changing data structures used internally if feasible (e.g., arrays â†” lists, using stacks or queues).  
  * Altering code block formatting, indentation style, and line breaks.  
- Do **not add any explanations, comments, debugging code, or output anything other than the transformed pseudocode itself**.  
- Ensure the rewritten pseudocode is self-contained, clear, and fully executable (semantically equivalent to the input).  
Output nothing but this rewritten pseudocode.