Rewrite the provided pseudocode into a functionally identical version that maximizes structural, syntactic, and stylistic divergence from the original. Preserve all original function and class names exactly, including their class and object hierarchies, without modifications. To achieve maximal difference while maintaining semantics:

- Transform control flow constructs (e.g., convert FOR loops to WHILE loops or recursion, replace IF-ELSE chains with SWITCH/CASE or nested conditions, unroll or fold loops, restructure conditionals).
- Rename all local variables comprehensively to distinct, non-conflicting names unrelated to originals.
- Reorder independent statements or expressions wherever safe to do so.
- Change expression forms by applying algebraic or logical equivalences without altering outcomes.
- Alter formatting drastically: vary indentation style, line breaks, statement grouping, and use of whitespace.
- Substitute data structures with alternatives of equivalent behavior (e.g., use arrays instead of lists, stacks instead of queues) where logically consistent.
- Rephrase function calls, e.g., inline small helper functions, or extract repeated code into new local functions, provided the interface and external behavior remain untouched.
- Avoid adding explanatory comments, annotations, or any text other than the rewritten pseudocode.
- Output solely the rewritten pseudocode without any surrounding text, metainformation, or delimiters.

The output must strictly maintain the semantic integrity and input-output behavior of the original pseudocode without exception.