Generate precise, compact, and high-level pseudocode for the given problem description. Use natural language blended with clear symbolic notation and standard abbreviations to enhance readability and brevity. Structure the output as a sequentially numbered list of steps, each ideally a short one-liner using simple control structures (if, while, for, etc.) in their most concise form:

1. x ← 0  
2. while x < n: x++

Define variables declaratively (e.g., “let x be integer”) and express operations symbolically but unambiguously. Avoid any explanations, commentary, purpose statements, or additional formatting—output only the pseudocode itself. Do not include separator lines or extra blank lines. Emphasize clarity, natural flow, and minimalism to ensure the entire pseudocode can be generated quickly (within 5 seconds) and easily understood.

Follow this example style exactly:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A