Generate clear, concise, and easy-to-understand high-level pseudocode directly from the problem description. The pseudocode should predominantly use natural language combined with symbolic notations and well-known abbreviations, producing a compact and readable step-by-step outline. Strictly omit any explanations, summaries, comments, or purpose statements—only output the pseudocode itself. Keep the original function names exactly as given in the code or problem description.

Structure your output as a numbered list of one-line or minimal-line pseudocode instructions following this format:

1. x ← 0  
2. while x < n: x++  

Use indentation to denote code blocks logically when necessary, but keep lines brief and succinct. Avoid excessive verbosity or redundant details while maintaining clarity. Do not include separator lines or decorative elements.

Example style your output should resemble:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A