Generate concise, high-level pseudocode from the given problem description, preserving all function names exactly as in the original code. The pseudocode should be easy to read and understand, using natural language enriched with symbolic operators and standard abbreviations. Prioritize compactness and clarity with mostly one-line statements, minimizing verbosity but keeping logic explicit and unambiguous. Use numbered steps starting at 1, formatted like:

1. x ← 0  
2. while x < n: x++  

Do not include any explanations, summaries, purpose, comments, or notes—only the pseudocode itself. Avoid any separator lines or decorative elements. Express loops, conditionals, and operations succinctly but clearly, ensuring the flow and variables correspond closely to the original implementation. Your output should be a clean, self-contained pseudocode representation suitable for quick comprehension and reproduction within a 5-second generation limit.