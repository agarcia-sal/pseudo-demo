Generate concise, clear pseudocode directly from the given problem description or original code, preserving all original function and variable names exactly. Express the logic in natural language enriched with symbolic operators and standard abbreviations, favoring compact, mostly one-line statements that convey control flow (loops, conditionals) and operations explicitly but succinctly. Number each step starting from 1, using this format:

1. x ← 0  
2. while x < n: x++  

Avoid explanations, summaries, comments, or any extraneous text—output only the self-contained pseudocode. Do not include separator lines or decorative elements. Use natural phrasing that remains unambiguous and easy to read for someone familiar with programming concepts, e.g., ‘let’, ‘set’, ‘append’, ‘return’, ‘if’, ‘else’, ‘for’, ‘while’. Emphasize high-level clarity with minimal verbosity, but do not omit essential logic details. Maintain a consistent and predictable style that balances natural language with symbolic expressions, suitable for rapid comprehension and implementation within a 5-second generation limit.