Write concise, high-level pseudocode that is easy to read and understand, using clear natural language combined with symbolic representations and common abbreviations. Produce only the pseudocode—no explanations, summaries, comments, or notes. Use primarily one-liners and compact statements to capture the algorithm efficiently. Format each step with a number followed by a dot and a space, then the pseudocode line as in the example below:

1. x ← 0  
2. while x < n: x++  

Favor straightforward control flow, variable declarations, and operations while keeping brevity and clarity balanced. Avoid separator lines or verbose constructs. Your output should be fully self-contained and directly executable as pseudocode for the given problem.

Example style:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A