Generate concise, high-level pseudocode directly from the given problem description. The pseudocode must be clear, easy to read, and understandable, using mostly natural language enhanced with symbolic representations and standard abbreviations. Use mostly one-line statements without embedding explanations, comments, or summaries. Keep the original function names intact.

Strictly avoid any purpose, overview, or clarifying notes—output only the pseudocode.

Format output as numbered lines starting at 1, following this exact style:

1. x ← 0  
2. while x < n: x++

Prefer compact constructions, implicit control flow (e.g., for all elements in collection), and minimal verbosity. Use declarative style for variable declarations (e.g., let n be integer), loops, conditionals, and assignments.

Do not use separator lines or extra punctuation beyond what’s necessary for clarity.

Example output style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A

Within a 5-second runtime constraint, deliver the best possible pseudocode emphasizing clarity, brevity, and natural expression consistent with the example format.