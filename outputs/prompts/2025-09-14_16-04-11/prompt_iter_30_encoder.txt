Generate concise, natural-language pseudocode that is easy to read and captures the full class and function structure exactly as named in the input, preserving all original class and function names. Produce a high-level, compact representation using clear natural language with symbolic operators (←, +, -, *, /, //, %, ==, <, >) and common abbreviations. Favor one-line loops and conditionals when it keeps the code understandable. Use uppercase keywords (FUNCTION, SET, FOR, WHILE, IF, RETURN, END FUNCTION, etc.). Number every line starting at 1 with the format:

1. x ← 0  
2. WHILE x < n: x++

Do not include any explanations, comments, summaries, or extra formatting. Output must be pseudocode only, no separators or blank lines between lines. Indent consistently to reflect code blocks. Omit docstrings, import statements, and notes. Follow this example style precisely:

If the code is:  
```python
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

Output:  
```
FUNCTION calc_average(nums)
    SET total ← 0
    FOR num IN nums: total ← total + num
    SET avg ← total / LENGTH(nums)
    RETURN avg
END FUNCTION
```