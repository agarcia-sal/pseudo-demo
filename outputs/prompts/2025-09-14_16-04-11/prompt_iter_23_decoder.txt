Translate the provided pseudocode into fully functional, idiomatic, and efficient Python code by strictly adhering to the following instructions:

- Output **only** the fully working Python code enclosed in a single Python triple-backtick code block (```python ... ```), with **no extra text**, explanations, or separators.
- Preserve **exactly** all class names, function/method names, argument names, variable names, and the overall code structure (including nesting and indentation) as presented in the pseudocode; no renaming, reordering, or omission.
- Implement the pseudocode logic precisely and completely — do **not** add, omit, or assume any additional functionality beyond what is stated or clearly implied.
- Include all necessary imports (preferably only from Python's standard library or widely trusted public packages if truly required), helper functions, class definitions, and data structures, so the code runs independently and correctly without external dependencies.
- Use Python 3.9+ type annotations comprehensively and accurately wherever type information can be reasonably inferred or aids clarity.
- Write clean, idiomatic Python emphasizing readability and maintainability:
  - Use Python built-ins and standard idioms wherever appropriate.
  - Favor simplicity and direct translation over unnecessary complexity.
- Handle all reasonable edge and corner cases explicitly, as hinted by the pseudocode logic, to ensure robustness and to avoid runtime errors.
- Optimize for both time and memory efficiency to reliably execute within a 5-second timeout on typical inputs.
- Avoid any debugging statements, print calls, logging, or interactive input/output beyond what the pseudocode stipulates.
- Carefully translate pseudocode constructs like `LENGTH(s)`, `FOR i IN RANGE LENGTH(s)`, and `FUNCTION foo(args)` into appropriate Python constructs, preserving semantic equivalence exactly.
- Do not introduce any helper logic, helper classes, or additional data structures unless they are clearly necessary and implied by the pseudocode.
- Ensure consistent and correct indentation as per Python syntax rules, faithfully reflecting the pseudocode’s block structure.

```python
# Your fully translated, self-contained Python code here
```