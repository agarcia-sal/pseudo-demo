Translate the provided pseudocode into a fully working, idiomatic, and optimal Python solution with the following strict guidelines:

- Return only the complete Python code enclosed within a single triple-backtick code block labeled `python`.
- Preserve **all** class names, method names, function signatures, argument names, variable names, and the structural hierarchy exactly as given in the pseudocode without any changes.
- Provide all necessary imports, class definitions, helper functions, and data structures that the pseudocode explicitly or implicitly requires.
- Use only standard Python libraries or widely adopted, stable publicly available packages â€” import external packages only when their use is clearly justified for correctness, efficiency, or clarity.
- Faithfully implement the logic exactly as stated with no additional features, assumptions, or omissions.
- Include thorough Python type annotations wherever types can be reasonably inferred.
- Write clean, compact, and maintainable Python code following best practices, including meaningful naming, clear control flow, and Pythonic idioms.
- Add comments sparingly and only if they improve understanding of non-obvious or intricate parts of the code; avoid trivial or redundant comments.
- Anticipate and explicitly manage edge cases and boundary conditions to deliver robust, error-free solutions.
- Optimize for both time and memory efficiency to ensure reliable execution within a 5-second time limit on typical problem inputs.
- Do **not** add debugging outputs, input/output code, or explanatory text outside the code block.

```python
# Your translated code goes here
```