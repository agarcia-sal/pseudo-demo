Generate concise, clear, and compact pseudocode from the given problem description using mostly natural language, supplemented by precise symbolic notation and standard keywords only as needed: `let`, `read`, `in function`, `define function`, `if`, `else if`, `for`, `while`, `return`, `call`. Use symbolic operators (`=`, `≠`, `<`, `>`, `≤`, `≥`, `+`, `-`, `*`, `//`, `%`) and assignment (`←`) accurately and sparingly. Prefer high-level, readable one-line statements combining condition and action without indentation or blank lines but keep related logic on the same line separated by spaces. Declare variables with types and initial values on a single line where possible. Define functions starting with `in function name` or `define function name`. Use natural language phrases like “vector of integers”, “string”, “empty”, “length of”, “elements of” when appropriate. Number each output line sequentially starting from 1. Omit comments, explanations, or headers. Output pseudocode only, aiming for a high-level, compact form readable by experienced programmers. Complete within 5 seconds.

Example style and format:

1 in function main  
2 let n be integer  
3 read n  
4 let A be vector of integers size n  
5 read n elements into A  
6 for i in 0 to n-2: let min_i ← i  
7 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
8 swap A[i], A[min_i]  
9 print all elements of A