Generate concise, clear, and readable pseudocode from the given problem description using mostly natural language with minimal, precise symbolic notation and common programming keywords: `let`, `read`, `in function`, `define function`, `if`, `else if`, `for`, `while`, `return`, `call`. Use symbolic operators (`=`, `≠`, `<`, `>`, `≤`, `≥`, `+`, `-`, `*`, `//`, `%`, `←`) accurately. Prefer compact one-line statements combining condition and action when it maintains clarity and readability. Declare variables with type and initial value in one line when possible. Define functions starting with `in function name` or `define function name`. Represent collections as “vector of type” or “string” with natural terms like “length of”, “elements of”, “empty”. Avoid indentation and blank lines; keep related statements together separated by spaces. Number output lines sequentially starting from 1. Omit comments, explanations, and headers; output only pseudocode. Complete within 5 seconds.

Example style:

1 in function main  
2 let n be integer  
3 read n  
4 let A be vector of integers  
5 set size of A = n  
6 read n elements into A  
7 for i in 0 to length of A - 2: let min_i ← i  
8 for j in i+1 to length of A - 1: if A[min_i] > A[j] then min_i ← j  
9 swap A[i], A[min_i]  
10 print all elements of A