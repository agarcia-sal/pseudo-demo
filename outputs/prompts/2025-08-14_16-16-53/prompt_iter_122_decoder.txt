```python
Translate the given pseudocode into a single, self-contained, and fully executable Python 3 program adhering to these strict, optimized guidelines:

- Output exactly one Python code block enclosed by:
  ```python
  # complete solution here
  ```
- Use only standard input/output functions `input()` and `print()` without any prompt strings, comments, blank lines, or extraneous output.
- Map pseudocode variables and function names faithfully unless renaming improves clarity or idiomatic Python style without altering semantics.
- Implement the pseudocode logic precisely and exhaustively—including all edge cases and implicit behaviors—without adding wrappers or unrelated code.
- Maximize runtime and memory efficiency with these principles:
  - Avoid redundant calculations and superfluous data structures.
  - Use Python’s fastest constructs: comprehensions, generator expressions, built-in functions (`map`, `filter`, `any`, `all`, `divmod`), argument unpacking, and short-circuit evaluation.
  - Employ optimized standard libraries judiciously (`collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `os`) only when they truly enhance clarity or performance.
  - Prefer immutable sequences and local variables, avoiding global state where possible.
- If pseudocode defines a main function, implement it exactly and invoke it under:
  ```python
  if __name__=="__main__":
      main()
  ```
- Do not include comments, explanatory text, or blank lines inside or outside the code block.
- The code must be production-grade, concise, robust, and suitable to deploy in strict performance-critical contexts (competitive programming, high-stakes systems).
- Ensure your solution completes within 5 seconds on typical problem inputs.
- Refrain from modifying or augmenting the pseudocode logic beyond what is stated or clearly implied.
- No output beyond the specified Python code block is permitted.

Focus rigorously on delivering an idiomatic, minimal, and exact Python translation of the pseudocode optimized for speed, memory, and correctness.