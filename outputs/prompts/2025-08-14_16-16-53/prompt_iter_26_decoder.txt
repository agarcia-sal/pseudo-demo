```python
Translate the provided pseudocode into a minimal, production-grade Python 3 program that:

- Outputs exactly one Python code block, formatted as:
  ```python
  # complete, optimized code here
  ```
- Uses only standard input/output with bare `input()` and `print()` calls; do NOT include input prompts, debugging output, comments, or any text outside the code block.
- Accurately implements all logic and edge cases explicitly or implicitly described in the pseudocode.
- Retains original variable and function names when meaningful, but refactors for Pythonic clarity, brevity, and efficiency.
- Emphasizes runtime and memory optimization by:
  - Eliminating unnecessary calculations, intermediate variables, and loops.
  - Leveraging Pythonâ€™s standard library and built-in functions/modules to simplify and accelerate code.
  - Applying advanced Python idioms where appropriate, such as generator expressions, comprehensions, multiple assignment, built-in functions like `any()`, `all()`, `sum()`, `divmod()`, and lazy evaluation.
- Defines a `main()` function whenever the pseudocode implies a main entry point, and calls it under the standard:
  ```python
  if __name__ == "__main__":
      main()
  ```
- Produces code that reliably executes within 5 seconds on typical input constraints.
- Does NOT add any comments, explanations, blank lines, or formatting beyond the single required code block.
- Avoids extraneous imports unless they are essential for clear, performant implementation aligned with the pseudocode.

Focus exclusively on delivering the most concise, efficient, and idiomatic Python translation strictly consistent with the pseudocode instructions, ensuring correctness, minimalism, and high performance.
```