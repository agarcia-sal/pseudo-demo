```python
Translate the given pseudocode into a fully self-contained, executable, and optimized Python 3 program with these constraints:

- Output a single Python code block exactly as:
  ```python
  # your complete optimized code here
  ```
- Use only standard input/output using plain `input()` and `print()` calls without prompts, debug info, or trailing text.
- Accurately and thoroughly implement the pseudocode’s logic including all explicit and implicit edge cases, with no added scaffolding or auxiliary wrappers beyond what pseudocode implies.
- Retain original variable and function names when meaningful, but rewrite for idiomatic, concise, and efficient Python style.
- Prioritize runtime and memory efficiency by:
  - Eliminating redundant computations, loops, and conditionals.
  - Leveraging Python’s standard library and built-in modules (like `collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `operator`, `array`) when appropriate.
  - Applying Pythonic patterns including comprehensions, generator expressions, tuple unpacking, short-circuit logic, and `map/filter` judiciously.
- If pseudocode suggests a main entry function, explicitly define it and call it under:
  ```python
  if __name__ == "__main__":
      main()
  ```
  to ensure proper script execution.
- Scripts must run efficiently within a 5-second runtime limit on typical input sizes.
- Do NOT include comments, additional explanations, separator lines, or formatting outside the single Python code block.
- The resulting code must be clean, minimal, robust, and directly aligned to the pseudocode instructions, suitable for immediate production use.

Deliver only the precise, production-ready Python code block translating the pseudocode with maximal clarity, correctness, and performance.
```