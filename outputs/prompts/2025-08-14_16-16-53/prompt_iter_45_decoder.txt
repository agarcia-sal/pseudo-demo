```python
Translate the pseudocode into a concise, fully executable Python 3 script, strictly adhering to the following:

- Wrap your entire solution within exactly one Python code block:
  ```python
  # complete, efficient code here
  ```
- Use only `input()` and `print()` for all input/output; do NOT prompt or print anything else.
- Maintain original variable and function names unless a clearer Pythonic alternative improves readability and efficiency without losing meaning.
- Implement all pseudocode logic verbatim, including all edge cases, without adding superfluous code or scaffolding.
- Optimize rigorously for speed and memory:
  - Avoid redundancy by eliminating unnecessary computations or repeated logic.
  - Use built-in Python modules and idioms (e.g., `collections`, `itertools`, `functools`, `heapq`, `re`, `math`) to simplify and accelerate.
  - Apply advanced language features judiciously: comprehensions, generator expressions, unpacking, short-circuiting.
- If a `main` function is implied or appropriate, define it and run it via:
  ```python
  if __name__ == "__main__":
      main()
  ```
- Your code must be production-ready: minimal, clean, robust, and directly aligned to the pseudocode.
- Do NOT include comments, explanatory text, logging, debugging output, or any lines outside the code block.
- Do NOT output anything other than the single Python code block.
- The final script must execute within a 5-second limit for typical constraints.

Focus entirely on converting the pseudocode into the leanest and most performant Python translation possible.
```