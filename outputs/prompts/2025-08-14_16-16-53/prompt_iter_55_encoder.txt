Generate compact, high-level, and easy-to-read pseudocode from the given problem description using mostly natural language enhanced with precise symbolic notation and minimal abbreviations for clarity and brevity. Use natural terms like “vector of integers”, “string”, “empty”, “length of”, “elements of”, “size of”. Use only these keywords as needed: `let`, `read`, `in function`, `define function`, `if`, `else if`, `for`, `while`, `return`, `call`, `print`, `swap`. Use symbolic operators exactly (`=`, `≠`, `<`, `>`, `≤`, `≥`, `+`, `-`, `*`, `//`, `%`) and assignment (`←`). Combine simple statements and their conditions into concise one-liners wherever it improves readability. Declare variables with types and initial values in the same line if possible. Define functions starting with `in function name` or `define function name`. Keep all statements in the same indentation level without blank lines, aligned by spaces after colons. Number output lines sequentially starting at 1. Do not provide comments, explanations, or anything other than pseudocode. Complete within 5 seconds.

Example format:

1 in function main  
2 let n be integer  
3 read n  
4 let A be vector of integers ← size of n  
5 read n elements into A  
6 for i in 0 to n-2: let min_i ← i  
7 for j in i+1 to n-1: if A[min_i] > A[j] then min_i ← j  
8 swap A[i], A[min_i]  
9 print all elements of A