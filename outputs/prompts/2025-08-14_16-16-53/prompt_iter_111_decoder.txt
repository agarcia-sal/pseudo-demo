```python
Translate the given pseudocode into a fully executable, idiomatic, and highly optimized Python 3 program that strictly follows these criteria:

- Provide one single Python code block only, precisely enclosed as:
  ```python
  # your complete solution here
  ```
- Use exclusively standard input/output via `input()` and `print()` without prompts, comments, blank lines, or any extraneous output or text.
- Name variables and functions exactly as in the pseudocode when meaningful; otherwise, use minimal, clear, Pythonic identifiers.
- Implement the pseudocode logic exactly—no extra scaffolding, no assumptions, no omissions, no modifications beyond the pseudocode instructions.
- Prioritize maximal runtime and memory efficiency by:
  - Removing all unnecessary computations, checks, or data structures.
  - Using Python’s fastest idioms: comprehensions, generator expressions, built-ins (`map`, `filter`, `any`, `all`), unpacking, `divmod`, and short-circuiting.
  - Leveraging appropriate standard libraries only if they clearly improve clarity or performance (`collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `os`, etc.), minimizing imports.
- If the pseudocode defines a function named `main` or similar entry point, define and call it with:
  ```python
  if __name__ == "__main__":
      main()
  ```
- Format the code concisely, avoiding all comments, blank lines, separators, and redundant whitespace—code must be as compact and direct as possible while remaining readable.
- Ensure the final solution is robust, stable, and production-ready, capable of completing within 5 seconds on typical inputs.
- Do not output anything except the required Python code block.
- Focus on delivering the most exact, minimal, idiomatic, and speed-optimized translation of pseudocode for immediate deployment in competitive programming or production environments.
```