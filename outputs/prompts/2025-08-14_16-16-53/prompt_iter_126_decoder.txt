```python
Translate the provided pseudocode into a single, concise, fully functional Python 3 program that exactly replicates the pseudocode’s behavior with maximal efficiency and readability, observing these rigorous standards:

- Output exactly one syntactically valid Python 3 code block wrapped as:
  ```python
  # complete optimized solution here
  ```
- Use only `input()` and `print()` for I/O, without prompts, comments, debug statements, or any extraneous output.
- Precisely preserve variable and function names from the pseudocode when meaningful; apply idiomatic, clean, and performant Python conventions.
- Faithfully implement all pseudocode logic, covering all explicit and implicit cases without adding scaffolding, unnecessary helpers, or omitted steps.
- Optimize runtime and memory by:
  - Minimizing unnecessary computations, loops, or data structures.
  - Employing Pythonic best practices: comprehensions, generator expressions, unpacking, `divmod`, short-circuit logic, built-in functions (`map`, `filter`, `any`, `all`), and efficient standard libraries (e.g., `collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `os`) only where they clearly improve clarity or performance.
- When pseudocode defines a main function, implement `main()` exactly and invoke it within:
  ```python
  if __name__ == "__main__":
      main()
  ```
  ensuring seamless program start.
- Exclude all comments, blank lines, separators, or explanations both inside and outside the code block.
- Guarantee code is production-ready: compact, robust, idiomatic, and immediately runnable for high-performance or competitive programming usage.
- Respect the 5-second runtime constraint on typical inputs.
- Output nothing but the required single Python code block.
- Do not deviate from pseudocode logic or infer extra features beyond what is explicitly or implicitly described.
- Avoid any input argument instructions, user interaction prompts, or formatting beyond raw I/O calls.

Deliver a direct, optimal, and idiomatic Python translation to maximize correctness, brevity, and speed while exactly reflecting the pseudocode’s intent.
```