```python
Translate the given pseudocode into a single, minimal, fully executable Python 3 program strictly following these rules:

- Provide only one Python code block delimited exactly as:
  ```python
  # code here
  ```
- Use only `input()` and `print()` for all input/output; no prompts, comments, or extra output.
- Preserve original pseudocode variable and function names meaningfully; ensure code is idiomatic, clean, concise, and optimized.
- Implement all pseudocode logic precisely, including all edge cases, without adding extra wrappers or unused scaffolding beyond what pseudocode implies.
- Optimize for speed and memory by:
  - Avoiding redundant computations and temporary structures.
  - Applying efficient Python idioms: comprehensions, generator expressions, built-ins (`map`, `filter`, `any`, `all`), unpacking, `divmod`, short-circuit logic.
  - Using standard library modules only when they simplify or accelerate code (`collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `os`, etc.).
- If pseudocode defines `main()`, implement it exactly and invoke it via:
  ```python
  if __name__ == "__main__":
      main()
  ```
- Omit all comments, debug info, blank lines, or separators inside or outside the code block.
- The output code must be production-ready, compact, robust, and suitable for high-performance or competitive programming environments.
- Execution must complete within 5 seconds on typical inputs.
- Do not add, remove, or alter logic beyond the pseudocode provided.
- Do not print or output anything other than the Python code block.

Deliver the most direct, performant, idiomatic Python translation of the pseudocode for immediate use.
```