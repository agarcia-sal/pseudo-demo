Translate the provided pseudocode into a complete, fully functional, and optimized Python program with the following criteria:  
- Enclose all code within a single, contiguous Python code block using triple backticks and the `python` identifier:  
  ```python  
  # code here  
  ```  
- Use only `input()` and `print()` for all input/output without any prompt strings or extraneous output.  
- Accurately preserve the pseudocode’s logic and intent, maintaining meaningful variable and function names, but prefer concise, idiomatic, and efficient Python constructs.  
- Handle all implied and edge cases implicitly without additional wrappers unless explicitly indicated.  
- Optimize runtime performance and memory usage by:  
  - Avoiding redundant computations or inefficient algorithms  
  - Leveraging Python’s built-in functions, standard libraries (e.g., `collections`, `itertools`, `math`, `os`, etc.), and widely accepted third-party packages only if they clearly improve clarity and speed  
  - Minimizing variable scope and creating clean control flows  
- Ensure the code is runnable as-is in a standard Python 3 environment and completes within 5 seconds for typical problem constraints.  
- Do not add comments, explanations, or any textual content outside the code block.  
- Do not include any input prompts, debug prints, or separators.  
- If the pseudocode implies a `main` function, include and call it properly to ensure correct execution.  
Focus entirely on delivering a minimal, highly performant, and robust Python translation of the pseudocode.