```python
Translate the given pseudocode into a single, minimal, fully executable Python 3 program contained entirely within one Python code block:

```python
# your complete, production-ready solution here
```

Strictly follow these enhanced directives to maximize correctness, clarity, and performance:

- **Code Block Only**: Output exactly one Python code block delimited by triple backticks and `python`. No extra text, explanations, or comments.

- **Input/Output**: Use only `input()` and `print()` without prompts or extra formatting. Inputs should not assume anything beyond pseudocode specification.

- **Naming Consistency & Style**: Preserve meaningful variable/function names from pseudocode. Apply idiomatic, concise, and performant Python style; favor readability and Pythonic constructs without verbosity.

- **Exact Semantics**: Implement logic exactly as in pseudocode, covering all implicit and explicit behavior. Do not add extra scaffolding beyond the pseudocode structure (e.g., no unnecessary global variables or wrappers).

- **Performance & Memory**:
  - Avoid redundant or repeated computations.
  - Use the fastest Python idioms: comprehensions, generator expressions, built-in functions (`map`, `filter`, `any`, `all`, `divmod`), tuple unpacking, short-circuit logic.
  - Import only standard Python libraries that improve clarity or speed (`collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `os`, `sys`), and only if justified.
  - Ensure the final code runs efficiently within a 5-second limit on typical inputs.

- **Structure**:
  - If pseudocode defines functions or a main routine, replicate this with `def main():` and call `main()` under:
    ```python
    if __name__ == "__main__":
        main()
    ```
  - Otherwise, produce sequential code inside the single code block.

- **Cleanliness**: No comments, blank lines, or separators within or around the code block.

- **Robustness**: Handle edge cases and input constraints exactly as pseudocode suggests without assumptions.

- **No Extra Output**: Do not print anything other than what pseudocode requires; no debugging info or explanatory prints.

Your solution must be production-ready for competitive programming or high-pressure environments, delivering the most concise, exact, and optimized Python translation of the pseudocode possible.
```