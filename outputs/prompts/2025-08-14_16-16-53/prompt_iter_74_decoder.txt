```python
Translate the provided pseudocode into a single, minimal, fully executable Python 3 program that exactly implements the logic with maximal efficiency and idiomatic style under the following strict rules:

- Output only one Python code block fully enclosed as:
  ```python
  # complete production-ready solution here
  ```
- Use only standard input/output via `input()` and `print()` with no prompts, comments, blank lines, or any extra text inside or outside the code block.
- Name variables and functions to mirror pseudocode identifiers precisely when meaningful; otherwise use concise, idiomatic Python names.
- Implement exact pseudocode semantics, including all explicit and implicit cases, without adding any scaffolding, extra imports, or output beyond what is strictly implied.
- Optimize runtime and memory by:
  - Avoiding redundant calculations and data structures.
  - Favoring built-in constructs and fast idioms like comprehensions, generator expressions, `divmod`, `map`, `filter`, `any`, `all`, tuple unpacking, short-circuiting.
  - Employing only standard libraries exceptionally and solely when they demonstrably enhance performance, clarity, or succinctness (e.g. `collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `os`).
- When pseudocode declares a `main()` function, implement it and invoke via:
  ```python
  if __name__ == "__main__":
      main()
  ```
- Produce robust code suitable for competitive programming or production environment with a 5-second time budget on typical inputs.
- Strictly no explanations, comments, or additional textâ€”only the optimized exact Python translation contained in the single Python code block.

Focus on delivering the most concise, idiomatic, and high-performance Python 3 code directly reflecting the pseudocode logic with zero assumptions or alterations beyond it.
```