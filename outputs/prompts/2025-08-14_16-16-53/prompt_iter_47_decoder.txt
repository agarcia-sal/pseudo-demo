```python
Translate the provided pseudocode into a minimal, production-quality Python 3 script that:

- Is enclosed fully within a single Python code block exactly as:
  ```python
  # complete, optimized code here
  ```
- Reads all input exclusively via bare input() calls (no prompts, no extra output).
- Prints only the final requested outputs with print(), no debugging, comments, or extra text.
- Preserves pseudocode variable and function names meaningfully, adapting them idiomatically to Python.
- Implements all given logic fully and correctly, including all explicit and implicit edge cases, without wrapping or scaffolding beyond what the pseudocode implies.
- Is optimized for clarity, runtime, and memory efficiency by:
  - Eliminating redundant work or overly nested loops.
  - Using appropriate standard libraries and Python built-ins (including but not limited to collections, itertools, math, functools, heapq, re).
  - Applying advanced Python idioms like comprehensions, generator expressions, unpacking, and efficient control flow.
- Defines and calls main() if the pseudocode implies a main function, using:
  ```python
  if __name__ == "__main__":
      main()
  ```
- Avoids any extraneous formatting, comments, or explanatory text beyond the single code block.
- Produces robust, idiomatic, and clean Python code directly reflecting the pseudocodeâ€™s intent.
- Completes within 5 seconds on typical input sizes.

Focus solely on translating pseudocode to high-quality Python code strictly following the above rules, with maximal simplicity and performance.
```