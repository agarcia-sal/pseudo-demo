```python
Translate the given pseudocode into a complete, minimal, idiomatic, and highly optimized Python 3 program that:

- Outputs exactly one Python code block enclosed as:
  ```python
  # your complete, production-ready solution here
  ```
- Uses only standard input/output via `input()` and `print()` with no additional text, prompts, comments, blank lines, or debug output.
- Precisely follows the pseudocode logic and variable/function names when non-conflicting, without adding unrelated wrappers or assumptions.
- Ensures the program is immediately runnable (if pseudocode includes a main or entry function, implement `main()` and use the if-main guard), otherwise provide a fully executable script.
- Prioritizes runtime and memory efficiency by:
  - Minimizing operations and data storage to exactly what the pseudocode requires.
  - Utilizing Python built-ins and standard libraries intelligently to improve clarity and speed.
  - Applying fast Python idioms: comprehensions, generator expressions, `map`, `filter`, `any`, `all`, `divmod`, unpacking, and short-circuit logic.
  - Preferring O(1) or O(n) approaches where possible and avoiding nested loops if avoidable.
- Supports usage of any Python standard library modules only when they strictly enhance clarity or performance per pseudocode indications.
- Avoids all forms of comments, explanations, or placeholders inside or outside the code block.
- Guarantees the solution will run within 5 seconds on typical competitive programming inputs.
- Prints nothing but the code block and no other text or formatting.
- Does not infer, extrapolate, or alter the pseudocode logic beyond what is explicitly or necessarily implied.
- Produces code tailored for immediate application in competitive programming or production settings requiring correctness and efficiency.

Focus solely on delivering an exact, clean, concise, and idiomatic Python translation of the pseudocode in a properly formatted Python code block.
```