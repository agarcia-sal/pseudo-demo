```python
Translate the provided pseudocode into a single, fully self-contained Python 3 program within one Python code block exactly as follows:

```python
# complete optimized solution here
```

Your translation must strictly observe these requirements:

- Use only standard input/output via `input()` and `print()` with no prompts, comments, blank lines, or extra text inside or outside the code block.
- Retain and reflect variable and function names from the pseudocode whenever meaningful, writing clean, idiomatic, and efficient Python code.
- Precisely implement the pseudocode logic and control flow, including all implicit and explicit details, without adding wrappers or removing structurally relevant components.
- Ensure the program can be run directly, defining and invoking a `main()` function inside the standard check:
  ```python
  if __name__ == "__main__":
      main()
  ```
  unless the pseudocode specifies a different entry point.
- Achieve maximal speed and minimal memory by:
  - Avoiding redundant calculations, data structures, or scans.
  - Employing Python’s fastest language features: comprehensions, generator expressions, `divmod()`, unpacking, short-circuit operators, and built-in functions like `map()`, `filter()`, `any()`, `all()`.
  - Utilizing relevant standard libraries (`collections`, `itertools`, `math`, `functools`, `heapq`, `re`, `os`, `sys`, `bisect`, etc.) only when they strictly improve clarity or performance.
  - Preferring concise expressions and eliminating unnecessary temporaries.
- Do not add any debugging, logging, comments, or whitespace—code must be minimal and directly executable.
- The code must run within 5 seconds on typical input constraints.
- Do not assume or invent any functionality beyond the given pseudocode.
- Output exclusively the single Python code block—no explanations or additional text.

Focus on generating a directly usable, idiomatic, and production-performance Python program that faithfully translates the given pseudocode for use in competitive programming or critical production environments.
```