Translate the given pseudocode into a complete, self-contained, and fully executable Python 3 program meeting the following criteria:

- Output ONLY one Python code block enclosed exactly as:
  ```python
  # complete, optimized code here
  ```
- Use strictly standard input/output via `input()` and `print()` only; do NOT include prompts, debug prints, comments, or extra text.
- Preserve variable and function names from the pseudocode where meaningful, but apply idiomatic, concise, and efficient Python style.
- Fully implement the pseudocode logic, handling all explicit and implicit edge cases exactly without adding extra wrappers or scaffolding.
- Optimize for runtime and memory efficiency by:
  - Removing redundant calculations and loops.
  - Utilizing Pythonâ€™s powerful standard libraries and built-ins as needed (e.g., `collections`, `itertools`, `math`, `functools`, `heapq`, `re`, etc.).
  - Employing advanced Python idioms (comprehensions, generator expressions, multiple assignment, short-circuit evaluation) judiciously.
- If the pseudocode implies a main function, define it and call it under
  ```python
  if __name__ == "__main__":
      main()
  ```
  for correct script execution.
- Ensure your solution completes within 5 seconds under typical input constraints.
- DO NOT add comments, explanations, separator lines, or formatting outside the single code block.
- The provided code must be production-ready: minimal, robust, and directly aligned to the pseudocode instructions.

Focus exclusively on delivering a high-performance, clean Python translation of the pseudocode as specified.