Generate concise, clear, and easy-to-read pseudocode from the given problem description in a compact, high-level style. Use natural language enriched with symbolic representations and standard abbreviations when helpful, and prefer one-liner statements to express each step or control structure. Number every line exactly as shown:

1. x ← 0  
2. while x < n: x++

Do not include any purpose, summary, comments, explanations, or notes—output only the pseudocode itself. Avoid separator lines or extra formatting. Make sure the pseudocode is logically complete, with well-structured control flow (loops, conditionals) and variable assignments, reflecting the core algorithm clearly and succinctly. Use consistent naming and standard conventions to enhance readability. Your output should focus on clarity and brevity, balancing natural language with concise symbolic syntax for ease of understanding. The pseudocode should stand alone as a direct algorithmic representation of the problem, within a 5-second generation time limit.