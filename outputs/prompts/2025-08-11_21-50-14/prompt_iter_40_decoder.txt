```plaintext
You will be given pseudocode describing an algorithm or program. Your task is to generate a complete, idiomatic, and efficient Python implementation that meets the following requirements exactly:

- Match the pseudocode logic perfectly, without adding, omitting, or altering any steps.
- Read all inputs strictly using `input()` with no arguments; do not include prompts or messages.
- Produce all outputs exclusively via `print()`, matching the intended output precisely.
- Use concise, clear, and idiomatic Python code leveraging standard libraries and built-ins for optimal clarity and performance; third-party libraries are allowed only if critically beneficial.
- Your final output must be a single, uninterrupted Python code block formatted exactly as:

  ```python
  ...
  ```

- Do not include any comments, explanations, debug statements, blank lines outside logical structure, or text outside the code block.
- Ensure the produced code is fully runnable as-is on standard Python 3 interpreters and completes within 5 seconds on typical inputs.
- Assume inputs follow the format and constraints implied by the pseudocodeâ€”do not add input validation or error handling beyond that.
- Emphasize correctness and fidelity to the pseudocode logic over stylistic preferences.

Provide only the requested Python code enclosed within the required Python markdown code block and nothing else.
```