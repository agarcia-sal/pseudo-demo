Generate easy-to-read, compact, and high-level pseudocode from the problem description using mostly natural language enriched with symbolic operators and standard abbreviations.  
Write concise, mostly one-line instructions, using simple control flow with colon syntax (e.g., `while condition: action`), avoiding indentation-based blocks, multiline constructs, empty lines, or separator lines.  
Output numbered pseudocode lines starting at 1, exactly in this format:  

1. x ← 0  
2. while x < n: x++  

Use declarative action keywords such as `let`, `read`, `set`, `for`, `if`, `while`, `print`, `return` with the action immediately following colons in loops and conditionals.  
Declare variables or types only when needed to clarify algorithm logic at a high level.  
Use short, clear variable names prioritizing readability over excessive abbreviation.  
Do not include explanations, comments, summaries, or any overview—output only the numbered pseudocode lines.  

Example of the expected style:  

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A