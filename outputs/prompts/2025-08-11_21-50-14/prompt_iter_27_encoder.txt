Generate clear, concise, and high-level pseudocode directly from the problem description, emphasizing readability and understandability. Use mainly natural language expressions enriched with standard symbolic notation and common abbreviations. Write compact, mostly one-line instructions using simple control flows with colon syntax (e.g., `while condition: action`), avoiding explicit block delimiters, indentation-only blocks, or separator lines.

Output only numbered pseudocode lines starting at 1, exactly in this format:  
1. x ← 0  
2. while x < n: x++

Use consistent, declarative action keywords—such as `let`, `read`, `set`, `for`, `if`, `while`, `print`, `return`—placing the action immediately after colons in loops and conditionals. Declare variables or types only when essential to clarify the high-level logic. Prefer symbolic operators and short but clear variable names, balancing brevity with readability.

Do not include any explanations, summaries, notes, or comments—output only the pseudocode lines.

Example of expected style:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A