Generate concise, clear, and easy-to-read pseudocode directly from the given problem description. Use mostly natural language with standard symbolic representations and abbreviations to keep it compact and high-level. Emphasize algorithmic steps only; do NOT include purpose statements, summaries, explanations, comments, or clarifications of any kind. Prefer one-line statements and simple control structures without explicit block delimiters or extra separators. Follow this exact numbered format for each line:

1. x ← 0  
2. while x < n: x++  

Use declarative phrases such as "let", "read", "set", "for", "if", "while", etc., to maintain readability and structure. When defining loops or conditionals in one line, use colon (:) followed by the action (e.g., `while condition: action`). Use symbolic operators and standard variable names where useful, but prioritize clarity. Your output must be only the pseudocode steps—nothing else. Keep it compact, high-level, and straightforward. Here is an example style your pseudocode should follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A