Generate concise, high-level pseudocode directly from the problem description, focusing on clarity and readability using mostly natural language combined with symbolic operators and common abbreviations. Make the pseudocode compact by expressing logic as short one-line instructions wherever possible, preferring one-liners for loops and conditionals with the format `keyword condition: action`. Use simple control flow keywords such as `let`, `read`, `set`, `for`, `if`, `while`, `print`, and `return`, placing the action immediately after the colon. Number each line starting at 1 with the exact format below:

1. x ← 0  
2. while x < n: x++  

Select short but descriptive variable names prioritizing readability without excessive abbreviation. Declare variables or types only when essential for understanding high-level algorithm steps. Avoid multi-line blocks, indentation-only lines, blank lines, separator lines, comments, summaries, explanations, or notes—output only the pseudocode lines strictly following this format. Do not use separator lines (e.g., '-----') or blank lines.

Example:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
	set min_i to i  
	for j = i+1 to size of A exclusive  
		set min_i to j if A[min_i] > A[j]  
	swap A[i], A[min_i]  
print all elements of A