Generate easy-to-read, compact, and high-level pseudocode directly from the problem description using mostly natural language with symbolic operators and common abbreviations. Output only the numbered pseudocode lines—no purpose statements, explanations, comments, summaries, or notes. Prefer one-line instructions and simple control structures using colon syntax (e.g., `while condition: action`) without extra delimiters or separators. Use clear declarative keywords like "let", "read", "set", "for", "if", "while", "print", etc. Include variable and type declarations only when essential, keeping the pseudocode focused on algorithmic steps at a high level. Use standard variable names and symbolic notation to maximize clarity and brevity. Follow this exact numbered format strictly:

1. x ← 0  
2. while x < n: x++

Here is an example style to emulate:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A