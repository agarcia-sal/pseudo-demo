Generate easy-to-read, concise, and high-level pseudocode directly from the given problem description. Use mostly natural language with symbolic notation and common abbreviations to keep it compact and clear. Output only the algorithmic steps without any purpose statements, explanations, summaries, or clarifications. Prefer single-line instructions and simple inline control flows using colon syntax (e.g., `while condition: action`), without block delimiters or extra separators. Use declarative commands such as “let”, “read”, “set”, “for”, “if”, “while”, “print”, etc., placing actions immediately after colons on the same line. Use standard symbolic operators and clear variable names where suitable, declaring variables and types explicitly only if necessary to maintain a high-level focus. Number each pseudocode line sequentially as in this format:

1. x ← 0  
2. while x < n: x++

Below is an example style your output should follow exactly:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A