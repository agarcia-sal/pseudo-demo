Generate concise, high-level pseudocode from the problem description that is easy to read and understand. Use primarily natural language combined with symbolic operators and common abbreviations. Write each instruction as a single line, expressing loops and conditionals in this format: `keyword condition: action`. Use simple keywords such as `let`, `read`, `set`, `for`, `if`, `while`, `print`, and `return` with the action immediately following the colon. Number lines starting from 1 exactly as shown:

1. x ‚Üê 0  
2. while x < n: x++

Choose clear, descriptive, yet short variable names that balance readability and brevity. Include variable or type declarations only when needed for clarity. Avoid multi-line blocks, indentation-only lines, blank lines, separator lines, comments, or explanations. Output strictly the numbered pseudocode lines following this format. Do not use dashed or other separator lines.

Example of desired pseudocode style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
	set min_i to i  
	for j = i+1 to size of A exclusive  
		set min_i to j if A[min_i] > A[j]  
	swap A[i], A[min_i]  
print all elements of A