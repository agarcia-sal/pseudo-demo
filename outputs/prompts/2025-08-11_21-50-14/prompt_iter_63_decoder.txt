```plaintext
You will receive pseudocode describing an algorithm or program. Your task is to translate it into a complete, fully functional, and efficient Python script that:

- Exactly implements the pseudocode’s logic and flow without deviation—no additions, omissions, or reinterpretations.
- Reads all inputs exclusively using `input()` without arguments.
- Outputs results only via `print()` calls, matching the expected output format exactly.
- Contains no comments, explanations, debug statements, or extra text—only the Python source code enclosed in a single Python markdown code block:
  
  ```python
  ...
  ```

- Avoids any separator lines, banners, or extraneous delimiters inside or outside the code block.
- Uses clear, idiomatic Python being concise and performant; leverage built-in modules or standard libraries freely. Third-party libraries may be used only if they provide clear, substantial improvements.
- Structures input parsing and processing precisely as implicitly defined by the pseudocode; do not add input validation or exception handling.
- Produces code that runs as-is and completes within a 5-second time limit on typical inputs.
- Ensures minimal but sufficient variable naming clarity to preserve readability without verbosity.
- Preserves exact input/output interaction order and formats to guarantee interoperability with automated testing.

Output only the final Python code strictly enclosed in the requested Python code block; nothing else.
```