Generate concise, high-level pseudocode directly from the problem description that is easy to read and understand. Use mostly natural language combined with symbolic operators and common abbreviations. Express logic as short one-line instructions wherever possible, preferring one-line loops and conditionals with the syntax `keyword condition: action`. Use simple control flow keywords: `let`, `read`, `set`, `for`, `if`, `while`, `print`, and `return`, placing the action immediately after the colon. Number each line starting at 1 exactly in this format:

1. x ← 0  
2. while x < n: x++

Choose short yet descriptive variable names prioritizing readability without excessive abbreviation. Declare variables or types only if essential to understand the high-level algorithm steps. Avoid multi-line blocks, indentation-only lines, blank lines, separator lines, comments, summaries, explanations, or notes. Output ONLY the numbered pseudocode lines in strict adherence to the format above. Do NOT include separator lines (e.g., ‘-----’) or blank lines.

Example of desired pseudocode style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
	set min_i to i  
	for j = i+1 to size of A exclusive  
		set min_i to j if A[min_i] > A[j]  
	swap A[i], A[min_i]  
print all elements of A