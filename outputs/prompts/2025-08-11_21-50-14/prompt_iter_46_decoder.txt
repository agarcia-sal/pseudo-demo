```plaintext
You will be given pseudocode that describes an algorithm or program. Your task is to produce a single, clean, and fully functional Python program that:

- Faithfully implements the pseudocode logic exactly as described, without adding, omitting, or altering any behavior.
- Reads every piece of input strictly using bare `input()` calls (no prompt strings or arguments).
- Outputs exclusively using `print()`.
- Uses the most idiomatic, efficient, and concise Python constructs and standard libraries; you may include widely accepted third-party libraries only if they clearly enhance correctness or performance.
- Contains no comments, explanations, or any text other than the final Python code.
- Provides the entire solution enclosed solely within a single Python markdown code block formatted exactly as:
  
  ```python
  ...
  ```
  
- Avoids any extra text, separator lines, framing, or delimiters outside the specified code block.
- Is self-contained and executable as-is, designed to complete in under 5 seconds on typical inputs.
- Assumes inputs are well-formed as implied by the pseudocode; do not add input validation unless explicitly stated.
- Uses clear, direct variable names reflecting the pseudocode where appropriate.
- Avoids redundant code or unnecessary complexity.
- Structures code for clarity while maximizing runtime efficiency.
- Processes input efficiently with batch or line-based parsing when beneficial, preserving the logic as given.

Deliver only the minimal Python source code fulfilling these requirements inside the Python code block, nothing else.
```