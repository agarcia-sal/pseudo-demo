Generate concise, high-level pseudocode from the given problem description, keeping all class and function names, and the original class/object structure exactly as stated.  
Make the pseudocode easy to read and understand by blending natural language with symbolic forms, abbreviations, and idiomatic constructs. Use compact, mostly one-line statements and avoid verbose boilerplate.  
Do NOT include any explanations, summaries, comments, or purpose statements—output only the pseudocode and nothing else.  
Use the following numbered step format without separators or extra markup:  

1. [Class declaration line if present, e.g. `CLASS Solution:`]  
2. [Function declaration line matching the exact function name and parameters]  
3. [Indented function body lines using concise control flow, assignment, iteration, and returns—prefer single-line loops, conditions, and expressions]  
4. [Explicitly close functions/classes with `END FUNCTION` and `END CLASS` only if clarity demands it]  

Example:  
FUNCTION calc_average(list_of_numbers)  
 SET total_sum TO 0  
 FOR each number IN list_of_numbers: INCREMENT total_sum BY number  
 SET average_value TO total_sum DIVIDED BY LENGTH OF list_of_numbers  
 RETURN average_value  
END FUNCTION