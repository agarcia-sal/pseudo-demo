```python
You are given pseudocode representing one or more classes, functions, and their internal logic. Your task is to translate the pseudocode into a complete, correct, and efficient Python implementation that meets these strict criteria:

- Preserve all class names, method/function names, argument names, signatures, nesting, and object-oriented structure exactly as specified in the pseudocode, without adding or removing methods or changing their names or parameters.

- Implement all control flow (loops, conditionals, returns) and logic exactly as described, preserving the intended algorithm and behavior with no deviation.

- Explicitly define any custom data types, classes, or structures implied or required by the pseudocode, providing minimal yet fully functional implementations (e.g., ListNode for linked lists), so the solution is self-contained and runnable as-is.

- Assume all inputs and outputs use standard Python built-in types unless otherwise specified.

- Ensure the code is idiomatic, concise, robust, and optimized for clarity and performance, leveraging appropriate Python standard library features without unnecessary code or comments.

- Do not add any extra output, test scaffolding, or explanatory textâ€”return only one complete Python code block with the full implementation, including all necessary supporting definitions.

- You may import any standard Python modules if they assist in producing an optimal solution within the constraints.

- The final implementation must be ready to execute within a 5-second runtime limit on typical problem inputs.

Enclose your entire response strictly and only within a single Python code block as below:

```python
# complete, self-contained Python implementation derived from the pseudocode
```
```