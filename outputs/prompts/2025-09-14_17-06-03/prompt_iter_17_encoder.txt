Generate clear, high-level, and compact pseudocode from the given problem description.  
Preserve all class names, function names, parameters, and the original class/object structure exactly as stated.  
Use mostly natural language with symbolic and abbreviated constructs, favoring concise one-liners for assignments, control flow, and returns without unnecessary details.  
Avoid purpose statements, summaries, comments, or explanations—output **only** the pseudocode.  

Format pseudocode as numbered lines starting at 1, with each step indented by two spaces inside classes/functions, following this style:

1. CLASS ClassName:  
2. FUNCTION functionName(params)  
3.  SET x TO 0  
4.  WHILE x < n: x++  
5.  RETURN result  
6. END FUNCTION  
7. END CLASS  

Do not use separator lines or extraneous markup.  
Keep logic as compact and high-level as possible while ensuring clarity and correctness.  
Example:

Input:
```
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

Output:
```
FUNCTION calc_average(nums)
  SET total TO 0
  FOR each num IN nums
    INCREMENT total BY num
  SET avg TO total DIVIDED BY LENGTH(nums)
  RETURN avg
END FUNCTION
```