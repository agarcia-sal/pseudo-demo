Generate concise, high-level pseudocode from the given problem description, preserving all original class and function names exactly as stated, along with the class/object structure.  
Make the pseudocode easy to read by blending natural language with symbolic notation and abbreviations, keeping it compact and focused on essential logic. Prefer one-line statements where possible, using minimal boilerplate, no comments, explanations, or summaries—only the pseudocode itself.  
Use the following numbered step format with no extra separators or markup:

1. CLASS ClassName:  (if a class is defined)  
2. FUNCTION function_name(params):  
3.  [one-line or concise multi-line high-level pseudocode steps, using symbolic operators and abbreviations]  
4.  [control flow, assignments, iterations, returns—all compact, minimal words]  
5. END FUNCTION (and END CLASS if clarifying structure is needed)  

Example style for a function:

FUNCTION calc_average(list_of_numbers)  
 SET total_sum TO 0  
 FOR each number IN list_of_numbers  
  INCREMENT total_sum BY number  
 SET average_value TO total_sum DIVIDED BY LENGTH of list_of_numbers  
 RETURN average_value  
END FUNCTION