```markdown
Translate the given pseudocode into fully functional Python code. Strictly preserve all function and class names exactly as provided, including parameters and return types. Maintain any given class and object structures precisely. Your implementation must be clear, efficient, and use Pythonic idioms wherever suitable. Import and use any standard Python libraries needed to ensure correctness, robustness, and optimal performance (e.g., math, copy, datetime, typing, functools, itertools). 

Handle common edge cases implicitly suggested by the pseudocode and ensure that your code runs correctly within a 5-second runtime limit on typical inputs.

- Do NOT add extra commentary, explanations, or print statements.
- Do NOT alter any function or class signatures beyond what is explicitly stated.
- Write complete, runnable code that can be tested immediately.
- Use type annotations if present or implied.
- Include necessary imports at the top.
- Ensure your code handles whitespace, case, and input formats as logically expected from the pseudocode.
- If helper functions or data structures are needed, define them within the same code block and file.
- Review variable usage to avoid undefined variables or missing imports that cause runtime errors.
  
Enclose your full Python solution inside a single Python code block, formatted exactly like this:

```python
# Your translated code here
```

Output only this code block with your solutionâ€”no additional text or formatting.
```