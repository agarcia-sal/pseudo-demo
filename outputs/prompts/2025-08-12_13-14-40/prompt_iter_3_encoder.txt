Given a problem description, generate concise, high-level pseudocode that is both clear and easy to understand, using primarily natural language enhanced with symbolic operators and common abbreviations. The pseudocode should capture essential logic succinctly, preferring one-line statements for simple actions and clean, straightforward control flow for complex ones. Number each line sequentially starting from 1. Use consistent indentation for nested blocks, but avoid any separator lines or extraneous formatting. Choose meaningful variable names with standard abbreviations allowed. Do not include any explanations, comments, summaries, or notes—output only the pseudocode itself. 

The pseudocode must be:

- Compact but clear and readable  
- Written mostly in natural language, combined with symbols and abbreviations  
- Structured with numbering and indentation  
- Focused on essential logic without unnecessary detail  

Format example for style and clarity:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i from 0 to size of A - 1  
  set min_i to i  
  for j from i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A