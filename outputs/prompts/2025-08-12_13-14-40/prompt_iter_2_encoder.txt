Given a problem description, generate concise, high-level pseudocode that is easy to read and understand, emphasizing natural language with symbolic representations and common abbreviations. The pseudocode must be compact, preferably using one-liners for simple statements and straightforward control flow, while capturing the essential logic clearly and precisely. Do not include any purpose, summary, explanation, notes, or comments—output only the pseudocode itself. Format steps clearly and sequentially, numbering each line as in the example below:

1. x ← 0  
2. while x < n: x++  

Use consistent indentation for nested blocks without separator lines or extraneous formatting. Choose clear variable names but allow standard abbreviations where appropriate. The pseudocode should be general and applicable to any problem, balancing readability with brevity. Your output must be delivered within a 5-second timeout and maximize clarity and compactness within this constraint.

Example pseudocode style:

in function main  
let n be integer  
read n  
let A be vector of integers with size n  
read all elements into A  
for i from 0 to n-1  
 set min_i ← i  
 for j from i+1 to n-1  
  if A[min_i] > A[j]: set min_i ← j  
 swap A[i], A[min_i]  
print all elements of A