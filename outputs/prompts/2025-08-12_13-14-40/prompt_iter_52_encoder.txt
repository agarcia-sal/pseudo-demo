Given a problem description, generate clear, concise, and high-level pseudocode using predominantly natural language enhanced with minimal, meaningful symbolic notation and standard abbreviations only to improve brevity and clarity. The pseudocode should be easy to read, compact, and understandable, favoring one-liners whenever possible without sacrificing clarity.

Strict requirements:  
- Number every line sequentially starting at 1, without gaps.  
- Indent nested blocks consistently with one tab or 4 spaces.  
- Avoid comments, explanations, summaries, or any additional text—output only raw pseudocode.  
- Use symbols like ←, ++, <, = sparingly and only when they make pseudocode more succinct and clear.  
- Prefer high-level constructs and natural phrasing over verbose syntax.  
- Use meaningful variable names and keep notation uniform throughout.

Example style to emulate (do not reproduce statements verbatim, but mimic style and structure):

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i + 1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A