Generate concise, clear, and easy-to-read pseudocode from the given problem description. Use mostly natural language phrasing combined with symbolic notation and common abbreviations to keep it compact, high-level, and intuitive. Prefer single-line statements when clarity permits. Use meaningful but short variable names.

Instructions:  
- Output only the pseudocode, with no explanations, comments, summaries, or any descriptive text.  
- Do not add notes or clarifications.  
- Use concise control structures (loops, conditionals) in symbolic and natural forms.  
- Use numbered lines starting at 1.  
- Follow this formatting style:

1. x ‚Üê 0  
2. while x < n: x++  

- Represent inputs, outputs, variable declarations, and control flow clearly but succinctly.  
- Favor natural language constructs that remain compact and unambiguous, balancing readability with brevity.  
- Avoid verbose expressions; use high-level yet readable statements.  
- Do not use separator lines or extra spacing beyond indentations where needed.  
- Optimize the output for rapid comprehension within a few seconds.