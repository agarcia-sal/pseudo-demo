Write clear, concise pseudocode that closely matches the input problem’s structure and naming, preserving all class and function names exactly as given. Use natural language that is easy to read but compact and high-level. Prefer symbolic assignments and one-liners where appropriate to maintain brevity and clarity. Avoid providing any purpose statements, summaries, explanations, comments, or notes. Present the pseudocode in a numbered line format as shown below (no separator lines):

1. x ← 0  
2. while x < n: x++

Maintain class and method definitions, indentation to show code blocks, and minimal but explicit statements of control flow, data manipulation, and returns. Use common programming terms (e.g., FOR, WHILE, IF, RETURN) capitalized consistently, and preserve argument names as in the input. Output only valid pseudocode reflecting the original logic, aiming for clarity, fidelity, and brevity within a 5-second run limit.

Example:

If given:

    def calc_average(nums):
        total = 0
        for num in nums:
            total += num
        avg = total / len(nums)
        return avg

Output:

1. FUNCTION calc_average(nums)  
2.   SET total TO 0  
3.   FOR each num IN nums  
4.    INCREMENT total BY num  
5.   SET avg TO total DIVIDED BY LENGTH OF nums  
6.   RETURN avg  
7. END FUNCTION