Generate concise, easy-to-read pseudocode from the problem description, using mostly natural language with selective symbolic forms and standard abbreviations. Write pseudocode as a minimal, standalone algorithm outline—no purpose, explanation, summary, or notes. Use high-level constructs and prefer one-liners that capture logic clearly and compactly. Represent control flow naturally and succinctly, for example with constructs like:

1. x ← 0  
2. while x < n: x++

Use meaningful yet brief variable names. Avoid any separators, extra formatting, or labels beyond numbered steps. Output only the numbered pseudocode steps with consistent indentation reflecting nesting. The pseudocode should be easy to read and directly correspond to the problem’s algorithmic solution.

Example:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A