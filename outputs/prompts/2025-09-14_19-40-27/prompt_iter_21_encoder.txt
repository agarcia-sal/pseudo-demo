Generate accurate, concise, and high-level pseudocode directly from the given problem description. Preserve all original class names, function names, and their signatures exactly as provided, and maintain the same class and method structure without alteration. Write pseudocode in clear, natural language enriched with common symbolic notation and standard pseudocode keywords (e.g., SET, FOR, WHILE, IF, ELSE, RETURN), using compact one-line instructions whenever possible. Number each step sequentially (1., 2., 3., …) without any extra spacing or separator lines. Format loops, conditionals, assignments, and returns succinctly, for example:

1. x ← 0  
2. WHILE x < n: x++  

Avoid explanations, comments, summaries, or notes. The output must be pseudocode only. Use abbreviations and symbols to keep lines short but still readable. Focus on a natural flow with clear logic and minimal words while preserving all original identifiers and structure. Return the best pseudocode possible within a 5-second limit.