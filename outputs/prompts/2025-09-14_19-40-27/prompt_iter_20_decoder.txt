Translate the given pseudocode into a complete, runnable Python 3 implementation following these exact instructions:

- Keep all class names, method names, parameters, and class/object structures unchanged and consistent with the pseudocode — do not rename or restructure.
- Implement the algorithm logic exactly as described without skipping, omitting, or adding extraneous steps; carefully infer any nuanced details or edge cases implied by the pseudocode for full correctness.
- Use Pythonic, clean, and efficient code that passes correctness requirements and can execute within 5 seconds on typical inputs.
- You may import any Python standard library modules or widely accepted third-party packages only when their usage naturally fits the pseudocode’s intent and improves clarity, correctness, or performance.
- Define any helper functions, classes, or data structures only if clearly implied or necessary for the pseudocode’s completeness and correctness.
- Match all output behavior precisely as specified — including returned values, printed output, or other interface methods.
- Add concise, relevant comments only to clarify subtle or complex logic; avoid unnecessary or verbose commentary.
- Always wrap your complete Python code in a single, properly formatted code block with the language tag ```python```.
- Output only that code block with no additional explanation or text.

```python
# Your fully translated Python code here
```