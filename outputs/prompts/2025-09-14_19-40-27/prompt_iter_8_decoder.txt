Translate the given pseudocode into fully functional, clean, and optimized Python code enclosed within a single Python code block as:

```python
# Your translated code here
```

Follow these precise instructions:

- Keep all original class names, function names, parameters, and the overall class/object structure exactly as provided in the pseudocode.
- Faithfully implement every detail of the logic in the pseudocode without adding, omitting, or altering functionality.
- Handle all edge cases and input constraints logically implied or suggested by the pseudocode.
- Optimize for clear, efficient, and idiomatic Python code that will reliably execute within a 5-second runtime.
- You may use any standard or third-party Python libraries if they improve correctness or efficiency, but avoid unnecessary dependencies.
- Include any necessary helper functions or data structures logically implied or required by the pseudocode for correctness and completeness.
- If the pseudocode specifies an output or return value, ensure your code returns or prints this exactly as indicated.
- Do not include explanations, debugging comments, or any text outside the single python code block.
- When applicable, include minimal comments only to clarify tricky parts, never verbose explanations.
- Use syntactically correct Python 3 code targeting readability, correctness, and performance.

Output only the complete Python code translation inside a single, properly formatted Python code block: 

```python
# Your translated code here
```

Do not add anything else before or after the code block.