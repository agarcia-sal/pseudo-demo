```markdown
You are given pseudocode that defines one or more classes and functions. Your task is to translate this pseudocode into clean, correct, optimized Python 3 code while preserving all original class names, function names, parameters, and the class/object structure exactly as provided.

Please adhere strictly to the following instructions:

- Translate the pseudocode logic **faithfully and completely**, without adding, omitting, or changing functionality.
- Maintain all class and function names exactly as in the pseudocode along with their signatures and hierarchy.
- Include any necessary helper functions or data structures explicitly implied or required by the pseudocode.
- Handle all edge cases and constraints that are clearly implied by the pseudocode or typical for such logic.
- Optimize the code to be efficient and idiomatic Python 3. Use built-in language features and standard or widely accepted packages (e.g., collections, itertools, math, heapq, bisect, typing) **only if they improve clarity, correctness, or runtime**; avoid unnecessary dependencies.
- Ensure your code will reliably run within a 5-second runtime.
- When the pseudocode specifies output via return statements or print, reflect that precisely.
- Write syntactically correct Python 3 code with appropriate typing hints where possible for clarity and correctness.
- Use minimal comments solely to clarify non-obvious or complex parts; omit verbose explanations or debugging comments.
- Enclose your entire solution in a single Python code block as follows, and output nothing else outside it:

```python
# Your translated Python code here
```

Do **not** include any introductory text, explanations, test cases, or outputs beyond this single code block.

Focus on correctness, faithful translation, edge-case robustness, and idiomatic Python style to maximize your solutionâ€™s reliability and performance.
```