Translate the given pseudocode into a fully functioning, efficient, and idiomatic Python 3 implementation with these strict requirements:

- Keep **all** class names, method names, parameters, and overall class/object organization exactly as given; do not rename or restructure.
- Follow the pseudocode logic **exactly**—do not omit, add, or reorder steps. Where details are implicit, deduce them carefully to handle all edge cases.
- Implement the code so it runs correctly and optimally within 5 seconds for all reasonable inputs.
- Use Python standard libraries or widely used third-party packages **only if** their inclusion naturally aligns with the pseudocode’s intent and significantly improves code clarity, correctness, or performance.
- Introduce helper functions, classes, or data structures **only if** they are implied or necessary to fulfill the pseudocode completely and correctly.
- Match **exactly** the output interface from the pseudocode—whether returning values, printing, or other output forms, keep behavior identical.
- Write clean, readable code using idiomatic Python 3 patterns, and add brief, precise comments to clarify only non-obvious or complex parts.
- Enclose the entire solution in a single Python code block starting with triple backticks and `python`. Output nothing else outside this code block: no explanations, no delimiters, no extra text.

```python
# Complete Python code translated from the given pseudocode here
```