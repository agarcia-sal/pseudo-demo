Generate clear, concise, and high-level pseudocode for the provided problem description. Preserve all original class names, method names, and signatures exactly as given, maintaining the same class and method structure. Use predominantly natural language enriched with standard pseudocode keywords (e.g., SET, IF, WHILE, FOR, RETURN) combined with symbolic operators (←, =, ≥, etc.) for brevity and clarity. Favor compact, one-line statements whenever possible; use minimal but precise wording to ensure readability and correctness. Number each pseudocode instruction sequentially starting from 1. Avoid explanations, comments, summaries, or any extra formatting such as separator lines or indentation beyond what clearly defines nested blocks. Represent control structures succinctly, for example:  

1. SET x ← 0  
2. WHILE x < n: x++  

Maintain clear delineation of nested blocks through indentation or line breaks consistent with conventional pseudocode style. Do not invent new variable or function names—use exactly those in the problem description. Avoid verbose phrasing; instead, prefer common abbreviations and symbols naturally understood in pseudocode. Output only the pseudocode instructions without any additional text. Prioritize producing the most readable, accurate pseudocode within a 5-second runtime limit.