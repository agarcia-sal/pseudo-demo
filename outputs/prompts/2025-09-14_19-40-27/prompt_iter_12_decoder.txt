Translate the given pseudocode into complete, clean, and production-ready Python 3 code. Adhere strictly to the following detailed instructions:

- Preserve all class names, method/function names, argument names, and the exact class/object hierarchy as specified in the pseudocodeâ€”do not rename, restructure, or remove any classes or functions.
- Faithfully implement the logic exactly as described, without adding, removing, or modifying behavior unless explicitly required for correctness.
- Handle all edge cases and input constraints explicitly or implicitly indicated by the pseudocode to ensure robust, correct output.
- Produce idiomatic, readable, and efficient Python code optimized for performance within a 5-second runtime limit.
- You may employ any standard Python library or widely accepted third-party libraries (e.g., collections, functools, itertools, heapq, bisect), but avoid unnecessary imports or dependencies unrelated to the problem.
- Include any additional helper functions or classes only if they are logically inferred or essential for accurate implementation.
- Respect exact return or output behavior as specified: if the pseudocode returns a value, the code must return it identically; if it prints output, replicate that precisely.
- Do NOT include any explanatory text, debugging code, test scaffolding, input/output demonstration, or comments beyond those minimally clarifying intricate or nontrivial code segments.
- Use Python 3 syntax consistent throughout, ensuring code is syntactically correct, efficient, and clear.
- Write all your code enclosed exclusively within a single Python code block as below, with no leading or trailing text:

```python
# Your fully translated, optimized Python code here
```

Output nothing else before or after this code block.