Generate precise, high-level pseudocode that exactly solves the problem as described.  
Use mostly concise, natural language mixed with symbolic notation and common abbreviations to keep it compact and easy to read.  
Prefer single-line steps and terse control flow (e.g., for, while, if with inline actions) to maximize brevity without sacrificing clarity.  
Number steps starting at 1 with consistent indentation to show nesting (tabs or spaces, matching depth).  
Select simple, meaningful, unique variable and function names. Avoid redundancy or unnecessary verbosity.  
Do not include any explanations, comments, summaries, notes, or separator lines—output only the numbered pseudocode steps exactly in this form:

1. x ← 0  
2. while x < n: x++

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A