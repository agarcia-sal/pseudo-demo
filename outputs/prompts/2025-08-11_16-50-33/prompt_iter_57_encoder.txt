Generate concise, high-level pseudocode that exactly solves the given problem.  
Make it easy to read and understand by blending natural language with common symbolic notations and abbreviations.  
Use mostly one-line numbered steps with terse control flow (e.g., for, while, if with inline actions) to keep it brief yet clear.  
Indent consistently (tabs or spaces) to show nesting depth; number steps starting at 1.  
Choose simple, meaningful, unique variable and function names. Avoid redundant or verbose wording.  
Output only the numbered pseudocode steps—no explanations, summaries, comments, or separators.  
Format examples like this:

1. x ← 0  
2. while x < n: x++  

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A