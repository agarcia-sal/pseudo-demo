Generate clear, concise, and compact high-level pseudocode that exactly solves the problem as described.  
Use mostly natural language with symbolic notation and common abbreviations to keep it brief and easy to read.  
Prefer single-line instructions and concise control flow expressions wherever possible.  
Number each step starting at 1. Indent nested blocks with tabs or consistent spaces, matching the level of nesting.  
Choose simple, meaningful, and consistent variable and function names without redundancy.  
Do not include explanations, summaries, comments, notes, or separator lines. Output only the numbered pseudocode steps in this exact format:

1. x ← 0  
2. while x < n: x++

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A