Generate concise, clear, high-level pseudocode that exactly solves the problem as specified.  
Use primarily natural language with symbolic notation and common abbreviations to keep it compact and easy to read.  
Prefer single-line numbered steps with terse control flows (e.g., for, while, if with inline actions) for brevity and clarity.  
Number steps starting at 1; indent lines consistently (by tabs or spaces) to indicate nesting depth.  
Choose simple, meaningful, unique variable and function names—avoid redundancy or verbosity.  
Do not include explanations, comments, summaries, notes, or separator lines—output only the numbered pseudocode steps exactly in this form:

1. x ← 0  
2. while x < n: x++

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A