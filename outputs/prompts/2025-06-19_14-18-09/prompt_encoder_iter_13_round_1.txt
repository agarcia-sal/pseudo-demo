Translate the given code into clear, concise, and high-level pseudocode that emphasizes readability and understanding. Use mostly natural language mixed with standard shorthand and symbolic notation. Prefer compact one-line statements; indent only for nested or complex control flow. Abstractions should be high-level, avoiding unnecessary low-level detail but retaining full logic and completeness.

Strict formatting and style requirements:  
- Output **only** numbered pseudocode lines starting at 1, increasing by 1 with no gaps or omissions  
- Use **tab characters** (not spaces) for indentation, exactly one tab per nested block  
- Write statements as succinct one-liners except when multi-line is essential for clarity of nested structures  
- Use common shorthand terms and symbols: e.g.  
  “let n be integer”  
  “read n”  
  “set x ← y”  
  “swap A[i], A[j]”  
  “if X then Y”  
  “set X to Y if condition”  
  “for i = 0 to n-1” or “for all elements in A”  
- Prefer the assignment arrow “←” for all assignments  
- Write conditionals and loops compactly but clearly (e.g., “while x < n: x++”, “if A[i] > A[j] then set min_i ← j”)  
- Avoid explanations, comments, headings, blank lines, or any extraneous text  
- Do not include separator lines or additional formatting beyond the above rules  
- Use natural language fluently but without verbosity—brevity and precision are key

Example pseudocode style to follow:  

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i = 0 to size of A exclusive  
  set min_i ← i  
  for j = i+1 to size of A exclusive  
   set min_i ← j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A

Produce the best pseudocode possible within 5 seconds, output exactly as specified and nothing else.