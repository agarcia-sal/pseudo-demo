Translate the given code into concise, clear, and high-level pseudocode that emphasizes readability and understanding. Use mostly natural language combined with standard symbolic notation and common abbreviations to keep it compact. Prioritize single-line statements for simple actions and control structures, using indentation (one tab per nested block level) only when necessary to show nested or complex logic.

Strict formatting and style rules:  
- Output **only** numbered lines starting at 1, incrementing by 1 with no gaps  
- No explanations, comments, summaries, headers, footers, or blank lines; output pseudocode **only**  
- Use **tab characters** (not spaces) for indentation, exactly one tab per block level  
- Prefer succinct one-line statements for assignments and control flow, e.g., `for i = 0 to n-1`, `if X then Y`, `while X do Y`  
- Use assignment arrow `←` for assignments, and natural condition syntax like `set X to Y if condition`  
- Use familiar phrases like “let n be integer”, “read n”, “set size of A = n”, “swap A[i], A[min_i]”, “print all elements of A”  
- Avoid verbose wording, redundancy, or over-explaining; be as brief as possible without losing clarity or completeness  
- Present loops and conditionals clearly but compactly; write multiple simple statements on one line if directly related and easy to read  
- Do not insert divider lines, separators, or extra formatting beyond these rules  

Example pseudocode style your output must emulate exactly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A

Produce the best pseudocode within 5 seconds; output exactly the numbered lines as specified, nothing else.