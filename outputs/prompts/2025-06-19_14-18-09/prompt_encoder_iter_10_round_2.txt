Translate the given code into concise, clear, and high-level pseudocode, favoring natural language with standard shorthand and symbolic notation for brevity and clarity. Output should be easy to read and understand, using succinct one-line statements whenever possible; indent nested or complex logic exactly one tab per level. Use compact forms of conditionals and loops, avoiding verbose phrasing or redundant details. Maintain a consistent style with natural, minimal wording, employing the assignment arrow “←” and compact loop and conditional syntax like “for i = 0 to n-1”, “if X then Y”, and “set X to Y if condition.”  

Strict formatting rules:  
- Output **only** consecutively numbered lines starting at 1, no gaps or blank lines  
- Use **tab characters** for indentation; exactly one tab per nested block level  
- Prefer single-line statements (including simple control structures) unless multiple lines are needed for clarity  
- No explanations, comments, summary, or any text beyond numbered pseudocode lines  
- Use standard abbreviations and phrases such as “let n be integer,” “read n,” “set size of A = n,” “swap A[i], A[min_i],” etc.  
- Do not output separator lines, extra blank lines, or formatting beyond line numbers and indentation  

Example output style to emulate precisely:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A

Produce the best possible pseudocode for the given code within 5 seconds; output only the numbered pseudocode lines exactly as specified.