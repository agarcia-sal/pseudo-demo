Translate the given code into clear, concise, and high-level pseudocode that prioritizes readability and faithful logic representation.  
Use mostly natural language with common programming abbreviations and symbols (e.g., ← for assignment, ++ for increment) to keep it compact but unambiguous.  
Favor one-liner statements whenever the action is simple and easily readable. For more complex operations or control structures, use consistent one-tab indentation per block level to show nesting.  
Avoid verbose phrases; express conditions and loops succinctly yet clearly, for example:  
- "let n be integer"  
- "read n"  
- "for i = 0 to n-1"  
- "set min_i to j if A[min_i] > A[j]"  
- "x ← x + 1" or "x++"  
Do not include any comments, explanations, summaries, headings, or separator lines. Output only the numbered pseudocode lines starting at 1, increasing sequentially without gaps.  
Do not combine unrelated operations into one line; keep lines logically atomic and readable.  

Example output style for reference:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A  

Produce the best pseudocode possible within 5 seconds; output only the numbered pseudocode lines exactly as specified.