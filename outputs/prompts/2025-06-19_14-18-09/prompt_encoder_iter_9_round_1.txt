Translate the input code into clear, concise, and high-level pseudocode using mostly natural language with standard abbreviations and symbolic notation. Output should emphasize readability and compactness by expressing simple statements and control flow as single lines with minimal indentation. Use tab characters for indentation; one tab per nested block level only. Avoid verbosity, comments, explanations, summaries, blank lines, or extra formatting—output **only** numbered pseudocode lines starting from 1, incrementing by 1 with no gaps.

Follow these rules strictly:  
- Use short, natural phrases like “let x be integer”, “read x”, “set sum ← 0”, “swap A[i], A[j]”  
- Use assignment arrow “←” for all assignments  
- Express conditionals as “if condition then action” or “set x to y if condition” in one line wherever possible  
- Write loops compactly, e.g., “for i = 0 to n-1”, “while x < n: x++”, “for all elements in A”  
- Favor concise one-line statements for simple controls; only indent multiple lines when nested or complex logic demands clarity  
- No comments, explanations, separators, blank lines, or extra formatting beyond numbering and tabs  
- Number lines exactly starting at 1 and incrementing by 1, no skipped numbers or duplicates  

Example output style to follow closely:  

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A