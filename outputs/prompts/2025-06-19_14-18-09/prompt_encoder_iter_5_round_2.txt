Translate the given code into clear, concise, and easy-to-read pseudocode that balances natural language and common symbolic notation. Use compact, high-level phrasing with a preference for one-liner statements when simple and readable. Emphasize clarity and completeness without verbosity; include just enough detail to precisely capture logic and data operations.

Follow these exact style rules:  
- Number every line sequentially from 1, no gaps  
- Use plain words for types/actions, e.g., “let n be integer”, “read n”  
- Use arrow “←” for assignments, e.g., “x ← 0”  
- Write conditionals inline and minimal, e.g., “set min_i to j if A[min_i] > A[j]”  
- Use standard, natural loop syntax, e.g., “for i = 0 to n-1”, “for all elements in A”  
- Indent nested blocks by exactly one tab per level, no spaces  
- Prefer one-liners for simple operations, otherwise indent nested lines  
- Avoid explanations, comments, summaries, headings, blank or separator lines  
- Use concise abbreviations and symbolic shorthand combined with natural language  
- Preserve all control flow and structural detail clearly and readably  

Output only the numbered pseudocode lines, nothing else.

Example style:  
1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A