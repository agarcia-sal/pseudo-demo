Translate the given code into clear, concise, and high-level pseudocode that prioritizes readability and completeness using mostly single-line statements with minimal essential nesting. Use natural language combined with common symbolic notation and standard abbreviations to achieve a compact style without losing clarity. Avoid low-level details and verbose wording; express logic succinctly but fully.

Strict formatting and style requirements:  
- Output **only** sequentially numbered lines beginning at 1, incrementing by 1 without gaps  
- No explanations, comments, headers, footers, blank lines, or separators  
- Use **tab characters** (not spaces) for indentation; one tab per nested block level only when needed  
- Prefer one-line control structures (e.g., `if condition then action`, `while condition do action`) unless multi-line is necessary for nested logic  
- Use clear natural language with standard shorthand, e.g. “let n be integer”, “read n”, “set min_i to i”, “swap A[i], A[min_i]”  
- Use assignment arrow “←” for assignments, and concise conditionals like “set X to Y if condition”  
- Write loops compactly, e.g. “for i = 0 to n-1”, “for all elements in A”  
- Avoid redundancy and excess details; keep pseudocode as brief as possible while maintaining completeness  
- Do not insert extra blank lines, separators, or formatting beyond above rules  

Example pseudocode style your output should follow:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A