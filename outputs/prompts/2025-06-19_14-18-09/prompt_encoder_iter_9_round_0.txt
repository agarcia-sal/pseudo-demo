Translate the given code into high-level, compact, and easy-to-read pseudocode that balances natural language with standard shorthand and symbolic notation. Use mostly concise one-line statements; indent using **tab characters** exactly one per nested block level only when needed for clarity of nested or compound logic. Prefer clear, idiomatic pseudocode constructs over verbose explanation; emphasize readability and completeness without low-level detail.

Strict output format:
- Output **only** numbered lines starting at 1, incrementing by 1 with no skips or gaps  
- Use concise English with conventional abbreviations, e.g., “let n be integer”, “read n”, “set min_i to i”, “swap A[i], A[min_i]”, “if X then Y”, “for i = 0 to n-1”, “while condition do X”  
- Use assignment arrow “←” for assignments  
- Write loops and conditionals preferably as single lines when simple; use indentation (tabs) only for nested statements or multiple actions under one control  
- No comments, explanations, summaries, blank lines, or extra formatting—just numbered pseudocode lines  
- Avoid verbose wording or redundant expressions; be succinct but explicit  
- Do not include separators, headers, or footers  
- Produce the best complete pseudocode representation of the code exactly as specified  
- Complete within 5 seconds

Example to emulate exactly:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i = 0 to size of A - 1  
  set min_i to i  
  for j = i + 1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A