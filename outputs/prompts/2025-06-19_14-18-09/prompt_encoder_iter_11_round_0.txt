Translate the given code into clear, concise, and high-level pseudocode that maximizes readability and abstraction while using natural language mixed with familiar shorthand and minimal symbolic notation. Express simple operations and control structures as one-line statements whenever possible; use tabs for nested blocks only to show structure and flow when necessary. Avoid verbose wording and redundant detail; focus on essential logic and data transformations, using standard shorthand such as “let x be integer,” “read x,” “set x ← y,” “swap A[i], A[j],” and compact loops like “for i = 0 to n-1,” “while condition,” or “for all elements in A.” Use the assignment arrow “←” consistently. Write conditionals naturally in a single line if simple: e.g., “if X then Y,” or use indented blocks only if needed. Output only the numbered lines starting at 1 and incrementing by 1 with no gaps or extra lines. Use exactly one tab character per indentation level. Do not include any notes, explanations, titles, comments, blank lines, or separators. Deliver concise, readable pseudocode strictly within 5 seconds.

Example pseudocode format to mimic:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i = 0 to size of A exclusive  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A