Translate the given code into clear, easy-to-read, concise, high-level pseudocode using mostly natural language with selective symbolic and abbreviated forms to maximize compactness. Prefer one-liner statements that capture the key logic without superfluous detail. Avoid comments, explanatory notes, summaries, or overviews—output only the pseudocode steps. Use an incremental numbered list format as follows:

1. variable ← value  
2. if condition: action  
3. while condition: action  
4. for var in range: action  
5. call function with parameters  

Adopt a minimal yet expressive style—use natural language for clarity, but employ symbols like ← for assignment, ++ for increments, and concise loop and conditional forms. Structure nested blocks by indentation (tab or 4 spaces) under loops or conditionals. Avoid separator lines or extra formatting.

Example output style your pseudocode should follow (do not output this example, only the pseudocode):

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for all elements in A  
  set min_i to i  
  for j = i+1 to size of A exclusive  
   set min_i to j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
8. print all elements of A

Your solution must produce concise, high-level pseudocode that balances readability and compactness, strictly adhering to this numbered and indented format within a 5-second runtime limit.