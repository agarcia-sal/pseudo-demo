Given the pseudocode below, evaluate whether it is fully and unambiguously reproducible into correct and complete working code that will **pass all unit tests for every valid input** without requiring assumptions or additional context. Your assessment must consider all of the following facets:

- **Completeness:** All inputs, outputs, and intermediate data or state manipulations are explicitly and precisely defined.  
- **Correctness:** The pseudocode logic correctly implements the problem requirements in all cases, including edge cases.  
- **Determinism and Unambiguity:** There are no vague instructions, conflicting steps, or undefined behaviors. Each operation and decision point must be fully specified.  
- **Control Flow:** Loops terminate correctly and conditions cover all cases without deadlocks, infinite loops, or missing branches.  
- **Implementation Feasibility:** The pseudocode can be directly and consistently translated into executable code without requiring external assumptions, hidden information, or informal reasoning.  
- **Robustness:** It handles boundary conditions, invalid or unexpected inputs (if applicable), and exceptional cases as would be needed to pass all unit tests.

**Only output a single digit:** `1` if the pseudocode meets all these criteria and is reproducible/reliably passes all unit tests; otherwise, output `0`.

No explanations, comments, or extra text. Your output sequence must align exactly with the pseudocode input order.

Pseudocode:  
