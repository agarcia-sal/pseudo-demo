Translate the provided pseudocode into clean, idiomatic, and efficient Python code while adhering strictly to the structure and identifiers in the pseudocode. Follow these instructions precisely:

- Enclose your entire solution within one Python code block marked by triple backticks and `python`:  
  ```python
  ...
  ```

- Preserve all original function names, class names, and their nesting/hierarchy exactly as given in the pseudocode; do not rename or restructure unless explicitly indicated.

- Include all necessary import statements at the top of the code; use only standard Python libraries or packages explicitly allowed in the pseudocode context.

- Your code must be ready to run as-is: no test scripts, no input/output handling, no debugging prints, no placeholders, and no extraneous code beyond the direct implementation of the pseudocode.

- When pseudocode references data structures like trees or linked lists, if their definitions are provided, implement them exactly as specified. If not provided but necessary, explicitly define minimal, standard Python class definitions consistent with common convention, without adding extraneous fields or methods.

- If the pseudocode expects classes/objects as input, assume that inputs are provided as instances of those classes, not raw lists or primitive types. Do not assume or simulate input conversions unless explicitly stated.

- Thoughtfully choose Python idioms and standard library features to implement the logic clearly and concisely, ensuring correctness and efficiency for typical input sizes within a 5-second runtime constraint.

- Carefully consider and handle common edge cases naturally arising from the pseudocode logic, even if not explicitly described.

- Do not introduce any global variables or external helper classes unless they appear or are clearly implied by the pseudocode.

- Make sure every step and operation from the pseudocode is faithfully translated into syntactically correct and logically equivalent Python code.

Here is the pseudocode to implement: