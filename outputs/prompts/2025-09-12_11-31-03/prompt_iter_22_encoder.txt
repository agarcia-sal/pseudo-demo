Generate clear, concise, compact pseudocode from the given problem description following these strict rules:  

- Retain all original class names, function/method names, parameter names, and nesting exactly as given.  
- Use mostly natural language with minimal symbolic notation; keep statements high-level, succinct, precise, and readable.  
- Represent data structures explicitly and naturally (e.g., “let A be vector of integers”); mention sizes only if stated or necessary.  
- Use the exact variable and parameter names without any renaming or abstraction throughout.  
- Use indentation only to indicate logical blocks (loops, conditionals, nested functions). Avoid unnecessary or excessive indentation.  
- Prefer single-line control statements with symbols where clarity is preserved (e.g., ← for assignment, simple for loops, if conditions), otherwise use minimal indented lines.  
- Number lines sequentially from 1. No blank lines, separators, trailing comments, explanations, or output beyond pseudocode itself.  
- Use standard abbreviations and concise expressions unambiguously.  
- Follow this style for assignments and control flow:  
  1. x ← 0  
  2. while x < n: x++  
  3. if cond: do_action  
- Include explicit “return” lines for functions that return a value.  
- Reflect class and method nesting precisely as in original source using:  
  in class ClassName  
  in function functionName  
- Do not invent or assume any data types, classes, or constructs not defined in the original problem description.  
- Handle input/output as implied or standard in the problem context only.  
- Output only the pseudocode—no summaries, explanations, or notes.  
- Ensure the output can be produced within 5 seconds.

Example output style to emulate:  

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A