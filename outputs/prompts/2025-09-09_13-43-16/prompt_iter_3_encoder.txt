Create concise pseudocode from the given problem description preserving the original function and variable names. Output only the pseudocode without any purpose, summary, explanation, or comments. The pseudocode should be easy to read and understand, using natural language combined with symbolic operators and abbreviations, while staying compact and high-level. Prefer one-liners and concise statements; use control structures with inline bodies when simple. Follow this numbering and formatting style exactly, with no separator lines:

1. x ‚Üê 0  
2. while x < n: x++

If the problem involves a function, begin with:

in function <function_name>

Then declare variables naturally, e.g.,

let n be integer

Use clear but brief instructions. Avoid verbose language or detailed elaborations. Rely on natural algorithmic descriptions balanced with symbolic clarity. Use common idiomatic constructs efficiently (e.g., for loops, conditionals). Produce output optimized for clarity and brevity within a 5-second generation limit.