Translate the given code into clear, compact, and high-level pseudocode prioritizing readability through mostly natural language combined with standard symbolic operators (←, ==, !=, <, ≤, >, ≥, +, -, *, /, %, ++, --) for assignments, comparisons, and arithmetic.

Follow these rules strictly:

- Begin each function with: `in function <name>`
- Declare variables and data structures naturally and briefly, e.g.,  
  `let A be vector of integers`  
  `set size of A = n`
- Express input/output and data operations concisely:  
  `read n`  
  `read n elements into A`  
  `print all elements of A`
- Prefer mostly one-line statements that represent meaningful, atomic program steps; use minimal multi-line blocks and indent only when necessary for clarity.
- Write loops and conditionals concisely, using colons and inline conditions whenever unambiguous, for example:  
  `while x < n: x++`  
  `for i in 0 to n-1: if A[i] < A[min_i]: set min_i ← i`
- Use simple inline if, assignment, and update expressions whenever they improve compactness without sacrificing clarity.
- Use natural, descriptive names but accept common, unsurprising abbreviations.
- Do not include comments, explanations, summaries, or any statements beyond pseudocode.
- Number all output lines sequentially from 1, omit empty lines and separators, and output only the final pseudocode.
- Merge logically connected operations into single lines to balance compactness with understandability.
- Avoid excessive verbosity; favor succinctness but keep structure clear and unambiguous.

Example output style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to size of A - 2:  
8.   set min_i ← i  
9.   for j in i+1 to size of A - 1: if A[j] < A[min_i]: set min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A

Generate only minimal pseudocode lines strictly representing the input code’s logic, maximizing clarity, compactness, and high-level abstraction under these rules.