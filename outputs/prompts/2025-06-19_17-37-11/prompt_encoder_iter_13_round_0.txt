Translate the given code into concise, clear, and easy-to-read pseudocode using mostly natural language with essential symbolic operators (←, ==, !=, <, ≤, >, ≥, +, -, *, /, %, ++, --) for assignments, comparisons, and arithmetic. Prioritize a compact, high-level abstraction style that retains precise program logic and meaningful steps. Use mostly one-line statements, allowing minimal indentation only for truly multi-line blocks where clarity requires it.

Strict instructions:

- Begin each function with:  
  `in function <function_name>`

- Declare variables and data structures simply and naturally:  
  `let A be vector of integers`  
  `set size of A = n`

- Express input/output and key operations succinctly:  
  `read n`  
  `read n elements into A`  
  `print all elements of A`

- Prefer compact loops and conditionals using colons and inline conditions when clear; if needed, indent minimal blocks with tabs or two spaces:  
  `while x < n: x++`  
  `for i in 0 to n-1: if A[i] < A[min_i]: set min_i ← i`

- Use one-liners wherever possible without sacrificing clarity. Combine logically related steps into single lines to balance compactness and readability.

- Favor intuitive and descriptive names, with commonly known abbreviations allowed only if they do not harm readability.

- Do NOT include comments, explanations, purpose statements, or summaries. Output only pure pseudocode lines representing the code’s behavior, exactly numbered starting from 1 with no blank lines or separators.

- Number every line sequentially (1, 2, 3, …) with no extra formatting.

Example style to follow (note indentation only when multi-line necessary):

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to size of A - 2:  
8.   set min_i ← i  
9.   for j in i+1 to size of A - 1: if A[j] < A[min_i]: set min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A

Produce only the minimal number of lines needed, maximizing abstraction, clarity, and compactness exactly as specified.