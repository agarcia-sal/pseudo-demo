Translate the given code into concise, clear pseudocode that balances readability with compactness by using mostly natural language, common symbolic operators (←, ==, !=, <, ≤, >, ≥, +, -, *, /, %, ++, --), and high-level abstractions. Prefer mostly one-line statements that represent meaningful program steps without unnecessary splitting or verbosity. Use natural but succinct descriptive names, allowing common abbreviations without loss of understanding.

Follow these strict rules:

- Begin each function with: `in function <name>`
- Declare variables and data structures naturally, for example:  
  `let A be vector of integers`  
  `set size of A = n`
- Express I/O and data operations concisely, e.g.:  
  `read n`  
  `read n elements into A`  
  `print all elements of A`
- Write loops and conditionals succinctly using colons and inline forms whenever clarity permits, for example:  
  `while x < n: x++`  
  `for i in 0 to n-1: if A[i] < A[min_i]: set min_i ← i`
- Use inline simple updates and assignments if they do not harm clarity.
- Avoid comments, explanations, summaries, or any text beyond the pseudocode statements.
- Number all output lines sequentially starting with 1; do not include blank or separator lines or extraneous formatting.
- Use tab indentation only inside multiline loops or conditionals if absolutely necessary; prefer single-line forms.
- Combine logically connected steps into minimal lines to maximize clarity and compactness.
- Do not introduce any header, footer, or extraneous text—output only the polished pseudocode lines.

Example style to emulate:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to size of A - 2:  
8.   set min_i ← i  
9.   for j in i+1 to size of A - 1: if A[j] < A[min_i]: set min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A

Produce only the minimal pseudocode strictly representing the input code’s logic, maximizing naturalness, abstraction, and compactness in this style.