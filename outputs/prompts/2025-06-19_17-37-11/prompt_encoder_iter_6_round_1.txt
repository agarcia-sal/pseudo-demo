Translate the input code into concise, clear, and compact pseudocode that is easy to read and understand. Use mostly natural language combined with standard symbolic operators (←, ==, !=, <, ≤, >, ≥, +, -, *, /, %, ++, --) for assignments, comparisons, and arithmetic. Prefer mostly single-line statements or minimal multiline blocks strictly where clarity demands.

Follow these rules strictly:  

- Begin each function with: `in function <name>`  
- Declare variables and data structures naturally and succinctly, e.g., `let A be vector of integers`, `set size of A = n`  
- Use short direct phrases for input/output and basic operations, e.g., `read n`, `print all elements of A`, `read n elements into A`  
- Write loops and conditionals compactly, using colons and one-liners whenever possible, e.g.:  
  - `while x < n: x++`  
  - `for i in 0 to n-1: if A[i] < A[min_i]: set min_i ← i`  
- Inline simple conditional assignments and updates on the same line to minimize line count without losing clarity  
- Use natural descriptive terms but allow standard abbreviations if they reduce length without ambiguity (e.g. “idx” for index)  
- Avoid comments, explanatory notes, summaries, or any text beyond the pseudocode itself  
- Output only numbered pseudocode lines starting at 1 with no blank lines or separators  
- Group logically connected steps into as few lines as possible while preserving high-level abstraction and readability  
- Use consistent indentation (e.g., one level per nested block) but keep it minimal and clean  

Example output style:  

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to size of A - 2:  
8.   set min_i ← i  
9.   for j in i+1 to size of A - 1: if A[j] < A[min_i]: set min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A  

Produce only the minimal, direct pseudocode lines that correspond to the input code, maximizing readability, compactness, and high-level abstraction as per these rules.