Translate the given code into clear, concise, and high-level pseudocode focused on readability and compactness. Use predominantly natural language augmented by standard symbolic operators (←, ==, !=, <, ≤, >, ≥, +, -, *, /, %, ++, --) for assignments, comparisons, and arithmetic. Prioritize one-line statements that encapsulate complete meaningful steps, avoiding unnecessary verbosity or splitting. 

Follow these formatting and style rules exactly:

- Start each function with: `in function <name>`  
- Declare variables and data structures naturally with minimal verbosity, e.g.,  
  `let n be integer`  
  `let A be vector of integers`  
  `set size of A = n`  
- Use compact natural language for I/O and operations:  
  `read n`  
  `read n elements into A`  
  `print all elements of A`  
- Write loops and conditionals succinctly, preferring oneliners and inline conditions with colons:  
  - `while x < n: x++`  
  - `for i in 0 to n-1: if A[i] < A[min_i]: set min_i ← i`  
- Inline simple assignments, increments, and conditional updates without extra lines to maximize brevity without sacrificing clarity  
- Use natural descriptive terms and standard abbreviations only when unambiguous and more concise  
- No comments, explanations, summaries, or additional text—only pseudocode lines  
- Number output lines sequentially from 1, no blank lines or separators  
- Group logically connected operations into minimal lines, balancing abstraction with clarity  
- Avoid unnecessary keywords or redundant phrases; convey intent directly and compactly  

Example output style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to size of A - 2:  
8.   set min_i ← i  
9.   for j in i+1 to size of A - 1: if A[j] < A[min_i]: set min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A  

Generate only the minimal concise pseudocode lines corresponding to the input code, maximizing high-level abstraction, compactness, and readability under these rules.