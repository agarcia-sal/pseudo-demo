Translate the given code into clear, concise, and easy-to-read pseudocode that uses a balance of natural language and symbolic notation to maximize readability and compactness. The pseudocode should be high-level and expressive, preferring mostly one-line statements that capture meaningful steps without excessive detail or fragmentation. Use natural language for variable declarations, control flow, and data structures, combined with standard symbolic operators for assignments and conditions. Number each line sequentially starting from 1. 

Strictly follow these instructions:

- Begin with function definitions using “in function <name>”
- Declare variables and data structures naturally: e.g., “let A be vector of integers”, “set size of A = n”
- Use concise natural language for operations and control flows: “read n”, “print all elements of A”, “read n elements into A”
- Represent assignments and comparisons with symbols: ←, ==, !=, <, ≤, >, ≥, +, -, *, /, %, ++, --
- Write loops and conditionals succinctly; use colons and inline statements for simple bodies, e.g.:
  
  `while x < n: x++`
  
  `for i in 0 to n-1: if A[i] < A[min_i]: set min_i ← i`
  
- Group logically connected steps in minimal lines without losing clarity; avoid splitting trivial steps unnecessarily
- Prefer natural, descriptive terms over abbreviations unless they improve clarity and conciseness without ambiguity
- Avoid comments, explanations, summaries, or any non-pseudocode text
- Output only the numbered lines of pseudocode—no extra formatting or separators

Example of target style:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers  
5. set size of A = n  
6. read n elements into A  
7. for i in 0 to size of A - 2:  
8.   set min_i ← i  
9.   for j in i+1 to size of A - 1: if A[j] < A[min_i]: set min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A

Generate only the pseudocode lines that directly correspond to the input code, maximizing compactness, readability, and high-level abstraction within the constraints above.