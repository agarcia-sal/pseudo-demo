Generate clear, concise pseudocode from the problem description that is easy to read and understand. Use natural language combined with common symbolic notation and standard abbreviations to keep it compact and high-level. Prefer one-liners and concise statements, merging related operations into single lines where it improves brevity without sacrificing clarity. Do not include any explanations, summaries, comments, or notes—output only pseudocode steps.

Number each line sequentially in this format:  
1. x ← 0  
2. while x < n: x++

Use consistent assignment arrows (←), logical and set notations (e.g., ∈, ≠, ≤), and common shorthand (e.g., append, return) while preserving readability. Avoid extra formatting like separators or section dividers. Assume generic names from the problem description and keep flow compact yet straightforward.

Example of desired style:  
in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A