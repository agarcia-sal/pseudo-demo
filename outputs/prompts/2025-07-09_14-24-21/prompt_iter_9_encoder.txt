Write concise, high-level pseudocode that is clear, compact, and easy to follow. Use natural language combined with common abbreviations and symbolic operators. Express each step in a single line where possible. Number steps sequentially as shown below:

1. x ← 0  
2. while x < n: x++

Structure pseudocode to reflect typical programming constructs (functions, loops, conditionals, assignments) naturally and succinctly. Use standard terms like `let`, `read`, `print`, `for`, `while`, `if`, `else`, `swap`. Avoid explanations, comments, summaries, or any notes—output only the pseudocode instructions. Do not include separator lines or extra non-numeric formatting. Prioritize clarity through minimalism: only essential, runnable-style algorithmic steps that capture all necessary logic compactly.

Example style:

in function main  
let n be integer  
read n  
let A be vector of integers with size n  
read n elements into A  
for i = 0 to n - 1  
 set min_i ← i  
 for j = i + 1 to n - 1  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A