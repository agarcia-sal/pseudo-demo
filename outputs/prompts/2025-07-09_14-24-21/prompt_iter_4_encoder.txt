Write clear, concise, high-level pseudocode that is easy to read and understand, using mostly natural language enhanced by abbreviations and symbolic operators. Structure the logic compactly, aiming for one step per line, numbered sequentially as in this format:

1. x ← 0  
2. while x < n: x++

Ensure each step is self-contained and reflects standard programming constructs naturally (e.g., loops, conditionals, variable assignments). Use one-liner forms when possible without sacrificing clarity. Omit any explanations, summaries, comments, or notes—output only the pseudocode steps. Do not include separator lines or extra formatting beyond numbering. Focus on capturing all essential algorithmic steps in a direct, succinct manner suitable for fast generation and easy follow-up. The output should flow logically as an algorithm outline without function headers unless explicitly required.