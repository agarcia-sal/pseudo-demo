Write clear, concise, and high-level pseudocode that captures all key algorithmic steps in a compact, easily readable form. Use natural language combined with simple symbolic operators and abbreviations. Structure the pseudocode as a numbered list, one step per line, following this exact format:

1. variable ← initial_value  
2. while condition: update_variable  
3. if condition: action else alternative_action

Keep each line self-contained and preferably a single statement. Use common programming constructs naturally (loops, conditionals, assignments, function calls) without verbose or explanatory text. Avoid any comments, descriptions, summaries, notes, or formatting other than simple numbering and line breaks. Do not include separator lines or extra characters.

Example style to emulate:

1. in function main  
2. let n be integer  
3. read n  
4. let A be vector of integers size n  
5. read n elements into A  
6. for each i in 0 to n-1  
7.   set min_i ← i  
8.   for j from i+1 to n-1  
9.    if A[min_i] > A[j]: min_i ← j  
10.   swap A[i], A[min_i]  
11. print all elements of A

Ensure the output pseudocode is a tightly packed, clear, runnable-style outline without auxiliary text, designed for fast generation within 5 seconds.