Write a clear, compact, high-level pseudocode outline capturing all core algorithmic steps.  
Use mostly natural language with selective symbolic operators and concise abbreviations.  
Express logic in brief, self-contained lines—preferably one instruction per numbered step.  
Structure pseudocode naturally with common constructs (loops, conditionals, assignments), using the format:  

1. x ← 0  
2. while x < n: x++  

Avoid explanations, comments, summaries, notes, or separator lines.  
Do not add any formatting beyond sequential numbering starting at 1.  
Keep descriptions precise but readable, emphasizing understandability alongside conciseness.  
Use consistent verb forms like “let,” “set,” “read,” “print,” “for,” “if,” “while,” “swap.”  
Include variable declarations and input/output steps explicitly where relevant.  
Output only the pseudocode—no extra text or markdown formatting.  
Ensure the pseudocode fully covers the problem’s logic in a streamlined style suitable for quick comprehension and implementation.