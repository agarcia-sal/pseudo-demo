Translate the given pseudocode into fully functional, clean, and efficient Python code that correctly implements all described logic and edge cases.  

- Enclose the entire Python implementation within a single code block denoted by triple backticks and `python`, like this:  
```python
# your translated code here
```

- Code must be ready to run as-is without needing modifications.  
- Use only `input()` calls without prompts; do not include string arguments inside `input()`.  
- Avoid adding extraneous output or comments unless needed for clarity or correctness.  
- Do not add separator lines, debug prints, or explanations in the output.  
- Prioritize correctness, clarity, concise style, and performance optimized to reliably execute within 5 seconds on typical inputs.  
- You may import and use any standard or third-party Python packages if it improves correctness, robustness, or efficiency.  
- Handle typical edge cases and input constraints implicitly described by the pseudocode.  
- Your code should be as minimal as possible while fully capturing the intended algorithm.  

Focus on translating the algorithmic logic perfectly, ensuring the final code can be run immediately and produce the expected results without further user edits.