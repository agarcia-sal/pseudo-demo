Translate the given code into succinct, uniform pseudocode that strictly preserves its original structure: all control flows (conditionals, loops), variable assignments, function calls, and block scopes. Express logic clearly using mostly natural language with concise symbolic notation and common abbreviations to keep it compact and high-level. Prioritize one-line statements when possible; multiline blocks are allowed only when necessary to reflect nested structure clearly. Omitting detailed expressions, complex data structure internals, or exact operators is acceptable if it shortens output without losing essential logic or flow.

Number every distinct pseudocode statement or control block sequentially from 1, formatted as follows:

1. x ← 0  
2. while x < n: x++  

Do not include comments, explanations, summaries, headers, or separators. Avoid redundant wording and prioritize readability and clarity in a natural yet concise style. Output only the numbered pseudocode lines starting from 1, fully reflecting the original program’s control flow and logic in a minimal number of lines, optimized for fast generation (under 5 seconds).