Translate the input code into concise, high-level pseudocode that strictly preserves the original structure—variable assignments, function calls, conditionals, loops, and control flow—expressed uniformly and simply. Prioritize clarity and readability through natural language mixed with standard symbols and common abbreviations, aiming for compactness without losing essential logic. Use mostly one-line statements; it is acceptable to omit detailed expressions or some data structure specifics to minimize line count and remain efficient within a 5-second generation limit.

Number each pseudocode step sequentially, starting from 1, following this exact format:

1. x ← 0  
2. while x < n: x++

Do not include comments, summaries, explanations, headers, or any formatting other than the numbered pseudocode lines. Avoid verbose language; keep phrasing straightforward and intuitive. Do not use separator lines or extra spacing beyond what is needed to indicate code blocks (e.g., indentation for loops/conditionals). Output only the numbered pseudocode lines reflecting the code’s logic and flow, focusing solely on essential operational steps, preserving function scopes explicitly when present (e.g., “in function fname”).