Translate the given code into concise, uniform pseudocode that preserves all control flow (assignments, conditionals, loops, function calls) and structure exactly as in the original. Use simple, clear natural language mixed with symbolic notation and common abbreviations for compactness and readability. Express statements mostly as one-liners; you may omit complex expressions or intricate data details to minimize lines while keeping the core logic intact. Avoid explanations, comments, summaries, headers, or separators—output only numbered pseudocode lines starting from 1, strictly mirroring the code’s sequence and indentation.

Format example:

1. x ← 0  
2. while x < n: x++  

Include variable declarations and function definitions when explicit in the code, using terse natural phrasing (e.g. “let n be integer”, “in function main”). Prefer standard control flow keywords (if, else, while, for, return, call) and consistent assignment arrow (←). Use indentation or colon notation to denote nested blocks consistently but keep lines as compact as possible.

Output only the numbered pseudocode lines capturing all essential logic and flow, balancing clarity and brevity for fast generation and strong fidelity.