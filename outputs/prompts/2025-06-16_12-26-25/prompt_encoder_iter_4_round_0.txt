Translate the given code into clear, uniform pseudocode that preserves all control flows, variable assignments, function calls, and loops exactly as in the original. Present everything simply, compactly, and at a high-level, combining natural language with symbolic notation and standard abbreviations to minimize verbosity and line count. Strive for mostly one-line steps unless multiline structure is essential for clarity. Omissions of intricate expressions or complex data structure details are allowed if they reduce length and improve readability.

Number each step sequentially, starting from 1, with no headers, comments, explanations, or separators. Output only the pseudocode reflecting the code’s logical flow and structure, in a consistent style. Use indentation or line breaks only where strictly necessary (e.g., nested loops or conditionals) and prefer straightforward, intuitive phrasing.

Follow this format precisely:

1. x ← 0  
2. while x < n: x++  

Output only the numbered pseudocode lines, no extraneous text—just the pseudocode. Ensure a readable, concise, high-level translation suitable for test-time generation within 5 seconds.