Translate the given pseudocode into fully functional, clean, and efficient Python code. Adhere strictly to these rules:

- Keep all class names, function names, and their signatures exactly as specified in the pseudocode, preserving their class and method structure.
- Define and initialize all variables and data structures clearly; implement any helper classes or functions (e.g., for trees, linked lists) as implied by the pseudocode.
- Convert any pseudocode literals to correct Python equivalents (e.g., pseudocode `null` must be `None` in Python).
- When the pseudocode references complex data structures like trees or linked lists, implement standard constructors (e.g., `tree_node`, `list_node`) that take Python lists as input and return proper Python objects.
- Automatically include all necessary imports (from the standard library or common third-party packages) required for correctness, readability, and optimal performance.
- Your translated Python code should be able to run without modification and produce correct outputs within a 5-second time constraint.
- Return only the Python code enclosed within a single Python code block using triple backticks with the language annotation, like this:

```python
# your translated code here
```

Do NOT include any explanations, comments, or text outside this code block.

```
<Insert pseudocode here>
```