Translate the input code into clear, concise pseudocode that faithfully preserves its original structure, including all control flow constructs (if, else if, else, while, for, switch/case), variable assignments, function calls, and expressions. Use primarily natural language mixed with standard symbolic notation and common programming abbreviations (e.g., ← for assignment, ++ for increment). Produce a compact, high-level representation favoring readable one-line statements where possible. It is acceptable to omit certain less-critical details if doing so improves brevity and clarity. Use consistent indentation to indicate nesting clearly. Number every pseudocode line starting from 1 followed by a period and a space. Do not include comments, explanations, summaries, or any lines outside the pseudocode itself. Follow this general formatting style strictly:

1. let x ← 0  
2. while x < n: x++  
3. if condition: action  
4. call function(args)  

Avoid extra separators, blank lines, or formatting beyond indentation. Output only the pseudocode steps. Optimize for readability and concise logical flow, ensuring the pseudocode can be generated within 5 seconds.