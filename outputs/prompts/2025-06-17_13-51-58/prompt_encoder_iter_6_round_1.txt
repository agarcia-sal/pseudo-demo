Translate the given code into clear, concise pseudocode that preserves all original control flow constructs (if, else, while, for, switch/case), variable assignments, function calls, and expressions in a uniform, simple style. Express control structures and operations naturally and compactly, favoring one-line statements wherever possible without losing logical correctness. Use symbolic notation and common abbreviations to minimize verbosity while keeping readability high. The pseudocode should be high-level, easy to understand, and may omit less critical details if it helps reduce length. Preserve code structure exactly with consistent indentation for nested blocks. Do not provide explanations, comments, summaries, or state the code’s purpose. Output only the numbered pseudocode steps starting at 1, strictly following this style:

1. var ← initial_value  
2. if condition: action  
3. else: action  
4. for var from start to end exclusive: action  
5. while condition: action  
6. switch var: case value: action  
7. call function(args)  

Avoid extra formatting, separator lines, or text outside the numbered pseudocode. Prefer natural language augmented with simple symbols (←, ++, etc.) and short identifiers. The output must complete quickly (within 5 seconds), so prioritize clarity and brevity, fully preserving all key operations and logic flow even if some detail is omitted.

Example style your output should follow:

in function main  
let n be integer  
read n  
let A be vector of integers with size n  
read elements into A  
for i from 0 to n exclusive:  
  min_i ← i  
  for j from i+1 to n exclusive: min_i ← j if A[min_i] > A[j]  
  swap A[i], A[min_i]  
print all elements of A