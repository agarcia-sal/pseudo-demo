Translate the given code into clear, concise pseudocode that faithfully preserves all original control flow constructs (if/else, switch/case, for, while), variable assignments, expressions, and function calls. Use simple, consistent symbolic notation combined with natural, high-level phrasing that favors compact one-line statements wherever possible. The pseudocode should be easy to read and logically precise but can omit less critical details to minimize verbosity and line count. Always maintain code structure and nesting with consistent indentation, short meaningful names, and standard pseudocode conventions. Do not add comments, explanations, summaries, or any meta-text — output only the numbered pseudocode lines starting from 1, using this format:

1. x ← 0  
2. while x < n: x++  
3. if cond: doSomething()  
4. for i from 1 to n: process i

Avoid any separator lines, extra formatting, or descriptions. Prioritize brevity, clarity, and faithful logical representation. Complete the output swiftly within 5 seconds.