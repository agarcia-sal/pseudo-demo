Translate the given code into clear, compact pseudocode that faithfully preserves its original structure and all essential logic: variable assignments, control flows (if, else if, else, while, for, switch/case), loops, and function calls. Express control flow and data operations using uniform, simple symbolic notation combined with natural language, favoring concise, high-level one-liners wherever possible. Prioritize readability and brevity; it is acceptable to omit minor implementation details or verbose syntax if this improves clarity and reduces line count, but never exclude critical logic or control paths. Use consistent indentation to represent nested blocks and standard pseudocode conventions for loops and conditionals. Employ meaningful but short variable and function names. Output only the numbered pseudocode steps starting at 1, strictly following this style:

1. x ← 0  
2. while x < n: x++  
3. if cond: do()  
4. for i from start to end: update i  

Do not include comments, explanations, summaries, or extra formatting (no separator lines or headers). Do not describe the code’s purpose or add any meta-text—output only the pseudocode itself. Complete the output promptly within 5 seconds.