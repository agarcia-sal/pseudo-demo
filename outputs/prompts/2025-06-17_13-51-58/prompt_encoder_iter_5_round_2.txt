Translate the given code into clear, compact pseudocode that strictly preserves the original logical structure and control flows (if/else, while, for, switch/case), variable assignments, function calls, and expressions. Use consistent, simple symbolic notation mixed with natural language to maintain readability and high-level abstraction. Prefer concise one-line statements; it is acceptable to omit less critical details to minimize length while retaining key operations and flow. Use meaningful but brief names and indent nested blocks to show structure. Output only pseudocode lines numbered from 1, following this format exactly:

1. var ← initial_value  
2. if condition: action  
3. for var from start to end: action  
4. call function(args)  

Begin with function headers as “in function funcName” when applicable. Avoid any comments, explanations, summaries, or extra formatting (no separators, no titles). Do not describe purpose or add clarifications. Prioritize clarity and brevity equally to achieve correct, readable pseudocode within a 5-second completion limit. Example style to follow:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size exclusion  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A