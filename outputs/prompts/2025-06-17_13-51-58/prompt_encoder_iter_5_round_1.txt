Translate the given code into clear, concise pseudocode that strictly preserves its original control flow structures (if, else, while, for, switch), variable assignments, function calls, and expressions. Represent all elements uniformly using simple, natural language mixed with symbolic notation and common programming abbreviations. Prioritize readability and compactness by expressing logic mostly in one line per step, using concise but meaningful identifiers, and consistent indentation to reflect nesting. It is acceptable to omit less critical details or simplify complex expressions to reduce line count, provided the overall logical flow and key operations remain intact. Do not add explanations, comments, summaries, or describe the code’s purpose—output only the numbered pseudocode steps starting from 1, following this format:

1. x ← 0  
2. if x > 0: call func(x)  
3. for i from 1 to n: x ← x + i  
4. while y ≠ 0: y ← y - 1  

Avoid separator lines or any extra formatting. The output must be purely the pseudocode and complete within 5 seconds. Always output just the pseudocode, no additional text.