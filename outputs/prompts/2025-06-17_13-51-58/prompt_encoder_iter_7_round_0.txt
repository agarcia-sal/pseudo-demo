Translate the given code into concise, high-level pseudocode that preserves its original structure and all control flows (if, else, while, for, switch), variable assignments, function calls, and loops. Express everything uniformly and simply using natural language mixed with symbolic notation and common abbreviations. Favor readability, using mostly one-line statements, consistent indentation for nested blocks, and brief but meaningful identifiers. It is acceptable to omit less critical details if doing so reduces line count and improves clarity. Do not include explanations, comments, summaries, or metadata—output only the numbered pseudocode steps starting at 1, following this format:  

1. x ← 0  
2. while x < n: x++  
3. if condition: action  
4. call func(args)  

Use natural language for declarations (e.g., “let x be integer”), conditions, and actions where helpful, but keep pseudocode compact and clear. Avoid separator lines, bullet points, or extraneous formatting. Produce only the pseudocode strictly. Complete output within 5 seconds, prioritizing brevity while fully preserving logical flow and core operations.  

Example style your output should follow:  

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i + 1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A