Translate the given code into concise, high-level pseudocode that clearly preserves its original structure and all control flow elements (if, else, while, for, switch/case), variable assignments, function calls, and loops.  
Use natural language mixed with symbolic notation and standard abbreviations to enhance readability and reduce verbosity. Prefer compact one-line statements for simple actions; for nested or complex blocks, indent consistently to show hierarchy.  
Omit verbose details and explanations—even if some specificity is lost—to keep the output brief and straightforward. Do not include comments, summaries, or notes; output only the pseudocode steps precisely and sequentially.  
Format pseudocode steps starting from 1, using these example conventions:  

1. x ← 0  
2. while x < n: x++  
3. if cond: call func(args)  
4. for i from 0 to n-1: do something  

Use meaningful but short identifiers; express assignments, conditions, loops, and function calls uniformly and simply. Avoid separator lines or any extra formatting characters—only plain pseudocode. Prioritize clarity, brevity, and faithful logical flow preservation within a 5-second runtime limit.