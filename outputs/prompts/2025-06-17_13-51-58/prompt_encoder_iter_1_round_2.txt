Translate the given code into concise, high-level pseudocode that strictly preserves the original control flow structures (if, else, switch, for, while, do-while), variable assignments, function calls, and key operations. Use natural language augmented with simple symbolic notation and standard abbreviations to enhance readability and compactness, favoring brief one-line statements whenever possible. Preserve block structures with consistent indentation to reflect nesting, but omit any explanatory comments, summaries, or purpose descriptions. You may omit some less critical details if doing so significantly shortens the output, as long as the core logic and flow remain clear and correct.

Output only the numbered pseudocode lines starting at 1, following these style examples exactly:

1. var ← initial_value  
2. if condition: action  
3. for var from start to end: action  
4. call func(args)  

Use short, meaningful variable names and consistent formatting. Do not include any separator lines, extra notes, or blank lines. Keep output strictly to pseudocode that can be quickly read and understood without additional context.

Example style your output should match:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i ← i  
 for j = i+1 to size of A - 1  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A