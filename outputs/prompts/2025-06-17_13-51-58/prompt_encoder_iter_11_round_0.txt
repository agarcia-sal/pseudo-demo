Translate the input code into clear, concise pseudocode that faithfully preserves all control flow constructs (if, else, while, for, switch), variable assignments, function calls, and expressions. Express control flow and operations uniformly using simple, natural language enriched with standard symbolic notation and common concise abbreviations. Write compact, high-level pseudocode favoring readable one-liners and minimal lines while still reflecting the original logic and structure. You may omit less critical details if this reduces verbosity. Use meaningful but brief variable and function names and maintain consistent indentation to denote nested blocks. Do not add explanations, comments, summaries, or code purpose statements—output only continuous numbered pseudocode steps, starting at 1, strictly following this pattern:

1. x ← 0  
2. if condition: action  
3. for i from start to end: action  
4. call func(args)  

Do not include separator lines or any extra formatting. If the original code contains functions or procedures, represent function definitions as:

in function funcName(args)  
 [function body lines indented]

Keep the output strictly pseudocode—no extra text or formatting. Optimize for clarity, brevity, and faithful logical representation within a 5-second generation time.