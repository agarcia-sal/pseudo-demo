Translate the given code into concise, uniform pseudocode that strictly preserves its control flow (if, else if, else, while, for, switch/case), variable assignments, function calls, and loops. Express all logic clearly but compactly using mostly natural language phrasing combined with simple symbolic notation and abbreviations. Prefer brief, high-level one-liners and avoid expanding expressions unnecessarily. It’s acceptable to omit non-essential details to minimize line count, but never skip any core control flow or critical operation. Use clear, short variable and function names consistently, indent nested blocks properly, and employ standard pseudocode conventions. Do not add comments, explanations, or summaries—output only the numbered pseudocode lines sequentially starting at 1 in this style:

1. let x ← 0  
2. while x < n: x++  
3. if cond: call func()  
4. for i from 0 to n-1: process i

Avoid separator lines or any formatting besides indentation and numbering. Do not describe the program’s purpose or add notes—only the pseudocode itself. Aim for maximum readability and fidelity while keeping output compact and efficiently generated within 5 seconds.