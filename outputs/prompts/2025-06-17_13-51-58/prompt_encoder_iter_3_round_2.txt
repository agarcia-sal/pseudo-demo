Translate the given code into clear, concise pseudocode that faithfully preserves the original structure, including all control flow constructs (if, else, while, for, switch), variable assignments, function calls, and loops. Use simple, natural language combined with standard symbolic notation (e.g., ←, ++, --) and common abbreviations to keep the pseudocode compact and high-level. Favor one-line statements whenever possible, using indentation to indicate nested blocks clearly. It is acceptable to omit non-critical details or reduce verbosity to limit length, prioritizing readability and logical flow over completeness. Use brief but meaningful names for variables and functions. Do not include any explanations, comments, summaries, or code purpose descriptions. Output only clean pseudocode lines numbered sequentially starting from 1 in this style:

1. x ← 0  
2. while x < n: x++  
3. if cond: action else: other_action  
4. for i from 0 to n-1: call f(i)  

Avoid any extra formatting, separators, or text around pseudocode. Complete all output within 5 seconds, optimizing conciseness without losing essential logic.