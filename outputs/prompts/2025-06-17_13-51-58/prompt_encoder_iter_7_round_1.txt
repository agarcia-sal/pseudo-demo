Translate the given code into clear, high-level pseudocode that strictly preserves the original structure and logic flow, including all control structures (if, else, while, for, switch), variable assignments, function calls, and expressions. Express these consistently using natural language enhanced with simple symbolic notation and common abbreviations for brevity. Prioritize readability and conciseness by favoring compact one-line statements; omit less critical details if necessary to keep the output succinct—brevity may come at the cost of some precision. Number each step starting from 1, use indentation to denote nested blocks clearly, and employ meaningful but short identifiers.

Do not include any explanations, comments, summaries, or purpose descriptions—output only the pseudocode steps, precisely following this style:

1. var ← init  
2. if condition: action  
3. for i from start to end exclusive: action  
4. call function(args)  

Avoid separator lines or additional formatting. Output only the numbered pseudocode within 5 seconds, balancing completeness and conciseness to maximize correctness across diverse inputs.

Example output style:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for all elements in A  
 set min_i to i  
 for j = i+1 to size of A exclusive  
  set min_i to j if A[min_i] > A[j]  
 swap A[i], A[min_i]  
print all elements of A