Translate the provided code into concise, clear, and uniformly formatted pseudocode that strictly preserves the original structure, control flows (if, else, while, for, switch/case), variable assignments, function calls, and loops. Use simple natural language combined with common symbolic notation and standard abbreviations to keep it compact and high-level. Prefer short meaningful identifiers and one-line statements whenever possible. Omitting less critical details (e.g., explicit data types, intermediate temporary variables, exact syntax) is allowed to minimize line count, provided the logical flow and key operations remain intact. Reflect nested blocks with consistent indentation, but do not add any explanations, comments, summaries, headers, or separators.

Output only the numbered pseudocode steps starting from 1, using this style:

1. x ← 0  
2. while x < n: x++  
3. if condition: action  
4. for i from 0 to n-1: action  
5. call func(args)  

Avoid additional formatting or extraneous text. The output must be completed within 5 seconds, so balance brevity with clarity, prioritizing a readable, high-level representation of the original code’s logic.