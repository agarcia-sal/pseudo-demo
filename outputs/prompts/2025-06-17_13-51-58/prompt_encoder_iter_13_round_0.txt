Translate the input code into clear, concise pseudocode that exactly follows the original structure, faithfully representing all control flows (if, else if, else, switch/case), loops (for, while), variable assignments, function calls, and expressions. Use uniform, simple symbolic notation (e.g., ← for assignment) combined with natural, compact language phrasing. Prioritize brief, high-level one-liners and omit non-essential details to minimize line count while never skipping critical logic or control flow. Employ meaningful but short variable and function names and consistent indentation to mark nesting. Avoid explanations, comments, summaries, or meta-text; output only the pseudocode statements numbered sequentially from 1, in this style:

1. let n be integer  
2. read n  
3. let A be array of integers of size n  
4. for i from 0 to n-1: read A[i]  
5. for i from 0 to n-2:  
  set min_i ← i  
  for j from i+1 to n-1: if A[j] < A[min_i]: min_i ← j  
  swap A[i], A[min_i]  
6. print all elements of A

Do not include any separator lines or extra formatting. Do not add any text outside the numbered pseudocode steps. Optimize for maximal readability, brevity, and logical clarity, completing within 5 seconds.