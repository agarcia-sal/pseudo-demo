Translate the given code into concise, high-level pseudocode that strictly preserves its original structure and all key logic elements—control flows (if, else if, else, switch/case), loops (for, while), variable assignments, and function calls. Express these uniformly and simply using a mix of natural language and symbolic notation, favoring brief one-liners wherever possible. Prioritize readability and compactness over exhaustive detail: omit non-essential details if it reduces verbosity, but never omit critical operations or flow control. Use meaningful but short variable and function names, consistent indentation to denote nested blocks, and standard pseudocode conventions. Number all steps sequentially starting from 1, with no separator lines or extra formatting. Do not include comments, explanations, summaries, or any text other than the pseudocode itself. Output in this format:

1. x ← 0  
2. while x < n: x++  
3. if condition: doAction()  
4. for i from start to end: update i

If the code defines functions or blocks, indicate them clearly using natural language (e.g., “in function funcName”). Keep the pseudocode minimal yet faithful, optimized for clarity and speed with a 5-second completion time.