Translate the given code into clear, concise pseudocode that faithfully preserves its original structure and all control flow constructs (if, else, while, for, switch), variable assignments, function calls, and loops. Use simple, natural language phrasing combined with common symbolic notation and abbreviations for expressions and operations. Produce compact, high-level pseudocode favoring single-line statements when possible, but keep nested blocks clearly indented to reflect logical structure. It is acceptable to omit less critical details or overly verbose expressions if it helps reduce line count, but do not omit core logic or flow. Output only the numbered pseudocode lines starting at 1, strictly following this style pattern:

1. x ‚Üê 0  
2. while x < n: x++  
3. if condition: action  
4. for i from start to end: action  
5. call function(args)  
6. in function name

Do not include any explanations, comments, descriptive notes, summaries, or purpose statements. Do not add separator lines or extra formatting. Use meaningful but brief names for variables and functions, maintain consistent indentation for nested blocks, and keep the output minimal and focused on the essential logical steps. Prioritize readability and brevity equally, and ensure the output completes within 5 seconds.