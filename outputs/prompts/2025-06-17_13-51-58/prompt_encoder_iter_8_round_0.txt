Translate the given code into clear, concise pseudocode that preserves the original structure and all key elements: control flows (if, else, while, for, switch/case), variable declarations and assignments, function definitions and calls, and loops. Use simple, uniform expressions mixing natural language, common programming symbols (←, ++, --), and standard abbreviations. Produce a high-level, compact representation favoring readable one-liners wherever possible, but keep nested blocks properly indented to reflect logic. It is acceptable to omit some details or minor operations if that significantly reduces verbosity while maintaining the main logical flow and correctness. Output only the pseudocode, with numbered steps starting at 1, strictly following this style:

1. let x ← 0  
2. while x < n: x++  
3. if cond: do action else: do other action  
4. call func(args)  
5. for i from 0 to n-1: ...  

Do not add explanations, comments, summaries, headings, or extraneous formatting (no separator lines, no blank lines). Use meaningful but brief names, avoid verbose descriptions, and prioritize clarity and speed. The output must complete within 5 seconds. Here is an example format your output should match:

in function main  
let n be integer  
read n  
let A be vector of integers  
set size of A = n  
read n elements into A  
for i from 0 to n-1:  
 set min_i ← i  
 for j from i+1 to n-1:  
  if A[min_i] > A[j]: min_i ← j  
 swap A[i], A[min_i]  
print all elements of A