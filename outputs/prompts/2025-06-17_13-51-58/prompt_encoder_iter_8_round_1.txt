Translate the given code into clear, concise pseudocode that strictly preserves the original structure and flow, including all control constructs (if, else, while, for, switch/case), variable assignments, function calls, and expressions. Use simple, consistent symbolic notation (e.g., ← for assignment, ++ for increment) and standard programming abbreviations to keep pseudocode compact and high-level. Prefer natural language phrasing with minimal verbosity to enhance readability, favoring single-line statements whenever possible. It is acceptable to omit less critical details if doing so reduces length while retaining essential logic. Use consistent indentation to represent nested blocks but do not add explanations, comments, summaries, or purpose descriptions—output only the pseudocode steps, numbered sequentially starting at 1, strictly following this format:

1. x ← 0  
2. if x < n: call func(x)  
3. while y ≠ 0: y--  
4. for i from 0 to n-1: action  

Avoid any separators, extra formatting, or notes. The output must complete quickly (within ~5 seconds), so prioritize brevity and clarity but fully preserve all key operations and control flow semantics. Output only the numbered pseudocode, one step per line.