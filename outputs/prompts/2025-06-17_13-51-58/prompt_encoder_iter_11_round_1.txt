Translate the input code into clear, compact pseudocode that fully preserves the original control flow (if, else, switch, for, while, do-while), variable assignments, expressions, and function calls. Use a uniform, simple style blending natural language with common symbols and brief abbreviations to maximize readability and brevity. Express loops and conditions inline when possible. Favor one-liners, avoid unnecessary detail, and omit explanations or comments. Use consistent indentation to show nested structure clearly. Always start numbering from 1 and output only numbered pseudocode lines without extra text or separators. Follow these conventions and style examples strictly:

- variable initialization:  
  1. x ← 0  
- if/else conditional:  
  2. if x < 10: do action  
  3. else: do other action  
- loops:  
  4. for i from 1 to n: do action  
  5. while condition: do action  
- function calls and returns:  
  6. call func(args)  
  7. return value  

Keep identifiers meaningful yet concise. Break complex expressions into manageable parts. If needed, omit rare low-level details to reduce length but never lose the essence of the control flow or core operations. Do not include any narrative or descriptive text—only the numbered pseudocode lines. Ensure completion within 5 seconds by prioritizing concise clarity and faithfully representing the program’s logic and structure.