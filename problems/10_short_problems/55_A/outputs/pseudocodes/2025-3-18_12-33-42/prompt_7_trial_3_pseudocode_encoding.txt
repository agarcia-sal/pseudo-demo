```pseudocode
FUNCTION checkNumberAvailability(n)
    INITIALIZE an array 'isAvailable' of size n, where all entries are set to True
    INITIALIZE index j to 0
    INITIALIZE counter i to 1

    WHILE counter i is less than or equal to 500000 DO
        IF isAvailable[j] is True THEN
            SET isAvailable[j] to False
        END IF
        
        INCREMENT counter i by 1
        UPDATE index j to (j + i) modulo n
    END WHILE
    
    INITIALIZE an array 'availableNumbers' to hold entries from isAvailable that are still True

    IF the length of availableNumbers is equal to 0 THEN
        PRINT 'YES'
    ELSE
        PRINT 'NO'
    END IF
END FUNCTION
```

### Explanation
1. **Function Purpose:** This function checks whether any numbers remain true in a boolean list after performing a series of operations, and prints 'YES' if none remain and 'NO' if any are still true.
  
2. **Input and Output:**
   - **Input:** A single integer `n` representing the size of the boolean list.
   - **Output:** The function prints 'YES' or 'NO' based on the final state of the boolean list.

3. **Variable Names:**
   - `isAvailable`: Indicates whether each index is still available.
   - `availableNumbers`: Holds the indices that remain true after the operations.

4. **Control Structures:** 
   - A while loop runs up to 500,000 iterations, checking and updating element states. 
   - An if condition determines whether to print 'YES' or 'NO' based on the available entries.

5. **Complexity:** 
   - The logic uses modular arithmetic for circular indexing within the range of `n`, and efficiently checks the states of the entries in the boolean array.

This pseudocode captures the essence of the provided code while ensuring clarity and coherence for readers.
