```
FUNCTION checkIfAllFalse(n)
    // INPUT: An integer n indicating the size of a boolean list
    // OUTPUT: Prints 'YES' if all values in the list are False, otherwise prints 'NO'

    // Initialize a list of boolean values all set to True
    INITIALIZE booleanList AS a list of size n WITH all values set to True
    INITIALIZE index AS 0
    INITIALIZE step AS 1

    // Iterate while step is less than or equal to 500000
    WHILE step <= 500000 DO
        // If the current position in the booleanList is True
        IF booleanList[index] THEN
            // Set the current position to False
            booleanList[index] = False
        END IF
        
        // Increment step for the next iteration
        INCREMENT step BY 1

        // Update index using circular indexing based on step
        UPDATE index AS (index + step) MOD n
    END WHILE

    // Filter the booleanList to find all remaining True values
    INITIALIZE remainingTrue AS a list containing all values from booleanList that are True

    // If there are no True values remaining
    IF LENGTH of remainingTrue IS EQUAL TO 0 THEN
        PRINT 'YES'
    ELSE
        PRINT 'NO'
    END IF
END FUNCTION
``` 

### Explanation:
- The pseudocode starts by defining the function `checkIfAllFalse` which takes an integer `n` as input. This represents the size of a boolean list initialized to all `True`.
- It uses a while loop that iterates until a variable `step` exceeds 500,000. During each iteration, it checks if the current index in the boolean list is `True`, marks it as `False`, and adjusts the index circularly based on the current step count.
- After looping, it checks how many `True` values remain in the list. If none remain, it prints 'YES', otherwise it prints 'NO'.

