Here's a clear and structured pseudocode representation of the provided code snippet:

```plaintext
// Input
Get an integer value 'n' from user input

// Initialize a boolean list 'isActive' of size n
Set isActive to a list of size n filled with True 
Set index to 0
Set increment to 1

// Process to modify the 'isActive' list
While increment is less than or equal to 500000:
    If isActive at index is True:
        Mark isActive at index as False
    // Update increment and index for the next iteration
    Increment increment by 1
    Update index to (index + increment) modulo n

// Create a new list 'activeElements' from the 'isActive' list
Set activeElements to a list containing all True values from isActive

// Output Result
If the size of activeElements is 0:
    Print 'YES' // Indicating all elements are marked False
Else:
    Print 'NO' // Indicating there are still True elements present
```

### Explanation of Pseudocode:
1. **Input**: The pseudocode starts by obtaining an integer input from the user that represents the size of a boolean list.
2. **Initialization**: It creates a list to track the active (True) state for each index. Variables for indexing and incrementing are initialized.
3. **Processing Loop**: The main processing occurs in a loop that runs up to a specific limit (500,000). Within this loop, it marks certain indices in the list as False based on the incrementing pattern.
4. **Filtering Active Elements**: After processing, it constructs a new list containing only the active (True) elements.
5. **Output**: Finally, it checks this filtered list and outputs 'YES' if all elements were marked False or 'NO' if any remained True.

This structured pseudocode captures the intent and logic of the original code while being easily understandable.
