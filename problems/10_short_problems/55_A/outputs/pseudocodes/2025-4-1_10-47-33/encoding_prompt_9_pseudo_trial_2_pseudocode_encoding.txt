**Purpose:**  
The goal of the algorithm is to determine if all elements in a boolean list, initialized as true, can be set to false based on a specific pattern of iterations. If all elements are false, the output is "YES," otherwise it is "NO."

**Pseudocode:**

1. **Start**
   
2. **Receive Input:**
   - Assign the user's input value (representing the size of the list) to a variable called `list_size`.

3. **Initialize Boolean List:**
   - Create a list called `boolean_list` containing `list_size` elements, all set to `True`.

4. **Initialize Iteration Variables:**
   - Set a variable `current_index` to 0.
   - Set a variable `step` to 1.

5. **Loop through iterations:**
   - While `step` is less than or equal to 500,000:
     - Check if the current position in `boolean_list` (at `current_index`) is `True`.
       - If it is `True`, set that position to `False`.
     - Increment `step` by 1.
     - Update `current_index` to the next position using the formula: `(current_index + step) modulo list_size`. 
       - This ensures `current_index` wraps around if it exceeds `list_size`.

6. **Check Remaining True Values:**
   - Create a new list called `remaining_true` containing only the elements from `boolean_list` that are still `True`.

7. **Output Result:**
   - If the length of `remaining_true` is 0:
     - Print "YES".
   - Otherwise:
     - Print "NO".

8. **End**
