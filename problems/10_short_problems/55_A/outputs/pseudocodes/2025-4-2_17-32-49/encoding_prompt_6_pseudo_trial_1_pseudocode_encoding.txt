**Pseudocode:**

1. **Start**  
2. **Input**: Read an integer value 'n'  
3. **Initialize**: Create a list 'isActive' of size 'n' and set all elements to True  
4. **Set Variables**:  
   - Set variable 'nextIndex' to 0  
   - Set variable 'currentStep' to 1  
5. **Loop**: While 'currentStep' is less than or equal to 500,000
   - If 'isActive[nextIndex]' is True
     - Set 'isActive[nextIndex]' to False  (Mark this index as inactive)
   - Increment 'currentStep' by 1
   - Update 'nextIndex' as the remainder of dividing ('nextIndex' + 'currentStep') by 'n' (to ensure it wraps around within bounds of the list)
6. **Filter Active Elements**: Create a list 'activeElements' containing all indices in 'isActive' that remain True (still active)
7. **Output**:  
   - If the length of 'activeElements' is 0 (no active elements left) then
     - Print 'YES'
   - Otherwise
     - Print 'NO'  
8. **End** 

This pseudocode captures the overall logic of the original code while simplifying the specific programming constructs, making it easier to understand the algorithm being implemented.
