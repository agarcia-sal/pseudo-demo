```
FUNCTION checkCondition(inputNumber)
    // Initialize a list of boolean values indicating status for each index
    INITIALIZE booleanList as an array of size inputNumber filled with True
    INITIALIZE indexJ as 0
    INITIALIZE indexI as 1
    
    // Loop while indexI is less than or equal to 500000
    WHILE indexI <= 500000 DO
        // Check if the current position in booleanList is True
        IF booleanList[indexJ] is True THEN
            // Mark the current position as False
            booleanList[indexJ] = False
        END IF
        
        // Increment indexI
        indexI = indexI + 1
        
        // Update indexJ using modular arithmetic for cycling through the array
        indexJ = (indexJ + indexI) MOD inputNumber
    END WHILE
    
    // Filter booleanList for positions that are still True
    INITIALIZE trueValues as a list of indices from booleanList where value is True
    
    // Check if there are any True values left in the filtered list
    IF length of trueValues is 0 THEN
        OUTPUT 'YES'  // Output indicates condition is satisfied
    ELSE
        OUTPUT 'NO'   // Output indicates condition is not satisfied
    END IF
END FUNCTION
```

### Explanation:
- The function `checkCondition` takes one input (an integer `inputNumber`) and initializes a boolean array of the same size, all set to True initially.
- It uses a while loop to mark specific indices in this array as False based on arithmetic operations involving a secondary index.
- After the loop, it filters the array to find indices that remain True and checks if any such indices exist.
- Based on the presence or absence of True values, it outputs either "YES" or "NO". This captures the logical flow of the original code while maintaining a high-level understanding of its purpose and operations.
