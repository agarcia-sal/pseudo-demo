**Pseudocode**:

1. **Start Program**
   
2. **Get Input**: 
   - Set `totalNumbers` to the integer value entered by the user.

3. **Initialize Result Counter**: 
   - Set `primeCount` to 0 (this will store the count of prime numbers).

4. **Loop Through Each Number**:
   - For each `currentNumber` from 1 to `totalNumbers` (inclusive):
     1. **Set Divisor Count**: 
        - Initialize `divisorCount` to 0 (this will count how many divisors `currentNumber` has).
           - Set `workingNumber` to `currentNumber`.

        - For each `potentialDivisor` from 2 to one less than `currentNumber`:
          - If `workingNumber` is divisible by `potentialDivisor`:
               - Increment `divisorCount` by 1.
               - While `workingNumber` is divisible by `potentialDivisor`:
                 - Divide `workingNumber` by `potentialDivisor` (remove that prime factor).
     
        - If `divisorCount` equals 2 (it has exactly two distinct positive divisors):
          - Increment `primeCount` by 1.

   - Print the value of `primeCount`, which represents the total number of prime numbers found from 1 to `totalNumbers`.

---
