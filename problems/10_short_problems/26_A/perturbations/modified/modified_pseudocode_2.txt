**Purpose:** The goal of this code is to count and return the number of prime numbers up to a given integer input.

**Pseudocode:**

1. **Start**
2. **Read an integer input** and assign it to a variable named `limit`.
3. **Initialize a variable** called `primeCount` to zero. This will keep track of how many prime numbers are found.
4. **Loop through each integer** from 1 to `limit` (inclusive):
   - Assign the current integer to a variable named `currentNumber`.
   - Initialize a variable named `divisorCount` to zero. This will count how many divisors `currentNumber` has.
   - **Loop through each integer** from 2 to `currentNumber - 1` (inclusive) to check for divisors:
     - If `currentNumber` is divisible by `divisor` with no remainder:
       - Increment `divisorCount` by 1.
       - **While `currentNumber` is divisible by `divisor`**:
         - Divide `currentNumber` by `divisor` (this reduces `currentNumber`).
   - **Check if `divisorCount` equals 2**:
     - If true, it indicates that `currentNumber` is a prime number, so increment `primeCount` by 1.
5. **Print the value of** `primeCount`, representing the count of prime numbers up to the input integer.
6. **End**

**Comments:**
- The code checks every number between 1 and the given limit to determine if it's a prime by counting its divisors.
- A number is considered prime if it has exactly two distinct positive divisors: 1 and itself.
