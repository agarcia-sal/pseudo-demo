Here's the pseudocode based on the provided code. The focus is on making the logic clear and comprehensible.

```plaintext
// Read an integer input representing an upper limit
SET upperLimit TO input a number

// Initialize a counter for special numbers
SET specialNumberCount TO 0

// Loop through each number from 1 to the upper limit
FOR each number currentNumber FROM 1 TO upperLimit DO
    
    // Initialize a counter for unique prime factors
    SET uniquePrimeFactorCount TO 0
    SET tempNumber TO currentNumber
    
    // Loop through potential factors starting from 2 up to currentNumber-1
    FOR each factor FROM 2 TO currentNumber - 1 DO
        
        // Check if factor is a divisor of tempNumber
        IF tempNumber is divisible by factor THEN
            
            // Increment the unique prime factor count
            INCREMENT uniquePrimeFactorCount
            
            // Divide tempNumber by factor until it is no longer divisible by factor
            WHILE tempNumber is divisible by factor DO
                DIVIDE tempNumber by factor

    // Check if exactly two unique prime factors were found
    IF uniquePrimeFactorCount IS equal to 2 THEN
        // Increment the count of special numbers
        INCREMENT specialNumberCount

// Output the total count of special numbers
OUTPUT specialNumberCount
```

### Explanation:
1. **Input Handling**: The pseudocode starts by reading a number, denoting an upper limit for processing.
2. **Counter Initialization**: A counter is created to track how many numbers have exactly two unique prime factors.
3. **Outer Loop**: For each number starting from 1 up to the upper limit, it initializes counters for unique prime factors and creates a temporary variable to manipulate.
4. **Inner Loop**: It checks all possible factors starting from 2. If a factor divides the current number, it increments the unique factor count and divides the number by that factor as long as it can.
5. **Condition Check**: After factoring, it checks whether exactly two unique factors were found and increments the special number count if true.
6. **Output**: Finally, it prints out the total count of numbers with exactly two unique prime factors. 

This captures the original code's logic in a clear, human-readable format.
