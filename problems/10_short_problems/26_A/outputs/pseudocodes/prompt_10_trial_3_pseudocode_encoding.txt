**Pseudocode for Prime Number Counting**

1. **Initialization:**
   - Set variable `t` to an integer input value.
   - Set variable `res` to 0 (this will hold the count of prime numbers).

2. **Outer Loop for Each Number:**
   - For each integer `i` from 1 to `t` inclusive:
     - Initialize variable `cnt` to 0 (this will count the number of unique prime factors of `i`).
     - Set variable `num` to `i` (this keeps track of the current number being analyzed).

3. **Inner Loop for Factor Checking:**
   - For each integer `j` from 2 to `i - 1`:
     - If `num` is divisible by `j` (i.e., `num mod j equals 0`):
       - Increment `cnt` by 1 (indicating a new unique prime factor was found).
       - While `num` is divisible by `j`:
         - Divide `num` by `j` (this removes the factor from `num`).

4. **Count Primes:**
   - After exiting the inner loop, if `cnt` equals 2 (which indicates that `i` has exactly two unique prime factors):
     - Increment `res` by 1 (counting `i` as a prime number).

5. **Output:**
   - Print the value of `res` (this outputs the count of the prime numbers found).

**Assumptions:**
- The input `t` is a non-negative integer.
- The variable types and operations support integer arithmetic as described. 

**Pseudocode:**

```
SET t TO integer input
SET res TO 0

FOR i FROM 1 TO t DO
    SET cnt TO 0
    SET num TO i
    
    FOR j FROM 2 TO i - 1 DO
        IF num MOD j EQUALS 0 THEN
            INCREMENT cnt BY 1
            WHILE num MOD j EQUALS 0 DO
                SET num TO num / j
            END WHILE
        END IF
    END FOR
    
    IF cnt EQUALS 2 THEN
        INCREMENT res BY 1
    END IF
END FOR

PRINT res
```
