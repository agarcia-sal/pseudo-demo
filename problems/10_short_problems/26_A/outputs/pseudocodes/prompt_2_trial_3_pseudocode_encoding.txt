**Pseudocode:**

1. **Start**
2. **Receive an integer input `t`** which is the upper limit of numbers to check for a specific condition.
3. **Initialize a variable `resultCount` to zero**, which will hold the count of numbers that meet the condition.
4. **For each integer `currentNumber` from 1 to `t`, do the following:**
   - Set a variable `divisorCount` to zero, which will count how many divisors the `currentNumber` has.
   - Set a variable `tempNumber` equal to `currentNumber` for manipulation.
   - **For each integer `potentialDivisor` from 2 to `currentNumber - 1`, check the following:**
     - If `tempNumber` is divisible by `potentialDivisor` (i.e., `tempNumber` can be evenly divided by `potentialDivisor`):
       - Increment `divisorCount` by one to count this divisor.
       - **Continue dividing `tempNumber` by `potentialDivisor` until `tempNumber` is no longer divisible by `potentialDivisor`** (this reduces `tempNumber` by factoring out `potentialDivisor` completely).
   - **After checking all potential divisors**: 
     - If `divisorCount` equals 2 (indicating that `currentNumber` has exactly two distinct divisors):
       - Increment `resultCount` by one, as this indicates that `currentNumber` meets the specific condition.
5. **After looping through all numbers**, output the value of `resultCount`, which represents how many numbers from 1 to `t` had exactly two distinct divisors.
6. **End**
