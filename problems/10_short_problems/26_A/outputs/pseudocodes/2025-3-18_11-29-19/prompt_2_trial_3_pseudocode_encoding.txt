**Pseudocode:**

1. Start by obtaining an integer input representing the maximum number to be evaluated, denoted as "maximumNumber".

2. Initialize a variable "result" to 0. This variable will count how many numbers meet certain criteria.

3. Loop through each integer "currentNumber" from 1 to "maximumNumber" inclusive:
   - Set a variable "divisorCount" to 0. This will track how many distinct prime factors the current number has.
   - Set a variable "workingNumber" equal to the "currentNumber". This variable will be modified to determine the prime factors.

4. For each "potentialFactor" starting from 2 up to but not including "currentNumber":
   - Check if "workingNumber" is divisible by "potentialFactor":
     - If it is, increment the "divisorCount" by 1 to indicate that a new prime factor has been found.
     - While "workingNumber" is still divisible by "potentialFactor":
       - Divide "workingNumber" by "potentialFactor" to eliminate this factor from "workingNumber".

5. After evaluating all potential factors for "currentNumber":
   - If "divisorCount" equals 2, it indicates that "currentNumber" has exactly two distinct prime factors. When this condition is met, increment "result" by 1.

6. After examining all numbers from 1 to "maximumNumber", output the value of "result". This final value represents the total count of numbers that have exactly two distinct prime factors. 

**Input Requirement:** One integer which specifies how far to count.

**Output Requirement:** An integer representing how many numbers up to the input have exactly two distinct prime factors.
