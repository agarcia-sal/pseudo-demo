**Pseudocode Description:**

1. Start by reading an integer input, which represents the maximum number to check for a specific condition. Let's call this number "limit".

2. Initialize a variable "resultCount" to 0. This variable will keep track of how many numbers meet the specified condition.

3. Loop through each integer "currentNumber" from 1 to "limit" (inclusive):

    a. Initialize a counter variable "factorCount" to 0. This counter will be used to count how many unique prime factors the "currentNumber" has.
    
    b. Set a variable "tempNumber" equal to "currentNumber". This variable will be modified in the next steps to find the prime factors.

    c. Loop through each integer "potentialFactor" starting from 2 up to one less than "currentNumber":

        i. Check if "tempNumber" is divisible by "potentialFactor". If it is:
        
            - Increment the "factorCount" by 1, indicating that a new unique prime factor has been found.
            
            - While "tempNumber" is still divisible by "potentialFactor", divide "tempNumber" by "potentialFactor". This step will eliminate that factor from "tempNumber" until it can no longer be divided.
    
    d. After checking all potential factors for "currentNumber", if "factorCount" equals 2, it means "currentNumber" has exactly two unique prime factors. In this case, increment "resultCount" by 1.

4. After all numbers up to "limit" have been checked, output the value of "resultCount". This final count represents how many numbers from 1 to "limit" have exactly two unique prime factors.
