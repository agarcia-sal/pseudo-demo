**Purpose:**  
The goal of this program is to count the number of prime numbers from 1 to a given number.

**Pseudocode:**

1. **Start**
2. **Receive Input:**
   - Set `limit` to the integer value entered by the user.

3. **Initialize a Count Variable:**
   - Set `primeCount` to 0 to keep track of the number of primes found.

4. **Iterate Through Numbers:**
   - For each integer `currentNumber` from 1 to `limit` (inclusive):
     - Set `divisorCount` to 0, which will count the number of divisors of `currentNumber`.
     - Set `tempNumber` to `currentNumber` to check for factors.

5. **Check for Factors:**
   - For each `potentialDivisor` from 2 to `currentNumber - 1`:
     - If `tempNumber` is divisible by `potentialDivisor`:
       - Increase `divisorCount` by 1.
       - While `tempNumber` is divisible by `potentialDivisor`:
         - Divide `tempNumber` by `potentialDivisor` to remove that factor.

6. **Determine Prime Status:**
   - If `divisorCount` is exactly 2:
     - Increase `primeCount` by 1, indicating that a prime number has been found.

7. **End of Inner Loop**
8. **End of Outer Loop**

9. **Output the Result:**
   - Print the total `primeCount`, which represents the number of prime numbers between 1 and `limit`.

10. **End**
