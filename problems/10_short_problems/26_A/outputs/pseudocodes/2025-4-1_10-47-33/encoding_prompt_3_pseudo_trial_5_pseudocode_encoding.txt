Here is the pseudocode representation of the provided code snippet:

```
1. Start
2. Read an integer input 'timePeriod' 
3. Initialize 'resultCount' to 0
4. For each integer 'currentNumber' from 1 to 'timePeriod' (inclusive):
    a. Initialize 'divisorCount' to 0
    b. Set 'tempNumber' to 'currentNumber'
    c. For each integer 'potentialDivisor' from 2 to 'currentNumber' - 1:
        i. If 'tempNumber' is divisible by 'potentialDivisor':
            A. Increment 'divisorCount' by 1
            B. While 'tempNumber' is divisible by 'potentialDivisor':
                I. Divide 'tempNumber' by 'potentialDivisor'
    d. If 'divisorCount' equals 2:
        i. Increment 'resultCount' by 1
5. Print 'resultCount'
6. End
```

### Explanation:
- **Input:** An integer `timePeriod`, representing the total count of numbers to be examined.
- **Loop Structure:** It iterates over each number from 1 to `timePeriod`.
- **Divisor Count Logic:** Within each iteration, it checks for the number of unique divisors (i.e., potential prime factors) of `currentNumber`.
- **Condition Check:** It counts how many such divisors exist and checks if the count is exactly 2 (indicating a prime).
- **Output:** Finally, it prints the total count of numbers that were determined to possess exactly two distinct prime factors.
