Here's the pseudocode based on the provided code, following the structured language concepts:

```
BEGIN

    // Step 1: Declare and initialize variables
    SET t AS INTEGER
    SET res AS INTEGER = 0

    // Step 2: Input number of test cases
    PROMPT "Enter the number of cases:"
    READ t

    // Step 3: Loop through each number from 1 to t
    FOR i FROM 1 TO t DO
        SET cnt AS INTEGER = 0
        SET num AS INTEGER = i
        
        // Step 4: Check for factors of the current number
        FOR j FROM 2 TO (i - 1) DO
            IF (num MOD j EQUALS 0) THEN
                INCREMENT cnt BY 1
                
                // Step 5: Divide num by j as long as it's divisible
                WHILE (num MOD j EQUALS 0) DO
                    num = num DIVIDED BY j
                END WHILE
            END IF
        END FOR
        
        // Step 6: Check if the number has exactly two prime factors
        IF (cnt EQUALS 2) THEN
            INCREMENT res BY 1
        END IF
        
    END FOR

    // Step 7: Output the result
    OUTPUT res

END
```

### Key Components Explained:
1. **Variables:** `t` for the number of cases, `res` for the result count, `cnt` for counting factors, and `num` for the current number.

2. **Loops:** The outer loop iterates through each integer from `1` to `t`, while the inner loop checks each integer for factors.

3. **Conditionals:** To check if a number is divisible by `j` and if it has exactly two factors.

4. **Operations:** Modulus for checking factors, division for reducing the number, and incrementing counts appropriately.

### Assumptions:
- Input value `t` is assumed to be a positive integer.
- `cnt` counts how many distinct prime factors there are.
- `num` is initialized based on the current iteration number `i`.

### Readability:
- Clear statements and meaningful variable names are used to convey the logic effectively without relying on specific programming syntax.
