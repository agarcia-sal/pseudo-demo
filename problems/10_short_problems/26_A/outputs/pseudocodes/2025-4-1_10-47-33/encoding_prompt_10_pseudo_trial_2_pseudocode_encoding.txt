**Pseudocode:**

```
BEGIN

    // Step 1: Read the input value
    SET t TO integer value from user input

    // Step 2: Initialize result counter
    SET res TO 0

    // Step 3: Loop through each integer from 1 to t
    FOR i FROM 1 TO t DO
        // Step 4: Initialize prime factor counter
        SET cnt TO 0
        SET num TO i  // Store current value of i in num

        // Step 5: Check for factors of num
        FOR j FROM 2 TO (i - 1) DO
            IF (num MOD j = 0) THEN
                // Increment count of prime factors
                INCREMENT cnt BY 1
                
                // Step 6: Remove all occurrences of the factor j from num
                WHILE (num MOD j = 0) DO
                    num SET TO (num DIV j)
                END WHILE
            END IF
        END FOR

        // Step 7: Check if the count of prime factors equals 2
        IF (cnt = 2) THEN
            // Step 8: Increment the result counter for each valid i
            INCREMENT res BY 1
        END IF
    END FOR

    // Step 9: Output the result
    PRINT res

END
```

**Assumptions:**
- The variable `t` is assumed to be a positive integer, as it represents an upper limit for the loop.
- The operation of division (both regular and modulo) is assumed to be valid for integers.
- It is assumed that the input provided by the user can be correctly converted into an integer.
