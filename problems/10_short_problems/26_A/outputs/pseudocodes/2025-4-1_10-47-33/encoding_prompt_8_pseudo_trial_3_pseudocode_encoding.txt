### Purpose
The primary goal of this code is to count how many numbers from 1 to a given number, `t`, are semiprime. A semiprime is defined as a natural number that is the product of exactly two prime numbers.

### Pseudocode
```
BEGIN

    // Get the input value for t
    SET t to integer input

    // Initialize a variable to keep track of the count of semiprimes
    SET semiprimeCount to 0

    // Loop through each number from 1 to t
    FOR each number i from 1 to t DO
        // Initialize a count for the number of distinct prime factors
        SET distinctPrimeCount to 0
        // Copy the current number to a temporary variable for manipulation
        SET currentNumber to i

        // Check for factors starting from 2
        FOR each number j from 2 to (i - 1) DO
            // If j is a factor of the currentNumber
            IF currentNumber is divisible by j THEN
                // Increment the count of distinct prime factors
                INCREMENT distinctPrimeCount by 1
                
                // Continue dividing currentNumber by j until it no longer divides evenly
                WHILE currentNumber is divisible by j DO
                    SET currentNumber to currentNumber divided by j
                END WHILE
            END IF
        END FOR
        
        // After checking all possible factors
        // If the number has exactly two distinct prime factors, it is a semiprime
        IF distinctPrimeCount equals 2 THEN
            // Increment the semiprime count
            INCREMENT semiprimeCount by 1
        END IF
    END FOR

    // Output the total count of semiprimes found
    PRINT semiprimeCount

END
```

### Breakdown of the Logic
1. **Input Handling**: The program starts by taking an integer input `t`, which represents the upper limit for the checks.
2. **Initialization**: A counter is established to track the number of semiprimes encountered.
3. **Outer Loop**: The program iterates through all integers from 1 through `t`.
4. **Inner Loop**: For each integer, it checks for factors starting from 2:
   - If a factor is found, it is counted.
   - The integer is divided repeatedly by the factor until it is no longer divisible, ensuring distinct factors are counted only once.
5. **Counting Semiprimes**: After checking all factors for the number, if exactly two distinct prime factors were counted, the semiprime counter is incremented.
6. **Output**: Finally, the total number of semiprimes identified within the range is printed as the result.
