**Pseudocode:**

1. Start by receiving an integer input called `totalNumbers`.
2. Initialize a variable `primeCount` to zero; this will keep track of how many prime numbers are found.

3. For each integer `currentNumber` from 1 to `totalNumbers` (inclusive):
   - Set a counter `divisorCount` to zero; this will count how many distinct divisors the current number has.
   - Set a variable `numerator` to `currentNumber`.
   
   4. For each integer `potentialDivisor` starting from 2 up to (but not including) `currentNumber`:
       - Check if `numerator` is divisible by `potentialDivisor`:
           - If it is, increment `divisorCount` by 1.
           - While `numerator` is still divisible by `potentialDivisor`, divide `numerator` by `potentialDivisor` (this removes all factors of `potentialDivisor` from `numerator`).
       
   5. After finishing the inner loop, check if `divisorCount` equals 2:
       - If it does, increment `primeCount` by 1 (indicating that `currentNumber` is a prime number).

6. After processing all numbers, output the value of `primeCount`, which represents the total number of prime numbers found between 1 and `totalNumbers`.
