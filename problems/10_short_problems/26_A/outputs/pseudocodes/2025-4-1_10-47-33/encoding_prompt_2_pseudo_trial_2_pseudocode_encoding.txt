**Pseudocode:**

1. **Start** by reading an integer value, `t`, which represents the upper limit for checking numbers.

2. **Initialize** a variable `result` to 0. This variable will be used to count how many numbers from 1 to `t` have exactly two distinct prime factors.

3. **For each integer `i`** from 1 to `t` (inclusive):
   - **Initialize** a variable `count` to 0. This variable will keep track of how many distinct prime factors the current number `i` has.
   - **Set** a temporary variable `number` to `i` for factorization.
   
   - **For each integer `j`** from 2 to one less than `i` (since prime factors start from 2):
     - **If** `number` is divisible by `j` (meaning `j` is a factor of `number`):
       - **Increment** the `count` of distinct prime factors by 1.
       - **While** `number` is still divisible by `j` (meaning `j` is a repeated factor):
         - **Divide** `number` by `j` to remove that factor completely.
   
   - **If** `count` equals 2 (indicating that `i` has exactly two distinct prime factors):
     - **Increment** the `result` by 1 to account for this number.

4. **After finishing the loop**, print the value of `result`, which represents how many numbers from 1 to `t` have exactly two distinct prime factors.

5. **End** the program.
