**Pseudocode:**

1. Initialize the total number of test cases by reading an integer input `t`.
2. Set the variable `result` to 0, which will store the count of numbers that have exactly two distinct prime factors.

3. For each number `i` from 1 to `t` (inclusive):
   1. Initialize a count variable `countOfDistinctPrimes` to 0, which tracks the number of distinct prime factors of `i`.
   2. Set a variable `currentNumber` equal to `i`, which will be factored.
   3. For each possible divisor `j` starting from 2 up to `i - 1`:
      1. If `currentNumber` is divisible by `j` (i.e., `currentNumber` modulo `j` equals 0):
         1. Increment `countOfDistinctPrimes` by 1 to account for this distinct prime factor.
         2. While `currentNumber` is still divisible by `j`:
            1. Divide `currentNumber` by `j` to completely factor out this prime factor.
   4. If `countOfDistinctPrimes` equals 2 (indicating that `i` has exactly two distinct prime factors):
      1. Increment `result` by 1.

4. Output the final count of numbers with exactly two distinct prime factors, stored in `result`.
