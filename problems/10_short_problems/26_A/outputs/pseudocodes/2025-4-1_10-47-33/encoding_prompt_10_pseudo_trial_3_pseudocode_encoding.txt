**Pseudocode for Prime Number Count Calculation**

1. **Start Program**
2. **Declare Variable** `t` as Integer
3. **Input** `t` from the User
4. **Initialize** `res` to 0 (This will hold the count of prime numbers)
5. **Loop** from `i = 1` to `t` (Inclusive):
   1. **Initialize** `cnt` to 0 (This will count factors of `i`)
   2. **Set** `num` to `i` (This will be modified to find prime factors)
   3. **Loop** from `j = 2` to `i - 1`:
      1. **If** `num modulo j equals 0` (j is a factor of num):
         1. **Increment** `cnt` by 1 (Count the factor)
         2. **While** `num modulo j equals 0`:
            1. **Divide** `num` by `j` (Remove the factor from num)
   4. **If** `cnt equals 2` (i has exactly two distinct prime factors):
      1. **Increment** `res` by 1 (Count this number as prime)
6. **Output** `res` (Total count of prime numbers)
7. **End Program**

**Assumptions:**
- The variable `t` represents the upper limit for counting potential prime numbers.
- The loop range is adjusted for inclusivity for 1 to `t`.
- The counting of prime factors is based on distinctness (i.e., prime factors must be unique).
