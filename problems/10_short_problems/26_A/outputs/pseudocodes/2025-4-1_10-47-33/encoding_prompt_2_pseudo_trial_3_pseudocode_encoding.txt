**Pseudocode:**

1. **Input the number:**
   - Read an integer value called `total_count`.

2. **Initialize a result counter:**
   - Set `result` to 0. This will keep track of how many numbers have exactly two distinct prime factors.

3. **Loop through each number:**
   - For each integer `current_number` from 1 to `total_count` (inclusive):
     - Set a counter `distinct_prime_count` to 0, to count the distinct prime factors of `current_number`.
     - Set `temp_number` to `current_number` to work with its value without losing the original number.

4. **Find prime factors:**
   - For each integer `potential_factor` starting from 2 up to `current_number - 1`:
     - Check if `temp_number` is divisible by `potential_factor`:
       - If it is, increase the `distinct_prime_count` by 1.
       - While `temp_number` is divisible by `potential_factor`:
         - Divide `temp_number` by `potential_factor`, effectively removing that factor from consideration.

5. **Count numbers with exactly two distinct primes:**
   - After examining all potential factors:
     - If `distinct_prime_count` equals 2, increment `result` by 1.

6. **Output the result:**
   - After checking all numbers from 1 to `total_count`, print the value of `result`, which indicates how many numbers had exactly two distinct prime factors.
