```plaintext
1. Start by reading an integer input called "totalNumbers".

2. Initialize a variable "countOfSpecialNumbers" to 0. This variable will store the final result.

3. Loop through each integer "currentNumber" from 1 to "totalNumbers" (inclusive):
    a. Initialize a variable "divisorCount" to 0 to keep track of the number of unique divisors for the current number.
    b. Set "currentValue" to "currentNumber".

    c. Loop through each integer "divisor" from 2 to "currentNumber - 1":
        i. If "currentValue" is divisible by "divisor":
            - Increment "divisorCount" by 1.
            - While "currentValue" is still divisible by "divisor":
                * Divide "currentValue" by "divisor" (this removes all instances of this divisor from "currentValue").

    d. If "divisorCount" is equal to 2:
        - Increment "countOfSpecialNumbers" by 1.

4. After checking all numbers, print "countOfSpecialNumbers".

5. End.
```

### Explanation:
- The pseudocode describes a process that counts how many numbers between 1 and a specified limit have exactly two distinct prime factors.
- Each number is evaluated for divisors starting from 2, and the count of unique divisors is tracked.
- If a number has exactly two unique divisors, it is considered a "special number," and the count is increased.
- The approach ensures clarity regarding loops, conditional checks, and the storage of results.
