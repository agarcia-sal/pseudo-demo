**Pseudocode:**

1. Start by reading an integer value `t` from user input. This represents the upper limit of numbers we want to analyze.
2. Initialize a variable `result` to 0. This will count how many numbers meet our criteria.
3. For each integer `i` from 1 to `t` (inclusive):
    - Initialize a variable `count` to 0. This will keep track of how many distinct prime factors `i` has.
    - Set a variable `currentNumber` equal to `i`. This will be manipulated to determine the prime factors of `i`.
    
    4. For each integer `j` from 2 to one less than `i`:
        - If the `currentNumber` is divisible by `j`:
            - Increment `count` by 1 to indicate we found a new prime factor.
            - While `currentNumber` is divisible by `j`, divide `currentNumber` by `j`. This removes all occurrences of the prime factor `j` from `currentNumber`.
    
    5. After checking all possible factors, if `count` is equal to 2:
        - Increment `result` by 1 since `i` has exactly two distinct prime factors.

6. After all iterations are done, display the value of `result`, which represents the number of integers from 1 to `t` that have exactly two distinct prime factors. 

**End of Pseudocode.**
