```
FUNCTION countSemiPrimes(t)
    INITIALIZE totalSemiPrimes to 0
    FOR each number i from 1 to t DO
        INITIALIZE divisorCount to 0
        SET currentNumber to i
        
        FOR each number j from 2 to (i-1) DO
            IF currentNumber is divisible by j THEN
                INCREMENT divisorCount by 1
                WHILE currentNumber is divisible by j DO
                    DIVIDE currentNumber by j
                END WHILE
            END IF
        END FOR
        
        IF divisorCount equals 2 THEN
            INCREMENT totalSemiPrimes by 1
        END IF
    END FOR
    
    RETURN totalSemiPrimes
END FUNCTION

// INPUT:
// An integer t, which is the range limit for checking semi-prime numbers.

// OUTPUT:
// The function returns an integer representing the count of semi-prime numbers between 1 and t.
``` 

### Explanation of Complexity:
- The function checks every number from 1 to t and counts how many of those numbers are semi-prime. A semi-prime is defined as a number that has exactly two distinct prime factors.
- For each number i, it checks all divisors from 2 to i-1 and counts how many are found, ensuring that after counting, it checks if there were exactly two distinct prime factors before incrementing the result.
