**Pseudocode:**

1. **Start Program**
   
2. **Input Number of Test Cases**
   - Set variable `t` to integer input from user

3. **Initialize Result Counter**
   - Set variable `res` to 0 (this will hold the count of prime numbers)

4. **Loop Through Each Number from 1 to t**
   - For each integer `i` from 1 to `t` do:
     - Initialize counter `cnt` to 0 (this will count the number of distinct prime factors)
     - Set variable `num` to `i` (to factorize current number)

     5. **Loop to Find Factors**
        - For each integer `j` from 2 to `i-1` do:
          - If `num` is divisible by `j` (check if `j` is a factor of `num`):
            - Increment `cnt` by 1 (found a new prime factor)
            - While `num` is divisible by `j`:
              - Divide `num` by `j` (remove the factor `j` from `num`)

     6. **Check for Prime Condition**
        - If `cnt` equals 2 (this verifies that the current number `i` has exactly two distinct prime factors):
          - Increment `res` by 1 (count this number as valid)

7. **Output Result**
   - Print the value of `res` (total count of numbers with exactly two distinct prime factors)

8. **End Program**

**Assumptions:**
- The input `t` is a positive integer.
- The algorithm processes each integer in the range from 1 through `t` to identify those with exactly two distinct prime factors.
