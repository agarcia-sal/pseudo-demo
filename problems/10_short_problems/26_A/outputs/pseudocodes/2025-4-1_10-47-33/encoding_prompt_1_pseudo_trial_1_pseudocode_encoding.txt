**Pseudocode Explanation: Count the number of prime numbers up to a given integer**

1. **Input**: Read an integer `t` which represents the upper limit for checking prime numbers.

2. **Initialize Result**: Create a variable called `primeCount` and set it to 0. This variable will store the total number of prime numbers found.

3. **Loop Through Numbers**: For each integer `i` from 1 to `t` (inclusive):
   - Initialize a variable `divisorCount` to 0.
   - Set `currentNumber` to the value of `i`.

   4. **Check for Divisors**: For each integer `j` starting from 2 up to but not including `i`:
      - If `currentNumber` is divisible by `j`:
        - Increment `divisorCount` by 1.
        - While `currentNumber` is divisible by `j`, divide `currentNumber` by `j`. This step reduces `currentNumber` to remove all factors of `j`.

   5. **Determine Primality**: After checking all possible divisors:
      - If `divisorCount` is equal to 2 (indicating that `i` has exactly 2 distinct divisors), increment `primeCount` by 1 (as `i` is identified as a prime number).

6. **Output**: After examining all numbers, print the value of `primeCount`, which represents the total number of prime numbers found up to `t`.
