**Pseudocode Description:**

1. **Input:** Read an integer value `t` which represents the upper limit for checking certain numbers.

2. **Initialize a variable:** Set `resultCount` to 0, which will be used to count the number of integers up to `t` that meet a specific condition.

3. **Iterate through potential candidates:** For each integer `currentNumber` from 1 to `t`:
   - Initialize a counter `factorCount` to 0 that will keep track of how many different prime factors `currentNumber` has.
   - Set `currentValue` to `currentNumber`, which will be manipulated to extract factors.

4. **Check for factors:** For each integer `potentialFactor` starting from 2 up to one less than `currentNumber`:
   - If `currentValue` is divisible by `potentialFactor` (meaning `potentialFactor` is a factor of `currentValue`):
     - Increment `factorCount` by 1, indicating that a new factor has been found.
     - Continuously divide `currentValue` by `potentialFactor` until it is no longer divisible by `potentialFactor`, effectively removing all instances of this factor from `currentValue`.

5. **Evaluate the condition:** After checking all potential factors for `currentNumber`:
   - If `factorCount` equals 2 (indicating that `currentNumber` has exactly two distinct prime factors):
     - Increment `resultCount` by 1, indicating a suitable candidate has been found.

6. **Output:** After completing the iteration through all integers up to `t`, display the total count of integers with exactly two distinct prime factors (`resultCount`).
