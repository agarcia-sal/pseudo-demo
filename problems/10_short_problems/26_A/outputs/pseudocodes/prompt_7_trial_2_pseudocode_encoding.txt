Hereâ€™s the pseudocode that captures the logic and operations of the provided code, while being clear and structured:

```
FUNCTION countDistinctPrimeNumbers(t)
    INITIALIZE resultCount AS 0  // This will hold the count of numbers with exactly 2 distinct prime factors

    FOR i FROM 1 TO t DO
        INITIALIZE distinctPrimeCount AS 0  // Counter for distinct prime factors of current number
        SET currentNumber AS i  // Take current number to analyze

        FOR j FROM 2 TO currentNumber - 1 DO
            IF currentNumber is divisible by j THEN  // Check if j is a factor of currentNumber
                INCREMENT distinctPrimeCount by 1  // We found a new distinct prime factor

                // Divide currentNumber by j until it's no longer divisible
                WHILE currentNumber is divisible by j DO
                    DIVIDE currentNumber by j  // Reduce currentNumber by factor j
                END WHILE
            END IF
        END FOR

        // Check if the number has exactly 2 distinct prime factors
        IF distinctPrimeCount equals 2 THEN
            INCREMENT resultCount by 1  // We found a valid number
        END IF
    END FOR

    RETURN resultCount  // Return the total count of numbers with exactly 2 distinct prime factors
END FUNCTION

// Main execution
READ t FROM USER INPUT  // Get the upper limit from user
PRINT countDistinctPrimeNumbers(t)  // Call the function with input t and print the result
```

### Explanation of the Logic:
1. **Function Purpose**: The function `countDistinctPrimeNumbers` is designed to count how many numbers from 1 to `t` have exactly two distinct prime factors.

2. **Nested Loops**: The outer loop iterates over each integer from 1 to `t`. For each integer, the inner loop checks potential factors.

3. **Factorization**: When a factor is found, the inner `while` loop continues dividing the number to ensure that the factor is fully accounted for before moving to the next potential factor.

4. **Counting Distinct Primes**: The `distinctPrimeCount` is incremented only when a new distinct prime factor is found.

5. **Result**: After verifying all numbers, the total count of numbers with exactly two distinct prime factors is returned and printed. 

This pseudocode is structured, clear, and suitable for readers with varying programming backgrounds, presenting the algorithm in a high-level programming format.
