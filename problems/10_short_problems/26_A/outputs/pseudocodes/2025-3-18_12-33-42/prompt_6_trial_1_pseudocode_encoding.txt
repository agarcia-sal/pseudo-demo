Hereâ€™s the translation of the provided code into clear and understandable pseudocode:

```
BEGIN

    // Read an integer input representing the upper limit
    SET upperLimit TO INTEGER INPUT

    // Initialize a counter for prime numbers
    SET primeCount TO 0

    // Loop through all numbers from 1 to upperLimit
    FOR currentNumber FROM 1 TO upperLimit DO
        
        // Initialize a counter for the number of prime factors
        SET primeFactorCount TO 0
        
        // Copy currentNumber to another variable for factorization
        SET factorCandidate TO currentNumber
        
        // Check for divisors starting from 2 up to currentNumber - 1
        FOR potentialFactor FROM 2 TO currentNumber - 1 DO
            
            // If potentialFactor is a divisor of factorCandidate
            IF (factorCandidate MOD potentialFactor EQUALS 0) THEN
                
                // Increment the count of prime factors
                INCREMENT primeFactorCount BY 1
                
                // Divide factorCandidate by potentialFactor until it is no longer divisible
                WHILE (factorCandidate MOD potentialFactor EQUALS 0) DO
                    SET factorCandidate TO factorCandidate / potentialFactor
                END WHILE
            
            END IF
        
        // Check if the number has exactly 2 prime factors
        IF (primeFactorCount EQUALS 2) THEN
            
            // Increment the total prime count
            INCREMENT primeCount BY 1
            
        END IF
        
    END FOR
    
    // Output the total count of numbers with exactly two prime factors
    PRINT primeCount

END
```

### Summary of the Pseudocode:

1. **Input**: The program begins by taking an integer input that defines an upper limit.
2. **Counting Primes**: It initializes a count and iteratively checks each number from 1 to this limit.
3. **Finding Factors**: For each number, it determines how many distinct prime factors it has by checking divisibility starting from 2.
4. **Counting Valid Numbers**: If a number has exactly two prime factors, it increments a count.
5. **Output**: Finally, it prints the total number of integers that have exactly two prime factors. 

This pseudocode is designed to clearly describe the logic flow without getting bogged down in specific programming syntax.
