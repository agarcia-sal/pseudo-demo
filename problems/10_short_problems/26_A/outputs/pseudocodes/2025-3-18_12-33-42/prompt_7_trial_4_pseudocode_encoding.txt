Hereâ€™s the high-level pseudocode that represents the logic and operations of the provided code:

```
FUNCTION countDistinctPrimeNumbers(limit)
    INITIALIZE countOfDistinctPrimes AS 0

    FOR currentNumber FROM 1 TO limit DO
        INITIALIZE primeFactorCount AS 0
        SET number AS currentNumber
        
        FOR potentialFactor FROM 2 TO currentNumber - 1 DO
            IF number IS DIVISIBLE BY potentialFactor THEN
                INCREMENT primeFactorCount BY 1
                WHILE number IS DIVISIBLE BY potentialFactor DO
                    DIVIDE number BY potentialFactor
                END WHILE
            END IF
        END FOR
        
        IF primeFactorCount IS EQUAL TO 2 THEN
            INCREMENT countOfDistinctPrimes BY 1
        END IF
    END FOR

    PRINT countOfDistinctPrimes
END FUNCTION
```

### Explanation:

1. **Purpose:** The code counts how many numbers from 1 to a specified limit have exactly two distinct prime factors.

2. **Variables:**
   - `countOfDistinctPrimes`: Tracks the total number of integers with exactly two distinct prime factors.
   - `currentNumber`: Represents the current integer being evaluated.
   - `primeFactorCount`: Counts distinct prime factors of `currentNumber`.
   - `number`: Used for factorization without altering `currentNumber`, ensuring clarity as we modify it.

3. **Loop Structures:**
   - An outer loop iterates through all integers from 1 to the specified limit.
   - An inner loop checks for integers that can divide the current number (potential test for primality).
   - The while loop performs prime factor reduction to count distinct primes thoroughly.

4. **Control Flow:** The pseudocode clearly outlines the conditions and iterations necessary to achieve the counting.

5. **Input and Output:**
   - **Input:** An integer `limit` representing the maximum range to check for numbers with two distinct prime factors.
   - **Output:** Prints the total count of numbers that fit this criterion.

This pseudocode format ensures clarity and approachability, catering to readers with variables, functions, and control structures that are straightforward and well-defined.
