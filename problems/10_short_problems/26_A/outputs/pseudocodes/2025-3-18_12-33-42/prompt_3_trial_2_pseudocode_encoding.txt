``` 
BEGIN

    // Step 1: Read an integer input representing the maximum limit (t)
    SET limit to input integer value

    // Step 2: Initialize a counter for the result
    SET primeCount to 0

    // Step 3: Iterate through all numbers from 1 to the limit (inclusive)
    FOR each number from 1 to limit DO
        // Initialize a divisor count and a variable to keep track of the current number
        SET divisorCount to 0
        SET currentNumber to current number

        // Step 4: Check for divisors from 2 to one less than the current number
        FOR each potentialDivisor from 2 to (current number - 1) DO
            // Check if potentialDivisor is a divisor of currentNumber
            IF (currentNumber is divisible by potentialDivisor) THEN
                INCREMENT divisorCount by 1 // Found a divisor
                // Step 5: Continuously divide currentNumber by potentialDivisor until it's no longer divisible
                WHILE (currentNumber is divisible by potentialDivisor) DO
                    SET currentNumber to currentNumber divided by potentialDivisor

        // Step 6: Check if exactly two distinct prime factors were found
        IF (divisorCount is equal to 2) THEN
            INCREMENT primeCount by 1 // Found a number with exactly two prime factors

    // Step 7: Print the total count of numbers with exactly two prime factors
    OUTPUT primeCount

END
``` 

This pseudocode presents a high-level overview of the provided code, clearly outlining its intent, structure, and flow while using meaningful variable names and control structures.
