Here is the pseudocode that translates the provided code into a clear and understandable format:

```
BEGIN

    // Read an integer value from input, representing the upper limit
    SET upperLimit TO input()

    // Initialize a counter to keep track of numbers with exactly two distinct prime factors
    SET countOfNumbersWithTwoPrimeFactors TO 0

    // Loop through each number from 1 to upperLimit
    FOR currentNumber FROM 1 TO upperLimit DO
        
        // Initialize a counter for distinct prime factors
        SET distinctPrimeFactorCount TO 0
        SET remainingNumber TO currentNumber

        // Check for factors from 2 up to the current number (exclusive)
        FOR potentialPrimeFactor FROM 2 TO currentNumber DO
            // If potentialPrimeFactor is a divisor of remainingNumber
            IF remainingNumber MOD potentialPrimeFactor IS EQUAL TO 0 THEN
                
                // Increment the count of distinct prime factors
                INCREMENT distinctPrimeFactorCount BY 1
                
                // Divide remainingNumber by potentialPrimeFactor until it no longer is divisible
                WHILE remainingNumber MOD potentialPrimeFactor IS EQUAL TO 0 DO
                    SET remainingNumber TO remainingNumber DIVIDED BY potentialPrimeFactor

            END IF
            
            // If we have found 2 distinct prime factors, we can break out of the loop early
            IF distinctPrimeFactorCount IS EQUAL TO 2 THEN
                BREAK

        END FOR

        // If exactly two distinct prime factors were found, increment the total counter
        IF distinctPrimeFactorCount IS EQUAL TO 2 THEN
            INCREMENT countOfNumbersWithTwoPrimeFactors BY 1

    END FOR

    // Output the total count of numbers with exactly two distinct prime factors
    PRINT(countOfNumbersWithTwoPrimeFactors)

END
```

### Explanation of the Pseudocode:

- The pseudocode starts by reading the upper limit (the value of `t`).
- It initializes a counter to track how many numbers have exactly two distinct prime factors.
- It then iterates through each number from 1 to the upper limit.
- For each number, it checks for potential prime factors starting from 2.
- If a factor is found, it increments the count of distinct prime factors and divides the number by that factor until it is no longer divisible.
- If exactly two distinct prime factors are found, it increments the total counter.
- Finally, it prints the count of all such numbers.

This structure makes it easy to follow the logic and see how the algorithm checks each number for prime factors and counts those that meet the criteria.
