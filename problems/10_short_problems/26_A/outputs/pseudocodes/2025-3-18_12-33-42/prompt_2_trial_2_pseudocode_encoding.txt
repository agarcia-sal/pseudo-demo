**Pseudocode:**

1. Start by requesting an integer input from the user, which represents the maximum number to check for specific properties. Store this input as `maxNumber`.

2. Initialize a variable `primeCount` to keep track of how many numbers meet the criteria.

3. Begin a loop that goes through each number `currentNumber` from 1 to `maxNumber` (inclusive):
   - Set a variable `factorCount` to zero, which will count the number of distinct factors of `currentNumber`.
   - Set another variable `tempNumber` to `currentNumber` for factorization purposes.

4. Inside this loop, use another loop to check all possible divisors `potentialFactor` starting from 2 up to but not including `currentNumber`:
   - Check if `tempNumber` is evenly divisible by `potentialFactor`:
     - If it is, increment `factorCount` by 1 to indicate a new distinct factor has been found.
     - Use a sub-loop to continuously divide `tempNumber` by `potentialFactor` until it no longer divides evenly (this removes that factor completely).

5. After completing the inner loop for `currentNumber`, check if `factorCount` is exactly 2:
   - If it is, increment `primeCount` by 1, indicating that `currentNumber` is a number with exactly two distinct factors.

6. After checking all numbers from 1 to `maxNumber`, display the value of `primeCount`, which represents how many numbers between 1 and `maxNumber` have exactly two distinct factors. 

**End of Pseudocode.**
