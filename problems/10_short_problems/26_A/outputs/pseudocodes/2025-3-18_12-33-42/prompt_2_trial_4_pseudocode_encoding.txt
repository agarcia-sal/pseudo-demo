**Pseudocode:**

1. Start by reading an integer input that represents the total number, referred to as `totalCount`.
2. Initialize a variable `resultCount` to zero. This variable will hold the count of numbers that meet a certain condition.
3. Begin a loop that will iterate from 1 to `totalCount` (inclusive). For each iteration:
   - Set a variable `currentNumber` to the current loop index.
   - Initialize a variable `divisorCount` to zero, which will track how many distinct prime factors `currentNumber` has.
   - Begin another loop that checks for divisors starting from 2 up to one less than `currentNumber`. For each possible divisor:
     - If `currentNumber` is divisible by the current divisor:
       - Increment `divisorCount` by 1, indicating that we've found a prime factor.
       - Implement a nested loop to divide `currentNumber` by the current divisor repeatedly until `currentNumber` is no longer divisible by this divisor.
4. After examining all potential divisors for `currentNumber`, check if the `divisorCount` is equal to 2:
   - If it is, increment `resultCount` by 1, indicating that `currentNumber` has exactly two distinct prime factors.
5. After completing the loop through all numbers from 1 to `totalCount`, output the final value of `resultCount`. This value represents how many numbers within the range have exactly two distinct prime factors.
