### Purpose:
The goal of this code is to count how many numbers from 1 to a specified total number are considered "semiprime," meaning that they have exactly two distinct prime factors.

### Pseudocode:

1. **Initialize Total Count**
   - Set `total_numbers` to the integer input from the user.
   - Set `semiprime_count` to 0, which will store the count of semiprime numbers.

2. **Loop Through Each Number**
   - For each number `current_number` from 1 to `total_numbers` (inclusive):
     - Set `distinct_prime_count` to 0.
     - Set `remaining_number` to `current_number`.

3. **Check for Prime Factors**
   - For each potential_factor from 2 to `current_number - 1`:
       - If `remaining_number` is divisible by `potential_factor`:
         - Increment `distinct_prime_count` by 1 (indicating a new prime factor found).
         - While `remaining_number` is still divisible by `potential_factor`:
           - Divide `remaining_number` by `potential_factor` (removing this factor).

4. **Check Semiprime Condition**
   - If `distinct_prime_count` is exactly 2 (indicating the number is semiprime):
     - Increment `semiprime_count` by 1.

5. **Output Result**
   - After the loop completes, print the value of `semiprime_count` which represents the total number of semiprime numbers found.

### Comments for Clarity:
- The outer loop iterates through each integer up to the input value.
- The inner loop checks for possible prime factors of each number.
- The counting of distinct prime factors is essential to classify the number as semiprime.

### Example Structure:
```plaintext
BEGIN
   SET total_numbers = user input
   SET semiprime_count = 0

   FOR current_number FROM 1 TO total_numbers
       SET distinct_prime_count = 0
       SET remaining_number = current_number

       FOR potential_factor FROM 2 TO current_number - 1
           IF remaining_number MOD potential_factor EQUALS 0 THEN
               INCREMENT distinct_prime_count BY 1
               WHILE remaining_number MOD potential_factor EQUALS 0 DO
                   SET remaining_number = remaining_number DIVIDED BY potential_factor
               END WHILE
           END IF
       END FOR

       IF distinct_prime_count EQUALS 2 THEN
           INCREMENT semiprime_count BY 1
       END IF

   END FOR

   PRINT semiprime_count
END
```

### Final Note:
This pseudocode is structured to clearly convey the logic without relying on any specific programming language syntax. It breaks down each step of the process into comprehensible actions while indicating the relationships between those actions.
