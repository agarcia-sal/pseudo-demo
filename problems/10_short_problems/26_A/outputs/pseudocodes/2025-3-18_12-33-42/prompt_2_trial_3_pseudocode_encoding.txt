**Pseudocode:**

1. Start by accepting an integer input named "t" which indicates the upper limit for the range of numbers to be checked.

2. Initialize a variable "result" to zero. This will keep track of how many numbers meet our specific condition.

3. Begin a loop that iterates through each integer "currentNumber" starting from 1 up to "t" (inclusive).

   4. For each "currentNumber", initialize a counter "divisorCount" to zero. This counter will keep track of how many unique prime factors the current number has.

   5. Set a variable "temp" equal to "currentNumber". This variable will be used for checking and dividing the number.

   6. Begin another loop that checks each integer "potentialDivisor" starting from 2 up to one less than "currentNumber".

      7. Inside this loop, check if "temp" is divisible by "potentialDivisor".
      
         - If it is divisible, increment the "divisorCount" by one to indicate a new unique prime factor has been found.
         
         8. While "temp" remains divisible by "potentialDivisor", continue dividing "temp" by "potentialDivisor". This helps in removing all instances of this factor from "temp".

   9. After checking all potential divisors for the current number, evaluate if "divisorCount" equals 2. This indicates that "currentNumber" has exactly two unique prime factors.

      - If "divisorCount" is 2, increment the "result" by one, as this number meets the criteria.

10. Once all numbers have been checked, output the final value of "result", which represents the total count of numbers from 1 to "t" that have exactly two unique prime factors.
