**Purpose Summary:**
The goal of this code is to count how many numbers up to a given integer are exactly the product of two distinct prime factors.

**Pseudocode:**

1. **Start Program**
   
2. **Define Input:**
   - Read an integer **t** from the user that represents the upper limit for counting (inclusive).

3. **Initialize Result:**
   - Set a variable **totalCount** to 0, which will hold the number of integers that meet the criteria.

4. **Loop Through Numbers:**
   - For each integer **currentNumber** from 1 to **t**:
     - Set a variable **distinctPrimeCount** to 0, which counts distinct prime factors of the **currentNumber**.
     - Set a variable **divisor** to 2, the smallest prime number.
     
     - **Inner Loop for Prime Factors:**
       - While **divisor** is less than **currentNumber**:
         - Check if **currentNumber** is divisible by **divisor**:
           - If true:
             - Increment **distinctPrimeCount** by 1.
             - **Reduce currentNumber**:
               - While **currentNumber** is still divisible by **divisor**:
                 - Divide **currentNumber** by **divisor** to factor out this prime number.
         
         - Increment **divisor** by 1 to check the next potential prime factor.

5. **Check Distinct Prime Condition:**
   - After the inner loop, if **distinctPrimeCount** is exactly 2:
     - Increment **totalCount** by 1, since it indicates that **currentNumber** is the product of two distinct primes.

6. **Output Result:**
   - After checking all numbers from 1 to **t**, print the **totalCount**, which shows how many valid numbers there are.

7. **End Program**
