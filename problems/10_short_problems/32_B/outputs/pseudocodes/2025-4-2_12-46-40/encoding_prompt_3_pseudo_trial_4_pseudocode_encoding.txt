Here's the pseudocode that translates the provided code while focusing on clarity and structure:

```
BEGIN PROGRAM

    // Read input string from standard input
    INPUT stringInput FROM standard input
    REMOVE whitespace FROM stringInput

    // Initialize variables
    SET currentIndex TO 0
    SET resultString TO an empty string

    // Process the input string
    WHILE currentIndex is less than the length of stringInput DO
        IF character at currentIndex is '.' THEN
            // Append '0' for a single dot
            APPEND '0' to resultString
            INCREMENT currentIndex by 1
        ELSE IF character at currentIndex plus 1 is '.' THEN
            // Append '1' for two consecutive dots (dot followed by a dot)
            APPEND '1' to resultString
            INCREMENT currentIndex by 2
        ELSE
            // Append '2' for any other two characters (dot followed by a different character)
            APPEND '2' to resultString
            INCREMENT currentIndex by 2
        END IF
    END WHILE

    // Output the result
    PRINT resultString

END PROGRAM
```

### Explanation of the Pseudocode:

1. **Program Structure**: The code starts with a clear indication of the program's purpose.
2. **Input Handling**: It describes reading the input and removing any leading or trailing spaces.
3. **Variable Initialization**: Variables are initialized to control the flow and store results.
4. **Processing Logic**: The while loop iteratively processes characters of the input string with clear conditions indicating what happens for different input scenarios (single dot, double dots, and other characters).
5. **Output**: Finally, the output of the processed results is printed. 

The pseudocode is structured to make it easy for someone unfamiliar with programming to understand the logic behind the code.
