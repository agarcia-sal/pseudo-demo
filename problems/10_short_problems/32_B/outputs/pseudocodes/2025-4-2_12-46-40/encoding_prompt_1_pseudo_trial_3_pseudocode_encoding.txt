**Pseudocode:**

```
BEGIN

    // Read input string from standard input and remove any leading/trailing whitespace
    INPUT string s
    
    // Initialize index and output result
    SET index i TO 0
    SET result ans TO empty string

    // Loop through the string as long as the index is less than the length of the string
    WHILE index is less than the length of s DO

        // Check if the current character is a dot
        IF character at index i in s is '.' THEN
            // Append '0' to the result
            APPEND '0' to ans
            // Move to the next character
            INCREMENT index by 1
        ELSE
            // Check if the next character is also a dot
            IF character at index i+1 in s is '.' THEN
                // Append '1' to the result
                APPEND '1' to ans
                // Move the index forward by two characters
                INCREMENT index by 2
            ELSE
                // If the next character is not a dot
                // Append '2' to the result
                APPEND '2' to ans
                // Move the index forward by two characters
                INCREMENT index by 2
            ENDIF
        ENDIF

    ENDWHILE

    // Output the final result
    PRINT ans

END
``` 

**Description of the logic:**

- The program processes an input string made up of dots ('.') and other characters in a specific pattern.
- It uses a loop to examine characters based on their position in the string.
- Depending on whether the current character is a dot and what the subsequent characters are, it modifies the output accordingly.
- The output is constructed by incrementing the index based on the conditions set in the loop.
