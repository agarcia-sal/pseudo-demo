**Pseudocode Description:**

**Input:** Read a string of characters representing a sequence of symbols from standard input.

**Output:** Produce a string of digits based on the pattern of the symbols in the input string, where:
- A single dot (.) corresponds to the digit '0'.
- A pair of dots (..), in which the first character is a dot, corresponds to '1'.
- A pair of symbols where the first is a dash (-) and the second is a dot corresponds to '2'.

**Main Logic Flow:**

1. Initialize an index variable to track the position in the input string, starting at zero.
2. Initialize an empty result string to hold the final output digits.
3. While the index variable is less than the length of the input string:
   - Check the current symbol at the index:
     - If the symbol is a dot (.), append '0' to the result string and move the index forward by one (to check the next symbol).
     - If the next symbol (at the index + 1) is also a dot (.), append '1' to the result string and advance the index by two positions (to skip both symbols).
     - If the next symbol (at the index + 1) is not a dot, this means the current symbol is a dash (-) followed by a dot, so append '2' to the result string and move the index forward by two positions.
4. Once the entire input string is processed, output the final result string containing all of the digits.

In summary, this pseudocode captures the logic of reading a sequence of symbols, interpreting them based on specific patterns, and constructing a numeric output based on those interpretations.
