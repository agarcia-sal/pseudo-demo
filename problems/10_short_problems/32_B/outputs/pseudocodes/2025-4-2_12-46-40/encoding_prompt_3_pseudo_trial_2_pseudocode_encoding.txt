```pseudocode
BEGIN

    // Read input from standard input
    READ inputString FROM standard input
    REMOVE whitespace FROM inputString

    // Initialize an index to track position in the string
    SET index TO 0
    // Initialize a string to store the output
    SET outputString TO an empty string

    // While there are more characters to process in the input string
    WHILE index is less than the length of inputString DO

        // Check the current character
        IF the current character at index is '.' THEN
            // If current character is '.', append '0' to outputString
            APPEND '0' TO outputString
            INCREMENT index by 1

        ELSE IF the next character (at index + 1) is '.' THEN
            // If the next character is '.' then, append '1' to outputString
            APPEND '1' TO outputString
            INCREMENT index by 2
            
        ELSE
            // Otherwise, append '2' to outputString
            APPEND '2' TO outputString
            INCREMENT index by 2

    END WHILE

    // Output the final result
    PRINT outputString

END
``` 

### Explanation:
- **Input Handling:** The pseudocode begins by outlining how input is obtained and prepared. Leading whitespace is removed for accurate processing.
- **Loop Logic:** The while loop processes the string character by character. It checks the current character and potentially the next one to decide how to construct the output string.
- **Output Construction:** Depending on character checks, it appends '0', '1', or '2' to the output string and modifies the index appropriately based on the number of characters processed.
- **Final Output:** After processing all characters, the final output is printed.
