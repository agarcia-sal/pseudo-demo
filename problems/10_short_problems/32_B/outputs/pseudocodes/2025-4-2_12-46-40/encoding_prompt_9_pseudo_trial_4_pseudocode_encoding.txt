### Purpose
The goal of this program is to convert a string of characters from standard input, specifically representing a sequence of dots (`.`) and other characters, into a sequence of digits (`0`, `1`, `2`) based on the patterns found in the input.

### Pseudocode

1. **Start the Program**
  
2. **Read Input:**
   - Receive a single line of input, trim any excess whitespace, and store it as `inputString`.

3. **Initialize Variables:**
   - Set a counter `index` to 0.
   - Create an empty string `result` to store the output.

4. **Process the Input String:**
   - **While** `index` is less than the length of `inputString`:
     - **If** the character at the current `index` is a dot (`.`):
       - Append `'0'` to `result`.
       - Increment `index` by 1 to move to the next character.
     - **Else If** the character at the next `index` is also a dot (`.`):
       - Append `'1'` to `result`.
       - Increment `index` by 2 to skip the next character.
     - **Else:**
       - Append `'2'` to `result`.
       - Increment `index` by 2 to skip the next character.

5. **Output the Result:**
   - Print the final value of `result`.

### Conclusion
This pseudocode clearly outlines the process of reading the input, interpreting the characters based on specified rules, and producing the corresponding output, maintaining the logical structure and intent of the original program.
