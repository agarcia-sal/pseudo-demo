**Purpose:**  
The goal of this algorithm is to convert a specific string input consisting of characters into a numerical string, where particular character combinations represent unique numbers.

**Pseudocode:**

1. **Start Program**
   
2. **Receive Input:**
   - Read the input string from the user (remove any unnecessary whitespace).

3. **Initialize Variables:**
   - Set a variable `currentIndex` to 0 to track the position within the input string.
   - Set a variable `outputString` to an empty string to store the resulting numerical representation.

4. **Process Input String:**
   - While `currentIndex` is less than the length of the input string:
     - If the character at `currentIndex` is a dot (`.`):
       - Append '0' to `outputString`.
       - Increment `currentIndex` by 1.
     - Otherwise, if the character at `currentIndex + 1` is a dot (`.`):
       - Append '1' to `outputString`.
       - Increment `currentIndex` by 2.
     - Otherwise (the current character is not a dot and the next character is not a dot):
       - Append '2' to `outputString`.
       - Increment `currentIndex` by 2.

5. **Output Result:**
   - Print the contents of `outputString`.

6. **End Program**
