```pseudocode
BEGIN

    // Read input string from standard input
    INPUT receivedString

    // Initialize index for string traversal
    SET currentIndex TO 0
    // Initialize an empty string to store the result
    SET resultString TO ''

    // Loop through the input string while the current index is within bounds
    WHILE currentIndex < LENGTH(receivedString) DO

        // Check if the current character is a dot (.)
        IF receivedString[currentIndex] IS EQUAL TO '.' THEN
            // Append '0' to the result string
            APPEND '0' TO resultString
            // Move to the next character
            INCREMENT currentIndex BY 1

        // Check if the next character is a dot (.)
        ELSE IF receivedString[currentIndex + 1] IS EQUAL TO '.' THEN
            // Append '1' to the result string
            APPEND '1' TO resultString
            // Move the index forward by two characters
            INCREMENT currentIndex BY 2
        
        // Otherwise, process the character as a different case
        ELSE
            // Append '2' to the result string
            APPEND '2' TO resultString
            // Move the index forward by two characters
            INCREMENT currentIndex BY 2

    END WHILE
    
    // Output the final result string
    OUTPUT resultString

END
``` 

### Explanation of the Pseudocode

1. The pseudocode begins by reading an input string which will be processed.
2. It initializes an index to keep track of its position while traversing the string and sets up an empty result string to gather results.
3. A loop checks each character (and potentially the next one) in the string based on the specified conditions:
   - If the current character is a dot, it adds '0' to the result and moves to the next character.
   - If the next character is also a dot, it adds '1' to the result and skips both characters.
   - In any other case, it adds '2' to the result and also skips both characters.
4. Finally, it outputs the constructed result string after processing the entire input string.
