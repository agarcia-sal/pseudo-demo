``` 
FUNCTION convertSymbolToNumber(inputString)
    INITIALIZE index to 0
    INITIALIZE answerString to an empty string
    WHILE index is less than the length of inputString DO
        IF character at index is a dot ('.') THEN
            Append '0' to answerString
            Increment index by 1
        ELSE IF character at index + 1 is a dot ('.') THEN
            Append '1' to answerString
            Increment index by 2
        ELSE
            Append '2' to answerString
            Increment index by 2
        END IF
    END WHILE
    RETURN answerString
END FUNCTION

// Input: A string composed of characters where each character is either '.' or a different symbol.
// Output: A string translated from the input, where sequences of characters are converted to numbers.
```

### Explanation:
1. **Purpose:** The function `convertSymbolToNumber` translates a string of characters based on specified rules: single dots ('.') become '0', two consecutive dots become '1', and any other character pair becomes '2'. 

2. **Variables:** `index` tracks our position in the input string, while `answerString` accumulates the result.

3. **Control Structures:**
   - A `WHILE` loop processes each character in `inputString`.
   - `IF` and `ELSE` statements categorize characters and determine how to update `answerString` and `index`.

4. **Input/Output Context:** The function expects a string of symbols and returns a corresponding numeric string based on the defined conversion rules.

5. **Clarity Review:** The pseudocode is structured, using clear variable names and natural language descriptions. It outlines the process in a way that emphasizes its logic without getting bogged down in specifics of implementation.
