**Purpose:** The goal of this program is to convert a specific string representation of characters into a numerical string based on certain conditions.

**Pseudocode:**

1. **Receive Input:**
   - Read a line of input from the user and remove any surrounding whitespace.

2. **Initialize Index and Result:**
   - Set a variable called `currentIndex` to 0 to track our position in the input string.
   - Create an empty string called `numericOutput` to accumulate the result.

3. **Process the Input String:**
   - While `currentIndex` is less than the length of the input string:
     - If the character at the `currentIndex` position is a period ('.'):
       - Append '0' to `numericOutput`.
       - Move `currentIndex` one position forward.
     - Else if the character at the next position (`currentIndex + 1`) is also a period ('.'):
       - Append '1' to `numericOutput`.
       - Move `currentIndex` forward by two positions.
     - Otherwise (meaning the character at the next position is not a period):
       - Append '2' to `numericOutput`.
       - Move `currentIndex` forward by two positions.

4. **Output the Result:**
   - Print the contents of `numericOutput`.

**Key Observations:**
- The input string consists of characters that can either be periods ('.') or other characters (for this logic, the other characters are not specified, but they serve as separators).
- The output will be a string composed of '0's, '1's, and '2's based on the conditions outlined.
- The program systematically analyzes the input string, modifying the output based on specific character checks.
