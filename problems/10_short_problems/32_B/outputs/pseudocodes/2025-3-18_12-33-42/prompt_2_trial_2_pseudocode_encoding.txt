**Pseudocode Translation:**

1. **Input Requirement:**
   - Read a line of input, which is a string consisting of characters.

2. **Initialize Variables:**
   - Set an index variable to zero to track the current position in the string.
   - Create an empty string to hold the result of the translation.

3. **Process the Input:**
   - While the current index is less than the length of the input string:
     - If the current character is a dot ('.'):
       - Append '0' to the result string.
       - Move the index forward by one position.
     - Otherwise, check the next character:
       - If the next character is also a dot ('.'):
         - Append '1' to the result string.
         - Move the index forward by two positions.
       - If the next character is not a dot ('.'):
         - Append '2' to the result string.
         - Move the index forward by two positions.

4. **Output Requirement:**
   - Print the resulting translated string. 

**Summary of Logic:**
- The code reads a string and translates specific character patterns into numeric representations based on the occurrence of dots. It iterates through the string, checking character conditions and updating the index accordingly, eventually producing a new string that represents the translation.
