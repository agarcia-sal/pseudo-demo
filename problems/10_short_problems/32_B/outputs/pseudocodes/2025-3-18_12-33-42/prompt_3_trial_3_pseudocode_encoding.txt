```plaintext
START

// Read input string from the user
INPUT: Read a string 's' from standard input and remove any leading/trailing whitespace

// Initialize variables
SET index to 0
SET result string to empty string

// Loop until the end of the input string
WHILE index is less than the length of string 's' DO
    // Check if the current character is '.'
    IF character at position 'index' in 's' is '.' THEN
        // Append '0' to the result
        ADD '0' to result string
        // Move to the next character
        INCREMENT index by 1
    ELSE 
        // Check the next character
        IF character at position 'index + 1' in 's' is '.' THEN
            // Append '1' to the result
            ADD '1' to result string
            // Move forward by two characters
            INCREMENT index by 2
        ELSE 
            // Append '2' to the result if the next character is not '.'
            ADD '2' to result string
            // Move forward by two characters
            INCREMENT index by 2
        END IF
    END IF
END WHILE

// Output the result
OUTPUT: Print the result string

END
``` 

### Explanation of Pseudocode:
- The pseudocode begins by capturing the intent to read a string and process it character by character.
- Each condition concerning the characters in the string determines how the result string is built.
- It details the logic of appending '0', '1', or '2' based on the presence of '.' characters.
- The flow includes reading the input, processing it with loops and conditionals, and finally printing the output, maintaining clarity throughout.
