Here is the translation of the provided Python code into clear and concise pseudocode using structured language concepts:

```
BEGIN

    // Import necessary libraries
    IMPORT standard input

    // Read input from standard input and remove extra spaces
    SET inputString TO read line from standard input
    REMOVE leading and trailing whitespace from inputString

    // Initialize index and result variables
    SET index TO 0
    SET result TO empty string

    // Loop until the end of the input string
    WHILE index is less than length of inputString DO
        
        // Check for the character at the current index
        IF character at inputString[index] is '.' THEN
            APPEND '0' to result
            INCREMENT index by 1
        ELSE IF character at inputString[index + 1] is '.' THEN
            APPEND '1' to result
            INCREMENT index by 2
        ELSE
            APPEND '2' to result
            INCREMENT index by 2
        END IF
    
    END WHILE

    // Print the final result
    PRINT result

END
```

### Key Components Identified:
- **Input Handling**: Reading and stripping the input string.
- **Control Structures**: A while loop for iterating through the string and if-else structures for branching logic based on character checks.
- **String Manipulation**: Building the result string based on specific character conditions.

### Assumptions Stated:
- The input consists of a string primarily containing the characters '.' and other characters.
- The code assumes that advanced indexing (i.e., `i + 1`) will not go out of bounds of the string.

### Clarity and Readability:
- Meaningful variable names (`inputString`, `index`, `result`) are used to clarify their purpose.
- Clear statements convey the intended logic without jargon.
