**Purpose:** The algorithm converts a string of specific characters ('.' and 'o') into a numeric representation based on a defined set of rules.

**Pseudocode:**

1. **Start the Program**
   
2. **Read Input:**
   - Accept a string input from the user, which consists of characters representing data.

3. **Initialize Variables:**
   - Set a counter to track the current position in the string (`current_position`).
   - Create an empty string to store the result (`result_string`).

4. **Process Each Character in the String:**
   - While the `current_position` is less than the length of the input string:
     - If the character at `current_position` is a dot (`.`):
       - Append the string '0' to `result_string`.
       - Move the `current_position` one step forward.
     - Else, if the next character (at `current_position + 1`) is also a dot (`.`):
       - Append the string '1' to `result_string`.
       - Move the `current_position` two steps forward.
     - Else:
       - Append the string '2' to `result_string`.
       - Move the `current_position` two steps forward.

5. **Output the Result:**
   - Print the `result_string` which contains the numeric representation.

6. **End the Program**
