Here is the translated pseudocode that captures the logic and intent of the provided code snippet:

```
BEGIN

    // Read a line of input (excluding the newline character)
    INPUT line

    // Determine the length of the input line
    SET lineLength = LENGTH(line)
    
    // Initialize a variable to store the result
    SET longestRepeatedSubstringLength = 0

    // Loop through all possible lengths of substrings from 0 to lineLength - 1
    FOR lengthIndex FROM 0 TO lineLength - 1 DO

        // Loop through each starting position of the substring
        FOR startIndex FROM 0 TO lineLength - 1 DO

            // Extract the substring from the current start index of the current length
            SET currentSubstring = EXTRACT_SUBSTRING(line, startIndex, lengthIndex)

            // Check if the substring appears again in the line starting after its current position
            IF FIND_SUBSTRING(line, currentSubstring, startIndex + 1) IS NOT -1 THEN
                // If found, update the result with the current length
                SET longestRepeatedSubstringLength = lengthIndex
                
                // Exit the inner loop since we found a repeated substring
                BREAK

            END IF

        END FOR

    END FOR

    // Output the length of the longest repeated substring
    PRINT longestRepeatedSubstringLength

END
```

### Explanation of the Pseudocode:
1. **Input Handling**: The pseudocode begins by reading a single line of input, excluding any trailing newline character.
   
2. **Variable Initialization**: It computes the length of the input and initializes a result variable that will hold the length of the longest found repeated substring.

3. **Nested Loops**: The pseudocode contains nested loops:
   - The outer loop iterates through possible lengths for substrings.
   - The inner loop examines starting positions for those substrings.

4. **Substring Checking**: Inside the inner loop, it extracts a substring and checks if it appears again later in the string.

5. **Updating the Result**: If a repeated substring is found, the length is recorded, and execution breaks the inner loop to avoid unnecessary checks.

6. **Output**: Finally, it prints the length of the longest repeated substring found.

This pseudocode clearly conveys the logic while abstracting away implementation details, making it accessible for readers regardless of their familiarity with the original programming language.
