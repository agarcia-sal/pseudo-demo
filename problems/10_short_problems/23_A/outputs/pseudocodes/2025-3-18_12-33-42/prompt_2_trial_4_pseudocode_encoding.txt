**Pseudocode:**

1. **Input**: Read a line of text from standard input (remove the trailing newline character).
2. **Determine the length** of the input line and store it in a variable called `inputLength`.
3. **Initialize** a variable called `repeatedLength` to 0. This will keep track of the length of the longest repeated substring found.

4. **Loop through all possible lengths** of substrings from 0 to `inputLength - 1`:
   - For each possible substring length `currentLength`:
     1. **Loop through all starting positions** in the input line to extract substrings:
        - For each starting position `startIndex`:
          - Extract the substring of length `currentLength` starting at `startIndex`.

          - **Check if the substring appears again** in the remainder of the input line:
            - Look for the extracted substring starting from the next position (`startIndex + 1`) to the end of the input line.
            - If the substring is found in this search, this indicates that a repeated substring of length `currentLength` exists.

          - **Update the repeatedLength** if the substring is found and exit the inner loop as we are only interested in the longest length.

5. After checking all possible lengths, **output the value** of `repeatedLength`, which represents the length of the longest repeated substring found in the input line.
