**Pseudocode:**

```
BEGIN

    // Read a line of input and remove the last character (usually a newline)
    inputLine = READ_LINE_FROM_INPUT()  // Function to read from standard input
    lengthOfInputLine = GET_LENGTH(inputLine)  // Calculate the length of the input line
    resultValue = 0  // Initialize a variable to hold the result

    // Loop through all possible substring lengths from 0 to the length of the input line
    FOR substringLength FROM 0 TO lengthOfInputLine DO
        
        // Loop through the input line to examine each starting position of the substring
        FOR startIndex FROM 0 TO lengthOfInputLine DO
            
            // Extract a substring of the current length starting from startIndex
            substring = EXTRACT_SUBSTRING(inputLine, startIndex, substringLength)

            // Check if the extracted substring occurs again in the input line after its current position
            IF FIND(substring IN inputLine FROM (startIndex + 1)) IS NOT -1 THEN
                
                // If found, set the resultValue to the length of the substring
                resultValue = substringLength
                
                // Exit the inner loop as we found a repeating substring
                BREAK

        END FOR

    END FOR

    // Output the result value which holds the maximum length of the repeating substring
    PRINT(resultValue)

END
```

### Explanation:

- **Input Handling:** The pseudocode defines a process to read a line of input and calculates its length.
- **Variables:** It initializes a variable `resultValue` to store the maximum length of any repeating substring found.
- **Outer Loop:** Iterates through all possible lengths of substrings starting from 0 up to the length of the input line.
- **Inner Loop:** For each starting position in the input line, it extracts a substring of the current length.
- **Substring Search:** Uses a method to determine if this substring appears again in the input beyond its current position.
- **Condition Check:** If a repeating substring is found, it updates `resultValue` and breaks out of the inner loop.
- **Output:** Finally, it prints the value of `resultValue`, which indicates the length of the longest repeating substring identified in the input line.
