**Summary of Purpose**: 
The code reads a line of text, determines the length of the longest substring that appears more than once, and outputs that length.

**Pseudocode**:

```plaintext
DEFINE FUNCTION findLongestRepeatedSubstring
    INPUT: a line of text (string)
    
    // Remove the last character (newline) from the input line
    line = input line without last character
    n = length of line
    longestRepeatedLength = 0

    // Loop through possible substring lengths from 0 to n-1
    FOR length FROM 0 TO n-1 DO
        // Loop through each starting index of the substring
        FOR startIndex FROM 0 TO n-1 DO
            
            // Get the current substring from startIndex with current length
            substring = line from startIndex to startIndex + length
            
            // Check if the substring appears again in the line after the starting index
            IF substring can be found in line starting from startIndex + 1 THEN
                // Update the longestRepeatedLength if a longer repeated substring is found
                longestRepeatedLength = length
                // Exit the inner loop as we've found a repetition for this length
                BREAK
            END IF
        END FOR
    END FOR

    // Output the length of the longest repeated substring found
    PRINT longestRepeatedLength
END FUNCTION
```

**Explanation of Key Logic**:
- **Input Handling**: The program takes a single line of input, which is to be analyzed for repeated substrings.
- **Nested Loops**: The outer loop iterates through possible substring lengths, while the inner loop checks each starting position for those substrings.
- **Substring Search**: The code attempts to find if any substring of a given length appears again in the string after its first occurrence.
- **Output**: The length of the longest substring that repeats is printed at the end. 

**Control Structures**:
- Loops are clearly outlined to show how the substring checks are conducted.
- Conditional checks are simply stated to indicate the logic flow for finding repeated substrings.

**Comments for Clarity**:
- Throughout the pseudocode, comments explain the purpose of code sections, making the logic easier to digest. 

This representation captures the original function of the code while ensuring that readers unfamiliar with programming syntax can understand the underlying logic.
