Sure! Here is the pseudocode representation of the given code:

```
BEGIN

  // Read a line of input and remove the last character (typically a newline)
  INPUT line FROM standard input
  REMOVE the last character from line
  DEFINE length_of_line AS the length of line
  INITIALIZE result_value AS 0

  // Iterate over lengths from 0 to the length_of_line
  FOR length FROM 0 TO length_of_line - 1 DO
    // Check each starting position in the line
    FOR index FROM 0 TO length_of_line - 1 DO
      // Check if the substring starting at index of the current length is found later in the line
      IF line contains the substring starting at index and of current length in the remainder of the line THEN
        SET result_value AS current length
        BREAK the inner loop (no need to check further for this length)
      END IF
    END FOR
  END FOR

  // Output the highest length found that meets the criteria
  PRINT result_value

END
```

### Explanation:
- The pseudocode processes a line of text by removing the last character (often a newline).
- It calculates the length of the line and initializes a variable to hold the result.
- It uses nested loops: the outer loop iterates over possible substring lengths, and the inner loop checks each position in the line for substrings of the current length.
- If a matching substring is found, it updates the result and exits the inner loop.
- Finally, it prints the longest length of a substring found that appears again later in the line.
