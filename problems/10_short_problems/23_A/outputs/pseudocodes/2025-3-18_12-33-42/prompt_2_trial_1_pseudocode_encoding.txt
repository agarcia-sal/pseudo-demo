**Pseudocode:**

1. **Start the program.**

2. **Read a line of input** from the standard input, removing the trailing newline character.  
   - Store the modified input in a variable called `inputLine`.

3. **Determine the length** of `inputLine` and store it in a variable called `lengthOfInput`.

4. **Initialize a variable** called `resultValue` to zero. This variable will keep track of the longest length of a substring that appears more than once.

5. **Begin a loop** that iterates over each possible substring length `l` starting from 0 up to `lengthOfInput - 1`:
   - For each `l`, **begin another loop** that iterates over each starting position `i` for substrings of that length within `inputLine`:
     - Extract the substring from `inputLine` starting at position `i` with length `l`.
     - **Check** if this substring can be found elsewhere in `inputLine` starting from position `i + 1` (to avoid matching the same position).
       - If the substring is found:
         - Update `resultValue` to the current length `l`.
         - **Exit the inner loop** to move on to the next length `l`.

6. **Output the value** of `resultValue`, which represents the length of the longest duplicated substring found in `inputLine`.

7. **End the program.**
