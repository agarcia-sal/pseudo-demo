Here is the pseudocode that clearly and concisely captures the logic of the provided code:

```
BEGIN
    // Read a line of input
    INPUT line
    SET n to the length of line
    SET longest_repeated_length to 0

    // Iterate over possible lengths of substrings
    FOR length FROM 0 TO n - 1 DO
        // Check for each starting position in the string
        FOR start_position FROM 0 TO n - 1 DO
            // Extract the substring of the given length starting from start_position
            SET substring to line[start_position : start_position + length]

            // Check if this substring appears again in the line
            IF substring is found in line, starting from start_position + 1 THEN
                SET longest_repeated_length to length
                BREAK // Exit the inner loop as we found a repetition for this length
            END IF
        END FOR
    END FOR
    
    // Output the longest length of the repeated substring found
    PRINT longest_repeated_length
END
```

### Comments:
- The pseudocode uses meaningful variable names to enhance readability.
- Control structures like loops and conditions are expressed in straightforward language.
- The logic focuses on finding the longest repeated substring length in the input.
