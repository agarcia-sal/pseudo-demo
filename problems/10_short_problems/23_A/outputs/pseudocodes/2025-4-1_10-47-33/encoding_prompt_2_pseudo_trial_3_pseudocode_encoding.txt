**Pseudocode:**

1. **Input**: Read a line of text, excluding the newline character at the end.
2. **Initialize**: 
   - Determine the length of the line of text and store it in a variable called `textLength`.
   - Initialize a variable `maximumLength` to zero. This will keep track of the longest repeating substring found.

3. **Outer Loop**: For each possible length of substring `currentLength` from 0 to `textLength - 1`:
   - **Inner Loop**: For each starting position `startPosition` in the line from 0 to `textLength - 1`:
     - Extract a substring from the line that starts at `startPosition` and has a length of `currentLength`.
     - Check if this substring appears again in the line starting from the character immediately after `startPosition`.
     - If the substring exists:
       - Update `maximumLength` to the current substring length `currentLength` and exit the inner loop because we are only interested in the first valid repetition found for that length.

4. **Output**: After checking all possible lengths, print the value of `maximumLength`, which represents the length of the longest repeating substring found in the line.
