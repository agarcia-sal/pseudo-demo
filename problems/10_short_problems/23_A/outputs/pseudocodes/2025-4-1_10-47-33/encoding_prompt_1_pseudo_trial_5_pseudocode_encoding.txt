**Pseudocode: Find Maximum Length of Repeated Substring**

1. **Read Input:**
   - Read a line of text input and remove the trailing newline character.
   - Store the length of this line as `lengthOfLine`.

2. **Initialize Variables:**
   - Set `maxRepeatedLength` to 0.

3. **Outer Loop:**
   - For each length `currentLength` from 0 to `lengthOfLine - 1`:
     - **Inner Loop:**
       - For each starting index `startIndex` from 0 to `lengthOfLine - 1`:
         - Extract a substring from `line` starting at `startIndex` with the length `currentLength`.
         - Check if this substring appears again in `line` starting from `startIndex + 1` (the position after the current starting index).
         - If the substring is found:
           - Update `maxRepeatedLength` to `currentLength`.
           - Break out of the inner loop since we found a repeat.

4. **Output Result:**
   - Print the value of `maxRepeatedLength`, which represents the length of the longest repeated substring. 

This pseudocode focuses on the logic of searching for repeated substrings in the provided text, accounting for the maximal length of such substrings found during the search.
