**Pseudocode:**

1. Read a line of input and remove the trailing newline character.
2. Determine the length of the input line and store it in a variable `lengthOfLine`.
3. Initialize a variable `repeatedSubstringLength` to 0, which will hold the length of the longest repeated substring.

4. For each possible length `substringLength` from 0 to `lengthOfLine - 1`:
   - For each starting index `startIndex` from 0 to `lengthOfLine - 1`:
      - Extract a substring from the input line starting at `startIndex` and of length `substringLength`.
      - Check if this substring can be found again later in the input line (starting from the index after `startIndex`).
      - If the substring is found again:
        - Set `repeatedSubstringLength` to `substringLength`.
        - Exit the inner loop (since we found a repeated substring of the current length).

5. After checking all possible lengths and indexes, output the value of `repeatedSubstringLength`. 

This algorithm essentially finds the length of the longest substring that appears more than once in the provided input line.
