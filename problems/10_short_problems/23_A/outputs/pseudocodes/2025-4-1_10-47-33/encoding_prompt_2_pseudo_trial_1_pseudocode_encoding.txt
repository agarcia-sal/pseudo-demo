**Pseudocode:**

1. **Read input**: Take a single line of input from the user and remove the trailing newline character.
2. **Determine length**: Calculate the length of the input string and store it in a variable named `stringLength`.
3. **Initialize variable**: Set a variable called `repeatedSubstringLength` to zero. This variable will track the length of the longest substring that is repeated in the input string.

4. **Outer loop**: For each possible substring length from 0 to `stringLength - 1`, do the following:
   - Let `substringLength` be the current length being considered.
   - **Inner loop**: For each possible starting index within the string from 0 to `stringLength - 1`, do the following:
     - Extract the substring starting from the current index with the length equal to `substringLength`.
     - Check if this substring appears again in the string after the current index (meaning starting from the next index onward).
     - If the substring is found again:
       - Update `repeatedSubstringLength` to the value of `substringLength`.
       - Exit the inner loop because a repeat has been found.

5. **Output result**: Once both loops have completed, display the value of `repeatedSubstringLength`, which indicates the length of the longest repeated substring found.
