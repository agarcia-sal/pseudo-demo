```plaintext
BEGIN

// Read a line of input and remove the trailing newline character
INPUT line

// Determine the length of the input line
SET n TO length of line

// Initialize a variable to hold the result
SET repeatedLength TO 0

// Loop through lengths of substrings from 0 to n-1
FOR length FROM 0 TO n-1 DO
    // Check for substrings of the current length
    FOR startIndex FROM 0 TO n-1 DO
        // Extract a substring from the current start index
        SET substring TO line[startIndex : startIndex + length]
        
        // Check if the substring occurs again later in the string
        IF substring occurs in line starting from position startIndex + 1 THEN
            // Update the result with the current length
            SET repeatedLength TO length
            BREAK // Exit inner loop if a repeat is found
        END IF
    END FOR
END FOR

// Output the length of the longest repeated substring
OUTPUT repeatedLength

END
```

### Comments:
1. The pseudocode captures the logic of finding the longest repeated substring length.
2. Clear naming conventions improve readability and understanding.
3. It follows an abstract flow and emphasizes the algorithm's intent without detailing any programming syntax nuances.
