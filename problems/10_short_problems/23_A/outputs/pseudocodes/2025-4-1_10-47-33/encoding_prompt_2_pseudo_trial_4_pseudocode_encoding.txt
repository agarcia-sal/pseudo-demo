**Pseudocode:**

1. **Receive Input:**
   - Read a line of text from the standard input and store it in a variable called `inputLine`.
   - Remove the last character from `inputLine`, which is typically a newline character.

2. **Initialize Variables:**
   - Determine the length of `inputLine` and store it in a variable named `lengthOfLine`.
   - Create a variable called `resultValue` and set it to 0. This will hold the final output.

3. **Loop through PossibleSubstringLengths:**
   - For each possible substring length `currentLength` from 0 to `lengthOfLine - 1`:
     - Iterate over each character position `currentIndex` from 0 to `lengthOfLine - 1`.

4. **Check for Substring Reoccurrence:**
   - For each substring starting at `currentIndex` with the length of `currentLength`:
     - Check if this substring can be found again in `inputLine`, starting the search just after `currentIndex` (which is `currentIndex + 1`).
     - If the substring is found:
       - Set `resultValue` to `currentLength` to record the length of the found substring.
       - Exit the inner loop immediately because we have found a substring of this length that reoccurs.

5. **Output the Result:**
   - Print the value of `resultValue`, which represents the length of the longest substring that occurs more than once in `inputLine`. If no such substring exists, it will remain at its initial value of 0.
