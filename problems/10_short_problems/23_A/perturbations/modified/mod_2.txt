Here is a structured pseudocode that captures the intent and logic of the provided Python code snippet:

```
BEGIN

    INPUT inputLine

    SET lengthOfLine TO LENGTH(inputLine)
    
    SET longestRepeatedSubstringLength TO 0

    FOR substringLength FROM 0 TO lengthOfLine - 1 DO

        FOR startIndex FROM 0 TO lengthOfLine - 1 DO
            
            SET currentSubstring TO SUBSTRING(inputLine, startIndex, substringLength)

            IF currentSubstring IS FOUND IN inputLine AFTER startIndex THEN
                
                SET longestRepeatedSubstringLength TO substringLength
                BREAK 

            END IF
            
        END FOR 

    END FOR 

    OUTPUT longestRepeatedSubstringLength

END
```

### Explanation of Pseudocode:

1. **Input**: The code begins by reading an input string.
2. **Length Calculation**: It calculates the length of the string to determine the range for substring exploration.
3. **Search for Repeated Substrings**: It uses nested loops to check all possible starting positions for substrings of increasing lengths to see if they can be found later in the string.
4. **Update Result**: If a repeated substring is found, it updates the result and breaks out of the inner loop to explore longer substrings.
5. **Output**: Finally, it prints the length of the longest repeated substring found.

This pseudocode effectively communicates the logic of the original code without getting bogged down in programming-specific syntax, making it accessible for those reading it for comprehension.
