**Purpose:** The goal of this algorithm is to find and print the smallest non-negative integer whose sum of the first `i` natural numbers equals or exceeds the absolute value of a given integer input. If the sum exceeds the input, it checks if the difference is even, allowing the output of `i` if true.

**Pseudocode:**

1. Begin
2. Declare a variable `absoluteValue` and set it to the absolute value of the integer input from the user
3. Initialize a variable `currentIndex` to 0
4. Start an indefinite loop (repeat until a break condition is met)
   1. Calculate the sum of the first `currentIndex` natural numbers and store it in `sumOfNumbers`
      - Formula: `sumOfNumbers` = (currentIndex * (currentIndex + 1)) / 2
   2. Calculate the difference `difference` as `sumOfNumbers` - `absoluteValue`
   3. If `sumOfNumbers` equals `absoluteValue`, then:
      1. Print `currentIndex`
      2. Exit the loop
   4. Else if `sumOfNumbers` is greater than `absoluteValue`, then:
      1. If `difference` is even, then:
         1. Print `currentIndex`
         2. Exit the loop
   5. Increment `currentIndex` by 1
5. End

**Input and Output:**
- Input: An integer number from the user (can be positive or negative).
- Output: The smallest non-negative integer `i` such that the sum of the first `i` natural numbers is equal to or greater than the absolute value of the input. If the sum exceeds the input, it must check if the difference is even before outputting `i`.
