### Purpose Summary
The goal of this code is to find a non-negative integer that, when the sum of integers from 0 up to that number (inclusive) is calculated, equals a given value (or can be adjusted to equal it by removing an even number).

### Pseudocode

1. **Get Input Value**
   - Prompt the user to input a number.
   - Store the absolute value of the input as a variable named `targetValue`.

2. **Initialize Variables**
   - Set an integer variable named `currentIndex` to 0, which will represent the current number weâ€™re summing up to.

3. **Start Infinite Loop**
   - Repeat the following steps indefinitely:

   3.1 **Calculate Sum**
   - Calculate the sum of all integers from 0 to `currentIndex` and store it in the variable `currentSum`.
   - The formula for this sum is the product of `currentIndex` and `currentIndex + 1`, divided by 2.

   3.2 **Calculate Difference**
   - Determine the difference between `currentSum` and `targetValue`, naming this variable `difference`.

   3.3 **Check Conditions**
   - If `currentSum` equals `targetValue`:
     - Print `currentIndex` as the result.
     - Exit the loop.

   - Else if `currentSum` is greater than `targetValue`:
     - Check if `difference` is even:
       - If yes, print `currentIndex` as the result.
       - Exit the loop.

   3.4 **Increment Index**
   - Increase `currentIndex` by 1 to check the next number in the next iteration.

### Example of Execution
- If the input `3` is provided, the sum from 0 to 2 is 3, which matches the input, so `2` is printed.
- If the input `5` is provided, the sum from 0 to 4 is 10 (which is greater than 5). The difference is 5, which is odd, so we continue. Next, for `currentIndex = 3`, the sum is 6. The difference is 1, which is odd, and the loop continues. Eventually, for `currentIndex = 4`, the sum is 10 and the difference is 5, which is even, so `4` would be printed.

### Note
- The loop operates indefinitely until a valid output is found, ensuring either an exact match or a match adjusted by removing an even number.
