**Summary of the Purpose**:  
The goal of this code is to find a non-negative integer `i` such that the sum of the first `i` integers either exactly equals a given non-negative integer `n`, or, if it exceeds `n`, the difference between the sum and `n` is an even number.

---

**Pseudocode**:

1. **Get Input**:  
   - Read an integer value from the user named `inputValue`.
   - Convert `inputValue` to its absolute value and assign it to `targetSum`.

2. **Initialize Counter**:  
   - Set a variable `counter` to 0. This will keep track of the current integer we are evaluating.

3. **Loop Until Finding Result**:  
   - Repeat the following steps indefinitely (until a condition to break out of the loop is met):
     1. **Calculate Sum**: 
        - Compute the sum of the first `counter` integers using the formula:
          - `currentSum = counter * (counter + 1) / 2`
     2. **Calculate Difference**: 
        - Determine the difference between `currentSum` and `targetSum`:
          - `difference = currentSum - targetSum`
     3. **Check Conditions**: 
        - If `currentSum` equals `targetSum`:
          - Print the value of `counter` (this is the desired integer) and exit the loop.
        - Else if `currentSum` exceeds `targetSum`:
          - If `difference` is even (i.e., divisible by 2 with no remainder):
            - Print the value of `counter` (this is the desired integer) and exit the loop.
     4. **Increment Counter**: 
        - Increase the value of `counter` by 1.

---

**Comments**:  
- The loop continues until it finds the appropriate integer (either when the sum equals the target or when the sum exceeds the target with an even difference).
- The formula used for summation (`currentSum = counter * (counter + 1) / 2`) is a well-known mathematical method to sum the first `i` integers. 

---

By following this structured approach, the pseudocode captures the logic and flow of the original program and presents it in a clear, understandable manner.
