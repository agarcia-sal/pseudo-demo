**Purpose:** This algorithm finds a non-negative integer whose triangular number is equal to or greater than a given input number, allowing for specific conditions on the difference.

**Pseudocode:**

1. **Get User Input:**
   - Read an integer value from the user and store its absolute value as the variable `targetValue`.

2. **Initialize Counter:**
   - Set a counter variable `index` to 0.

3. **Begin Infinite Loop:**
   - Repeat the following steps indefinitely:
   
   4. **Calculate Triangular Number:**
      - Compute the triangular number `triangularNumber` using the formula:
        - triangularNumber = index multiplied by (index + 1) divided by 2.

   5. **Calculate Difference:**
      - Compute the difference `difference`:
        - difference = triangularNumber - targetValue.

   6. **Check Equality Condition:**
      - If `triangularNumber` is equal to `targetValue`:
        - Print the current `index` and exit the loop.

   7. **Check Greater Condition:**
      - Else, if `triangularNumber` is greater than `targetValue`:
        - If `difference` is even:
          - Print the current `index` and exit the loop.

   8. **Increment Counter:**
      - Increase the value of `index` by 1.

**Output:** The program will print the smallest non-negative integer that meets the specified conditions regarding its triangular number.
