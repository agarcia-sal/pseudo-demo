**Purpose:** The program determines the smallest non-negative integer that, when added to an appropriate number of additional integers, equals a given positive integer.

**Pseudocode:**

```
BEGIN

    // Step 1: Get user input
    SET input_number TO absolute value of the integer input by the user

    // Step 2: Initialize the counter
    SET counter TO 0

    // Step 3: Continue indefinitely until a condition is met
    WHILE true DO

        // Step 4: Calculate the sum of the first 'counter' integers
        SET sum_to_counter TO (counter * (counter + 1)) / 2
        
        // Step 5: Calculate the difference
        SET difference TO sum_to_counter - input_number
        
        // Step 6: Check conditions to determine output
        IF sum_to_counter equals input_number THEN
            // Found exact match, output the counter
            PRINT counter
            BREAK the loop
        ELSE IF sum_to_counter is greater than input_number THEN
            // Check if the difference is even
            IF difference is divisible by 2 THEN
                // Valid solution found, output the counter
                PRINT counter
                BREAK the loop
        ENDIF
        
        // Increment the counter for the next iteration
        INCREMENT counter by 1

    ENDWHILE

END
```

**Comments for Clarity:**
- The program uses a loop to calculate the sum of integers starting from 0 and checks if it can equal or exceed the input number.
- If the sum matches the input directly, the program prints the counter.
- If the sum exceeds the input, the program checks whether the difference between the sum and the input is even, which is essential for achieving a valid solution.
- The loop continues until it finds a suitable counter value or is interrupted.
