Here is the pseudocode derived from the given Python code, following the specified guidelines:

```
BEGIN doMain
    DECLARE variable t1 AS STRING
    DECLARE variable t2 AS STRING
    DECLARE variable res AS INTEGER INITIALIZED TO 0
    DECLARE list tt1 AS LIST OF STRING
    DECLARE list tt2 AS LIST OF STRING

    // Get user input
    SET t1 TO USER INPUT
    SET t2 TO USER INPUT

    // Split input strings into lists of strings
    SET tt1 TO SPLIT t1 BY SPACE
    SET tt2 TO SPLIT t2 BY SPACE

    // Loop through the first three elements of both lists
    FOR x FROM 0 TO 2 DO
        DECLARE variable a AS INTEGER
        DECLARE variable b AS INTEGER
        
        // Convert string elements to integers
        SET a TO CONVERT tt1[x] TO INTEGER
        SET b TO CONVERT tt2[x] TO INTEGER

        // Check if elements are different
        IF a IS NOT EQUAL TO b THEN
            INCREMENT res BY 1
        END IF
    END FOR

    // Check the result count and print appropriate message
    IF res IS LESS THAN 3 THEN
        PRINT "YES"
    ELSE
        PRINT "NO"
    END IF
END doMain

// Begin execution of the main function
CALL doMain
```

### Explanation of the Components:
1. **Variables and Input:** The pseudocode defines variables to hold input values as well as counters and lists.
2. **User Input Handling:** It captures input strings and splits them into lists.
3. **Looping with Conditionals:** A loop processes the first three elements. Within the loop, a conditional checks for discrepancies between elements.
4. **Final Outcome Check:** After looping, it checks the count of differences to decide on the output.
5. **Helper Constructs:** The `CONVERT` operation mimics the type converting from strings to integers. 

### Assumptions:
- Both `t1` and `t2` are expected to contain sufficient space-separated integer values.
- Each list will contain at least three items for the loop to function correctly.
- Integer conversion is straightforward without error handling for malformed inputs.
