```plaintext
FUNCTION doMain
    // Step 1: Read input values.
    DECLARE firstInput AS STRING
    DECLARE secondInput AS STRING
    firstInput = READ user input
    secondInput = READ user input
    
    // Step 2: Split the input strings into lists of words.
    DECLARE firstInputList AS LIST OF STRINGS
    DECLARE secondInputList AS LIST OF STRINGS
    firstInputList = SPLIT firstInput by spaces
    secondInputList = SPLIT secondInput by spaces
    
    // Step 3: Initialize a counter for differences.
    DECLARE differenceCount AS INTEGER
    differenceCount = 0
    
    // Step 4: Compare corresponding elements in both lists.
    FOR index FROM 0 TO 2 DO
        // Convert string elements to integers for comparison.
        DECLARE valueFromFirstList AS INTEGER
        DECLARE valueFromSecondList AS INTEGER
        valueFromFirstList = CONVERT firstInputList[index] TO INTEGER
        valueFromSecondList = CONVERT secondInputList[index] TO INTEGER
        
        // Check if the values are different.
        IF valueFromFirstList IS NOT EQUAL TO valueFromSecondList THEN
            INCREMENT differenceCount
        END IF
    END FOR
    
    // Step 5: Determine result based on the number of differences.
    IF differenceCount < 3 THEN
        PRINT "YES"
    ELSE
        PRINT "NO"
    END IF
END FUNCTION

// Main execution block.
IF running as main program THEN
    CALL doMain
END IF
``` 

### Explanation of Pseudocode:

1. **Function Definition**: The `doMain` function encapsulates the code logic.
2. **Input Handling**: User inputs are read and stored as strings.
3. **Splitting Inputs**: The input strings are split into lists based on spaces to compare individual elements.
4. **Counting Differences**: A loop iterates through the elements of both lists. If elements at the same index are different, a difference counter is incremented.
5. **Conditional Output**: After comparing, if the number of differences is less than 3, "YES" is printed; otherwise, "NO" is returned.
6. **Execution Control**: The function is called in the main execution block if the script is run directly.
