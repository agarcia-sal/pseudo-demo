Here's the pseudocode that represents the logic of the given code:

```
FUNCTION calculate_remainder_division(number, divisor):
    quotient, remainder = DIVIDE number BY divisor
    IF remainder > 0 THEN
        RETURN remainder TIMES (quotient + 1)
    ELSE
        RETURN number

READ input values n, m, and s from the user

result_from_n = calculate_remainder_division(n, s)
result_from_m = calculate_remainder_division(m, s)

FINAL_RESULT = result_from_n TIMES result_from_m

PRINT FINAL_RESULT
```

### Description of the Pseudocode:

1. **Function Definition**: The function `calculate_remainder_division` is defined to handle the input of a number and a divisor. It computes how many full times the divisor fits into the number and also calculates the remainder.

2. **Quotient and Remainder**: Using division, it computes the quotient (how many times the divisor fully fits into the number) and the remainder.

3. **Return Value Logic**: If there is a remainder, it returns the product of the remainder and one more than the quotient. If there is no remainder, it simply returns the number.

4. **User Input**: The pseudocode reads three integers `n`, `m`, and `s` from the user input.

5. **Results Calculation**: It calculates results for both `n` and `m` using the `calculate_remainder_division` function.

6. **Final Result Calculation**: It computes the final result by multiplying the two results obtained from the function.

7. **Output**: Finally, it prints the final result. 

This pseudocode effectively encapsulates the original logic in a clearer, high-level format without getting into the specifics of any programming language syntax.
