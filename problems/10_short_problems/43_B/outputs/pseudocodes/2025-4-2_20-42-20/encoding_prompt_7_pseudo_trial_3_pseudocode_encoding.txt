Here is the high-level pseudocode based on the provided Python code:

```
FUNCTION compareStringFrequencies()
    // Prompt user for input strings
    READ firstInputString
    READ secondInputString
    
    // Remove spaces from both input strings
    INITIALIZE firstProcessedString AS a list of characters from firstInputString excluding spaces
    INITIALIZE secondProcessedString AS a list of characters from secondInputString excluding spaces
    
    // Initialize a list to hold frequency differences
    INITIALIZE frequencyDifferences AS an empty list
    
    // Calculate the frequency difference for each character in the range of 'A' to 'z'
    FOR each characterCode FROM ASCII value of 'A' TO ASCII value of 'z' DO
        INITIALIZE firstStringCount AS the count of the character in firstProcessedString
        INITIALIZE secondStringCount AS the count of the character in secondProcessedString
        // Calculate the difference in frequency between both strings
        ADD (firstStringCount - secondStringCount) TO frequencyDifferences
    END FOR
    
    // Check if there are any negative frequency differences
    INITIALIZE negativeCounts AS a list containing all negative values from frequencyDifferences
    
    // Print "YES" if no negative frequencies are found, otherwise print "NO"
    IF LENGTH(negativeCounts) EQUALS 0 THEN
        PRINT "YES"
    ELSE
        PRINT "NO"
    END IF
END FUNCTION
```

### Explanation:
1. **Inputs**: Two strings entered by the user.
2. **Processing**: The code removes spaces from both strings and calculates the frequency of each character in a specified ASCII range.
3. **Outputs**: The program outputs "YES" if the frequencies in the first string are at least equal to those in the second string, and "NO" otherwise. The logic checks for negative differences in frequency count.
4. **Clarity**: Steps are defined clearly with variable names that suggest their purpose, and logical constructs are expressed simply, making the pseudocode accessible and easy to understand.
