### Pseudocode

```
BEGIN

    // Step 1: Read the input string and prepare it for processing
    INPUT: Read a string from standard input and remove any leading/trailing whitespace
    STORE the cleaned string as "inputString"

    // Step 2: Replace specific substrings for formatting
    REPLACE all occurrences of "dot" in inputString with "."
    REPLACE all occurrences of "at" in inputString with "@"

    // Step 3: Check and modify the first character if it's a period
    IF the first character of inputString is "."
        PREPEND "dot" to the inputString (i.e., make inputString = "dot" + inputString from the second character onward)

    // Step 4: Initialize variables for processing the string
    SET countAt to 0              // Counter for occurrences of '@' character
    INITIALIZE an empty list "formattedCharacters"  // To hold processed characters
    SET length to 0               // This variable is not used subsequently

    // Step 5: Modify the string further if it starts with '@'
    IF the first character of inputString is "@"
        PREPEND "at" to inputString (i.e., make inputString = "at" + inputString from the second character onward)

    // Step 6: Iterate through each character in the modified string
    FOR each character in inputString DO
        IF the character is "@"
            IF countAt is greater than 0 THEN
                APPEND "at" to "formattedCharacters"
                SET countAt to 1
            ELSE
                APPEND "@" to "formattedCharacters"
                SET countAt to 1 
            END IF
        ELSE
            APPEND the character to "formattedCharacters"
        END IF
    END FOR

    // Step 7: Join the formatted characters into a single string
    JOIN the list "formattedCharacters" into a new string "outputString"

    // Step 8: Final formatting for the output string
    IF the last character of outputString is "."
        REPLACE the last character of outputString with "dot" (i.e., remove "." and add "dot")

    // Step 9: Output the final formatted string
    PRINT outputString

END
```

### Explanation of Pseudocode
- The pseudocode outlines a transformation process applied to an input string. It replaces certain substrings ("dot" and "at") with specific punctuation. 
- The logic checks the first and last characters for specific formatting adjustments.
- It intelligently handles multiple occurrences of the "@" character while maintaining proper output formatting.
- The final modified string is printed as output. 

This structure makes it easy to understand the flow of data and decisions without getting critical details lost in syntax.
