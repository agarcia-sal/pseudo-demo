Here is a clear and concise pseudocode representation of the provided Python code, adhering to the structured language concepts outlined in your request:

```
BEGIN Program

    // Read input from standard input and remove leading/trailing whitespace
    SET a TO read input from stdin
    REMOVE whitespace from a
    
    // Replace occurrences of 'dot' with '.' and 'at' with '@'
    REPLACE 'dot' in a WITH '.'
    REPLACE 'at' in a WITH '@'

    // If the first character is a dot, prepend 'dot'
    IF first character of a is '.' THEN
        SET a TO 'dot' + substring of a from index 1 to end
    ENDIF

    // Initialize a counter for '@' symbols and list for characters
    SET co TO 0
    CREATE an empty list c
    SET l TO 0

    // If the first character is an '@', prepend 'at'
    IF first character of a is '@' THEN
        SET a TO 'at' + substring of a from index 1 to end
    ENDIF

    // Iterate through each character in a
    FOR each character i in a DO
        IF i is '@' THEN
            // Check if there is already an '@' in the list
            IF co > 0 THEN
                ADD 'at' to list c
                SET co TO 1
            ELSE
                ADD '@' to list c
                SET co TO 1
            ENDIF
        ELSE
            ADD i to list c
        ENDIF
    ENDFOR

    // Convert list c back to a string
    SET c TO join characters in c into a string

    // If the last character is a dot, replace it with 'dot'
    IF last character of c is '.' THEN
        SET c TO substring of c from index 0 to second last character + 'dot'
    ENDIF

    // Output the final result
    PRINT c

END Program
```

### Assumptions:
- It is assumed that the input provided is a valid string.
- The `read input from stdin` function reads an entire line of input.
- List operations are assumed to be properly defined (i.e., append and join functionalities).
- Indexing in strings starts from 0, and substring operations are positive.
- Variable types are implicitly understood by their usage within the pseudocode.
