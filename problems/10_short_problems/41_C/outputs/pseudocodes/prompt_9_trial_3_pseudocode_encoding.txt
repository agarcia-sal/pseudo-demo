**Purpose:**  
The goal of this algorithm is to process a given string input, replacing specific words with their designated symbols and ensuring that the resulting format is correct according to a predefined set of rules.

**Pseudocode:**

1. **Receive Input:**
   - Read a line of text from the user and remove any surrounding whitespace.

2. **Replace Specific Words:**
   - Substitute all occurrences of the word "dot" with the character "." in the input text.
   - Substitute all occurrences of the word "at" with the character "@" in the input text.

3. **Handle Leading Dot:**
   - If the modified input starts with a ".", prepend the text "dot" before the second character.

4. **Initialize Trackers:**
   - Set a counter for handling "at" symbols.
   - Create an empty list to store characters or symbols as they are processed.

5. **Handle Leading At Symbol:**
   - If the modified input starts with an "@", prepend the text "at" before the second character.

6. **Process Each Character:**
   - For each character in the modified input:
     - If the character is "@":
       - If the counter has been set (indicating that another "at" has already been noted), append the word "at" to the list and reset the counter.
       - Otherwise, append the character "@" to the list and set the counter.
     - If the character is not "@":
       - Append the character as-is to the list.

7. **Construct Final Output:**
   - Join all characters and symbols in the list to form a single string.
   - If the final string ends with a ".", replace the last character with the word "dot".

8. **Display Result:**
   - Print the final processed string.

This structured approach ensures clarity in transforming the input while systematically managing special cases related to symbols and formatting.
