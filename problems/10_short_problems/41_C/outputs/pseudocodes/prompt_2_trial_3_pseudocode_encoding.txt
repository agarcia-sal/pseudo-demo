**Pseudocode:**

1. **Read Input:**
   - Accept a line of input and remove any leading or trailing spaces.
   
2. **Replace Text:**
   - Replace all occurrences of the string "dot" with the character ".".
   - Replace all occurrences of the string "at" with the character "@".
   
3. **Check for Leading Dot:**
   - If the first character of the modified string is a ".", then prepend the string "dot" to the rest of the modified string.

4. **Initialization:**
   - Initialize a counter called "at_counter" to zero.
   - Create an empty list called "result_characters" to store characters of the final result.
   - Initialize a variable called "length" to zero (though it is unused).

5. **Check for Leading At:**
   - If the first character of the modified string is an "@", then replace it with "at" followed by the rest of the modified string.

6. **Process Each Character in the Modified String:**
   - For each character in the modified string:
     - If the character is "@":
       - If "at_counter" is greater than zero, append the string "at" to "result_characters" and set "at_counter" to one (this prevents multiple "at" from being added consecutively).
       - If "at_counter" is zero, append the character "@" to "result_characters" and set "at_counter" to one.
     - If the character is not "@", append it as it is to "result_characters".

7. **Combine Characters:**
   - Join all characters in the "result_characters" list to form the final output string.

8. **Check for Trailing Dot:**
   - If the last character of the combined string is a ".", remove it and append "dot" instead.

9. **Output Result:**
   - Print the final modified string.

**Inputs:** 
- A string that may contain "dot" and "at".

**Outputs:** 
- A string reflecting the specified replacements and adjustments for leading and trailing characters.
