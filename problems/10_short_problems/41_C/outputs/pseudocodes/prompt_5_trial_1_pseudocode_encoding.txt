**Objective:** The goal of this code is to transform a string that represents an email address by replacing specific keywords with their corresponding symbols and ensuring certain conditions about the structure of the email address are met.

**Pseudocode:**

1. **Read Input:**
   - Create a variable to store user input from the standard input.
   - Remove leading and trailing spaces from the input string.

2. **Initial Replacements:**
   - Replace all occurrences of the word `dot` with the character `.` in the input string.
   - Replace all occurrences of the word `at` with the character `@` in the input string.

3. **Handle Leading Character:**
   - Check if the first character of the modified string is `.`:
     - If true, prepend the keyword `dot` in front of all characters except the first one.

4. **Initialization:**
   - Create a counter to track occurrences of the `@` symbol.
   - Create an empty list to hold the characters as they are processed.
   - Initialize a variable to track the length of the string (if needed).

5. **Handle Leading `@`:**
   - If the first character is `@`, replace it with the keyword `at` followed by the rest of the string.

6. **Iterate Over Each Character:**
   - For each character in the modified string:
     - If the character is `@`:
       - If `@` has occurred before:
         - Append the keyword `at` to the list.
       - Else:
         - Append the character `@` to the list.
       - Update the count for the occurrences of `@`.
     - Else:
       - Append the character to the list.

7. **Join Characters:**
   - Combine the list of characters back into a single string.

8. **Handle Trailing Character:**
   - Check if the last character of the final string is `.`:
     - If true, replace `.` at the end with the keyword `dot`.

9. **Output Result:**
   - Print the final modified string.

**Example Use:**
- Input: `"john.doe(at)example(dot)com"`
- Output: `"john.dot@at.example.dot.com"` 

**Note:** Ensure that the transformations correctly maintain the structural integrity of the original email format while replacing the specified keywords.
