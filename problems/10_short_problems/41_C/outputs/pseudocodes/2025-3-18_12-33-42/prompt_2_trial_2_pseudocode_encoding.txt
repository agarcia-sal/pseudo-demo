**Pseudocode Description:**

1. **Start of the process.**
   
2. **Input Handling:**
   - Read a single line of input and remove any leading or trailing whitespace.
   - Replace every occurrence of the string "dot" in the input with the character "." (dot).
   - Replace every occurrence of the string "at" in the input with the character "@" (at symbol).

3. **Initial Adjustment:**
   - Check if the first character of the modified input is a dot ".".
     - If it is, prepend the string "dot" to the modified input starting from the second character.
   
4. **Initialization:**
   - Set a counter variable `counter` to 0 to track the occurrence of "@".
   - Create an empty list `characterList` to hold individual characters or strings.
   - Initialize a variable `length` to 0 (though it is not used later).

5. **Further Input Adjustment:**
   - If the first character of the modified input is the character "@", 
     - Prepend the string "at" to the modified input starting from the second character.

6. **Character Processing:**
   - For each character in the modified input:
     - If the character is "@":
       - Check if the `counter` is greater than 0 (indicating that "@" has already been encountered).
         - If it has, append the string "at" to the `characterList` and set the `counter` to 1.
         - If it hasnâ€™t, append the character "@" to the `characterList` and set the `counter` to 1.
     - If the character is anything other than "@", append it directly to the `characterList`.

7. **Reconstructing the Output:**
   - Join all elements in the `characterList` into a single string called `finalString`.

8. **Final Adjustment:**
   - Check if the last character of `finalString` is a dot ".".
     - If it is, replace the last character with the string "dot".

9. **Output Result:**
   - Print `finalString`.

**End of the process.**
