Given a problem's source code, produce a clear, concise, and precise high-level pseudocode that exactly mirrors the original logic, function and class names, and their scopes and nesting hierarchy without any renaming or restructuring. Represent control flow and declarations using uppercase keywords (FUNCTION, CLASS, IF, ELSE, FOR, WHILE, RETURN, etc.). Use consistent, fully spelled-out descriptive phrases employing standard programming and mathematical vocabulary, favoring clarity and unambiguity over brevity. Expand abbreviations only when it improves readability without adding superfluous verbosity. Express data operations and transformations conceptually while including minimal necessary detail for correct understanding. Indent blocks properly to reflect code nesting. Do not add any explanations, comments, summaries, or extra text; output only the pseudocode. Complete output strictly within 5 seconds. Format the pseudocode precisely as in the following example:

If the code is:
```python
def calc_average(nums):
    total = 0
    for num in nums:
        total += num
    avg = total / len(nums)
    return avg
```

Then output:
```
FUNCTION calc_average(list_of_numbers)
    SET total_sum TO 0
    FOR each number IN list_of_numbers
        INCREMENT total_sum BY number
    SET average_value TO total_sum DIVIDED BY LENGTH OF list_of_numbers
    RETURN average_value
END FUNCTION
```