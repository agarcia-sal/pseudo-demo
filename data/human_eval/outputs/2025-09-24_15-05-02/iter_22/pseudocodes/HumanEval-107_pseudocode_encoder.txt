```
FUNCTION even_odd_palindrome(upper_limit)
    FUNCTION is_palindrome(number)
        RETURN string_of_number EQUALS reverse_of_string_of_number
    END FUNCTION

    SET even_palindrome_count TO 0
    SET odd_palindrome_count TO 0

    FOR current_number FROM 1 TO upper_limit INCLUSIVE
        IF current_number MODULO 2 EQUALS 1 AND is_palindrome(current_number) IS TRUE
            INCREMENT odd_palindrome_count BY 1
        ELSE IF current_number MODULO 2 EQUALS 0 AND is_palindrome(current_number) IS TRUE
            INCREMENT even_palindrome_count BY 1
    END FOR

    RETURN (even_palindrome_count, odd_palindrome_count)
END FUNCTION
```