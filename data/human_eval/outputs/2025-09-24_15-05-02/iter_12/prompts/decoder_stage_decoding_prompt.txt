Translate the provided pseudocode into clean, idiomatic, and fully functional Python code **exactly preserving** all function names, parameter names, class names, and class/object hierarchies as specified in the pseudocode. Your Python code **must**:

- Include **all necessary imports explicitly** within the same Python code block, even if not stated in the pseudocode, to avoid runtime errors.
- Use type hints when appropriate but only if they increase clarity without changing logic.
- Use descriptive variable names consistent with the pseudocode; add minimal, precise comments **only** where non-trivial logic may be unclear.
- Correctly handle edge cases and implied behaviors from the pseudocode to ensure robustness.
- Guarantee syntactically valid Python code that runs correctly and efficiently within 5 seconds.
- Modularize and structure the code to follow Python best practices, while strictly adhering to the pseudocodeâ€™s control flow and logic.
- Avoid adding any testing code, print statements, placeholder code, explanations, or any output outside the Python code block.
- Do **not** add extra separators, whitespace-only lines, or explanatory text.

Enclose **all** translated code inside a single Python code block, formatted exactly as:

```python
# your translated code here
```

This instruction set is designed to maximize correctness, minimize errors (such as missing imports or undefined variables), and produce executable solutions that successfully pass all hidden tests.