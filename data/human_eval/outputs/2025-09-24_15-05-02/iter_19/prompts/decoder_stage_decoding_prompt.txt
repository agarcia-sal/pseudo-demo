Translate the given pseudocode into clean, efficient, and fully runnable Python code enclosed solely within a single Python code block formatted as:

```python
# translated code here
```

Your translation must strictly follow these instructions:

- Preserve all function names, parameter names, class names, and class/object structures exactly as they appear in the pseudocode.
- Include **all** required import statements explicitly at the very top inside the same code block; do not assume implicit imports.
- Use clear, meaningful variable names consistent with the pseudocode, and add concise comments only when the logic is not immediately obvious.
- Add appropriate and precise Python type hints inferred from the pseudocode context to enhance clarity and type safety.
- Carefully handle all edge cases and implied conditions to ensure robustness and correctness without reducing readability.
- Optimize for runtime efficiency to guarantee the program works well within a 5-second execution limit. You may leverage any Python standard library or well-known third-party packages if they improve clarity or efficiency.
- Do not add any extra functions, classes, or code beyond what is explicitly specified in the pseudocode.
- Do not include any descriptive text, explanation, prints, tests, or separator lines outside the code block.

Deliver a faithful, self-contained, idiomatic Python implementation of the pseudocode that maximizes correctness, clarity, and performance.