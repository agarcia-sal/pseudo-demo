FUNCTION same_chars WITH PARAMETERS s0 AS STRING, s1 AS STRING
    SET set_s0 TO LIST WITH ELEMENTS EMPTY
    SET set_s1 TO LIST WITH ELEMENTS EMPTY
    SET index_s0 TO 0
    WHILE index_s0 LESS THAN LENGTH OF s0
        SET char_found TO FALSE
        SET index_set_s0 TO 0
        WHILE index_set_s0 LESS THAN LENGTH OF set_s0
            IF ELEMENT AT index_set_s0 IN set_s0 EQUALS CHARACTER AT index_s0 IN s0 THEN
                SET char_found TO TRUE
                BREAK
            ENDIF
            INCREMENT index_set_s0 BY 1
        ENDWHILE
        IF char_found EQUALS FALSE THEN
            APPEND CHARACTER AT index_s0 IN s0 TO set_s0
        ENDIF
        INCREMENT index_s0 BY 1
    ENDWHILE
    SET index_s1 TO 0
    WHILE index_s1 LESS THAN LENGTH OF s1
        SET char_found TO FALSE
        SET index_set_s1 TO 0
        WHILE index_set_s1 LESS THAN LENGTH OF set_s1
            IF ELEMENT AT index_set_s1 IN set_s1 EQUALS CHARACTER AT index_s1 IN s1 THEN
                SET char_found TO TRUE
                BREAK
            ENDIF
            INCREMENT index_set_s1 BY 1
        ENDWHILE
        IF char_found EQUALS FALSE THEN
            APPEND CHARACTER AT index_s1 IN s1 TO set_s1
        ENDIF
        INCREMENT index_s1 BY 1
    ENDWHILE
    IF LENGTH OF set_s0 NOT EQUAL TO LENGTH OF set_s1 THEN
        RETURN FALSE
    ENDIF
    SET index_set_s0 TO 0
    WHILE index_set_s0 LESS THAN LENGTH OF set_s0
        SET found_in_s1 TO FALSE
        SET index_set_s1 TO 0
        WHILE index_set_s1 LESS THAN LENGTH OF set_s1
            IF ELEMENT AT index_set_s0 IN set_s0 EQUALS ELEMENT AT index_set_s1 IN set_s1 THEN
                SET found_in_s1 TO TRUE
                BREAK
            ENDIF
            INCREMENT index_set_s1 BY 1
        ENDWHILE
        IF found_in_s1 EQUALS FALSE THEN
            RETURN FALSE
        ENDIF
        INCREMENT index_set_s0 BY 1
    ENDWHILE
    RETURN TRUE