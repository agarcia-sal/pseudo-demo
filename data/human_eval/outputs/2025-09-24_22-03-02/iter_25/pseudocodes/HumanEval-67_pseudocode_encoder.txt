FUNCTION fruit_distribution(s STRING, n INTEGER) RETURNS INTEGER
    SET lis TO LIST WITH ELEMENTS EMPTY
    SET split_list TO LIST WITH ELEMENTS EMPTY
    SET current_string TO EMPTY STRING
    SET length_s TO LENGTH OF s
    SET start_index TO 0
    WHILE start_index LESS THAN length_s DO
        SET current_char TO CHARACTER AT INDEX start_index IN s
        IF current_char EQUALS ' ' THEN
            APPEND current_string TO split_list
            SET current_string TO EMPTY STRING
        ELSE
            CONCATENATE current_char TO current_string
        ENDIF
        INCREMENT start_index BY 1
    ENDWHILE
    IF current_string NOT EQUAL TO EMPTY STRING THEN
        APPEND current_string TO split_list
    ENDIF
    SET index TO 0
    SET length_split_list TO LENGTH OF split_list
    WHILE index LESS THAN length_split_list DO
        SET element TO ELEMENT AT INDEX index IN split_list
        CALL is_digit_result TO CALL element.isdigit()
        IF is_digit_result EQUALS TRUE THEN
            CALL int_conversion TO CONVERT element TO INTEGER
            APPEND int_conversion TO lis
        ENDIF
        INCREMENT index BY 1
    ENDWHILE
    SET sum_lis TO 0
    SET index_sum TO 0
    SET length_lis TO LENGTH OF lis
    WHILE index_sum LESS THAN length_lis DO
        SET sum_lis TO sum_lis PLUS ELEMENT AT INDEX index_sum IN lis
        INCREMENT index_sum BY 1
    ENDWHILE
    SET result TO n MINUS sum_lis
    RETURN result
END FUNCTION