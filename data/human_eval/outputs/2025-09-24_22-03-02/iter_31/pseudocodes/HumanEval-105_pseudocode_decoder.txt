FUNCTION by_length arr
    SET dic TO DICTIONARY WITH KEY VALUE PAIRS
        KEY 1 VALUE "One"
        KEY 2 VALUE "Two"
        KEY 3 VALUE "Three"
        KEY 4 VALUE "Four"
        KEY 5 VALUE "Five"
        KEY 6 VALUE "Six"
        KEY 7 VALUE "Seven"
        KEY 8 VALUE "Eight"
        KEY 9 VALUE "Nine"
    SET filtered_arr TO LIST WITH ELEMENTS EMPTY
    FOR i FROM 0 TO LENGTH OF arr MINUS 1
        IF arr AT i IS GREATER THAN OR EQUAL TO 1 AND arr AT i IS LESS THAN OR EQUAL TO 9 THEN
            APPEND arr AT i TO filtered_arr
    CALL sort ON filtered_arr WITH ARGUMENTS
        (NOTE: since code must be explicit, IMPLEMENT sorting as follows)
    SET n TO LENGTH OF filtered_arr
    FOR i FROM 0 TO n MINUS 2
        FOR j FROM 0 TO n MINUS i MINUS 2
            IF filtered_arr AT j IS GREATER THAN filtered_arr AT j PLUS 1 THEN
                SET temp TO filtered_arr AT j
                SET filtered_arr AT j TO filtered_arr AT j PLUS 1
                SET filtered_arr AT j PLUS 1 TO temp
    SET reversed_arr TO LIST WITH ELEMENTS EMPTY
    FOR k FROM LENGTH OF filtered_arr MINUS 1 DOWNTO 0
        APPEND filtered_arr AT k TO reversed_arr
    SET new_arr TO LIST WITH ELEMENTS EMPTY
    FOR m FROM 0 TO LENGTH OF reversed_arr MINUS 1
        SET current_value TO reversed_arr AT m
        SET current_name TO dic AT current_value
        APPEND current_name TO new_arr
    RETURN new_arr