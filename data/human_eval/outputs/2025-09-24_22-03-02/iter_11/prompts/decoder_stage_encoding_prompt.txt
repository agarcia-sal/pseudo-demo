Convert the given source code into clear, concise, and high-level pseudocode that preserves all original function and class names along with their exact hierarchical and nesting relationships. Use only full uppercase keywords such as FUNCTION, CLASS, RETURN, IF, ELSE, FOR, WHILE, SET, INCREMENT, DECREMENT, APPEND, CONCATENATE, CALL, and similar—with no symbols, abbreviations, or shorthand—to express all logic and operations. Express expressions and arithmetic in natural language terms (e.g., PLUS, MINUS, MULTIPLY, DIVIDE, MODULO) but keep identifiers and literals verbatim as in the original code. Represent control structures and block scope exclusively through consistent indentation; do not add any additional formatting, delimiters, empty lines, or comments. Keep the pseudocode at a high level, abstracting only to the extent that every pseudocode line directly corresponds to an unambiguous construct or statement in the original code without loss of meaning or alteration of intent. Do not include any explanation, notes, comments, or metadata—output strictly the pseudocode text and nothing else. Ensure the pseudocode can be seamlessly and deterministically translated back into executable code.