FUNCTION sort_numbers(numbers: str) RETURNS str
    SET value_map TO DICTIONARY WITH ELEMENTS
        'zero' EQUALS 0,
        'one' EQUALS 1,
        'two' EQUALS 2,
        'three' EQUALS 3,
        'four' EQUALS 4,
        'five' EQUALS 5,
        'six' EQUALS 6,
        'seven' EQUALS 7,
        'eight' EQUALS 8,
        'nine' EQUALS 9
    SET split_numbers TO LIST WITH ELEMENTS EMPTY
    SET index TO 0
    CALL split_numbers.APPEND EMPTY STRING
    WHILE index LESS THAN LENGTH OF numbers
        SET current_char TO CHARACTER AT POSITION index IN numbers
        IF current_char EQUALS SPACE
            IF LAST ELEMENT OF split_numbers NOT EQUAL TO EMPTY STRING
                CALL split_numbers.APPEND EMPTY STRING
            END IF
        ELSE
            SET last_index TO LENGTH OF split_numbers MINUS 1
            SET last_element TO ELEMENT AT last_index IN split_numbers
            SET updated_element TO CONCATENATE last_element PLUS current_char
            SET ELEMENT AT last_index IN split_numbers TO updated_element
        END IF
        INCREMENT index BY 1
    END WHILE
    SET filtered_numbers TO LIST WITH ELEMENTS EMPTY
    SET i TO 0
    WHILE i LESS THAN LENGTH OF split_numbers
        SET item TO ELEMENT AT i IN split_numbers
        IF item NOT EQUAL TO EMPTY STRING
            CALL filtered_numbers.APPEND item
        END IF
        INCREMENT i BY 1
    END WHILE
    SET sorted_numbers TO LIST WITH ELEMENTS EMPTY
    SET j TO 0
    WHILE j LESS THAN LENGTH OF filtered_numbers
        INCREMENT j BY 1
    END WHILE
    FOR EACH element IN filtered_numbers
        SET inserted TO FALSE
        SET k TO 0
        WHILE k LESS THAN LENGTH OF sorted_numbers AND inserted EQUALS FALSE
            IF value_map[element] LESS THAN value_map[sorted_numbers[k]]
                INSERT element INTO sorted_numbers AT POSITION k
                SET inserted TO TRUE
            END IF
            INCREMENT k BY 1
        END WHILE
        IF inserted EQUALS FALSE
            CALL sorted_numbers.APPEND element
        END IF
    END FOR
    SET result TO EMPTY STRING
    SET m TO 0
    WHILE m LESS THAN LENGTH OF sorted_numbers
        IF m GREATER THAN 0
            SET result TO CONCATENATE result PLUS SPACE PLUS sorted_numbers[m]
        ELSE
            SET result TO sorted_numbers[m]
        END IF
        INCREMENT m BY 1
    END WHILE
    RETURN result