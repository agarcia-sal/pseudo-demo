FUNCTION sort_numbers(numbers: STR) RETURNS STR
    SET value_map TO DICTIONARY WITH KEYS AND VALUES:
        'zero' TO 0,
        'one' TO 1,
        'two' TO 2,
        'three' TO 3,
        'four' TO 4,
        'five' TO 5,
        'six' TO 6,
        'seven' TO 7,
        'eight' TO 8,
        'nine' TO 9
    SET split_numbers TO LIST WITH ELEMENTS EMPTY
    SET index TO 0
    WHILE index LESS THAN LENGTH OF numbers
        SET current_char TO CHARACTER AT POSITION index IN numbers
        IF current_char EQUALS ' '
            APPEND EMPTY STRING TO split_numbers
        ELSE
            IF LENGTH OF split_numbers EQUALS 0
                APPEND EMPTY STRING TO split_numbers
            SET last_index TO LENGTH OF split_numbers MINUS 1
            SET split_numbers[last_index] TO CONCATENATE split_numbers[last_index] PLUS current_char
        INCREMENT index BY 1
    SET filtered_numbers TO LIST WITH ELEMENTS EMPTY
    SET idx TO 0
    WHILE idx LESS THAN LENGTH OF split_numbers
        IF split_numbers[idx] NOT EQUAL TO EMPTY STRING
            APPEND split_numbers[idx] TO filtered_numbers
        INCREMENT idx BY 1
    SET sorted_numbers TO LIST WITH ELEMENTS EMPTY
    SET i TO 0
    WHILE i LESS THAN LENGTH OF filtered_numbers
        SET inserted TO FALSE
        SET j TO 0
        WHILE j LESS THAN LENGTH OF sorted_numbers
            IF value_map[filtered_numbers[i]] LESS THAN value_map[sorted_numbers[j]]
                INSERT filtered_numbers[i] INTO sorted_numbers AT POSITION j
                SET inserted TO TRUE
                BREAK
            INCREMENT j BY 1
        IF inserted EQUALS FALSE
            APPEND filtered_numbers[i] TO sorted_numbers
        INCREMENT i BY 1
    SET result TO EMPTY STRING
    SET k TO 0
    WHILE k LESS THAN LENGTH OF sorted_numbers
        IF k GREATER THAN 0
            SET result TO CONCATENATE result PLUS ' '
        SET result TO CONCATENATE result PLUS sorted_numbers[k]
        INCREMENT k BY 1
    RETURN result