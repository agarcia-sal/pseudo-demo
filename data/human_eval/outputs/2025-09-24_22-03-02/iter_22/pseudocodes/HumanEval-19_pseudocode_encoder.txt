FUNCTION sort_numbers(numbers: str) RETURNS str
    SET value_map TO DICTIONARY WITH KEYS AND VALUES:
        'zero' EQUALS 0
        'one' EQUALS 1
        'two' EQUALS 2
        'three' EQUALS 3
        'four' EQUALS 4
        'five' EQUALS 5
        'six' EQUALS 6
        'seven' EQUALS 7
        'eight' EQUALS 8
        'nine' EQUALS 9
    SET split_numbers TO EMPTY LIST OF str
    SET temp_list TO CALL numbers SPLIT WITH ARGUMENTS ' '
    FOR index FROM 0 TO LENGTH OF temp_list MINUS 1
        IF temp_list[index] NOT EQUAL TO EMPTY STRING
            APPEND temp_list[index] TO split_numbers
        END IF
    END FOR
    SET sorted_numbers TO EMPTY LIST OF str
    SET key_indices TO EMPTY LIST OF INTEGER
    FOR index FROM 0 TO LENGTH OF split_numbers MINUS 1
        APPEND value_map[split_numbers[index]] TO key_indices
    END FOR
    SET indices TO LIST OF INTEGERS FROM 0 TO LENGTH OF split_numbers MINUS 1
    FOR i FROM 0 TO LENGTH OF indices MINUS 2
        FOR j FROM 0 TO LENGTH OF indices MINUS 2 MINUS i
            IF key_indices[indices[j]] GREATER THAN key_indices[indices[j PLUS 1]]
                SET temp TO indices[j]
                SET indices[j] TO indices[j PLUS 1]
                SET indices[j PLUS 1] TO temp
            END IF
        END FOR
    END FOR
    FOR k FROM 0 TO LENGTH OF indices MINUS 1
        APPEND split_numbers[indices[k]] TO sorted_numbers
    END FOR
    SET result TO EMPTY STRING
    FOR l FROM 0 TO LENGTH OF sorted_numbers MINUS 1
        SET result TO result PLUS sorted_numbers[l]
        IF l LESS THAN LENGTH OF sorted_numbers MINUS 1
            SET result TO result PLUS ' '
        END IF
    END FOR
    RETURN result
END FUNCTION