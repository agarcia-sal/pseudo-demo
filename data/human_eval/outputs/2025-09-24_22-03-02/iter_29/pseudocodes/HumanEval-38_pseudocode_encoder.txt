FUNCTION encode_cyclic WITH PARAMETER s AS STRING
    SET groups TO EMPTY LIST
    SET groups_count TO (CALL len WITH ARGUMENT s PLUS 2) DIVIDED BY 3
    FOR i FROM 0 TO groups_count MINUS 1
        SET start_index TO 3 MULTIPLY i
        SET end_index TO CALL len WITH ARGUMENT s
        IF (3 MULTIPLY i PLUS 3) LESS THAN end_index
            SET end_index TO 3 MULTIPLY i PLUS 3
        END IF
        SET group TO EMPTY STRING
        FOR j FROM start_index TO end_index MINUS 1
            SET group TO CONCATENATE group AND s[j]
        END FOR
        APPEND group TO groups
    END FOR
    SET new_groups TO EMPTY LIST
    FOR k FROM 0 TO CALL len WITH ARGUMENT groups MINUS 1
        SET group TO groups[k]
        IF CALL len WITH ARGUMENT group EQUALS 3
            SET cycled_group TO EMPTY STRING
            FOR m FROM 1 TO 2
                SET cycled_group TO CONCATENATE cycled_group AND group[m]
            END FOR
            SET cycled_group TO CONCATENATE cycled_group AND group[0]
            APPEND cycled_group TO new_groups
        ELSE
            APPEND group TO new_groups
        END IF
    END FOR
    SET result TO EMPTY STRING
    FOR n FROM 0 TO CALL len WITH ARGUMENT new_groups MINUS 1
        SET result TO CONCATENATE result AND new_groups[n]
    END FOR
    RETURN result
END FUNCTION

FUNCTION decode_cyclic WITH PARAMETER s AS STRING
    SET first_call_result TO CALL encode_cyclic WITH ARGUMENT s
    SET second_call_result TO CALL encode_cyclic WITH ARGUMENT first_call_result
    RETURN second_call_result
END FUNCTION