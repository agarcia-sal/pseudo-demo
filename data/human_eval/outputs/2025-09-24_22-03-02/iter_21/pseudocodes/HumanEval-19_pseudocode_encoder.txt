FUNCTION sort_numbers(numbers: str) RETURNS str
    SET value_map TO DICTIONARY WITH ELEMENTS
        KEY 'zero' VALUE 0,
        KEY 'one' VALUE 1,
        KEY 'two' VALUE 2,
        KEY 'three' VALUE 3,
        KEY 'four' VALUE 4,
        KEY 'five' VALUE 5,
        KEY 'six' VALUE 6,
        KEY 'seven' VALUE 7,
        KEY 'eight' VALUE 8,
        KEY 'nine' VALUE 9
    SET split_numbers TO CALL numbers.split WITH ARGUMENTS ' '
    SET filtered_numbers TO LIST WITH ELEMENTS EMPTY
    FOR EACH index FROM 0 TO LENGTH OF split_numbers MINUS 1 INCLUSIVE
        IF split_numbers AT index NOT EQUALS EMPTY
            APPEND split_numbers AT index TO filtered_numbers
    DEFINE FUNCTION key_function(x: str) RETURNS INT
        RETURN value_map AT x
    SET sorted_numbers TO CALL filtered_numbers.sorted WITH ARGUMENTS key_function
    SET result_string TO EMPTY STRING
    FOR EACH index FROM 0 TO LENGTH OF sorted_numbers MINUS 1 INCLUSIVE
        CONCATENATE result_string WITH sorted_numbers AT index
        IF index NOT EQUALS LENGTH OF sorted_numbers MINUS 1
            CONCATENATE result_string WITH ' '
    RETURN result_string