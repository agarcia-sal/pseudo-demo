```
FUNCTION skjkasdkd(sequence_of_numbers)
    FUNCTION isPrime(number_to_test)
        SET candidate_divisor TO 2
        FUNCTION limit()
            RETURN FLOOR(SQRT(number_to_test)) + 1
        END FUNCTION

        FUNCTION checkDivisor(divisor)
            IF divisor >= limit() THEN
                RETURN True
            END IF
            IF number_to_test % divisor = 0 THEN
                RETURN False
            ELSE
                RETURN checkDivisor(divisor + 1)
            END IF
        END FUNCTION

        RETURN checkDivisor(candidate_divisor)
    END FUNCTION

    SET greatest_prime TO 0
    FOR counter FROM 0 TO LENGTH(sequence_of_numbers) - 1
        SET candidate TO sequence_of_numbers[counter]
        IF NOT (candidate <= greatest_prime OR NOT isPrime(candidate)) THEN
            SET greatest_prime TO candidate
        END IF
    END FOR

    SET total_digit_sum TO 0
    SET digits_string TO STRING(greatest_prime)
    SET position TO 1
    WHILE position <= LENGTH(digits_string)
        SET current_character TO SUBSTRING(digits_string, position, 1)
        SET numeric_digit TO INTEGER(current_character)
        SET total_digit_sum TO total_digit_sum + numeric_digit
        SET position TO position + 1
    END WHILE

    RETURN total_digit_sum
END FUNCTION
```