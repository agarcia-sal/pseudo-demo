```
FUNCTION even_odd_palindrome(limit)
    FUNCTION is_palindrome(value)
        DECLARE str_val = CONVERT value TO STRING
        DECLARE reversed_str = EMPTY STRING
        DECLARE idx = LENGTH OF str_val - 1

        WHILE idx >= 0 DO
            APPEND str_val[idx] TO reversed_str
            DECREMENT idx BY 1
        END WHILE

        IF str_val IS EQUAL TO reversed_str THEN
            RETURN TRUE
        ELSE
            RETURN FALSE
        END IF
    END FUNCTION

    DECLARE count_evens = 0
    DECLARE count_odds = 0

    DECLARE current = 1
    WHILE current <= limit DO
        DECLARE palindrome_check = is_palindrome(current)

        IF palindrome_check THEN
            IF current & 1 = 1 THEN    # use bitwise check for odd
                count_odds = count_odds + 1
            ELSE
                count_evens = count_evens + 1
            END IF
        END IF
        current = current + 1
    END WHILE

    RETURN (count_evens, count_odds)
END FUNCTION
```