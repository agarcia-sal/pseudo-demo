```
FUNCTION parse_nested_parens(parentheses_string)
	def parse_paren_group(group_chars)
		max_depth_val <- 0
		nesting_level <- 0
		idx <- 0
		WHILE idx < LENGTH(group_chars)
			char_symbol <- group_chars[idx]
			SWITCH char_symbol
				CASE '(':
					nesting_level <- nesting_level + 1
					IF nesting_level > max_depth_val THEN
						max_depth_val <- nesting_level
					END IF
				DEFAULT:
					nesting_level <- nesting_level - 1
			END SWITCH
			idx <- idx + 1
		END WHILE
		RETURN max_depth_val
	END FUNCTION

	sequence_groups <- []
	start_index <- 0
	for i <- 0 TO LENGTH(parentheses_string) DO
		if i = LENGTH(parentheses_string) OR parentheses_string[i] = ' ' THEN
			segment <- ""
			for j <- start_index TO i - 1 DO
				segment <- segment + parentheses_string[j]
			end for
			if segment â‰  "" THEN
				sequence_groups.APPEND(segment)
			end if
			start_index <- i + 1
		end if
	end for

	depth_results <- []
	for group_str IN sequence_groups DO
		depth_results.ADD(parse_paren_group(group_str))
	end for

	RETURN depth_results
END FUNCTION
```