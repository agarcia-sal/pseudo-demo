```
FUNCTION is_nested(input_str)
  DECLARE start_indices AS new list
  DECLARE end_indices AS new list
  DECLARE idx AS 0
  WHILE idx < LENGTH(input_str)
    IF input_str[idx] == '[' THEN
      start_indices.ADD(idx)
    ELSE
      end_indices.PUSH_BACK(idx)
    ENDIF
    idx = idx + 1
  ENDWHILE
  end_indices.REVERSE()

  DECLARE matched_pairs AS 0
  DECLARE end_pointer AS 0
  DECLARE total_end AS LENGTH(end_indices)
  FOR EACH open_pos IN start_indices DO
    IF end_pointer < total_end THEN
      IF open_pos < end_indices[end_pointer] THEN
        matched_pairs = matched_pairs + 1
        end_pointer = end_pointer + 1
      ENDIF
    ENDIF
  ENDFOR

  IF matched_pairs >= 2 THEN
    RETURN TRUE
  ELSE
    RETURN FALSE
  ENDIF
END FUNCTION
```