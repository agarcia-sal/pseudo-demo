```
FUNCTION anti_shuffle(input_string)
    INITIALIZE words_array AS input_string SPLIT BY " "
    DECLARE rearranged_words AS NEW EMPTY LIST
    INDEX counter ASSIGNED 0
    WHILE counter < LENGTH OF words_array
        ASSIGN current_word TO words_array[counter]
        DECLARE char_array AS ARRAY OF CHARACTERS FROM current_word
        SET swapped TO TRUE
        WHILE swapped
            SET swapped TO FALSE
            FOR i FROM 0 TO LENGTH OF char_array - 2
                IF char_array[i] > char_array[i + 1] THEN
                    SWAP char_array[i] WITH char_array[i + 1]
                    SET swapped TO TRUE
                END IF
            END FOR
        END WHILE
        DECLARE assembled_word AS EMPTY STRING
        FOR EACH ch IN char_array
            SET assembled_word TO assembled_word CONCATENATED WITH ch
        END FOR
        APPEND assembled_word TO rearranged_words
        INCREMENT counter BY 1
    END WHILE
    DECLARE output_string AS ""
    FOR pos FROM 0 TO LENGTH OF rearranged_words - 1
        SET output_string TO output_string CONCAT rearranged_words[pos]
        IF pos < LENGTH OF rearranged_words - 1 THEN
            SET output_string TO output_string CONCAT " "
        END IF
    END FOR
    RETURN output_string
END FUNCTION
```