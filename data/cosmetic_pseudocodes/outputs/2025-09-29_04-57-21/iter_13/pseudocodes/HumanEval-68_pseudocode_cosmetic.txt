```
FUNCTION pluck(array_of_nodes)
    DEFINE find_even_numbers(collection, acc) AS
        IF collection IS EMPTY THEN
            RETURN acc
        END IF
        LET head = FIRST ELEMENT OF collection
        LET tail = ALL ELEMENTS OF collection EXCEPT FIRST
        IF head MOD 2 EQUALS 0 THEN
            RETURN find_even_numbers(tail, acc APPEND head)
        ELSE
            RETURN find_even_numbers(tail, acc)
        END IF
    END DEFINE
    
    LET evens_list = find_even_numbers(array_of_nodes, EMPTY LIST)
    IF evens_list IS EMPTY THEN
        RETURN EMPTY LIST
    END IF

    LET minimum_even = evens_list[0]
    FOR each element IN evens_list FROM SECOND ELEMENT ONWARDS
        IF element < minimum_even THEN
            minimum_even = element
        END IF
    END FOR

    LET original_position = -1
    LET pos = 0
    WHILE pos < LENGTH OF array_of_nodes DO
        IF array_of_nodes[pos] EQUALS minimum_even THEN
            original_position = pos
            BREAK
        END IF
        pos = pos + 1
    END WHILE

    RETURN LIST WITH minimum_even AND original_position
END FUNCTION
```