```
FUNCTION poly(list_of_coefficients, point)
    SET accumulator TO 0
    DEFINE HELPER(index, coeff) 
        SET accumulator TO accumulator PLUS coeff TIMES (point RAISED TO index)
    END HELPER
    FOR EACH index, coeff IN ENUMERATE(list_of_coefficients)
        CALL HELPER(index, coeff)
    END FOR
    RETURN accumulator
END FUNCTION

FUNCTION find_zero(list_of_coefficients)
    SET lower_bound TO -1.0
    SET upper_bound TO 1.0

    WHILE TRUE
        IF poly(list_of_coefficients, lower_bound) TIMES poly(list_of_coefficients, upper_bound) <= 0
            BREAK
        END IF
        SET lower_bound TO lower_bound TIMES 2.0
        SET upper_bound TO upper_bound TIMES 2.0
    END WHILE

    DEFINE RECURSIVE FUNCTION bisect(low, high)
        IF (high MINUS low) <= 1e-10
            RETURN low
        END IF
        SET midpoint TO (low PLUS high) DIVIDED BY 2.0
        IF poly(list_of_coefficients, midpoint) TIMES poly(list_of_coefficients, low) > 0
            RETURN bisect(midpoint, high)
        ELSE
            RETURN bisect(low, midpoint)
        END IF
    END FUNCTION

    RETURN bisect(lower_bound, upper_bound)
END FUNCTION
```