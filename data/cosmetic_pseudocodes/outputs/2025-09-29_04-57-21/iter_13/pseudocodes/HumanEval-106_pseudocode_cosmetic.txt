```
FUNCTION f(integer_n)
    INITIALIZE output_sequence AS empty list

    FUNCTION compute_factorial(current_num, accumulator)
        IF current_num > 0 THEN
            RETURN compute_factorial(current_num - 1, accumulator * current_num)
        ELSE
            RETURN accumulator
        END IF
    END FUNCTION

    FUNCTION compute_sum(limit)
        RETURN (limit * (limit + 1)) / 2
    END FUNCTION

    PROCEDURE process(index)
        IF index > integer_n THEN
            RETURN
        END IF

        IF (index MOD 2) â‰  1 THEN
            LET factorial_result BE compute_factorial(index, 1)
            output_sequence APPEND factorial_result
            process(index + 1)
            RETURN
        END IF

        LET sum_result BE compute_sum(index)
        output_sequence APPEND sum_result
        process(index + 1)
    END PROCEDURE

    CALL process(1)
    RETURN output_sequence
END FUNCTION
```