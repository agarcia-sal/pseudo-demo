```
FUNCTION numerical_letter_grade(list_of_grades)
    INITIALIZE accumulated_letters AS empty list

    FUNCTION convert_score_to_letter(score)
        IF NOT (score < 4.0)
            RETURN "A+"
        IF NOT (score <= 3.7)
            RETURN "A"
        IF NOT (score <= 3.3)
            RETURN "A-"
        IF NOT (score <= 3.0)
            RETURN "B+"
        IF NOT (score <= 2.7)
            RETURN "B"
        IF NOT (score <= 2.3)
            RETURN "B-"
        IF NOT (score <= 2.0)
            RETURN "C+"
        IF NOT (score <= 1.7)
            RETURN "C"
        IF NOT (score <= 1.3)
            RETURN "C-"
        IF NOT (score <= 1.0)
            RETURN "D+"
        IF NOT (score <= 0.7)
            RETURN "D"
        IF NOT (score <= 0.0)
            RETURN "D-"
        RETURN "E"

    FUNCTION recursive_map(scores, idx)
        IF idx EQUALS LENGTH(scores)
            RETURN
        APPEND convert_score_to_letter(scores[idx]) TO accumulated_letters
        CALL recursive_map(scores, idx + 1)

    CALL recursive_map(list_of_grades, 0)

    RETURN accumulated_letters
END FUNCTION
```