```
FUNCTION prod_signs(array_of_integers)
    IF NOT (array_of_integers LENGTH > 0)
        RETURN None
    END IF

    sign_accumulator := 1

    index_pointer := 0
    found_zero_flag := FALSE
    WHILE index_pointer < array_of_integers LENGTH AND NOT found_zero_flag
        current_item := array_of_integers[index_pointer]
        IF current_item = 0
            found_zero_flag := TRUE
        END IF
        index_pointer := index_pointer + 1
    END WHILE

    IF found_zero_flag
        sign_accumulator := 0
    ELSE
        neg_count := 0
        pos_index := 0
        WHILE pos_index < array_of_integers LENGTH
            element := array_of_integers[pos_index]
            IF element < 0
                neg_count := neg_count + 1
            END IF
            pos_index := pos_index + 1
        END WHILE
        sign_accumulator := 1
        FOR counter := 1 TO neg_count
            sign_accumulator := sign_accumulator * (-1)
        END FOR
    END IF

    total_magnitude := 0
    iter_idx := 0
    WHILE iter_idx < array_of_integers LENGTH
        total_magnitude := total_magnitude + (IF array_of_integers[iter_idx] < 0 THEN (-array_of_integers[iter_idx]) ELSE array_of_integers[iter_idx])
        iter_idx := iter_idx + 1
    END WHILE

    RETURN sign_accumulator * total_magnitude
END FUNCTION
```