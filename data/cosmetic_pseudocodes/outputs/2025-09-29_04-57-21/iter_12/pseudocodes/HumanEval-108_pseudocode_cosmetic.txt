```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET multiplier_sign TO 1
        IF NOT (integer_value >= 0) THEN
            SET integer_value TO 0 - integer_value
            SET multiplier_sign TO 0 - 1
        END IF
        SET digits_chars TO TO_STRING(integer_value)
        SET digits_array TO EMPTY LIST
        SET index_counter TO 0
        WHILE index_counter LESS THAN LENGTH OF digits_chars
            APPEND TO digits_array INTEGER VALUE OF digits_chars[index_counter]
            SET index_counter TO index_counter + 1
        END WHILE
        SET digits_array[0] TO digits_array[0] * multiplier_sign
        SET total_digits_sum TO 0
        FOR each digit_value IN digits_array
            SET total_digits_sum TO total_digits_sum + digit_value
        END FOR
        RETURN total_digits_sum
    END FUNCTION

    SET sums_collection TO EMPTY LIST
    SET pos TO 0
    WHILE pos LESS THAN LENGTH OF array_of_integers
        SET current_num TO array_of_integers[pos]
        SET calculated_sum TO digits_sum(current_num)
        APPEND calculated_sum TO sums_collection
        SET pos TO pos + 1
    END WHILE

    SET positive_sums TO EMPTY LIST
    SET idx TO 0
    WHILE idx LESS THAN LENGTH OF sums_collection
        SET candidate_value TO sums_collection[idx]
        IF candidate_value > 0 THEN
            APPEND candidate_value TO positive_sums
        END IF
        SET idx TO idx + 1
    END WHILE

    RETURN LENGTH OF positive_sums
END FUNCTION
```