```
FUNCTION encode(message)
    DECLARE vowelChars AS "aeiouAEIOU"
    DECLARE shiftedVowels AS EMPTY MAP
    DECLARE idx AS INTEGER INITIALIZED TO 0
    WHILE idx < LENGTH(vowelChars)
        DECLARE originalChar AS CHAR ASSIGNED vowelChars[idx]
        DECLARE incrementedChar AS CHAR ASSIGNED CHAR_FROM_ASCII(ASCII_OF(originalChar) + 2)
        shiftedVowels[originalChar] = incrementedChar
        idx = idx + 1
    END WHILE

    DECLARE swappedMessage AS STRING ASSIGNED EMPTY_STRING
    DECLARE position AS INTEGER INITIALIZED TO 0
    WHILE position < LENGTH(message)
        DECLARE currentChar AS CHAR ASSIGNED message[position]
        IF currentChar >= 'A' AND currentChar <= 'Z' THEN
            swappedMessage = swappedMessage + TO_LOWERCASE(currentChar)
        ELSE IF currentChar >= 'a' AND currentChar <= 'z' THEN
            swappedMessage = swappedMessage + TO_UPPERCASE(currentChar)
        ELSE
            swappedMessage = swappedMessage + currentChar
        END IF
        position = position + 1
    END WHILE

    DECLARE output AS STRING ASSIGNED EMPTY_STRING
    DECLARE characterIterator AS INTEGER INITIALIZED TO 0
    WHILE characterIterator < LENGTH(swappedMessage)
        DECLARE charAtPos AS CHAR ASSIGNED swappedMessage[characterIterator]
        IF CONTAINS_KEY(shiftedVowels, charAtPos) THEN
            output = output + shiftedVowels[charAtPos]
        ELSE
            output = output + charAtPos
        END IF
        characterIterator = characterIterator + 1
    END WHILE

    RETURN output
END FUNCTION
```