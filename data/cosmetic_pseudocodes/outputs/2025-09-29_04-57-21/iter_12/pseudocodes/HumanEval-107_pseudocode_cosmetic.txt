```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        DEFINE str_num AS TO_STRING(number)
        DEFINE reversed_str AS EMPTY_STRING
        DEFINE idx AS LENGTH(str_num) - 1

        WHILE idx >= 0
            SET reversed_str TO CONCATENATE(reversed_str, str_num[idx])
            DECREMENT idx BY 1
        END WHILE

        RETURN (str_num == reversed_str)
    END FUNCTION

    SET count_even_palindromes TO 0
    SET count_odd_palindromes TO 0

    SET current_val TO 1
    WHILE current_val <= n
        IF NOT (current_val MOD 2 != 0 AND is_palindrome(current_val))
            IF (current_val MOD 2) == 0 AND is_palindrome(current_val)
                SET count_even_palindromes TO count_even_palindromes + 1
            END IF
        ELSE
            SET count_odd_palindromes TO count_odd_palindromes + 1
        END IF
        SET current_val TO current_val + 1
    END WHILE

    RETURN (count_even_palindromes, count_odd_palindromes)
END FUNCTION
```