```
FUNCTION poly(list_of_coefficients, point)
    DECLARE result := 0
    DECLARE index := 0
    WHILE index < LENGTH(list_of_coefficients)
        LET term := list_of_coefficients[index] * (point ^ index)
        SET result := result + term
        SET index := index + 1
    END WHILE
    RETURN result
END FUNCTION

FUNCTION find_zero(list_of_coefficients)
    DECLARE lower_bound := -1.0
    DECLARE upper_bound := 1.0

    WHILE poly(list_of_coefficients, lower_bound) * poly(list_of_coefficients, upper_bound) > 0
        SET lower_bound := lower_bound * 2.0
        SET upper_bound := upper_bound * 2.0
    END WHILE

    WHILE (upper_bound - lower_bound) > 0.0000000001
        DECLARE midpoint := (upper_bound + lower_bound) / 2.0
        IF poly(list_of_coefficients, midpoint) * poly(list_of_coefficients, lower_bound) <= 0
            SET upper_bound := midpoint
        ELSE
            SET lower_bound := midpoint
        END IF
    END WHILE

    RETURN lower_bound
END FUNCTION
```