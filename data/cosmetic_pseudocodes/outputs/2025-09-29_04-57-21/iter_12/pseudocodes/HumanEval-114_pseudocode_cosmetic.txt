```
FUNCTION minSubArraySum(list_of_integers)
    LET curr_total = 0
    LET max_total = 0

    LET idx = 0
    WHILE idx < LENGTH(list_of_integers)
        LET current_value = list_of_integers[idx]
        LET inverted_val = 0 - current_value
        LET updated_total = curr_total + inverted_val

        IF updated_total >= 0 THEN
            curr_total = updated_total
        ELSE
            curr_total = 0
        END IF

        IF curr_total > max_total THEN
            max_total = curr_total
        END IF

        idx = idx + 1
    END WHILE

    IF max_total == 0 THEN
        LET negated_values = EMPTY LIST
        FOR each element IN list_of_integers
            negated_values.ADD(0 - element)
        END FOR
        LET maximum_negated = negated_values[0]
        LET neg_idx = 1
        WHILE neg_idx < LENGTH(negated_values)
            IF negated_values[neg_idx] > maximum_negated THEN
                maximum_negated = negated_values[neg_idx]
            END IF
            neg_idx = neg_idx + 1
        END WHILE
        max_total = maximum_negated
    END IF

    LET min_sum = 0 - max_total
    RETURN min_sum
END FUNCTION
```