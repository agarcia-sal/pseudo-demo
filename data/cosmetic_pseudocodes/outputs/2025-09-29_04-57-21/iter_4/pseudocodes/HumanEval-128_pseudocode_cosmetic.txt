```
FUNCTION prod_signs(array_of_integers)
    IF NOT EXISTS element IN array_of_integers THEN
        RETURN None
    END IF

    DECLARE product_sign
    DECLARE negatives_qty

    DECLARE zero_found AS FALSE
    DECLARE position AS 0

    WHILE NOT zero_found AND position < LENGTH(array_of_integers)
        IF array_of_integers[position] = 0 THEN
            zero_found = TRUE
        ELSE
            position = position + 1
        END IF
    END WHILE

    IF zero_found THEN
        product_sign = 0
    ELSE
        negatives_qty = 0
        DECLARE idx AS 0
        WHILE idx < LENGTH(array_of_integers)
            IF array_of_integers[idx] < 0 THEN
                negatives_qty = negatives_qty + 1
            END IF
            idx = idx + 1
        END WHILE
        SET product_sign TO 1
        FOR counter FROM 1 TO negatives_qty DO
            product_sign = product_sign * (-1)
        END FOR
    END IF

    DECLARE total_magnitude AS 0
    DECLARE i AS 0
    WHILE i < LENGTH(array_of_integers)
        IF array_of_integers[i] < 0 THEN
            total_magnitude = total_magnitude - array_of_integers[i]
        ELSE
            total_magnitude = total_magnitude + array_of_integers[i]
        END IF
        i = i + 1
    END WHILE

    RETURN product_sign * total_magnitude
END FUNCTION
```