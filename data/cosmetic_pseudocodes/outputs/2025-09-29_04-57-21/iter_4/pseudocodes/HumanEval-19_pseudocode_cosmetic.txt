```
FUNCTION sort_numbers(string_of_number_words)
    DEFINE digitValues AS MAP WITH
        'zero' : 0,
        'one' : 1,
        'two' : 2,
        'three' : 3,
        'four' : 4,
        'five' : 5,
        'six' : 6,
        'seven' : 7,
        'eight' : 8,
        'nine' : 9
    INITIALIZE wordsCollection TO EMPTY LIST
    FOR EACH token IN SPLIT string_of_number_words USING ' '
        IF token != '' THEN
            APPEND token TO wordsCollection
    END FOR
    DEFINE comparator(a, b) AS
        RETURN (digitValues[a] > digitValues[b])
    INITIALIZE i TO 0
    WHILE i < LENGTH(wordsCollection) - 1
        INITIALIZE j TO 0
        WHILE j < LENGTH(wordsCollection) - i - 1
            IF comparator(wordsCollection[j], wordsCollection[j + 1]) THEN
                SWAP wordsCollection[j] WITH wordsCollection[j + 1]
            END IF
            INCREMENT j BY 1
        END WHILE
        INCREMENT i BY 1
    END WHILE
    INITIALIZE outputString TO EMPTY STRING
    INITIALIZE index TO 0
    WHILE index < LENGTH(wordsCollection)
        APPEND wordsCollection[index] TO outputString
        IF index < LENGTH(wordsCollection) - 1 THEN
            APPEND ' ' TO outputString
        END IF
        INCREMENT index BY 1
    END WHILE
    RETURN outputString
END FUNCTION
```