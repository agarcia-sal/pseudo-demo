```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p >= 2)
            RETURN False
        integer_limit <- MIN((integer_p - 1), (FLOOR(SQUARE_ROOT(integer_p)) + 1))
        iterator <- 2
        WHILE iterator <= integer_limit
            IF (integer_p MOD iterator) == 0
                RETURN False
            iterator <- iterator + 1
        RETURN True
    END FUNCTION

    list_fibonacci <- [0, 1]

    LOOP_FOREVER:
        last_index <- LENGTH(list_fibonacci) - 1
        new_fib_number <- list_fibonacci[last_index] + list_fibonacci[last_index - 1]
        ADD new_fib_number TO list_fibonacci

        IF is_prime(new_fib_number) == True
            integer_n <- integer_n - 1

        IF integer_n == 0
            RETURN new_fib_number
        GOTO LOOP_FOREVER
END FUNCTION
```