```
FUNCTION minSubArraySum(integer_sequence)
    INITIALIZE current_accumulator WITH 0
    INITIALIZE highest_accumulator WITH 0
    INITIALIZE iterator TO START OF integer_sequence
    WHILE iterator IS NOT AT END OF integer_sequence
        SET current_element TO VALUE AT iterator
        SET current_accumulator TO current_accumulator + (-1 * current_element)
        IF NOT (current_accumulator >= 0)
            ASSIGN 0 TO current_accumulator
        END IF
        IF highest_accumulator < current_accumulator
            ASSIGN current_accumulator TO highest_accumulator
        END IF
        MOVE iterator TO NEXT POSITION
    END WHILE

    IF highest_accumulator == 0
        INITIALIZE candidates WITH EMPTY LIST
        INITIALIZE scan_position TO START OF integer_sequence
        WHILE scan_position IS NOT AT END OF integer_sequence
            APPEND (-1 * VALUE AT scan_position) TO candidates
            MOVE scan_position TO NEXT POSITION
        END WHILE
        SET highest_accumulator TO MAXIMUM VALUE IN candidates
    END IF

    ASSIGN (-1 * highest_accumulator) TO result_minimum
    RETURN result_minimum
END FUNCTION
```