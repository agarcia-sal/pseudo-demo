```
FUNCTION encode(message)
    DECLARE vowelChars AS "AEIOUaeiou"
    INITIALIZE vowelShiftMap AS EMPTY MAP
    FOR EACH character IN vowelChars
        COMPUTE shiftedChar ASCII AS ASCII(character) + 2
        ASSIGN vowelShiftMap[character] = CHARACTER REPRESENTED BY shiftedChar ASCII
    END FOR
    ASSIGN toggledMessage TO EMPTY STRING
    FOR EACH symbol IN message
        IF symbol IS UPPERCASE
            APPEND LOWERCASE OF symbol TO toggledMessage
        ELSE IF symbol IS LOWERCASE
            APPEND UPPERCASE OF symbol TO toggledMessage
        ELSE
            APPEND symbol TO toggledMessage
        END IF
    END FOR
    DECLARE encodedMessage AS EMPTY STRING
    SET index TO 0
    WHILE index < LENGTH(toggledMessage)
        SET currentChar TO toggledMessage[index]
        IF currentChar EXISTS IN vowelShiftMap
            APPEND vowelShiftMap[currentChar] TO encodedMessage
        ELSE
            APPEND currentChar TO encodedMessage
        END IF
        INCREMENT index BY 1
    END WHILE
    RETURN encodedMessage
END FUNCTION
```