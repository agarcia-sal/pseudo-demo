```
FUNCTION histogram(test_string)
    INITIALIZE frequency_map AS empty dictionary
    SPLIT test_string INTO characters ON spaces INTO letters_sequence
    SET peak_frequency TO -1

    SET idx TO 0
    WHILE idx < LENGTH OF letters_sequence
        SET current_char TO letters_sequence[idx]
        IF current_char != "" THEN
            SET occurrence TO 0
            SET scan_index TO 0
            WHILE scan_index < LENGTH OF letters_sequence
                IF letters_sequence[scan_index] = current_char THEN
                    INCREMENT occurrence BY 1
                ENDIF
                INCREMENT scan_index BY 1
            ENDWHILE
            IF occurrence > peak_frequency THEN
                SET peak_frequency TO occurrence
            ENDIF
        ENDIF
        INCREMENT idx BY 1
    ENDWHILE

    IF peak_frequency > 0 THEN
        SET position TO 0
        WHILE position < LENGTH OF letters_sequence
            SET candidate TO letters_sequence[position]
            IF candidate != "" THEN
                SET count_check TO 0
                SET iterator_pos TO 0
                WHILE iterator_pos < LENGTH OF letters_sequence
                    IF letters_sequence[iterator_pos] = candidate THEN
                        INCREMENT count_check BY 1
                    ENDIF
                    INCREMENT iterator_pos BY 1
                ENDWHILE
                IF count_check = peak_frequency THEN
                    SET frequency_map[candidate] TO peak_frequency
                ENDIF
            ENDIF
            INCREMENT position BY 1
        ENDWHILE
    ENDIF

    RETURN frequency_map
END FUNCTION
```