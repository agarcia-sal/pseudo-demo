```
FUNCTION intersection(interval1, interval2)
    FUNCTION is_prime(candidate)
        IF NOT (candidate <> 1 AND candidate <> 0)
            RETURN False
        END IF
        IF candidate = 2 THEN
            RETURN True
        END IF
        SET divisor TO 2
        WHILE divisor < candidate
            IF candidate MOD divisor = 0 THEN
                RETURN False
            END IF
            SET divisor TO divisor + 1
        END WHILE
        RETURN True
    END FUNCTION

    SET lower_bound TO interval1[0]
    SET upper_bound TO interval1[1]
    SET other_lower TO interval2[0]
    SET other_upper TO interval2[1]

    IF lower_bound < other_lower THEN
        SET start_point TO other_lower
    ELSE
        SET start_point TO lower_bound
    END IF

    IF upper_bound > other_upper THEN
        SET end_point TO other_upper
    ELSE
        SET end_point TO upper_bound
    END IF

    SET overlap_length TO end_point - start_point
    IF (overlap_length > 0) AND (is_prime(overlap_length))
        RETURN "YES"
    ELSE
        RETURN "NO"
    END IF
END FUNCTION
```