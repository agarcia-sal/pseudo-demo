```
FUNCTION move_one_ball(input_numbers)
    IF input_numbers IS EMPTY
        RETURN True
    END IF

    DECLARE arranged_numbers AS SORTED COPY OF input_numbers IN ASCENDING ORDER
    DECLARE smallest_element AS input_numbers[0]
    DECLARE position_of_smallest AS 0

    DECLARE counter AS 1
    WHILE counter < LENGTH OF input_numbers
        IF input_numbers[counter] < smallest_element
            smallest_element = input_numbers[counter]
            position_of_smallest = counter
        END IF
        counter = counter + 1
    END WHILE

    DECLARE rotated_version AS EMPTY LIST
    DECLARE i AS 0
    WHILE i < LENGTH OF input_numbers
        DECLARE idx AS (position_of_smallest + i) MOD LENGTH OF input_numbers
        APPEND input_numbers[idx] TO rotated_version
        i = i + 1
    END WHILE

    DECLARE j AS 0
    WHILE j < LENGTH OF input_numbers
        IF NOT (rotated_version[j] = arranged_numbers[j])
            RETURN False
        END IF
        j = j + 1
    END WHILE

    RETURN True
END FUNCTION
```