```
FUNCTION is_sorted(list_of_numbers)
    DECLARE frequency_map AS dictionary INITIALIZED WITH EACH key FROM list_of_numbers MAPPED TO 0
    DECLARE idx AS integer SET TO 0
    WHILE idx < LENGTH(list_of_numbers)
        LET current_value BE list_of_numbers[idx]
        LET frequency_map[current_value] BE frequency_map[current_value] + 1
        SET idx TO idx + 1
    END WHILE

    DECLARE has_excess_duplicates AS boolean SET TO False
    FOR EACH key IN frequency_map
        IF frequency_map[key] > 2 THEN
            SET has_excess_duplicates TO True
            BREAK
        END IF
    END FOR

    IF has_excess_duplicates THEN
        RETURN False
    END IF

    DECLARE ptr AS integer SET TO 1
    WHILE ptr < LENGTH(list_of_numbers)
        IF NOT (list_of_numbers[ptr-1] <= list_of_numbers[ptr]) THEN
            RETURN False
        END IF
        SET ptr TO ptr + 1
    END WHILE

    RETURN True
END FUNCTION
```