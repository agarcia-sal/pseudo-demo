```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p >= 2)
            RETURN False
        SET divisor_candidate TO 2
        SET upper_limit TO MIN((FLOOR(SQRT(integer_p)) + 1), (integer_p - 1))
        WHILE divisor_candidate <= upper_limit
            IF NOT ((integer_p MOD divisor_candidate) != 0)
                RETURN False
            SET divisor_candidate TO divisor_candidate + 1
        RETURN True
    END FUNCTION

    SET fibonacci_sequence TO [0, 1]
    LOOP INDEFINITELY:
        SET last_index TO LEN(fibonacci_sequence) - 1
        SET next_fib TO fibonacci_sequence[last_index] + fibonacci_sequence[last_index - 1]
        APPEND next_fib TO fibonacci_sequence

        IF is_prime(fibonacci_sequence[LEN(fibonacci_sequence) - 1]) == True
            SET integer_n TO integer_n + (-1)
        
        IF integer_n == 0 THEN
            RETURN fibonacci_sequence[LEN(fibonacci_sequence) - 1]
END FUNCTION
```