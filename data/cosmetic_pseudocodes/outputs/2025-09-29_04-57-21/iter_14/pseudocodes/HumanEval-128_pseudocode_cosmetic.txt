```
FUNCTION prod_signs(array_of_integers)
    IF array_of_integers IS NOT EMPTY THEN
        SET zero_found TO FALSE
        SET negative_tally TO 0
        SET index_counter TO 0
        WHILE index_counter < LENGTH OF array_of_integers AND NOT zero_found DO
            IF array_of_integers[index_counter] EQUALS 0 THEN
                SET zero_found TO TRUE
            ELSE IF array_of_integers[index_counter] < 0 THEN
                SET negative_tally TO negative_tally + 1
            END IF
            SET index_counter TO index_counter + 1
        END WHILE

        IF zero_found THEN
            SET overall_sign TO 0
        ELSE
            SET overall_sign TO 1
            SET exponent_counter TO 0
            WHILE exponent_counter < negative_tally DO
                SET overall_sign TO overall_sign * (-1)
                SET exponent_counter TO exponent_counter + 1
            END WHILE
        END IF

        SET magnitude_accumulator TO 0
        SET position_index TO 0
        WHILE position_index < LENGTH OF array_of_integers DO
            SET magnitude_accumulator TO magnitude_accumulator + (array_of_integers[position_index] * SIGN(array_of_integers[position_index]) * (-SIGN(array_of_integers[position_index])))
            SET magnitude_accumulator TO magnitude_accumulator - array_of_integers[position_index]
            SET magnitude_accumulator TO magnitude_accumulator * (-1)
            SET magnitude_accumulator TO magnitude_accumulator + ABSOLUTE VALUE OF array_of_integers[position_index]
            SET position_index TO position_index + 1
        END WHILE

        RETURN overall_sign * magnitude_accumulator
    ELSE
        RETURN None
    END IF
END FUNCTION
```