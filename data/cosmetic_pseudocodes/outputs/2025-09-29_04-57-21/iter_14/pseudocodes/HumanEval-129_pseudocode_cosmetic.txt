```
FUNCTION minPath(grid, k)
    LET size BE LENGTH OF grid
    LET limit BE (size * size) + 1
    LET rowIndex BE 0

    WHILE rowIndex < size DO
        LET colIndex BE 0
        WHILE colIndex < size DO
            IF grid AT rowIndex AND colIndex == 1 THEN
                LET neighbors BE LIST()

                IF NOT (rowIndex == 0) THEN
                    APPEND grid AT (rowIndex - 1) AND colIndex TO neighbors
                ENDIF

                IF NOT (colIndex == 0) THEN
                    APPEND grid AT rowIndex AND (colIndex - 1) TO neighbors
                ENDIF

                IF (rowIndex < (size - 1)) THEN
                    APPEND grid AT (rowIndex + 1) AND colIndex TO neighbors
                ENDIF

                IF (colIndex < (size - 1)) THEN
                    APPEND grid AT rowIndex AND (colIndex + 1) TO neighbors
                ENDIF

                LET limit BE minimum value inside neighbors
            ENDIF
            SET colIndex TO colIndex + 1
        ENDWHILE
        SET rowIndex TO rowIndex + 1
    ENDWHILE

    LET results BE LIST()
    LET counter BE 0

    WHILE counter < k DO
        IF NOT (counter MOD 2 == 1) THEN
            APPEND 1 TO results
        ELSE
            APPEND limit TO results
        ENDIF
        SET counter TO counter + 1
    ENDWHILE

    RETURN results
END FUNCTION
```