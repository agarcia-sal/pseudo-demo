```
FUNCTION minSubArraySum(arr)
	temp_accumulator ← 0
	extracted_max ← 0
	pos ← 0
	LENGTH ← LENGTH(arr)
	WHILE pos < LENGTH DO
		element ← arr[pos]
		temp_accumulator ← temp_accumulator + (0 - element)
		IF NOT (temp_accumulator ≥ 0) THEN
			temp_accumulator ← 0
		END IF
		extracted_max ← IF extracted_max < temp_accumulator THEN temp_accumulator ELSE extracted_max
		pos ← pos + 1
	END WHILE

	IF extracted_max = 0 THEN
		idx ← 0
		local_max ← -inf
		WHILE idx < LENGTH DO
			candidate ← 0 - arr[idx]
			local_max ← IF local_max < candidate THEN candidate ELSE local_max
			idx ← idx + 1
		END WHILE
		extracted_max ← local_max
	END IF

	result ← 0 - extracted_max
	RETURN result
END FUNCTION
```