```
FUNCTION circular_shift(integer_x, integer_shift)
    DECLARE str_num AS STRING = "" + integer_x
    IF NOT (integer_shift <= LENGTH(str_num))
        DECLARE rev_str AS STRING = ""
        DECLARE index_rev AS INTEGER = LENGTH(str_num) - 1
        WHILE index_rev >= 0
            rev_str = rev_str + str_num[index_rev]
            index_rev = index_rev - 1
        END WHILE
        RETURN rev_str
    END IF

    DECLARE split_point AS INTEGER = LENGTH(str_num) - integer_shift
    DECLARE tail_part AS STRING = ""
    DECLARE head_part AS STRING = ""

    DECLARE pos AS INTEGER = split_point
    WHILE pos < LENGTH(str_num)
        tail_part = tail_part + str_num[pos]
        pos = pos + 1
    END WHILE

    DECLARE pos2 AS INTEGER = 0
    WHILE pos2 < split_point
        head_part = head_part + str_num[pos2]
        pos2 = pos2 + 1
    END WHILE

    RETURN tail_part + head_part
END FUNCTION
```