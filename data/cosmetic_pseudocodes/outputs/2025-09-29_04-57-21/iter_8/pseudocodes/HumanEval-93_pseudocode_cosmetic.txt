```
FUNCTION encode(text)
  lettersToSwitch ← "aeiouAEIOU"
  mappings ← EMPTY DICTIONARY
  idx ← 0
  WHILE idx < LENGTH(lettersToSwitch)
    ch ← lettersToSwitch[idx]
    mappings[ch] ← CHAR(ORD(ch) + 2)
    idx ← idx + 1
  END WHILE

  changedText ← ""
  pos ← 0
  WHILE pos < LENGTH(text)
    currentChar ← text[pos]
    IF currentChar IS LOWERCASE THEN
      toggledChar ← TO_UPPERCASE(currentChar)
    ELSE IF currentChar IS UPPERCASE THEN
      toggledChar ← TO_LOWERCASE(currentChar)
    ELSE
      toggledChar ← currentChar
    END IF
    changedText ← changedText + toggledChar
    pos ← pos + 1
  END WHILE

  result ← ""
  pointer ← 0
  WHILE pointer < LENGTH(changedText)
    item ← changedText[pointer]
    IF mappings CONTAINS KEY item THEN
      result ← result + mappings[item]
    ELSE
      result ← result + item
    END IF
    pointer ← pointer + 1
  END WHILE

  RETURN result
END FUNCTION
```