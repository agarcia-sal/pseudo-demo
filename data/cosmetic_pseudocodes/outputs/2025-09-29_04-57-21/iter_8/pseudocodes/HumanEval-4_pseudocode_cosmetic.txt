```
FUNCTION mean_absolute_deviation(list_of_numbers)
  LET count = 0
  LET sum_accumulator = 0
  WHILE count < LENGTH(list_of_numbers)
    sum_accumulator = sum_accumulator + list_of_numbers[count]
    count = count + 1
  END WHILE
  LET average = sum_accumulator * (1 / LENGTH(list_of_numbers))

  LET distance_accumulator = 0
  LET index = 0
  DO
    LET subtraction_result = list_of_numbers[index] - average
    LET positive_diff = subtraction_result
    IF positive_diff < 0 THEN
      positive_diff = 0 - positive_diff
    END IF
    distance_accumulator = distance_accumulator + positive_diff
    index = index + 1
  WHILE index < LENGTH(list_of_numbers)

  LET mad_result = distance_accumulator * (1 / LENGTH(list_of_numbers))
  RETURN mad_result
END FUNCTION
```