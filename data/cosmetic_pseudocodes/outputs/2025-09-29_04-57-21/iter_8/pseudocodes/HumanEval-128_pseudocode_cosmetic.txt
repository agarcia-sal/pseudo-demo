```
FUNCTION prod_signs(list_values)
    IF NOT EXISTS list_values OR SIZE(list_values) = 0 THEN
        RETURN None
    END IF

    DECLARE product_sign
    FOR element IN list_values DO
        IF element = 0 THEN
            product_sign = 0
            BREAK
        END IF
    END FOR

    IF NOT EXISTS product_sign THEN
        DECLARE negatives_count = 0
        SET index = 0
        WHILE index < SIZE(list_values) DO
            IF list_values[index] < 0 THEN
                negatives_count = negatives_count + 1
            END IF
            index = index + 1
        END WHILE
        product_sign = 1
        WHILE negatives_count > 0 DO
            product_sign = product_sign * (-1)
            negatives_count = negatives_count - 1
        END WHILE
    END IF

    DECLARE total_magnitude = 0
    SET pointer = 0
    WHILE pointer < SIZE(list_values) DO
        IF list_values[pointer] < 0 THEN
            total_magnitude = total_magnitude - list_values[pointer]
        ELSE
            total_magnitude = total_magnitude + list_values[pointer]
        END IF
        pointer = pointer + 1
    END WHILE

    RETURN product_sign * total_magnitude
END FUNCTION
```