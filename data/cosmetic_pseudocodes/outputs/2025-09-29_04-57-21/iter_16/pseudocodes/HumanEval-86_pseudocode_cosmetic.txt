```
FUNCTION anti_shuffle(input_string)
    LET words_collection = SPLIT input_string BY SPACE
    LET sorted_collection = []
    
    LET iterator = GET_ITERATOR(words_collection)
    WHILE HAS_NEXT(iterator)
        LET current_word = NEXT(iterator)
        LET chars_arr = CONVERT_TO_CHAR_ARRAY(current_word)
        
        // sort characters ascending by ASCII
        LET index_i = 0
        WHILE index_i < LENGTH(chars_arr) - 1
            LET index_j = index_i + 1
            WHILE index_j < LENGTH(chars_arr)
                IF chars_arr[index_i] > chars_arr[index_j] THEN
                    LET temp_char = chars_arr[index_i]
                    SET chars_arr[index_i] = chars_arr[index_j]
                    SET chars_arr[index_j] = temp_char
                END IF
                SET index_j = index_j + 1
            END WHILE
            SET index_i = index_i + 1
        END WHILE
        
        LET reconstructed_word = ""
        FOR EACH character IN chars_arr
            SET reconstructed_word = reconstructed_word + character
        END FOR
        
        APPEND reconstructed_word TO sorted_collection
    END WHILE
    
    LET output_str = ""
    LET first_flag = TRUE
    FOR EACH elem IN sorted_collection
        IF NOT first_flag THEN
            SET output_str = output_str + " "
        ELSE
            SET first_flag = FALSE
        END IF
        SET output_str = output_str + elem
    END FOR

    RETURN output_str
END FUNCTION
```