```pseudocode
FUNCTION encode_cyclic(input_string)
  SET segments TO []
  SET counter TO 0
  SET total_groups TO ((LENGTH(input_string) + 2) DIV 3)
  
  WHILE counter < total_groups
    LET start_pos = counter * 3
    LET end_pos = start_pos + 3
    IF end_pos > LENGTH(input_string)
      SET end_pos = LENGTH(input_string)
    ENDIF
    APPEND SUBSTRING(input_string, start_pos, end_pos) TO segments
    SET counter = counter + 1
  ENDWHILE

  SET transformed_segments TO []
  FOR EACH part IN segments
    IF NOT (LENGTH(part) <> 3)
      LET rotated = SUBSTRING(part, 1, LENGTH(part)) + SUBSTRING(part, 0, 1)
      APPEND rotated TO transformed_segments
    ELSE
      APPEND part TO transformed_segments
    ENDIF
  ENDFOR

  RETURN JOIN("", transformed_segments)
END FUNCTION

FUNCTION decode_cyclic(input_string)
  RETURN encode_cyclic(encode_cyclic(input_string))
END FUNCTION
```