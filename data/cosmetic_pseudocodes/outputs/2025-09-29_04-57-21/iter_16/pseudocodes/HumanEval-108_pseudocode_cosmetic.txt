```
FUNCTION count_nums(array_of_integers)
  FUNCTION digits_sum(integer_value)
    SET multiplier_sign TO 1
    IF 0 > integer_value THEN
      SET integer_value TO (-1) * integer_value
      SET multiplier_sign TO -1
    END IF

    SET digits_list TO MAP EACH char IN TO_CHAR_LIST(integer_value) TO TO_INT(char)
    SET digits_list[0] TO digits_list[0] * multiplier_sign

    RETURN REDUCE digits_list WITH (acc, val) -> acc + val INITIALIZED AS 0
  END FUNCTION

  SET sums_collection TO []
  SET iterator_elements TO ITERATE_OVER(array_of_integers)
  WHILE HAS_NEXT(iterator_elements)
    SET current_val TO NEXT(iterator_elements)
    SET sums_collection TO sums_collection + [digits_sum(current_val)]
  END WHILE

  SET positive_sums TO []
  FOR EACH item IN sums_collection
    IF NOT (item <= 0) THEN
      APPEND item TO positive_sums
    END IF
  END FOR

  RETURN COUNT(positive_sums)
END FUNCTION
```