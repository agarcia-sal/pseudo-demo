```
FUNCTION minPath(grid, k)
  LET lengthGrid BE LENGTH OF grid
  LET limitVal BE lengthGrid * lengthGrid + 1

  LET rowIndex BE 0
  WHILE rowIndex < lengthGrid DO
    LET colIndex BE 0
    WHILE colIndex < lengthGrid DO

      IF (grid[rowIndex][colIndex] == 1) THEN
        LET neighbors BE EMPTY LIST

        IF NOT (rowIndex == 0) THEN
          APPEND grid[rowIndex - 1][colIndex] TO neighbors
        ENDIF

        IF NOT (colIndex == 0) THEN
          APPEND grid[rowIndex][colIndex - 1] TO neighbors
        ENDIF

        IF NOT (rowIndex == lengthGrid - 1) THEN
          APPEND grid[rowIndex + 1][colIndex] TO neighbors
        ENDIF

        IF NOT (colIndex == lengthGrid - 1) THEN
          APPEND grid[rowIndex][colIndex + 1] TO neighbors
        ENDIF

        limitVal = neighbors[0]
        LET idx BE 1
        WHILE idx < LENGTH OF neighbors DO
          IF neighbors[idx] < limitVal THEN
            limitVal = neighbors[idx]
          ENDIF
          idx = idx + 1
        ENDWHILE
      ENDIF

      colIndex = colIndex + 1
    ENDWHILE
    rowIndex = rowIndex + 1
  ENDWHILE

  LET resultList BE EMPTY LIST
  LET counter BE 0
  WHILE counter < k DO
    IF (counter % 2) != 1 THEN
      APPEND 1 TO resultList
    ELSE
      APPEND limitVal TO resultList
    ENDIF
    counter = counter + 1
  ENDWHILE

  RETURN resultList
END FUNCTION
```