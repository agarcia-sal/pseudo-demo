```
FUNCTION f(integer_n)
    INITIALIZE outcomes TO []
    
    DEFINE FUNCTION compute_factorial(limit, current, acc)
        IF current > limit THEN
            RETURN acc
        ELSE
            RETURN compute_factorial(limit, current + 1, acc * current)
        END IF
    END FUNCTION
    
    DEFINE FUNCTION compute_sum(limit, current, total)
        IF current > limit THEN
            RETURN total
        ELSE
            RETURN compute_sum(limit, current + 1, total + current)
        END IF
    END FUNCTION

    SET iterator TO 1
    WHILE iterator <= integer_n DO
        IF NOT (iterator MOD 2 != 0) THEN
            SET factorial_result TO compute_factorial(iterator, 1, 1)
            APPEND factorial_result TO outcomes
        ELSE
            SET sum_result TO compute_sum(iterator, 1, 0)
            APPEND sum_result TO outcomes
        END IF
        INCREMENT iterator BY 1
    END WHILE

    RETURN outcomes
END FUNCTION
```