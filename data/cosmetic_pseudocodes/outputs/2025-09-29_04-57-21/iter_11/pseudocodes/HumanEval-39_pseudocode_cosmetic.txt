```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF 2 GREATER THAN integer_p
            RETURN False
        SET integer_q TO 2
        SET integer_limit TO (FLOOR(SQUARE_ROOT(integer_p)) + 1)
        SET integer_bound TO IF integer_limit LESS THAN integer_p THEN integer_limit ELSE (integer_p - 1)

        WHILE integer_q LESS THAN OR EQUAL TO integer_bound
            IF (integer_p MODULO integer_q) EQUALS 0
                RETURN False
            SET integer_q TO integer_q + 1
        RETURN True
    END FUNCTION

    SET sequence_fibs TO [0, 1]

    FUNCTION add_next_fib()
        SET next_val TO sequence_fibs[sequence_fibs.LENGTH - 1] + sequence_fibs[sequence_fibs.LENGTH - 2]
        APPEND next_val TO sequence_fibs
        RETURN next_val
    END FUNCTION

    LOOP FOREVER
        SET candidate TO add_next_fib()

        IF is_prime(candidate) IS NOT False
            SET integer_n TO integer_n - 1

        IF integer_n == 0
            RETURN candidate
END FUNCTION
```