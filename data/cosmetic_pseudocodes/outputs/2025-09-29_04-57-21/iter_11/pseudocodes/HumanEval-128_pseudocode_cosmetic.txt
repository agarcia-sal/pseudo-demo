```
FUNCTION prod_signs(array_of_integers)
    IF NOT (array_of_integers) THEN RETURN None END

    DECLARE sign_accumulator
    IF EXISTS element IN array_of_integers WHERE element == 0 THEN
        sign_accumulator := 0
    ELSE
        DECLARE negative_count := 0
        DECLARE idx := 0
        WHILE idx < LENGTH(array_of_integers) DO
            IF array_of_integers[idx] < 0 THEN negative_count := negative_count + 1 END
            idx := idx + 1
        END
        sign_accumulator := 1
        FOR i FROM 1 TO negative_count DO
            sign_accumulator := sign_accumulator * (-1)
        END
    END

    DECLARE magnitude_total := 0
    DECLARE iterator := 0
    WHILE iterator < LENGTH(array_of_integers) DO
        magnitude_total := magnitude_total + (array_of_integers[iterator] * ((array_of_integers[iterator] >= 0) - (array_of_integers[iterator] < 0)))
        iterator := iterator + 1
    END

    RETURN sign_accumulator * magnitude_total
END FUNCTION
```