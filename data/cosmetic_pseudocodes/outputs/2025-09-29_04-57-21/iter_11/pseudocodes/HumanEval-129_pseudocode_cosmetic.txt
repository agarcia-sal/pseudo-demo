```
FUNCTION minPath(grid, k)
    LET sizeVar BE LENGTH OF grid
    LET upperBound BE sizeVar * sizeVar + 1
    LET rowIndex BE 0
    WHILE rowIndex < sizeVar
        LET colIndex BE 0
        WHILE colIndex < sizeVar
            IF grid[rowIndex][colIndex] == 1 THEN
                LET neighboursAccum BE []
                IF NOT (rowIndex == 0) THEN
                    neighboursAccum APPEND grid[rowIndex - 1][colIndex]
                END IF
                IF NOT (colIndex == 0) THEN
                    neighboursAccum APPEND grid[rowIndex][colIndex - 1]
                END IF
                IF NOT (rowIndex == sizeVar - 1) THEN
                    neighboursAccum APPEND grid[rowIndex + 1][colIndex]
                END IF
                IF NOT (colIndex == sizeVar - 1) THEN
                    neighboursAccum APPEND grid[rowIndex][colIndex + 1]
                END IF
                LET upperBound BE neighboursAccum[0]
                LET idxCounter BE 1
                WHILE idxCounter < LENGTH OF neighboursAccum
                    IF neighboursAccum[idxCounter] < upperBound THEN
                        LET upperBound BE neighboursAccum[idxCounter]
                    END IF
                    LET idxCounter BE idxCounter + 1
                END WHILE
            END IF
            LET colIndex BE colIndex + 1
        END WHILE
        LET rowIndex BE rowIndex + 1
    END WHILE
    LET resultSeq BE []
    LET counterVar BE 0
    WHILE counterVar < k
        IF (counterVar % 2) == 0 THEN
            resultSeq APPEND 1
        ELSE
            resultSeq APPEND upperBound
        END IF
        LET counterVar BE counterVar + 1
    END WHILE
    RETURN resultSeq
END FUNCTION
```