```
FUNCTION anti_shuffle(input_string)
    DECLARE tokens AS ARRAY = SPLIT input_string USING " "
    DECLARE reordered_words AS LIST = []
    DECLARE index_counter AS INTEGER = 0

    WHILE index_counter < LENGTH(tokens)
        DECLARE current_word AS STRING = tokens[index_counter]
        DECLARE characters AS LIST = TO_LIST(current_word)
        
        DECLARE ascending_order_chars AS LIST = []
        DECLARE char_pos AS INTEGER = 0
        
        WHILE char_pos < LENGTH(characters)
            ADD characters[char_pos] TO ascending_order_chars
            INCREMENT char_pos BY 1
        END WHILE
        
        SORT ascending_order_chars BY ASCII_VALUE_INCREASING
        
        DECLARE ordered_word AS STRING = ""
        DECLARE char_index AS INTEGER = 0
        
        WHILE char_index < LENGTH(ascending_order_chars)
            ordered_word = ordered_word + ascending_order_chars[char_index]
            INCREMENT char_index BY 1
        END WHILE
        
        APPEND ordered_word TO reordered_words
        INCREMENT index_counter BY 1
    END WHILE

    DECLARE final_output AS STRING = ""
    DECLARE word_index AS INTEGER = 0

    WHILE word_index < LENGTH(reordered_words)
        final_output = final_output + reordered_words[word_index]
        IF word_index + 1 < LENGTH(reordered_words)
            final_output = final_output + " "
        END IF
        INCREMENT word_index BY 1
    END WHILE

    RETURN final_output
END FUNCTION
```