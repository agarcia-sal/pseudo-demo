```
FUNCTION encode(inputText)
    LET vowelChars BE "aeiouAEIOU"
    LET substitutionMap BE EMPTY DICTIONARY
    FOR EACH c IN vowelChars
        substitutionMap[c] = CHARACTER_WITH_ASCII_VALUE(ASCII_VALUE(c) + 2)
    END FOR
    LET flippedCaseText BE EMPTY STRING
    FOR index FROM 0 TO LENGTH(inputText) - 1
        LET currentChar = inputText[index]
        IF currentChar IS LOWERCASE
            flippedCaseText = CONCAT(flippedCaseText, TO_UPPERCASE(currentChar))
        ELSE IF currentChar IS UPPERCASE
            flippedCaseText = CONCAT(flippedCaseText, TO_LOWERCASE(currentChar))
        ELSE
            flippedCaseText = CONCAT(flippedCaseText, currentChar)
        END IF
    END FOR
    LET resultString BE EMPTY STRING
    LET cursor = 0
    WHILE cursor < LENGTH(flippedCaseText)
        LET symbol = flippedCaseText[cursor]
        IF NOT (symbol NOT IN vowelChars)
            resultString = CONCAT(resultString, substitutionMap[symbol])
        ELSE
            resultString = CONCAT(resultString, symbol)
        END IF
        INCREMENT cursor BY 1
    END WHILE
    RETURN resultString
END FUNCTION
```