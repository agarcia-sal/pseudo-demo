```
FUNCTION anti_shuffle(input_string)
    DECLARE words_array AS ARRAY = input_string SPLIT BY " "
    DECLARE rearranged_words AS ARRAY = []
    PROCEDURE traverse(i)
        IF i > LENGTH(words_array) THEN RETURN
        DECLARE curr_word AS STRING = words_array[i]
        DECLARE chars AS ARRAY = []
        FOR idx FROM 0 TO LENGTH(curr_word) - 1
            APPEND curr_word[idx] TO chars
        END FOR
        DECLARE sorted_chars AS ARRAY = []
        WHILE LENGTH(chars) > 0
            DECLARE min_char AS CHARACTER = chars[0]
            DECLARE min_index AS INTEGER = 0
            FOR j FROM 1 TO LENGTH(chars) - 1
                IF chars[j] < min_char THEN
                    min_char = chars[j]
                    min_index = j
                END IF
            END FOR
            APPEND min_char TO sorted_chars
            REMOVE chars[min_index]
        END WHILE
        DECLARE sorted_word AS STRING = ""
        FOR each ch IN sorted_chars
            sorted_word = sorted_word + ch
        END FOR
        APPEND sorted_word TO rearranged_words
        traverse(i + 1)
    END PROCEDURE
    traverse(0)
    DECLARE final_output AS STRING = ""
    FOR k FROM 0 TO LENGTH(rearranged_words) - 1
        final_output = final_output + rearranged_words[k]
        IF k < LENGTH(rearranged_words) - 1 THEN
            final_output = final_output + " "
        END IF
    END FOR
    RETURN final_output
END FUNCTION
```