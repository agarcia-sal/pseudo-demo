```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF integer_p <= 1 THEN
            RETURN False
        END IF
        INTEGER limit ← MIN(FLOOR(SQRT(integer_p)) + 1, integer_p - 1)
        INTEGER divisor ← 2

        WHILE divisor ≤ limit DO
            IF integer_p MOD divisor = 0 THEN
                RETURN False
            END IF
            divisor ← divisor + 1
        END WHILE

        RETURN True
    END FUNCTION

    LIST fib_sequence ← [0, 1]

    FUNCTION compute_next_prime(count_down)
        INTEGER next_value ← fib_sequence[COUNT(fib_sequence) - 1] + fib_sequence[COUNT(fib_sequence) - 2]
        APPEND next_value TO fib_sequence

        IF is_prime(next_value) THEN
            count_down ← count_down - 1
        END IF

        IF count_down = 0 THEN
            RETURN next_value
        ELSE
            RETURN compute_next_prime(count_down)
        END IF
    END FUNCTION

    RETURN compute_next_prime(integer_n)
END FUNCTION
```