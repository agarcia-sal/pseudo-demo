```
FUNCTION intersection(interval1, interval2)
    FUNCTION is_prime(candidate)
        IF candidate <= 1 THEN
            RETURN False
        END IF
        IF candidate = 2 THEN
            RETURN True
        END IF
        DECLARE divisor AS 2
        WHILE divisor < candidate
            IF candidate MOD divisor = 0 THEN
                RETURN False
            END IF
            divisor = divisor + 1
        END WHILE
        RETURN True
    END FUNCTION

    LET start_point BE interval1[0]
    LET end_point BE interval1[1]
    LET another_start BE interval2[0]
    LET another_end BE interval2[1]

    IF start_point < another_start THEN
        start_point = another_start
    END IF

    IF end_point > another_end THEN
        end_point = another_end
    END IF

    LET overlap_length BE end_point - start_point

    IF (overlap_length > 0) AND (is_prime(overlap_length) = True) THEN
        RETURN "YES"
    ELSE
        RETURN "NO"
    END IF
END FUNCTION
```