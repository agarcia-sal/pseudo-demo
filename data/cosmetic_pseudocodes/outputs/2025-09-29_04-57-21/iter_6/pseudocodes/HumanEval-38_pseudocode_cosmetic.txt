```
FUNCTION encode_cyclic(input_string)
    SET segments TO new empty list
    SET count TO (LENGTH(input_string) + 2) DIV 3
    FOR pos FROM 0 TO count - 1
        SET start_pos TO pos * 3
        SET end_pos TO start_pos + 3
        IF end_pos > LENGTH(input_string)
            SET end_pos TO LENGTH(input_string)
        END IF
        APPEND SUBSTRING(input_string, start_pos, end_pos) TO segments
    END FOR

    SET transformed TO empty list
    FOR chunk IN segments
        IF LENGTH(chunk) == 3
            APPEND CONCAT(SUBSTRING(chunk, 1, LENGTH(chunk)), chunk[0]) TO transformed
        ELSE
            APPEND chunk TO transformed
        END IF
    END FOR
    RETURN CONCATENATE_ALL(transformed)
END FUNCTION

FUNCTION decode_cyclic(input_string)
    RETURN encode_cyclic(encode_cyclic(input_string))
END FUNCTION
```