```
FUNCTION encode_cyclic(input_string)
    INITIALIZE segments AS an empty collection
    SET total_segments TO (input_string.LENGTH + 2) DIV 3
    SET counter TO 0
    WHILE counter < total_segments
        LET start_pos = counter * 3
        LET end_pos = start_pos + 3
        IF end_pos > input_string.LENGTH THEN end_pos = input_string.LENGTH
        ADD input_string.SUBSTRING(start_pos, end_pos) TO segments
        INCREMENT counter BY 1
    END WHILE

    INITIALIZE transformed_segments AS empty collection
    FOR EACH segment IN segments
        IF segment.LENGTH = 3 THEN
            LET rearranged = segment.SUBSTRING(1, 3) + segment.SUBSTRING(0, 1)
            ADD rearranged TO transformed_segments
        ELSE
            ADD segment TO transformed_segments
    END FOR

    RETURN JOIN ALL transformed_segments INTO SINGLE STRING
END FUNCTION

FUNCTION decode_cyclic(input_string)
    RETURN encode_cyclic( encode_cyclic(input_string) )
END FUNCTION
```