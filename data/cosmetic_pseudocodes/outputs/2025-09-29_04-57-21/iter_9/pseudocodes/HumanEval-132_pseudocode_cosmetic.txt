```
FUNCTION is_nested(string)
    INITIALIZE open_positions AS empty list
    INITIALIZE close_positions AS empty list
    SET current_index TO 0
    WHILE current_index < LENGTH(string)
        IF string[current_index] EQUALS '['
            APPEND current_index TO open_positions
        ELSE
            APPEND current_index TO close_positions
        INCREMENT current_index BY 1
    END WHILE
    
    REVERSE close_positions
    SET matched TO 0
    SET pointer TO 0
    SET close_len TO LENGTH(close_positions)
    
    FOR each open_pos IN open_positions
        IF pointer < close_len AND open_pos < close_positions[pointer]
            INCREMENT matched BY 1
            INCREMENT pointer BY 1
    END FOR
    
    IF NOT (matched < 2)
        RETURN TRUE
    ELSE
        RETURN FALSE
END FUNCTION
```