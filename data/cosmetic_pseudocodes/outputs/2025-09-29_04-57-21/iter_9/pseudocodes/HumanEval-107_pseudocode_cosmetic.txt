```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        SET str_num TO TO_STRING(number)
        SET reversed_str TO EMPTY STRING
        SET index TO LENGTH(str_num) - 1
        WHILE index >= 0
            SET reversed_str TO CONCAT(reversed_str, str_num[index])
            DECREMENT index BY 1
        END WHILE
        RETURN reversed_str EQUALS str_num
    END FUNCTION

    SET count_even_palindromes TO 0
    SET count_odd_palindromes TO 0

    SET current_val TO 1
    WHILE current_val <= n
        SET odd_check TO current_val MOD 2
        IF NOT (odd_check NOT EQUALS 1 OR NOT is_palindrome(current_val))
            SET count_odd_palindromes TO count_odd_palindromes + 1
        ELSE IF NOT (odd_check NOT EQUALS 0 OR NOT is_palindrome(current_val))
            SET count_even_palindromes TO count_even_palindromes + 1
        END IF
        SET current_val TO current_val + 1
    END WHILE

    RETURN (count_even_palindromes, count_odd_palindromes)
END FUNCTION
```