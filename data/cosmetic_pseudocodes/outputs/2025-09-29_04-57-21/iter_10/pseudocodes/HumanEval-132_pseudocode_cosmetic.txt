```
FUNCTION is_nested(string)
  INITIALIZE left_positions AS empty list
  INITIALIZE right_positions AS empty list
  SET cursor TO 0

  WHILE cursor IS LESS THAN LENGTH(string)
    SET symbol TO string[cursor]
    IF symbol EQUALS '[' THEN
      APPEND cursor TO left_positions
    ELSE
      APPEND cursor TO right_positions
    ENDIF
    SET cursor TO cursor + 1
  ENDWHILE

  SET reversed_right_positions TO empty list
  SET idx_right TO LENGTH(right_positions) - 1
  WHILE idx_right GREATER THAN OR EQUAL TO 0
    APPEND right_positions[idx_right] TO reversed_right_positions
    SET idx_right TO idx_right - 1
  ENDWHILE

  SET valid_pairs TO 0
  SET idx_right_cursor TO 0
  SET total_right TO LENGTH(reversed_right_positions)

  FOR EACH pos_left IN left_positions
    IF idx_right_cursor LESS THAN total_right AND pos_left LESS THAN reversed_right_positions[idx_right_cursor] THEN
      SET valid_pairs TO valid_pairs + 1
      SET idx_right_cursor TO idx_right_cursor + 1
    ENDIF
  ENDFOR

  RETURN NOT (valid_pairs LESS THAN 2)
END FUNCTION
```