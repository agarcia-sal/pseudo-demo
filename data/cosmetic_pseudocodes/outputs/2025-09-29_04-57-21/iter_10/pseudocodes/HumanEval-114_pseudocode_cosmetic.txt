```
FUNCTION minSubArraySum(list_of_integers)
    SET highest_accumulator TO 0
    SET current_accumulator TO 0
    SET iterator_index TO 0
    WHILE iterator_index < LENGTH(list_of_integers)
        LET element = list_of_integers[iterator_index]
        SET current_accumulator TO current_accumulator + (-element)
        IF current_accumulator >= 0 THEN
            NULL
        ELSE
            SET current_accumulator TO 0
        END IF
        IF highest_accumulator < current_accumulator THEN
            SET highest_accumulator TO current_accumulator
        END IF
        SET iterator_index TO iterator_index + 1
    END WHILE

    IF highest_accumulator != 0 THEN
        RETURN -highest_accumulator
    ELSE
        SET negative_elements TO EMPTY LIST
        SET position TO 0
        WHILE position < LENGTH(list_of_integers)
            APPEND (-list_of_integers[position]) TO negative_elements
            SET position TO position + 1
        END WHILE

        SET max_negative TO negative_elements[0]
        SET counter TO 1
        WHILE counter < LENGTH(negative_elements)
            IF max_negative < negative_elements[counter] THEN
                SET max_negative TO negative_elements[counter]
            END IF
            SET counter TO counter + 1
        END WHILE

        RETURN -max_negative
    END IF
END FUNCTION
```