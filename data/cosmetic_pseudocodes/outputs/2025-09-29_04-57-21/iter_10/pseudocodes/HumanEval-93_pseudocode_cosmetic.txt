```
FUNCTION encode(message)
    vowelsReference ← "aeiouAEIOU"
    mappingTable ← EMPTY DICTIONARY
    index ← 0
    WHILE index < LENGTH(vowelsReference)
        currentChar ← CHAR_AT(vowelsReference, index)
        shiftedChar ← CHARACTER_FROM_ASCII(ASCII_VALUE(currentChar) + 2)
        SET mappingTable[currentChar] TO shiftedChar
        index ← index + 1
    END WHILE

    FUNCTION swapCase(text)
        position ← 0
        result ← EMPTY STRING
        WHILE position < LENGTH(text)
            char ← CHAR_AT(text, position)
            IF char IS LOWERCASE
                result ← CONCATENATE(result, TO_UPPERCASE(char))
            ELSE IF char IS UPPERCASE
                result ← CONCATENATE(result, TO_LOWERCASE(char))
            ELSE
                result ← CONCATENATE(result, char)
            END IF
            position ← position + 1
        END WHILE
        RETURN result
    END FUNCTION

    alteredMessage ← swapCase(message)

    output ← EMPTY STRING
    pointer ← 0
    WHILE pointer < LENGTH(alteredMessage)
        currentChar ← CHAR_AT(alteredMessage, pointer)
        IF currentChar EXISTS IN mappingTable
            output ← CONCATENATE(output, mappingTable[currentChar])
        ELSE
            output ← CONCATENATE(output, currentChar)
        END IF
        pointer ← pointer + 1
    END WHILE

    RETURN output
END FUNCTION
```