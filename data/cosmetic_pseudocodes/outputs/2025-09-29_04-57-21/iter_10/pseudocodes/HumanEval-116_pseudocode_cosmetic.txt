```
FUNCTION sort_array(array_of_integers)
    SET ascending_ordered_list TO array_of_integers
    SET index_counter TO 0

    WHILE index_counter < LENGTH(ascending_ordered_list) - 1
        SET current_index TO 0

        WHILE current_index < LENGTH(ascending_ordered_list) - index_counter - 1
            IF ascending_ordered_list[current_index] > ascending_ordered_list[current_index + 1]
                SET temp_var TO ascending_ordered_list[current_index]
                SET ascending_ordered_list[current_index] TO ascending_ordered_list[current_index + 1]
                SET ascending_ordered_list[current_index + 1] TO temp_var
            END IF
            INCREMENT current_index BY 1
        END WHILE

        INCREMENT index_counter BY 1
    END WHILE

    FUNCTION binary_ones_counter(number)
        SET count_ones TO 0
        SET binary_string TO CONVERT number TO BINARY STRING
        SET char_index TO 0

        WHILE char_index < LENGTH(binary_string)
            IF binary_string[char_index] = '1'
                INCREMENT count_ones BY 1
            END IF
            INCREMENT char_index BY 1
        END WHILE

        RETURN count_ones
    END FUNCTION

    FUNCTION compare_by_ones(a, b)
        IF binary_ones_counter(a) < binary_ones_counter(b)
            RETURN -1
        ELSE IF binary_ones_counter(a) > binary_ones_counter(b)
            RETURN 1
        ELSE
            RETURN 0
        END IF
    END FUNCTION

    SET n TO LENGTH(ascending_ordered_list)
    SET i TO 1

    WHILE i < n
        SET key_element TO ascending_ordered_list[i]
        SET j TO i - 1

        WHILE j >= 0 AND
              (binary_ones_counter(ascending_ordered_list[j]) > binary_ones_counter(key_element) OR
               (binary_ones_counter(ascending_ordered_list[j]) = binary_ones_counter(key_element) AND ascending_ordered_list[j] > key_element))
            SET ascending_ordered_list[j + 1] TO ascending_ordered_list[j]
            SET j TO j - 1
        END WHILE

        SET ascending_ordered_list[j + 1] TO key_element
        SET i TO i + 1
    END WHILE

    RETURN ascending_ordered_list
END FUNCTION
```