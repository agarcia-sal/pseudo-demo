```
FUNCTION sort_numbers(string_of_number_words)
    INITIALIZE numeral_values AS MAP
        ASSOCIATE 'zero' TO 0
        ASSOCIATE 'one' TO 1
        ASSOCIATE 'two' TO 2
        ASSOCIATE 'three' TO 3
        ASSOCIATE 'four' TO 4
        ASSOCIATE 'five' TO 5
        ASSOCIATE 'six' TO 6
        ASSOCIATE 'seven' TO 7
        ASSOCIATE 'eight' TO 8
        ASSOCIATE 'nine' TO 9

    DECLARE tokens AS EMPTY LIST
    DECLARE index AS 0
    DECLARE length AS LENGTH(string_of_number_words)
    WHILE index < length
        DECLARE start_pos AS index
        WHILE index < length AND string_of_number_words[index] â‰  ' '
            INCREMENT index BY 1
        END WHILE
        IF index > start_pos THEN
            APPEND SUBSTRING(string_of_number_words, start_pos, index - 1) TO tokens
        END IF
        INCREMENT index BY 1
    END WHILE

    DEFINE FUNCTION compare_by_value(a, b)
        RETURN numeral_values[a] - numeral_values[b]
    END FUNCTION

    DECLARE i AS 1
    WHILE i < LENGTH(tokens)
        DECLARE j AS i
        WHILE j > 0 AND compare_by_value(tokens[j], tokens[j - 1]) < 0
            SET temp TO tokens[j]
            SET tokens[j] TO tokens[j - 1]
            SET tokens[j - 1] TO temp
            DECREMENT j BY 1
        END WHILE
        INCREMENT i BY 1
    END WHILE

    DECLARE result_string AS EMPTY STRING
    DECLARE first_token AS TRUE
    FOR EACH element IN tokens
        IF NOT first_token THEN
            SET result_string TO result_string + " "
        END IF
        SET result_string TO result_string + element
        SET first_token TO FALSE
    END FOR

    RETURN result_string
END FUNCTION
```