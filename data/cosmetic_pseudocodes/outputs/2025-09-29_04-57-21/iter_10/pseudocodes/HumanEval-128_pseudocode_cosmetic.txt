```
FUNCTION prod_signs(array_of_integers)
    IF NOT EXISTS array_of_integers[0]
        RETURN None
    END IF

    INITIALIZE product_sign
    DEFINE has_zero AS False
    DECLARE idx AS 0

    WHILE idx < LENGTH OF array_of_integers
        IF array_of_integers[idx] EQUALS 0
            has_zero = True
            BREAK
        END IF
        INCREMENT idx BY 1
    END WHILE

    IF has_zero
        product_sign = 0
    ELSE
        INITIALIZE negative_counter TO 0
        SET idx TO 0

        WHILE idx < LENGTH OF array_of_integers
            IF array_of_integers[idx] < 0
                negative_counter = negative_counter + 1
            END IF
            INCREMENT idx BY 1
        END WHILE

        SET product_sign = POWER(-1, negative_counter)
    END IF

    SET total_absolute_sum TO 0
    SET index_ptr TO 0

    WHILE index_ptr < LENGTH OF array_of_integers
        total_absolute_sum = total_absolute_sum + ABS(array_of_integers[index_ptr])
        INCREMENT index_ptr BY 1
    END WHILE

    RETURN product_sign * total_absolute_sum
END FUNCTION
```