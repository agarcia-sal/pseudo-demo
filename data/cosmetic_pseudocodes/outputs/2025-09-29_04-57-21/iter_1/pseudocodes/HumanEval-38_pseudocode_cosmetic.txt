```
FUNCTION encode_cyclic(input_string)
    INITIALIZE segments AS empty array
    SET total_segments TO CEILING(LENGTH(input_string) / 3)
    FOR counter FROM 0 TO total_segments - 1
        SET start_pos TO 3 * counter
        SET end_pos TO start_pos + 3
        IF end_pos > LENGTH(input_string)
            end_pos = LENGTH(input_string)
        ENDIF
        APPEND SUBSTRING(input_string, start_pos, end_pos) TO segments
    END FOR

    INITIALIZE modified_segments AS empty array
    FOR EACH piece IN segments
        IF LENGTH(piece) IS 3
            APPEND CONCATENATE(SUBSTRING(piece, 1, 3), SUBSTRING(piece, 0, 1)) TO modified_segments
        ELSE
            APPEND piece TO modified_segments
        ENDIF
    END FOR

    RETURN JOIN(modified_segments, "")
END FUNCTION

FUNCTION decode_cyclic(input_string)
    RETURN encode_cyclic(encode_cyclic(input_string))
END FUNCTION
```