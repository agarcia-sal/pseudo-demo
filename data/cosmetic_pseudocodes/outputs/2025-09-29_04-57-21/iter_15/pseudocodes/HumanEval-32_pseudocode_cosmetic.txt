```
FUNCTION poly(list_of_coefficients, point)
	sum_value ← 0
	index ← 0
	WHILE index < LENGTH(list_of_coefficients)
		term ← list_of_coefficients[index] * (point ^ index)
		sum_value ← sum_value + term
		index ← index + 1
	END WHILE
	RETURN sum_value
END FUNCTION

FUNCTION find_zero(list_of_coefficients)
	lower_bound ← -1.0
	upper_bound ← 1.0

	REPEAT
		product ← poly(list_of_coefficients, lower_bound) * poly(list_of_coefficients, upper_bound)
		IF NOT (product ≤ 0)
			lower_bound ← lower_bound * 2.0
			upper_bound ← upper_bound * 2.0
		ELSE
			BREAK
		END IF
	UNTIL FALSE

	FOR distance ← (upper_bound - lower_bound); distance > 1e-10; distance ← (upper_bound - lower_bound)
		mid_point ← (lower_bound + upper_bound) / 2.0
		left_product ← poly(list_of_coefficients, mid_point) * poly(list_of_coefficients, lower_bound)
		IF NOT (left_product ≤ 0)
			lower_bound ← mid_point
		ELSE
			upper_bound ← mid_point
		END IF
	END FOR

	RETURN lower_bound
END FUNCTION
```