```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        LET str_num BE TO_STRING(number)
        LET reversed_str BE EMPTY STRING
        LET idx BE LENGTH(str_num) - 1
        WHILE idx >= 0
            SET reversed_str TO CONCATENATE(reversed_str, str_num[idx])
            DECREMENT idx BY 1
        END WHILE
        RETURN reversed_str == str_num
    END FUNCTION

    LET total_even_palindromes BE 0
    LET total_odd_palindromes BE 0

    LET current_val BE 1
    WHILE current_val <= n
        LET is_current_palindrome BE is_palindrome(current_val)
        LET odd_test BE ((current_val % 2) != 0)
        IF is_current_palindrome
            IF odd_test
                SET total_odd_palindromes TO total_odd_palindromes + 1
            ELSE
                SET total_even_palindromes TO total_even_palindromes + 1
            END IF
        END IF
        SET current_val TO current_val + 1
    END WHILE

    RETURN (total_even_palindromes, total_odd_palindromes)
END FUNCTION
```