```
FUNCTION minPath(grid, k)
    LET sideLength = LENGTH(grid)
    LET highestVal = (sideLength * sideLength) + 1

    LET rowIndex = 0
    WHILE rowIndex < sideLength
        LET colIndex = 0
        WHILE colIndex < sideLength
            IF !(grid[rowIndex][colIndex] != 1)
                LET neighbours = []
                IF 0 < rowIndex
                    neighbours.APPEND(grid[rowIndex - 1][colIndex])
                END IF
                IF 0 < colIndex
                    neighbours.APPEND(grid[rowIndex][colIndex - 1])
                END IF
                IF rowIndex < (sideLength - 1)
                    neighbours.APPEND(grid[rowIndex + 1][colIndex])
                END IF
                IF colIndex < (sideLength - 1)
                    neighbours.APPEND(grid[rowIndex][colIndex + 1])
                END IF

                LET minimumNeighbour = neighbours[0]
                LET idx = 1
                WHILE idx < LENGTH(neighbours)
                    IF minimumNeighbour > neighbours[idx]
                        minimumNeighbour = neighbours[idx]
                    END IF
                    idx = idx + 1
                END WHILE
                highestVal = minimumNeighbour
            END IF
            colIndex = colIndex + 1
        END WHILE
        rowIndex = rowIndex + 1
    END WHILE

    LET results = []
    LET counter = 0
    WHILE counter < k
        IF (counter % 2) != 1
            results.APPEND(1)
        ELSE
            results.APPEND(highestVal)
        END IF
        counter = counter + 1
    END WHILE

    RETURN results
END FUNCTION
```