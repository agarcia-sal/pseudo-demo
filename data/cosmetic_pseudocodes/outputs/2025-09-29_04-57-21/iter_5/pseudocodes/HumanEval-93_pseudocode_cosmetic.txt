```
FUNCTION encode(message)
    LET vowelSet BE "AEIOUaeiou"
    LET shiftMap BE MAP WITH KEYS FROM EACH ELEMENT IN vowelSet MAPPED TO CHARACTER(CHARCODE(KEY) + 2)
    LET swappedMessage BE EMPTY STRING
    FOR EACH char IN message
        IF char IS UPPERCASE THEN
            APPEND TO swappedMessage TO LOWERCASE(char)
        ELSE IF char IS LOWERCASE THEN
            APPEND TO swappedMessage TO UPPERCASE(char)
        ELSE
            APPEND TO swappedMessage TO char
        END IF
    END FOR
    LET resultString BE EMPTY STRING
    SET indexCounter TO 0
    WHILE indexCounter < LENGTH(swappedMessage)
        LET currentChar BE CHAR AT swappedMessage[indexCounter]
        IF EXISTS shiftMap[currentChar] AND currentChar IN vowelSet THEN
            CONCATENATE resultString WITH shiftMap[currentChar]
        ELSE
            CONCATENATE resultString WITH currentChar
        END IF
        INCREMENT indexCounter
    END WHILE
    RETURN resultString
END FUNCTION
```