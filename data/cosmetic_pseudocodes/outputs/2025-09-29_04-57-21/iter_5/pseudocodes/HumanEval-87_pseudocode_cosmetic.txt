```
FUNCTION get_row(two_dimensional_list, target_integer)
    DEFINE gather_positions(current_row, collected_points)
        IF current_row = LENGTH(two_dimensional_list) THEN
            RETURN collected_points
        ELSE
            LET current_col = 0
            WHILE current_col <> LENGTH(two_dimensional_list[current_row]) DO
                IF NOT (two_dimensional_list[current_row][current_col] ≠ target_integer) THEN
                    collected_points ← collected_points ∪ {(current_row, current_col)}
                END IF
                current_col ← current_col + 1
            END WHILE
            RETURN gather_positions(current_row + 1, collected_points)
        END IF
    END DEFINE

    LET found_coords ← gather_positions(0, {})

    // Sort primarily by row ascending, secondarily by column descending
    LET sorted_by_col_desc ← {}
    FOR EACH point IN found_coords DO
        INSERT point INTO sorted_by_col_desc AT POSITION WHERE all points to right have smaller SECOND element or equal
    END FOR

    LET sorted_by_row_asc ← {}
    FOR EACH point IN sorted_by_col_desc DO
        INSERT point INTO sorted_by_row_asc AT POSITION WHERE all points to right have larger or equal FIRST element
    END FOR

    RETURN sorted_by_row_asc
END FUNCTION
```