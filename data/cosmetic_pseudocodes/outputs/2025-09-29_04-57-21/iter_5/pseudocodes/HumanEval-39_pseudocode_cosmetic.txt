```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p >= 2)
            RETURN False
        SET test_divisor TO 2
        SET limit TO MIN(MATH_MODULE.FLOOR(MATH_MODULE.SQRT(integer_p)) + 1, integer_p - 1)
        WHILE test_divisor <= limit
            IF 0 = (integer_p MOD test_divisor)
                RETURN False
            SET test_divisor TO test_divisor + 1
        RETURN True
    END FUNCTION

    SET fib_sequence TO COLLECTION WITH ELEMENTS [0, 1]

    REPEAT
        ASSIGN new_val TO fib_sequence[COUNT(fib_sequence) - 1] + fib_sequence[COUNT(fib_sequence) - 2]
        ADD new_val TO END OF fib_sequence
        IF is_prime(new_val) = True
            integer_n <- integer_n - 1
        IF integer_n = 0
            RETURN new_val
    UNTIL FALSE
END FUNCTION
```