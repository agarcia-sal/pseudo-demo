```
FUNCTION minPath(input_grid, max_k)
  LET size = LENGTH(input_grid)
  LET bound = (size * size) + 1
  FOR rowIndex IN 0 TO size - 1 DO
    FOR colIndex IN 0 TO size - 1 DO
      IF input_grid[rowIndex][colIndex] == 1 THEN
        LET neighbors = []
        IF NOT (rowIndex == 0) THEN INSERT neighbors END = input_grid[rowIndex - 1][colIndex] END
        IF NOT (colIndex == 0) THEN APPEND neighbors END = input_grid[rowIndex][colIndex - 1] END
        IF NOT (rowIndex == size - 1) THEN PUSH neighbors END = input_grid[rowIndex + 1][colIndex] END
        IF NOT (colIndex == size - 1) THEN ADD neighbors END = input_grid[rowIndex][colIndex + 1] END
        bound = (MINIMUM OF neighbors)
      END IF
    END FOR
  END FOR

  LET result = []
  LET counter = 0
  WHILE counter < max_k DO
    IF (counter MOD 2) == 0 THEN
      APPEND result END = 1
    ELSE
      APPEND result END = bound
    END IF
    counter = counter + 1
  END WHILE

  RETURN result
END FUNCTION
```