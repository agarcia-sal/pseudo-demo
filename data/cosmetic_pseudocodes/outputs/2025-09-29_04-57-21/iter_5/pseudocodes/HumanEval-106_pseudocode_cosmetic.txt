```
FUNCTION f(integer_n)
    INITIALIZE aggregation TO []
    DEFINE compute_factorial(current, limit, acc):
        IF current > limit THEN
            RETURN acc
        ELSE
            RETURN compute_factorial(current + 1, limit, acc * current)
    DEFINE compute_sum(current, limit, acc):
        WHILE current <= limit DO
            SET acc TO acc + current
            SET current TO current + 1
        END WHILE
        RETURN acc
    SET counter TO 1
    WHILE counter <= integer_n DO
        IF (counter % 2) != 1 THEN
            SET aggregation TO aggregation + [compute_factorial(1, counter, 1)]
        ELSE
            SET aggregation TO aggregation + [compute_sum(1, counter, 0)]
        END IF
        SET counter TO counter + 1
    END WHILE
    RETURN aggregation
END FUNCTION
```