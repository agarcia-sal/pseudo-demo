```
FUNCTION unique_digits(list_of_positive_integers)
    PROCEDURE gather_if_all_odd(original_list, filtered_container)
        INDEX position ← 0
        WHILE position < length(original_list)
            CURRENT ← original_list[position]
            BIT_COLLECTION ← convert_to_digit_array(CURRENT)
            HAS_EVEN ← FALSE
            POINTER ← 0
            REPEAT
                IF (BIT_COLLECTION[POINTER] mod 2) = 0 THEN
                    HAS_EVEN ← TRUE
                POINTER ← POINTER + 1
            UNTIL POINTER = length(BIT_COLLECTION) OR HAS_EVEN
            IF NOT HAS_EVEN THEN
                filtered_container.append(CURRENT)
            position ← position + 1
    END PROCEDURE

    RESULT_CONTAINER ← new empty list
    gather_if_all_odd(list_of_positive_integers, RESULT_CONTAINER)

    FUNCTION insertion_sort(arr)
        INDEX k ← 1
        WHILE k < length(arr)
            COMP ← arr[k]
            INDEX j ← k - 1
            WHILE j ≥ 0 AND arr[j] > COMP
                arr[j + 1] ← arr[j]
                j ← j - 1
            arr[j + 1] ← COMP
            k ← k + 1
    END FUNCTION

    insertion_sort(RESULT_CONTAINER)
    RETURN RESULT_CONTAINER
END FUNCTION
```