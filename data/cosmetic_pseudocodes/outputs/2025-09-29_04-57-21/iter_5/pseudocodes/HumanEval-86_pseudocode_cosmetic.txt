```
FUNCTION anti_shuffle(input_string)
    DECLARE tokens AS ARRAY OF STRING = []
    DECLARE sorted_tokens AS ARRAY OF STRING = []
    DECLARE index AS INTEGER = 0

    tokens = input_string SPLIT BY " "

    WHILE index < LENGTH(tokens)
        DECLARE char_list AS ARRAY OF CHAR
        DECLARE assembled_word AS STRING = ""

        char_list = tokens[index] CONVERT TO CHAR ARRAY
        char_list = char_list SORTED IN NON-DECREASING ORDER

        FOR char_element IN char_list
            assembled_word = assembled_word CONCAT char_element
        END FOR

        APPEND assembled_word TO sorted_tokens
        index = index + 1
    END WHILE

    DECLARE output AS STRING = ""
    IF LENGTH(sorted_tokens) > 0 THEN
        output = sorted_tokens[0]
    END IF

    FOR position FROM 1 TO LENGTH(sorted_tokens) - 1
        output = output CONCAT " " CONCAT sorted_tokens[position]
    END FOR

    RETURN output
END FUNCTION
```