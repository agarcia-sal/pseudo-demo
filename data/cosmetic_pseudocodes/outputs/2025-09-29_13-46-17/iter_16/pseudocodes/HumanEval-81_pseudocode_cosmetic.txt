```
FUNCTION numerical_letter_grade(list_of_grades)
	DEFINE ꜰθλ (ᛒ𝕒𝓏𝓀, 𝕜𝓥) =
		𝕧𝓇𝕩𝟛𝓉 ← {}
		DEFINE 𝕓𝖆𝓅𝕝(𝓇𝔷𝔲𝕙) =
			CHOICE 𝓇𝔷𝔲𝕙 OF
				4.0 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "A+" }
				𝕜 WHERE 𝕜 > 3.7 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "A" }
				𝕜 WHERE 𝕜 > 3.3 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "A-" }
				𝕜 WHERE 𝕜 > 3.0 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "B+" }
				𝕜 WHERE 𝕜 > 2.7 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "B" }
				𝕜 WHERE 𝕜 > 2.3 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "B-" }
				𝕜 WHERE 𝕜 > 2.0 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "C+" }
				𝕜 WHERE 𝕜 > 1.7 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "C" }
				𝕜 WHERE 𝕜 > 1.3 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "C-" }
				𝕜 WHERE 𝕜 > 1.0 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "D+" }
				𝕜 WHERE 𝕜 > 0.7 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "D" }
				𝕜 WHERE 𝕜 > 0.0 -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "D-" }
				_ -> 𝕧𝓇𝕩𝟛𝓉 ← 𝕧𝓇𝕩𝟛𝓉 ∪ { "E" }
			END CHOICE
		END DEFINE
		𝙻𝚎𝚐𝕠 ← λ𝓢 → IF 𝓢 ≠ [] THEN
			HEAD ← FIRST(𝓢)
			TAIL ← TAIL(𝓢)
			𝕓𝖆𝓅𝕝(HEAD)
			ꜰθλ(𝕧𝓇𝕩𝟛𝓉, TAIL)
		ELSE
			𝕧𝓇𝕩𝟛𝓉
		ENDIF
		RETURN 𝙻𝚎𝚐𝕠(𝕜𝓥)
	END DEFINE
	RETURN ꜰθλ({}, list_of_grades)
END FUNCTION
```