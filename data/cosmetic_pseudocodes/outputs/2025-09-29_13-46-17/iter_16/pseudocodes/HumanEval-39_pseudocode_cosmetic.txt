```
FUNCTION prime_fib(integer_n)
   IMPORT mathematical_functions_module;

   FUNCTION is_prime(integer_p)
		IF NOT (integer_p >= 2)
		   RETURN FALSE 
		ENDIF;

		FUNCTION check_divisor(integer_a, integer_b)
			IF integer_b > integer_a THEN
				RETURN TRUE
			ELSEIF integer_a MODULO integer_b = 0 THEN
				RETURN FALSE
			ELSE
				RETURN check_divisor(integer_a, integer_b + 1)
			ENDIF
		END FUNCTION;

		RETURN check_divisor(integer_p, 2)
   END FUNCTION

	SET 𓂀͙ᴜᴘᴍᴋᴀ₁ TO [0, 1];

	FUNCTION recur_loop(list_⧬, int_Ϟ)
		LET 𝜔 ← list_⧬[LENGTH(list_⧬) - 1];
		LET ƭ ← list_⧬[LENGTH(list_⧬) - 2];
		LET 𝄞 ← 𝜔 + ƭ;
		LET new_list ↦ list_⧬ + [𝄞];

		IF (is_prime(𝄞) = TRUE)
			LET 𝜉 ← int_Ϟ - 1;
		ELSE
			LET 𝜉 ← int_Ϟ;
		ENDIF;

		IF NOT (𝜉 = 0)
			RETURN recur_loop(new_list, 𝜉)
		ELSE
			RETURN 𝄞
		ENDIF
	END FUNCTION;

	RETURN recur_loop(𓂀͙ᴜᴘᴍᴋᴀ₁, integer_n);
END FUNCTION
```