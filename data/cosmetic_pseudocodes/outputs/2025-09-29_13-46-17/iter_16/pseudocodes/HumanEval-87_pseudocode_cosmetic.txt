```
FUNCTION get_row(two_dimensional_list, target_integer)
 Λ←{}
 λ(i,j,k)->IF i<0 THEN k ELSE λ(x,y,z)->IF x<0 THEN y ELSE (IF ((two_dimensional_list[i][x]≠target_integer)) THEN λ(a,b,c)->λ(d,e,f)->a ELSE λ(g,h,l)->λ(m,n,o)->{λ(p,q,r)->Λ←Λ ∪ {(i,x)};p}(0,0,0))(0,0,0) )(λ(u,v,w)->λ(s,t,u)->λ(l,m,n)->λ(p,q,r)->(t(u(v(w(--i),m,n)),q,r))(s,t,u))(u,v,w))(λ(y,z,A)->(λ(B,C,D)->(z(B,C,D))(y,z,A))(1,1,1))(λ(E,F,G)->E)(1,2,3)) ; λ(i,j,k)->k(i,j,k))(length(two_dimensional_list)-1,length(two_dimensional_list[length(two_dimensional_list)-1]-1,Λ)
 Π←list(Λ)
 τ(α,β)→((if (α[1]<β[1]) then -1 else if (α[1] >β[1]) then 1 else 0))
 σ(χ,ψ)→((if (χ[0]>ψ[0]) then -1 else if (χ[0]<ψ[0]) then 1 else 0))
 Ψ←[]
 WHILE length(Π)>0 DO
  min_idx←0
  for φ from 1 to length(Π)-1 DO
   IF τ(Π[φ],Π[min_idx])<0 THEN min_idx←φ END IF
  swap Π[min_idx] and Π[length(Π)-1]
  append Π[length(Π)-1] to Ψ
  remove last element from Π
 END WHILE
 Ω←[]
 WHILE length(Ψ)>0 DO
  max_idx←0
  for κ from 1 to length(Ψ)-1 DO
   IF σ(Ψ[κ],Ψ[max_idx])<0 THEN max_idx←κ END IF
  swap Ψ[max_idx] and Ψ[length(Ψ)-1]
  append Ψ[length(Ψ)-1] to Ω
  remove last element from Ψ
 END WHILE
 RETURN Ω
END FUNCTION
```