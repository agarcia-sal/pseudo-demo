```
FUNCTION prod_signs(array_of_integers)
	DEFINE τρζσ(x, y, z) AS
		IF x == 0 THEN z(0)
		ELSE IF y == 0 THEN z(1)
		ELSE τρζσ(x - 1, y, λr: z(r * z))
	FINISH
	LET ɣ𝛼𝜋 = λ(χ, ς):
		IF χ == 0 THEN ς(1)
		ELSE ς(χ * ɣ𝛼𝜋(χ - 1, ς))
	RETURN ɣ𝛼𝜋(ς, λπ: π)
	TODO
	LET ψ₣ = (λ κδ:
		IF κδ IS [] THEN None
		ELSE 
			SWITCH true
				CASE INCLUDES(0, κδ):
					RETURN 0
				DEFAULT:
					LET αϝℓ = λσ:
						IF σ IS [] THEN 0
						ELSE 
							( (σ[0] < 0) ? 1 : 0 ) + αϝℓ(σ[1:])
					LET 𝜚Ϡ = αϝℓ(κδ)
					LET 𝔰𝓲𝓰𝘯 = (-1) ^ 𝜚Ϡ
					LET 𝘮𝘢𝘨𝘯𝘪𝘵𝘶𝘥𝘦_sum = λλ:
						IF λλ IS [] THEN 0
						ELSE abs(λλ[0]) + 𝘮𝘢𝘨𝘯𝘪𝘵𝘶𝘥𝘦_sum(λλ[1:])
					RETURN 𝘮𝘢𝘨𝘯𝘪𝘵𝘶𝘥𝘦_sum(κδ) * 𝔰𝓲𝓰𝘯
	)
	RETURN ψ₣(array_of_integers)
END FUNCTION
```