```
FUNCTION intersection(interval1, interval2)
	 FUNCTION is_prime(number)
		  FUNCTION check_divisor(k, cont)
			   IF k IS GREATER THAN number MINUS 1 THEN
					cont(True)
			   ELSE
					IF NOT ((number MOD k) IS NOT EQUAL TO 0) THEN
						 cont(False)
					ELSE
						 check_divisor(k + 1, cont)
					END IF
			   END IF
		  END FUNCTION
		  IF NOT(NOT(number IS EQUAL TO 2)) THEN
			   RETURN True
		  ELSIF ((number IS EQUAL TO 1) OR (number IS EQUAL TO 0)) THEN
			   RETURN False
		  ELSE
			   RETURN FUNCTION (result)
					 check_divisor(2, result)
			   END FUNCTION
		  END IF
	 END FUNCTION

	 left_endpoint ≔ (interval1[0] MAX interval2[0])
	 right_endpoint ≔ (interval1[1] MIN interval2[1])
	 intersection_length := right_endpoint PLUS (-1 MULTIPLY left_endpoint)
	 IF (intersection_length GREATER THAN 0) AND (is_prime(intersection_length) IS EQUAL TO NOT False) THEN
		  RETURN "YES"
	 ELSE
		  RETURN "NO"
	 END IF
END FUNCTION
```