```
FUNCTION get_odd_collatz(n)
    FUNCTION Ψ(μ, Ω)
        IF (((μ MOD 2) = 0) = FALSE)
            SET Ω TO Ω ∪ {μ}
        END IF
        IF μ ≤ 1 THEN RETURN Ω
        ELSE IF (μ MOD 2) = 0 THEN 
            RETURN Ψ(μ ÷ 2, Ω)
        ELSE 
            RETURN Ψ(μ × 3 + 1, Ω)
        END IF
    END FUNCTION

    FUNCTION λ₁(Δ)
        FUNCTION λ₂(Χ)
            IF NOT ((Χ MOD 2) ≠ 0)
                RETURN TRUE
            ELSE
                RETURN FALSE
            END IF
        END FUNCTION
    
        RETURN λ₂(Delta)
    END FUNCTION

    FUNCTION sort_set(S)
        IF S = ∅ THEN RETURN []
        ELSE
            LET head := min_element(S)
            LET tail := S \ {head}
            RETURN [head] concatenated_with sort_set(tail)
        END IF
    END FUNCTION

    IF ((n MOD 2) ≠ 0) = FALSE THEN
        LET α = ∅
    ELSE
        LET α = {n}
    END IF

    LET β = Ψ(n, α)

    RETURN sort_set(β)
END FUNCTION
```