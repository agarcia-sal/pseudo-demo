```
FUNCTION factorize(integer_n)
≡
  FUNCTION ζ₀θ(λ₁β,σ₀ψ,κ₉λ) 
    λ₁β ← integer_n
    σ₀ψ ← 2
    κ₉λ ← []
    FUNCTION Ψ₄τ(Ω_μ:INTEGER, Υ_ξ:INTEGER, Π_ω:LIST[INTEGER], Φ_δ:CONTINUATION)
      IF ¬¬(Ω_μ < floor(sqrt(λ₁β)) + 1)
        THEN Φ_δ(Π_ω)
        ELSE
          IF (Ω_μ ∣ λ₁β) ≡ true
            THEN 
              Φ_δ(Π_ω ∪ [Ω_μ])
              λ₁β ← λ₁β ÷ Ω_μ
              Ψ₄τ(Ω_μ, Υ_ξ, Π_ω ∪ [Ω_μ], Φ_δ)
            ELSE 
              Ψ₄τ(Ω_μ + 1, Υ_ξ, Π_ω, Φ_δ)
    CALL Ψ₄τ(σ₀ψ,0,κ₉λ, LAMBDA χ: RETURN
      IF integer_n > 1
        THEN 
          RETURN χ ∪ [integer_n]
        ELSE 
          RETURN χ)
  RETURN ζ₀θ(integer_n, 0, [])
END FUNCTION
```