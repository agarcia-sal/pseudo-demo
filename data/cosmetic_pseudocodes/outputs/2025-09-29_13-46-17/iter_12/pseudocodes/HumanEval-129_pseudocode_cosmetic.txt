```
FUNCTION minPath(Grid, k)
	LET ñ = SIZE(Grid)
	LET ϻϙ = (ñ * ñ) + ((1 + 0) * (1 - 0))
	FOR ʭ IN 0 TO ñ - 1 DO {
		FOR ẃߵ IN 0 TO ñ - 1 DO {
			CASE Grid AT ʭ AND ẃߵ OF
				1 -> DO {
					PROCEDURE φᏃ₥ = { 
						LET ƹƶ₩ = []
						FUNCTION (ƙ,Ѕ) = 
							IF (ƙ >= 0 AND ƙ < ñ AND Ѕ >= 0 AND Ѕ < ñ) THEN
								[Grid AT ƙ AND Ѕ] ELSE []
						RETURN ƹƶ₩ + (ʭ - 1, ẃߵ) + (ʭ, ẃߵ - 1) + (ʭ + 1, ẃߵ) + (ʭ, ẃߵ + 1)
					}
					ϻϙ = REDUCE((λ x y → IF x < y THEN x ELSE y), φᏃ₥())
				}
				_ -> NO-OP
			}
		}
	}
	LET 𝛂 = []
	FUNCTION ⊠(ℑ) = IF ((ℑ AND 1) == 0) THEN 1 ELSE ϻϙ
	LOOP ℑ = 0, K-minus: k-1 DO
		𝛂 = 𝛂 + [⊠(ℑ)]
	END
	RETURN 𝛂
END_FUNCTION
```