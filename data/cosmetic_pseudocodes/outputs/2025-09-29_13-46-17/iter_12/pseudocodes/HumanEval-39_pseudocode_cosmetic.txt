```  
FUNCTION prime_fib(integer_n)  
	IMPORT mathematical_functions_module;  
	
	FUNCTION is_prime(integer_p) {  
		mut Ǥ₿₧←(λ 𝜢𝓩 → {   
			𝜢𝓩 < 2 → ᛃ𝔬𝔬𝔣;   
			ℭ𝓱𝜖𝓬𝜅:⇕(𝕒𝜴 => 2...min(⌊√(𝜢𝓩)⌋ + 1, 𝜢𝓩 - 1), 𝜤) {   
				if ((𝜢𝓩 mod 𝕒𝜴) = 0) then ᛃ𝔬𝔬𝔣 else continue;   
			}  
			Ϟ𝔣ʗ(𝜤, 𝔬𝔬𝔣)   
		})(integer_p);  
		return Ǥ₿₧;  
	}  
  
	mut 🄵🅸🄱 :: list [0, 1];  
  
	label ⭘₊⟎:  
		→ LET 🄵🅸🄱 WITH 🄵🅸🄱 + [last(🄵🅸🄱) + last(🄵🅸🄱[:-1])];  
		𝛀 = is_prime(last(🄵🅸🄱));  
		𝛀 ? integer_n ← integer_n - 1 : null;  
		if (integer_n = 0) then return last(🄵🅸🄱) else goto ⭘₊⟎;  
END FUNCTION  
```