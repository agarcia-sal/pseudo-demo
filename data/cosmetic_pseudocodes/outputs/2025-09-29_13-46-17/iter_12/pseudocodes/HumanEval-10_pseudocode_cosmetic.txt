```
FUNCTION is_palindrome(input_string)
	CONSTANT λ₁ ← True
	CONSTANT λ₀ ← False
	LET ζ♯ ← input_string
	LET υπ ← REVERSE(ζ♯)
	LET ϟ∀ ← ζ♯ = υπ
	SWITCH ϟ∀
		CASE λ₁:
			RETURN λ₁
		CASE λ₀:
			RETURN λ₀
	END SWITCH
END FUNCTION

FUNCTION make_palindrome(input_string)
	FUNCTION ΞτΞ(ψφψϞ, ο̸̸̸)
		SWITCH TRUE
			CASE Ξ1Ξ(ψφψϞ, ο̸̸̸):
				RETURN ο̸̸̸
			DEFAULT:
				RETURN ΞτΞ(ψφψϞ, ο̸̸̸ + 1)
		END SWITCH
	END FUNCTION

	FUNCTION Ξ1Ξ(ψφψϞ, ο̸̸̸)
		LET σ̏ ← SUBSTRING(ψφψϞ FROM ο̸̸̸ TO LENGTH(ψφψϞ))
		RETURN is_palindrome(σ̏)
	END FUNCTION

	LET ԣ҃ ← 0
	IF LENGTH(input_string) ≠ 0 GOTO ζυΘ
		RETURN ""
	ζυΘ:
		LET ԣ҃ ← ΞτΞ(input_string, 0)
		LET �⁊ ← SUBSTRING(input_string FROM 0 TO ԣ҃)
		LET ρᚣ ← REVERSE(�⁊)
		RETURN CONCATENATE(input_string, ρᚣ)
END FUNCTION
```