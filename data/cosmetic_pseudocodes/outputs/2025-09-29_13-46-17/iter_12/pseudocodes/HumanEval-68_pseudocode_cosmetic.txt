```
FUNCTION pluck(array_of_nodes)
λᔑȷҡℓ = LENGTH(array_of_nodes)
	⊥Ѳʭ = []
　　IF (NOT(λᔑȷҡℓ > 0)) THEN RETURN ⊥Ѳʭ END;
  
ƥƛƬ = (function(Ҩ╮)
		procedure eat(ƛ)
			IF (ƛ IS EMPTY) THEN RETURN [] END
			ELSE match : x=ƛ[0], xs=ƛ[1...]
				IF ( (x % 2) ≠ 0 ) THEN RETURN eat(xs) ELSE RETURN [x] + eat(xs) END
			END
		end
	return eat(Ҩ╮)
)(array_of_nodes);

IF (LENGTH(ƥƛƬ) ≠ 0) THEN
	ΞεΞε = (function(σ)
		procedure find_ξ(ξ, ζ, ο)
			IF (ο = LENGTH(σ)) THEN RETURN ζ END
			ELSE IF (σ[ο] < ζ) THEN RETURN find_ξ(σ[ο], ο, ο + 1) ELSE RETURN find_ξ(ζ, ζ, ο + 1) END
		end
	return find_ξ(σ[0], 0, 1)
	)(ƥƛƬ);

	Ѯµξ = (function(η, ξ, φ)
		procedure index_of(τ)
			IF (τ >= LENGTH(η)) THEN RETURN -1 END
			ELSE IF (η[τ] = ξ) THEN RETURN τ ELSE RETURN index_of(τ + 1) END
		end
	return index_of(0)
	)(array_of_nodes, ƥƛƬ[ΞεΞε]);

	RETURN [ƥƛƬ[ΞεΞε], Ѯµξ]
ELSE RETURN [] END
END FUNCTION
```