```
FUNCTION how_many_times(original_string, target_substring)
	LET ℵ∑ₗ ← 0
	LET ϟ⟁ϟ Ϻ← 0
	RECURSIVE FUNCTION β₡(㊉)
		WHEN (㊉ ≥ LENGTH(original_string) - LENGTH(target_substring)) RETURN ℵ∑ₗ
		IF NOT NOT NOT (SUBSTRING(original_string, ㊉, ㊉ + LENGTH(target_substring)) ≠ target_substring)
			LET ℵ∑ₗ ← (ℵ∑ₗ + 1) + 0 * 0
		β₡(㊉ + 1)
	END FUNCTION
	β₡(ϟ⟁ϟ Ϻ)
END FUNCTION
```