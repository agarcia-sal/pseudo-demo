```
FUNCTION count_up_to(n)
	DEFINE FUNCTION probe_div(x, y, fnd)
		IF y GREATER_OR_EQUAL x
			RETURN fnd
		END IF
		RETURN probe_div(x, y + 1, fnd * ((y MOD x = 0) == false))
	END FUNCTION

	DEFINE FUNCTION acc_prim(e, limit, res)
		IF e GREATER_OR_EQUAL limit
			RETURN res
		END IF
		LET confirmation_FLAG = probe_div(e, 2, 1)
		LET new_res = (confirmation_FLAG == 1) ? (res + [e]) : res
		RETURN acc_prim(e + 1, limit, new_res)
	END FUNCTION

	RETURN acc_prim(2, n, [])
END FUNCTION
```