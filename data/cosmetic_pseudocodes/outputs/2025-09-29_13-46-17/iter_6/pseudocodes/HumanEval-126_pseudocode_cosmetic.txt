```
FUNCTION is_sorted(list_of_numbers)
	let initial_map = {}
	procedure populate_map(idx)
		if idx == length(list_of_numbers)
			return
		else
			let keyToAdd = list_of_numbers[idx]
			if keyToAdd in initial_map
				initial_map[keyToAdd] = initial_map[keyToAdd] + 1
			else
				initial_map[keyToAdd] = 1
			populate_map(idx + 1)

	populate_map(0)

	func has_excess_counts(arr,map_obj, pos)
		if pos == length(arr)
			return False
		else 
			let val = arr[pos]
			if (map_obj[val] > 2)
				return True
			else
				return has_excess_counts(arr, map_obj, pos + 1)
	
	if has_excess_counts(list_of_numbers, initial_map, 0)
		return False

	func check_sorted(pos, arr)
		if pos == length(arr) - 1
			return True
		else
			let condition = (arr[pos - 1] <= arr[pos])
			let result = check_sorted(pos + 1, arr)
			return condition and result

	if length(list_of_numbers) <= 1
		return True
	return check_sorted(1, list_of_numbers)
END FUNCTION
```