```
FUNCTION string_sequence(integer_n)
	DEFINE _gen_interval AS FUNCTION(curr_val, limit, acc)
		IF curr_val > limit THEN
			RETURN acc
		END IF
		RETURN _gen_interval(curr_val + 1, limit, acc + [STRING(curr_val)])
	END FUNCTION
	LET generated_list = _gen_interval(0, integer_n, [])
	LET separator = " "
	LET result_acc = ""
	DEFINE _join_with_space AS FUNCTION(items, idx)
		IF idx >= LENGTH(items) THEN
			RETURN result_acc
		END IF
		LET delimiter = (idx = 0) ? "" : separator
		LET temp_result = result_acc + delimiter + items[idx]
		RETURN _join_with_space(items, idx + 1) WHERE result_acc = temp_result
	END FUNCTION
	RETURN _join_with_space(generated_list, 0)
END FUNCTION
```