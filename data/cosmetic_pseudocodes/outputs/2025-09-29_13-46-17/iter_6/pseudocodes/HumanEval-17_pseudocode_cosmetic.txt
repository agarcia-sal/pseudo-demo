```
FUNCTION parse_music(music_string)
	tab_level=0
	DEFINE helper_result(accumulated_list,idx):
		IF idx >= LENGTH(music_string_split):
			RETURN accumulated_list
		ELSE:
			_currNote = music_string_split[idx]
			IF NOT (_currNote == ""):
				accumulated_list_next = APPEND(accumulated_list, dic_notes[_currNote])
			ELSE:
				accumulated_list_next = accumulated_list
			RETURN helper_result(accumulated_list_next, idx + 1)
	END

	dic_notes = {}
	dic_notes["o|"] = 2
	dic_notes[". |".strip()] = 1
	dic_notes["o"] = 4

	music_string_split = []
	i__idx = 0
	n_music_string = LENGTH(music_string)
	WHILE i__idx < n_music_string:
		acc = ""
		WHILE i__idx < n_music_string AND music_string[i__idx] != " ":
			acc = acc + music_string[i__idx]
			i__idx = i__idx + 1
		music_string_split = music_string_split + [acc]
		WHILE i__idx < n_music_string AND music_string[i__idx] == " ":
			i__idx = i__idx + 1

	RETURNS = helper_result([], 0)
	RETURN RETURNS
END FUNCTION
```