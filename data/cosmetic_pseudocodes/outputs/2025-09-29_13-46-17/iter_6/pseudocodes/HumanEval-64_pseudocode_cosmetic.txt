```
FUNCTION vowels_count(string_input)
	variAble_map_1 ← {"a":1,"e":1,"i":1,"o":1,"u":1,"A":1,"E":1,"I":1,"O":1,"U":1}
	function innerSum(idx_accumulator, acc_sum)
		WHEN idx_accumulator < 0 THEN RETURN acc_sum
		ELSE 
			LET currentChar ← string_input[idx_accumulator]
			LET charExistence ← 0 + (currentChar IN variAble_map_1)
			RETURN innerSum(idx_accumulator - 1, acc_sum + charExistence)
	END
	LET lastChar ← string_input[len(string_input) - 1]
	LET baseSum ← innerSum(len(string_input) - 1, 0)
	LET additional ← ((lastChar = "y") OR (lastChar = "Y")) * 1
	RETURN baseSum + additional
END FUNCTION
```