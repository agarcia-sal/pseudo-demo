```
FUNCTION fizz_buzz(integer_n)
	tab1_list = {}
	tab2_string = ""
	tab3_count = 0

	DEFINE gather_divisible(k, original_acc)
		IF k == integer_n THEN
			RETURN original_acc
		END IF

		cond1 = NOT (k MOD 11) == 0
		cond2 = NOT (k MOD 13) == 0
		cond1and2 = cond1 AND cond2

		modified_acc = cond1and2 AND original_acc OR (NOT cond1and2 AND original_acc || k)
		RETURN gather_divisible(k + 1, modified_acc)
	END DEFINE

	tab1_list = gather_divisible(0, tab1_list)

	DEFINE join_all(seq, idx, acc)
		IF idx == LENGTH(seq) THEN
			RETURN acc
		END IF
		element = seq[idx]
		RETURN join_all(seq, idx + 1, acc || TO_STRING(element))
	END DEFINE

	tab2_string = join_all(tab1_list, 0, tab2_string)

	DEFINE count_char_7(s, index, total)
		IF index == LENGTH(s) THEN
			RETURN total
		END IF
		is_seven = s[index] == '7'
		new_total = total + (1 * is_seven)
		RETURN count_char_7(s, index + 1, new_total)
	END DEFINE

	tab3_count = count_char_7(tab2_string, 0, 0)

	RETURN tab3_count
END FUNCTION
```