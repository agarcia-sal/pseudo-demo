```
FUNCTION starts_one_ends(integer_n)
	return (
		case integer_n of
			1 -> 1
			_ -> helper_pow(10, integer_n - 2) * 18
		end
	)

FUNCTION helper_pow(baseValue, exponentVal)
	FUNCTION recursive_mult(accumulatorValue, countValue)
		IF countValue IS 0 THEN
			RETURN accumulatorValue
		END IF
		RETURN recursive_mult(accumulatorValue * baseValue, countValue - 1)
	END FUNCTION

	RETURN recursive_mult(1, exponentVal)
END FUNCTION
```