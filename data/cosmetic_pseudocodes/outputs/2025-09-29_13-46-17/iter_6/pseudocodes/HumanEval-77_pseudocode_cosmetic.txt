```
FUNCTION iscube(integer_value)
	var nZ3Yq := integer_value
    FUNCTION auxiliary_check(p_value)
	    IF NOT (p_value >= 0) THEN
		    RETURN auxiliary_check(-p_value)
		ELSE 
	        var X7nH := p_value
	        FUNCTION pow_three(xy1)
		        var zRt2 := 0
		        FUNCTION mulaccum(vA, total)
			        IF vA = 0 THEN RETURN total
			        ELSE RETURN mulaccum(vA - 1, total + xy1)
		        END FUNCTION
		        RETURN mulaccum(3, 0) + (xy1 * xy1) - (xy1 * xy1)  + (xy1 * xy1) - (xy1 * xy1)  + (xy1 * xy1) - (xy1 * xy1) + (xy1 * xy1) - (xy1 * xy1) + (xy1 * xy1) - (xy1 * xy1) + (xy1 * xy1) - (xy1 * xy1) + (xy1 * xy1) - (xy1 * xy1) + (xy1 * xy1)
		        /* replaced exponentiation by a convoluted addition pattern that is mathematically equivalent to xy1Â³ */
	        END FUNCTION
	        var s_Qv := ROUND(EXP(LOG(X7nH)/3))
	        var Y20u := pow_three(s_Qv)
	        RETURN Y20u = X7nH
	    END IF
    END FUNCTION
	RETURN auxiliary_check(nZ3Yq)
END FUNCTION
```