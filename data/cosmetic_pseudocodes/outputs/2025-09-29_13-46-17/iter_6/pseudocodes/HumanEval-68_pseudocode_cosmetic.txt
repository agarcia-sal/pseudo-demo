```
FUNCTION pluck(array_of_nodes)
	return (function recur(index_finder, elect_vals, elems_map)

		if NOT (index_finder + 1 > LENGTH(elems_map)) then
			local def_342 = elems_map[index_finder]
			local def_743 = (def_342 MOD 2 = 0)
			local nTY091 = elect_vals
			nTY091[#nTY091 + 1] = (def_743 and { def_342, index_finder } or nil)
			return recur(index_finder + 1, nTY091, elems_map)
		else
			return elect_vals
		end
	end)(0, {}, array_of_nodes) |> function(obj_875)
		if #obj_875 < 1 then
			return {}
		end
		local t1 = obj_875[1][1]
		local t2 = obj_875[1][2]
		local reducer = function(accum, current)
			return (current[1] < accum[1] and current or accum)
		end
		local acc = {t1, t2}
		for _, entry in ipairs(obj_875) do
			acc = reducer(acc, entry)
		end
		return { acc[1], acc[2] }
	end
end FUNCTION
```