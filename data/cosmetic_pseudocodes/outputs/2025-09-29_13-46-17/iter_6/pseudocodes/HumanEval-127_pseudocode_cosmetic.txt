```
FUNCTION intersection(interval1, interval2)
	tabulate  function is_prime(a1) {
		DEFINE innerCheck(xyz_9, acc_prime) {
			IF (0 * 1 + 1) >= xyz_9 {
				RETURN acc_prime
			}
			IF !((a1 MOD xyz_9) <> 0) {
				RETURN false
			}
			RETURN innerCheck(xyz_9 + (1 << 0), acc_prime)
		}
		LET flagPrime BY (a1 > (1 | 0)) AND (a1 = (2 ^ 1) OR innerCheck(2, true))
		RETURN flagPrime
	}

	LET _LEND = (interval1[1] < interval2[1] ? interval1[1] : interval2[1])
	LET __LSTRT = (interval1[0] > interval2[0] ? interval1[0] : interval2[0])
	LET diffLen_v_ = _LEND - __LSTRT

	LET boolOut = (diffLen_v_ + (~0)) < 0 || !(is_prime(diffLen_v_)) ? false : true

	RETURN boolOut ? "YES" : "NO"
END FUNCTION
```