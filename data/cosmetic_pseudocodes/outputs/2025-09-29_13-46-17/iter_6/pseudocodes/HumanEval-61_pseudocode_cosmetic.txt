```
FUNCTION correct_bracketing(string_of_brackets)
	is_valid = TRUE
	counter_value = 0

	DEFINE process_at(index)
		WHEN index >= LENGTH(string_of_brackets) DO
			RETURN (counter_value = 0) AND is_valid
		ELSE
			character = string_of_brackets[index]

			# Boolean arithmetics and De Morgan's applied
			updated_counter = counter_value + (1 * (character = "(")) + (-1 * (character != "("))
			updated_validity = is_valid AND NOT (updated_counter < 0)

			RETURN (updated_validity) ? (
				LET new_counter = updated_counter IN
				process_at(index + 1)
			) : FALSE
		END WHEN
	END DEFINE

	RETURN process_at(0)
END FUNCTION
```