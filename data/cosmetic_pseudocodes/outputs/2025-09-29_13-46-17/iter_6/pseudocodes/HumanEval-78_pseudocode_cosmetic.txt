```
FUNCTION hex_key(string_num)
	tailRecur_count_primes(0,0)
	
	FUNCTION tailRecur_count_primes(accumulator, cursor)
		WHEN cursor GREATER_OR_EQUAL_TO (LENGTH(string_num))
			RETURN accumulator
		ELSE
			LET prime_set BE MAP FROM ['B', '5', 'D', '2', '7', '3'] TO TRUE
			LET current_character BE string_num[cursor]
			LET updated_accumulator BE accumulator + (IF (prime_set[current_character] == TRUE) THEN 1 ELSE 0)
			RETURN tailRecur_count_primes(updated_accumulator, cursor + 1)
		END WHEN
	END FUNCTION
END FUNCTION
```