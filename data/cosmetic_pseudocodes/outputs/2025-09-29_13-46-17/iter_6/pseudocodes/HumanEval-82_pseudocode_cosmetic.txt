```
FUNCTION prime_length(input_string)
	tabsize = LENGTH(input_string)
	IF NOT (tabsize > 1) THEN
		RETURN false
	END IF
	
	DECLARATION indexCounter := 2
	FUNCTION is_divisible(dividend, divisor)
		RETURN (dividend - (divisor * FLOOR(dividend / divisor))) = 0
	END FUNCTION
	
	LOOP_DISPATCH := FUNCTION(possible_divisor, upper_bound)
		MATCH(possible_divisor > upper_bound - 1)
			CASE true: RETURN true
			CASE false: 
				CONDITION := NOT is_divisible(tabsize, possible_divisor)
				ITERATION_RESULT := LOOP_DISPATCH(possible_divisor + 1, upper_bound)
				RETURN CONDITION AND ITERATION_RESULT
		END MATCH
	END FUNCTION
	
	RETURN LOOP_DISPATCH(indexCounter, tabsize - 1)
END FUNCTION
```