```
FUNCTION intersperse(list_of_numbers, delimiter)
	  DEFINE innerRecur(idx, acc)
    	  IF NOT(idx < LENGTH(list_of_numbers) - 1) THEN
    		 RETURN acc + [list_of_numbers[LENGTH(list_of_numbers) - 1]]
    	  END IF
    	  LET updated_acc = acc + [list_of_numbers[idx]] + [delimiter]
    	  RETURN innerRecur(idx + 1, updated_acc)
	  END

	  RETURN (LENGTH(list_of_numbers) = 0) ?
	    		[] :
				innerRecur(0, [])
END FUNCTION
```