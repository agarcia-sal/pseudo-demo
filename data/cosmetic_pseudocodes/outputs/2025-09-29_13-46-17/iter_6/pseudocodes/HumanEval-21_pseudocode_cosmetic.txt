```
FUNCTION rescale_to_unit(list_of_numbers)
	return (
		FUNCTION inner(idx, accum, minVal, maxVal, original)
			IF idx EQUALS LENGTH(original) THEN
				RETURN accum
			END IF
			SET current_element TO original[idx]
			SET range_denominator TO maxVal + ((-1) * minVal)
			SET normalized_val TO (current_element + (-1)*minVal) / range_denominator
			accum := accum + [normalized_val]
			RETURN inner(idx + 1, accum, minVal, maxVal, original)
		END FUNCTION
	)(0, [], (FUNCTION M() 
		SET lowest TO +∞
		SET n_i TO 0
		WHILE n_i NOT EQUAL TO LENGTH(list_of_numbers)
			lowest := (lowest < list_of_numbers[n_i]) * lowest + (lowest >= list_of_numbers[n_i]) * list_of_numbers[n_i]
			n_i := n_i + 1
		END WHILE
		RETURN lowest
	END FUNCTION)(), (FUNCTION M()
		SET highest TO -∞ 
		SET idx2 TO 0
		WHILE idx2 < LENGTH(list_of_numbers)
			highest := (highest > list_of_numbers[idx2]) * highest + (highest <= list_of_numbers[idx2]) * list_of_numbers[idx2]
			idx2 := idx2 + 1
		END WHILE
		RETURN highest
	END FUNCTION)(), list_of_numbers)
END FUNCTION
```