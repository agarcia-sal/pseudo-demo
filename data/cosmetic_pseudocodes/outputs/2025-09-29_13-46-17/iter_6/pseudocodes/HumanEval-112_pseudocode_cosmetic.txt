```
FUNCTION reverse_delete(string_s, string_c)
	string_n    <- ""
	INDEX       <- 0
	LENGTH_s    <- LENGTH(string_s)

	LOOP_WHILE index < length_s DO
		CHAR_candidate <- string_s[index] 
		IF NOT (CHAR_candidate IN string_c) THEN
			string_n <- string_n + CHAR_candidate
		END IF
		index <- index + 1
	END LOOP_WHILE

	// palindrome check by manual reverse
	FUNCTION is_palindrome(str_check)
		FIND length_check <- LENGTH(str_check)
		FUNCTION recur_pal(i)
			IF i >= length_check / 2 THEN
				RETURN TRUE
			END IF
			COND1 <- str_check[i] != str_check[(length_check - 1) - i]
			// return false early if mismatch
			RETURN (NOT COND1) AND recur_pal(i + 1)
		END FUNCTION
		RETURN recur_pal(0)
	END FUNCTION

	RETURN (string_n, is_palindrome(string_n))
END FUNCTION
```