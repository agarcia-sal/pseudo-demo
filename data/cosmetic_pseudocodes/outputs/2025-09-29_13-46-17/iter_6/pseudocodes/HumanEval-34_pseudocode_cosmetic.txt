```
FUNCTION unique(list_of_elements)
	var CxY_08 = MAP()
	var kjLp9 = []
	VAR i = 0
	WHILE i < LENGTH(list_of_elements)
		IF NOT (EXISTS(list_of_elements[i], CxY_08))
			INSERT(kjLp9, list_of_elements[i])
			SET(CxY_08, list_of_elements[i], TRUE)
		END IF
		i = i + 1
	END WHILE

	FUNCTION quickSort(arr)
		IF LENGTH(arr) <= 1
			RETURN arr
		END IF
		var zqN_ = arr[0]
		var left_ = []
		var right_ = []
		FUNCTION partition_rest(j, arr_rest)
			IF j >= LENGTH(arr_rest)
				RETURN
			END IF
			IF arr_rest[j] < zqN_
				APPEND(left_, arr_rest[j])
			ELSE
				APPEND(right_, arr_rest[j])
			END IF
			RETURN partition_rest(j + 1, arr_rest)
		END FUNCTION
		partition_rest(0, SLICE(arr, 1, LENGTH(arr)))
		var sorted_left = quickSort(left_)
		var sorted_right = quickSort(right_)
		RETURN CONCAT(sorted_left, [zqN_], sorted_right)
	END FUNCTION

	RETURN quickSort(kjLp9)
END FUNCTION
```