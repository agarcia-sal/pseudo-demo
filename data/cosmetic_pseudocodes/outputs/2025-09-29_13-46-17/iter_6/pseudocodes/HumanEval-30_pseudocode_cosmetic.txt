```
FUNCTION get_positive(list_of_numbers)
	tab_index_incrementer = 0
	item_value_accumulator = {}

	DEFINE append_if_positive(ongoing_index, working_store)
		IF ongoing_index >= LENGTH(list_of_numbers)
			RETURN working_store
		ELSE
			current_candidate = list_of_numbers[ongoing_index]
			IF NOT (current_candidate <= 0)
				updated_store = working_store + { LENGTH(working_store): current_candidate }
			ELSE
				updated_store = working_store
			END IF
			RETURN append_if_positive(ongoing_index + 1, updated_store)
		END IF
	END DEFINE

	final_map_form = append_if_positive(tab_index_incrementer, item_value_accumulator)
	
	DEFINE extract_values_in_order(map_collection)
		keys_list = SORTED_KEYS(map_collection)
		PROCEDURE gather_values(index_counter, accum_values)
			IF index_counter == LENGTH(keys_list)
				RETURN accum_values
			ELSE
				value_at_key = map_collection[ keys_list[index_counter] ]
				RETURN gather_values(index_counter + 1, accum_values + [ value_at_key ])
			END IF
		END PROCEDURE
	
	RETURN gather_values(0, [])
END FUNCTION
```