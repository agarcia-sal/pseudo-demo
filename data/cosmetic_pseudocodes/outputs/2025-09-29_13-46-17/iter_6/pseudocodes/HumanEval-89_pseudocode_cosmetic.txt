```
FUNCTION encrypt(input_string)
	output_accumulator ← ""
	alphabet_sequence ← "abcdefghijklmnopqrstuvwxyz"
	
	ITERATOR helper_process_char(pos, result_accum)
		IF pos = LENGTH(input_string)
			RETURN result_accum
		ELSE
			current_elem ← input_string[pos]
			matched_position ← -1
			FINDER find_char_index(idx, found)
				IF idx = LENGTH(alphabet_sequence)
					RETURN found
				ELSE IF NOT (alphabet_sequence[idx] ≠ current_elem)
					RETURN find_char_index(idx + 1, idx)
				ELSE
					RETURN find_char_index(idx + 1, found)
			END FINDER
			real_index ← find_char_index(0, -1)
			
			updated_string ← 
				((real_index ≥ 0) AND
					LET computed_index ← ((real_index + (2 * 2)) % 26)
					IN (result_accum + alphabet_sequence[computed_index])) 
				OR (result_accum + current_elem)
				
			RETURN helper_process_char(pos + 1, updated_string)
	END ITERATOR
	
	RETURN helper_process_char(0, output_accumulator)
END FUNCTION
```