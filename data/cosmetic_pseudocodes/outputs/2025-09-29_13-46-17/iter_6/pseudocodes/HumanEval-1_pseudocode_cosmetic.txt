```
FUNCTION separate_paren_groups(string_of_parentheses)
	DEFINE FUNCTION recurse_grouped_chars(posIndex, nestingDepth, acc_chars, acc_groups)
		IF posIndex >= LENGTH(string_of_parentheses) THEN
			RETURN acc_groups
		END IF
		LET currentChar = GET_CHAR_AT(string_of_parentheses, posIndex)
		LET updatedDepth = nestingDepth
		LET updated_acc_chars = acc_chars
		LET updated_acc_groups = acc_groups
		updated_acc_chars = APPEND_TO_LIST(updated_acc_chars, currentChar)
		updatedDepth = IF (currentChar = '(') THEN nestingDepth + 1 ELSE IF (currentChar = ')') THEN nestingDepth - 1 ELSE nestingDepth
		END IF
		IF updatedDepth = 0 THEN
			LET groupString = JOIN_STRINGS(updated_acc_chars)
			updated_acc_groups = APPEND_TO_LIST(acc_groups, groupString)
			updated_acc_chars = EMPTY_LIST()
		END IF
		RETURN recurse_grouped_chars(posIndex + 1, updatedDepth, updated_acc_chars, updated_acc_groups)
	END FUNCTION
	RETURN recurse_grouped_chars(0, 0, [], [])
END FUNCTION
```