```
FUNCTION rounded_avg(integer_n, integer_m)
	var1_sum_accumulator ← 0
	var2_counter ← integer_n

	FUNCTION loop_accumulate(value_acc, curr_index)
		guard curr_index > integer_m IN
			RETURN value_acc
		ELSE
			RETURN loop_accumulate(value_acc + curr_index, curr_index + 1)
		END
	END

	FUNCTION is_less(a, b) RETURN a < b END

	guard NOT is_less(integer_m, integer_n) IN
		var1_sum_accumulator ← loop_accumulate(var1_sum_accumulator, var2_counter)
		var3_count ← (integer_m - integer_n) + 1
		var4_avg ← var1_sum_accumulator / var3_count
	
		FUNCTION round_to_int(input_float)
			varA_floor ← FLOOR(input_float)
			varB_frac ← input_float - varA_floor
			RETURN (varB_frac >= 0.5) ? (varA_floor + 1) : varA_floor
		END

		var5_rounded ← round_to_int(var4_avg)

		FUNCTION convert_to_binary(num)
			RETURN (num == 0) ? "0" :
				convert_to_binary(num DIV 2) + (num MOD 2).TO_STRING()
		END

		RETURN convert_to_binary(var5_rounded)
	END

	RETURN "-1"
END FUNCTION
```