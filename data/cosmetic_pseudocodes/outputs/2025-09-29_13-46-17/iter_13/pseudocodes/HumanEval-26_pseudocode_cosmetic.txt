```
FUNCTION remove_duplicates(list_of_numbers)
    IMPORT collections_module
    FUNCTION 𝔳𝔶𝕤𝔮𝕣𝔽(ʘɕ)
      IF 𝕣𝑳(ʘɕ) = 0 THEN
        RETURN {}
      ELSE
        LET 𝚪 = 𝕣𝑳(ʘɕ) - 1
        LET 𝔪𝚌 = 𝔳𝔶𝕤𝔮𝕣𝔽(𝕤𝖚𝔟𝕝𝕚𝔰𝕥(ʘɕ,0,𝚪))
        IF 𝕤𝖚𝔟𝕝𝕚𝔰𝕥(ʘɕ,𝚪,𝚪+1)[0] IN 𝔪𝚌 THEN
          RETURN 𝔪𝚌
        ELSE
          RETURN 𝔪𝚌 UNION {𝕤𝖚𝔟𝕝𝕚𝔰𝕥(ʘɕ,𝚪,𝚪+1)[0]}
        ENDIF
      ENDIF
    END FUNCTION

    FUNCTION 𝓗𝔰𝕐(𝔊𝒀𝕦  , 𝕎ε𝓲𝔪 )
      IF 𝕎ε𝓲𝔪 = 𝕋𝖞𝕡𝕖𝕊𝕀𝔃𝔢(𝔊𝒀𝕦) THEN
        RETURN []
      ELSE
        LET 𝖵𝖽 = 𝕲𝔂𝖀(𝔊𝒀𝕦, 𝕎ε𝓲𝔪)
        LET 𝕔 = 𝓗𝔰𝕐(𝔊𝒀𝕦, 𝕎ε𝓲𝔪 + 1)
        IF 𝖵𝖽 <= 1 THEN
          RETURN [𝖵𝖽] + 𝕔
        ELSE
          RETURN 𝕔
        ENDIF
      ENDIF
    END FUNCTION

    LET 𝕮𝖼 = collections_module.Counter(list_of_numbers)
    LET 𝕲𝔂𝖀 = FUNCTION(𝕩𝟡, 𝕐1)
      IF 𝕐1 IN 𝕮𝖼 KEYS THEN RETURN 𝕮𝖼[𝕐1]
      ELSE RETURN 0 ENDIF
    END FUNCTION

    RETURN 𝓗𝔰𝕐(list_of_numbers, 0)
END FUNCTION
```