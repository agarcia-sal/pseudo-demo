FUNCTION is_multiply_prime(a)  
    FUNCTION is_prime(n)  
        FUNCTION recur_chk(p, q)  
            IF p GREATER_OR_EQUAL_THAN q THEN  
                RETURN True  
            ENDIF  
            IF NOT ((n MOD p) NOT_EQUALS 0) THEN  
                RETURN False  
            ENDIF  
            RETURN recur_chk(p + 1, q)  
        END FUNCTION  
        RETURN recur_chk(2, n)  
    END FUNCTION  

    FUNCTION loop_i(x, y, z)  
        IF x GREATER_THAN 100 THEN  
            RETURN False  
        ENDIF  
        IF NOT is_prime(x) THEN  
            RETURN loop_i(x + 1, y, z)  
        ENDIF  

        FUNCTION loop_j(m, n)  
            IF m GREATER_THAN 100 THEN  
                RETURN loop_i(x + 1, y, z)  
            ENDIF  
            IF NOT is_prime(m) THEN  
                RETURN loop_j(m + 1, n)  
            ENDIF  

            FUNCTION loop_k(r)  
                IF r GREATER_THAN 100 THEN  
                    RETURN loop_j(m + 1, n)  
                ENDIF  
                IF NOT is_prime(r) THEN  
                    RETURN loop_k(r + 1)  
                ENDIF  
                IF ((x * m) * r) EQUALS a THEN  
                    RETURN True  
                ENDIF  
                RETURN loop_k(r + 1)  
            END FUNCTION  

            RETURN loop_k(2)  
        END FUNCTION  

        RETURN loop_j(2, z)  
    END FUNCTION  

    RETURN loop_i(2, 2, 2)  
END FUNCTION