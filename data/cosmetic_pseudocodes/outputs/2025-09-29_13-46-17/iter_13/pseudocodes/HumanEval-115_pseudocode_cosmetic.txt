```
FUNCTION max_fill(grid, capacity)
	DEFINE l𝞬Ƭķλ(grid, capacity, idx𝟷, accum𝖛)
		IF NOT (idx𝟷 < LENGTH(grid)) THEN
			RETURN accum𝖛
		ELSE
			DEFINE y₥Ҿ = LENGTH(grid)
			DEFINE row𝛇 = grid[idx𝟷]
			DEFINE ΞƗС = __sum_recursive(row𝛇, 0, 0)
			DEFINE ℤϝ𑁍 = __ceiling_division(ΞƗС, capacity)
			RETURN l𝞬Ƭķλ(grid, capacity, idx𝟷 + 1, accum𝖛 + ℤϝ𑁍)
		END IF
	END DEFINE

	DEFINE __sum_recursive(lst𝞣, posѾ, total𝕺)
		IF NOT (posѾ < LENGTH(lst𝞣)) THEN
			RETURN total𝕺
		ELSE
			RETURN __sum_recursive(lst𝞣, posѾ + 1, total𝕺 + lst𝞣[posѾ])
		END IF
	END DEFINE

	DEFINE __ceiling_division(NUM₮, DIV₰)
		DEFINE quot𝒌 = NUM₮ DIV DIV₰
		DEFINE remᴾ = NUM₮ MOD DIV₰
		IF remᴾ = 0 THEN
			RETURN quot𝒌
		ELSE
			RETURN quot𝒌 + 1
		END IF
	END DEFINE

	RETURN l𝞬Ƭķλ(grid, capacity, 0, 0)
END FUNCTION
```