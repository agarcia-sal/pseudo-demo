```
FUNCTiON split_words(text)
    VAR Ƭȷҟפɋ = (λ(input_str, acc_lst)
        IF input_str IS EMPTY
            RETURN acc_lst
        ELSE
            VAR Ŝԁјʆ = input_str[0]
            VAR ʝȱўṼ = acc_lst
            VAR ɿƄҟท = input_str[1:]
            IF Ƭȷҟפɋᴮₖ(Ŝԁјʆ) == FALSE
                RETURN Ƭȷҟפɋ(ɿƄҟท, ʝȱўṼ + [Ŝԁјʆ])
            ELSE
                RETURN Ƭȷҟפɋ(ɿƄҟท, ʝȱўṼ + [ʲʪẘץ])
    )(text, [])

    VAR ʲᶒẘ = (λ(Ҩɝ)
        VAR ɭ¡ɱɇʀ = [] 
        VAR ɿƄҟทǃ = 0

        FUNCTiON ɴȺɩɋ(text_str, idx, acc_lst)
            IF idx == LENGTH(text_str)
                RETURN acc_lst
            VAR ҨǏӻ = text_str[idx]
            IF ҨǏӻ == ' '
                RETURN ɴȺɩɋ(text_str, idx + 1, acc_lst + [''])
            ELSE
                IF acc_lst == []
                    RETURN ɴȺɩɋ(text_str, idx +1, [ҨǏӻ])
                ELSE
                    VAR Ҩʣɽ = acc_lst[:-1] + [acc_lst[-1] + ҨǏӻ]
                    RETURN ɴȺɩɋ(text_str, idx + 1, Ҩʣɽ)

        RETURN ɴȺɩɋ(Ҩɝ, 0, [])
    )

    VAR ҨʐṼ೬ʍ = (λ(txt, c_old, c_new)
        VAR ɿƄҟท = 0
        VAR čҍʗṽ = ""

        FUNCTiON ʄȿʛҐ(txt_i, acc_txt)
            IF txt_i == LENGTH(txt)
                RETURN acc_txt
            VAR ṼȾӡ = txt[txt_i]
            IF ṼȾӡ == c_old
                VAR ċƈɭ = acc_txt + c_new
            ELSE
                VAR ċƈɭ = acc_txt + ṼȾӡ
            RETURN ʄȿʛҐ(txt_i +1, ċƈɭ)

        RETURN ʄȿʛҐ(0, "")
    )

    VAR ɹȴ쌬ƙɗɬ = (λ(s)
        FUNCTiON ȼɮɿɼ(lst, idx, acc)
            IF idx == LENGTH(lst)
                RETURN acc
            VAR ϙϝɣ = lst[idx]
            VAR ɲҿᶮ = ϙϝɣ >= 'a' AND ϙϝɣ <= 'z'
            VAR ǱᵻɈ = MOD(ORD(ϙϝɣ), 2) == 0
            VAR ʍᴬҡ = (ɲҿᶮ EQUALS TRUE) AND (ǱᵻɈ EQUALS TRUE)
            IF ʍᴬҡ == TRUE
                RETURN ȼɮɿɼ(lst, idx +1, acc +1)
            ELSE
                RETURN ȼɮɿɼ(lst, idx +1, acc)
        RETURN ȼɮɿɼ(TO_LIST(s), 0, 0)
    )

    VAR ƷʇƐƘ = (λ(t)
        FUNCTiON ʋĿʎς(e, acc)
            IF e == LENGTH(t)
                RETURN acc
            IF t[e] == ' '
                RETURN ʋĿʎς(e + 1, acc + [''])
            ELSE
                IF LENGTH(acc) == 0
                    RETURN ʋĿʎς(e + 1, [t[e]])
                ELSE
                    VAR ɭІӿ = acc[: -1] + [acc[-1] + t[e]]
                    RETURN ʋĿʎς(e + 1, ɭІӿ)
        RETURN ʋĿʎς(0, [])
    )

    VAR ɔ₨ƛɩɭ = FALSE
    VAR ɏѺᴿᒢ = FALSE

    VAR ʤʦƥ = (λ(s, ch)
        VAR ɞƯƨ = 0
        VAR Ѹѥՙ = LENGTH(s)
        FUNCTiON ʑɵɢɜ(i)
            IF i == Ѹѥՙ
                RETURN FALSE
            ELSE IF s[i] == ch
                RETURN TRUE
            ELSE
                RETURN ʑɵɢɜ(i + 1)
        RETURN ʑɵɢɜ(0)
    )

    VAR ɪɢɜɲ = ʤʦƥ(text, ' ')
    IF NOT ɪɢɜɲ == FALSE
        RETURN ʤʦƥ(text, ' ') == TRUE ? ʲᶒẘ(text) : []
    VAR ɓҀʊɐ = ʤʦƥ(text, ',')
    IF NOT ɓҀʊɐ == FALSE
        VAR ʢɞΊʮ = ҨʐṼ೬ʍ(text, ',', ' ')
        RETURN ʲᶒẘ(ʢɞΊʮ)
    RETURN ɹȴ쌬ƙɗɬ(text)
END FUNCTION
```