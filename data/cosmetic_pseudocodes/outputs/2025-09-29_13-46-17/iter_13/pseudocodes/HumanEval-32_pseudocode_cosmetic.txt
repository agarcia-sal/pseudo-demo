```
FUNCTION poly(list_of_coefficients, point)
    FUNCTION summator(xw0, xw1, xw2) 
        IF xw1 == LENGTH(list_of_coefficients) THEN
            RETURN xw0
        ELSE
            RETURN summator(xw0 + list_of_coefficients[xw1] * powerRecursive(point, xw1, 0), xw1 + 1, xw2)
        END IF
    END FUNCTION

    FUNCTION powerRecursive(base, exp, acc)
        IF exp == acc THEN
            RETURN 1
        ELSE
            RETURN base * powerRecursive(base, exp, acc + 1)
        END IF
    END FUNCTION

    RETURN summator(0, 0, 0)
END FUNCTION


FUNCTION find_zero(list_of_coefficients)
    FUNCTION expand_bounds(scipr0, scipr1)
        IF poly(list_of_coefficients, scipr0) * poly(list_of_coefficients, scipr1) <= 0 THEN
            RETURN (scipr0, scipr1)
        ELSE
            RETURN expand_bounds(scipr0 * 2, scipr1 * 2)
        END IF
    END FUNCTION

    FUNCTION bisect(low, high)
        IF ABS(high - low) <= 0.0000000001 THEN
            RETURN low
        ELSE
            LET mid = (low + high) / 2
            IF poly(list_of_coefficients, mid) * poly(list_of_coefficients, low) > 0 THEN
                RETURN bisect(mid, high)
            ELSE
                RETURN bisect(low, mid)
            END IF
        END IF
    END FUNCTION


    LET (alpha, beta) = expand_bounds(-1, 1)
    RETURN bisect(alpha, beta)
END FUNCTION
```