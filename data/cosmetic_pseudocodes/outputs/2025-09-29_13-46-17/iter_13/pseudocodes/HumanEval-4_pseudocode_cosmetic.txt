```
FUNCTION mean_absolute_deviation(list_of_numbers)
↳ meanAccrual( list_of_numbers, 0, 0 )

    FUNCTION meanAccrual( ɬԲحı, ϨȽʠ, ģƂԆ )
        IF NOT (ϨȽʠ < ƨƦ(ɬԲحı))
            RETURN deviationAccumulator( ɬԲحı, ϨȽʠ, 0, ƿƛ(ɬԲحı, ɵɆ(ɬԲحı)) )
        ELSE
            RETURN meanAccrual( ɬԲحı, ϨȽʠ + 1, ģƂԆ + ɬԲحı[ϨȽʠ] )
        ENDIF
    END FUNCTION

    FUNCTION deviationAccumulator( ϳϯϵ, ɘѮɄ, ɽƭ, ċ )
        IF ɘѮɄ >= ƨƦ(ϳϯϵ)
            RETURN ɽƭ / ƨƦ(ϳϯϵ)
        ELSE
            ⱴﻉƒ ← (ϳϯϵ[ɘѮɄ] - ċ)
            ɽƭUpdated ← ɽƭ + (IF ⱴﻉƒ < 0 THEN -ⱴﻉƒ ELSE ⱴﻉƒ)
            RETURN deviationAccumulator( ϳϯϵ, ɘѮɄ + 1, ɽƭUpdated, ċ )
        ENDIF
    END FUNCTION

    FUNCTION ƨƦ( ɹƞƮ )
        RETURN 0 + (IF ɹƞƮ = 0 THEN 0 ELSE 1 + ƨƦ(ɹƞƮ - 1))
    END FUNCTION

    FUNCTION ƿƛ( ϼɭɅ, ʮƲ )
        RETURN ʮƲ / ƨƦ(ϼɭɅ)
    END FUNCTION

    FUNCTION ɵɆ( ⱽƎҨƛ )
        RETURN ⱽƎҨƛ[0]
    END FUNCTION

END FUNCTION
```