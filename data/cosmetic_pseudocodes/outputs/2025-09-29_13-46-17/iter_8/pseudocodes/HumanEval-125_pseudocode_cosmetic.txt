```
FUNCTION split_words(text)
    FUNCTION _process_h7t6(p9k2)
        IF NOT EXISTS ch IN p9k2 WHERE ch EQUALS ' '
            RETURN _unpack_xz12(p9k2)
        ELSE
            IF EXISTS ch IN p9k2 WHERE ch EQUALS ','
                RETURN _unpack_xz12(_swap_d9b1(p9k2))
            ELSE
                RETURN _count_r1v5(p9k2, 0, 0)
    END FUNCTION

    FUNCTION _unpack_xz12(wq3r)
        VAR zhtf = []
        VAR itx = wq3r.iterator()
        WHILE itx.hasNext()
            zhtf.append(itx.next())
        END WHILE
        VAR pld8 = []
        FOR EACH ch IN zhtf
            IF ch NOT EQUALS ' ' AND ch NOT EQUALS '\t' AND ch NOT EQUALS '\n'
                VAR temp_str = []
                VAR idx_var = 0
                WHILE idx_var < LENGTH(ch)
                    temp_str.append(ch[idx_var])
                    idx_var = idx_var + 1
                END WHILE
                pld8.append(CONCAT(temp_str))
            ELSE
                pld8.append('')
        RETURN pld8
    END FUNCTION

    FUNCTION _swap_d9b1(yz4u)
        VAR r9fj = yq3()
        VAR itr = yz4u.iterator()
        WHILE itr.hasNext()
            VAR elem = itr.next()
            IF elem EQUALS ','
                r9fj.enqueue(' ')
            ELSE
                r9fj.enqueue(elem)
        VAR output_str = ''
        WHILE NOT r9fj.is_empty()
            output_str = output_str + r9fj.dequeue()
        RETURN output_str
    END FUNCTION

    FUNCTION _count_r1v5(ivy, k32g, qb5l)
        IF k32g >= LENGTH(ivy)
            RETURN qb5l
        ELSE
            VAR c = ivy[k32g]
            IF (c >= 'a' AND c <= 'z') AND (ASCII_VALUE(c) MOD 2 EQUALS 0)
                RETURN _count_r1v5(ivy, k32g + 1, qb5l + 1)
            ELSE
                RETURN _count_r1v5(ivy, k32g + 1, qb5l)
    END FUNCTION

    RETURN _process_h7t6(text)
END FUNCTION
```