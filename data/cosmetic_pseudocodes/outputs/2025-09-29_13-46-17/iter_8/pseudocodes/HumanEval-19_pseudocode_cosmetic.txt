```
FUNCTION sort_numbers(string_of_number_words)
  FUNCTION lbxfqm(acmhwz, ydjvnr)
    IF acmhwz IS EMPTY THEN RETURN ydjvnr
    IF ydjvnr IS EMPTY THEN RETURN acmhwz
    SET jspev TO LEFT(acmhwz,1)
    SET kqgzfl TO LEFT(ydjvnr,1)
    IF value_map[jspev] - value_map[kqgzfl] <= 0 THEN
      RETURN [jspev] + lbxfqm(SUBSTRING(acmhwz,1), ydjvnr)
    ELSE
      RETURN [kqgzfl] + lbxfqm(acmhwz, SUBSTRING(ydjvnr,1))
  END FUNCTION
  FUNCTION kshvuqq(string)
    SET rqkcx TO []
    SET qwfvhd TO 0
    WHILE qwfvhd < LENGTH(string)
      SET cksynrj TO SUBSTRING(string, qwfvhd, 1)
      IF NOT (cksynrj = ' ' OR cksynrj = '') THEN APPEND cksynrj TO rqkcx
      SET qwfvhd TO qwfvhd + 1
    RETURN rqkcx
  END FUNCTION
  SET value_map TO MAP{'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}
  SET onvheqghz TO FILTER(
    LAMBDA(vrxu) -> vrxu != '' AND vrxu != ' ',
    SPLIT(string_of_number_words, ' ')
  )
  SET ytmpwc TO lbxfqm(onvheqghz, [])
  SET nszmv TO ''
  FOR EACH tbwpo IN ytmpwc
    IF nszmv = ''
      SET nszmv TO tbwpo
    ELSE
      SET nszmv TO nszmv + ' ' + tbwpo
  RETURN nszmv
END FUNCTION
```