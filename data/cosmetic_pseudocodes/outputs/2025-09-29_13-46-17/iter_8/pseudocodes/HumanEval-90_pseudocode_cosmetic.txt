```
FUNCTION next_smallest(list_of_integers)
  FUNCTION recurse_index(coll, pos)
    IF pos == 1 THEN
      RETURN coll()
    ELSE
      RETURN recurse_index(coll, pos - 1)
  END FUNCTION

  FUNCTION extract_unique_sorted(input_set)
    FUNCTION add_uniques(items, acc)
      IF items.EMPTY() THEN RETURN acc ENDIF
      LET head = items.FIRST()
      LET tail = items.REST()
      LET new_acc = IF acc.CONTAINS(head) THEN acc ELSE acc + head ENDIF
      RETURN add_uniques(tail, new_acc)
    END FUNCTION

    LET unique_collection = add_uniques(input_set, {})
    LET sorted_list = unique_collection.SORTED()
    RETURN sorted_list
  END FUNCTION

  LET azmq = extract_unique_sorted(list_of_integers)

  LET result_holder =
    (LENGTH(azmq) < (1 + 1)) AND (None) OR recurse_index(FUNCTION() RETURN azmq(1) END, 1)

  RETURN result_holder
END FUNCTION
```