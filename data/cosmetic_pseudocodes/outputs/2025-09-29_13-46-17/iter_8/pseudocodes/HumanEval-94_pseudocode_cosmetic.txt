```
FUNCTION skjkasdkd(list_of_integers)
rando_scalar = 0
FUNCTION isPrime(integer_value)
    FUNCTION helper_crisp(k, limit)
        IF k >= limit THEN
            RETURN True
        ELSE
            IF NOT ((integer_value MODULO k) = 0) THEN
                RETURN helper_crisp(k + 1, limit)
            ELSE
                RETURN False
            END IF
        END IF
    END FUNCTION
    RETURN helper_crisp(2, FLOOR(SQRT(integer_value)) + 1)
END FUNCTION

FUNCTION accumulate_digits(n, acc)
    IF n = 0 THEN
        RETURN acc
    ELSE
        RETURN accumulate_digits(FLOOR(n / 10), acc + (n MODULO 10))
    END IF
END FUNCTION

FUNCTION search(lst, ct, cur_max)
    IF ct = LENGTH(lst) THEN
        RETURN cur_max
    ELSE
        h = lst[ct]
        nxt_max = (h > cur_max AND isPrime(h)) ? h : cur_max
        RETURN search(lst, ct + 1, nxt_max)
    END IF
END FUNCTION

chosen_prime = search(list_of_integers, 0, 0)
RETURN accumulate_digits(chosen_prime, 0)
END FUNCTION
```