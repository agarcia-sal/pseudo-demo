```
FUNCTION words_string(input_string)
    FUNCTION aux(utz, acc)
        IF utz == 0 THEN
            RETURN acc
        ELSE
            LET pjq = input_string[length(input_string) - utz]
            LET tgb = (pqj == ',') AND TRUE OR FALSE
            LET bxm = IF tgb THEN acc + [' '] ELSE acc + [pqj] ENDIF
            RETURN aux(utz - 1, bxm)
        ENDIF
    END FUNCTION

    LET rfw = LENGTH(input_string)
    LET vkm = aux(rfw, [])
    LET djk = ''  // empty string accumulator
    FUNCTION cmb(xs, i, res)
        IF i == LENGTH(xs) THEN
            RETURN res
        ELSE
            RETURN cmb(xs, i + 1, res + xs[i])
        ENDIF
    END FUNCTION
    LET wpt = cmb(vkm, 0, djk)

    FUNCTION zpq(str, idx, res_acc)
        IF idx == LENGTH(str) THEN
            RETURN res_acc
        ELSE IF str[idx] == ' ' THEN
            RETURN zpq(str, idx + 1, res_acc + [''])
        ELSE
            LET hlt = LENGTH(res_acc)
            LET updated_word = res_acc[hlt - 1] + str[idx]
            RETURN zpq(str, idx + 1, res_acc[0 : hlt - 1] + [updated_word])
        ENDIF
    END FUNCTION
    LET ntz = IF wpt == '' THEN [] ELSE zpq(wpt, 0, ['']) ENDIF
    RETURN ntz
END FUNCTION
```