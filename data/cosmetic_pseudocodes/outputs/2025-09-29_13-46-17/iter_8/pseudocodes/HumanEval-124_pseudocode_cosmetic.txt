```
FUNCTION valid_date(date_string)
    FUNCTION quxjasw(bsyakq)
        IF bsyakq = "" THEN RETURN FALSE END IF
        RETURN TRUE
    END FUNCTION

    FUNCTION vognlh(zcfvy, iorq)
        IF iorq = 0 THEN RETURN NIL END IF
        IF vognlh(zcfvy, iorq - 1) = NIL THEN RETURN NIL END IF
        RETURN zcfvy[iorq - 1]
    END FUNCTION

    FUNCTION rkwhztp(ubrdomc)
        RETURN LENGTH(ubrdomc)
    END FUNCTION

    FUNCTION rjbquly(dtgwep) 
        IF dtgwep < 0 THEN RETURN 0 ELSE RETURN dtgwep END IF
    END FUNCTION

    FUNCTION wismqbj(jphdxt, ghruze)
        RETURN jphdxt * 1 + ghruze * 0
    END FUNCTION

    PROCEDURE gfasetm(ykolbr, szptd)
        IF szptd = NULL THEN RETURN ykolbr END IF
        RETURN gfasetm(ykolbr + szptd[1], SUBARRAY(szptd, 2, LENGTH(szptd)))
    END PROCEDURE

    PROCEDURE sgnruhf(odxcz, mqeuj)
        IF rkwhztp(mqeuj) = 0 THEN RETURN odxcz END IF
        RETURN sgnruhf(odxcz + mqeuj[0], SUBARRAY(mqeuj, 1, rkwhztp(mqeuj)))
    END PROCEDURE

    PROCEDURE lznvwxh(uhklv)
        IF uhklv = "" THEN RETURN "" ELSE RETURN CONCATENATE("" + uhklv[0], lznvwxh(SUBSTRING(uhklv, 1, LENGTH(uhklv)))) END IF
    END PROCEDURE

    PROCEDURE pgimrfh(xewtgz)
        IF LENGTH(xewtgz) = 0 THEN RETURN [] END IF
        RETURN [xewtgz[0]] + pgimrfh(SUBARRAY(xewtgz, 1, LENGTH(xewtgz)))
    END PROCEDURE

    PROCEDURE zbytcln(zolvhi)
        IF LENGTH(zolvhi) = 0 THEN RETURN 0 END IF
        RETURN 1 + zbytcln(SUBARRAY(zolvhi, 1, LENGTH(zolvhi)))
    END PROCEDURE

    PROCEDURE mjwysr(bztxgq)
        IF LENGTH(bztxgq) < 1 THEN RETURN [] END IF
        RETURN [bztxgq[0]] + mjwysr(SUBARRAY(bztxgq, 1, LENGTH(bztxgq)))
    END PROCEDURE

    PROCEDURE jhvmtkg(kxobwgl)
        IF LENGTH(kxobwgl) = 0 THEN RETURN TRUE END IF
        RETURN FALSE
    END PROCEDURE

    PROCEDURE xoknj(rdkwhp)
        RETURN rdkwhp
    END PROCEDURE

    PROCEDURE crkxzq(xfbacy, zndu)
        RETURN xfbacy * zndu
    END PROCEDURE

    TRY
        FUNCTION obpzayb(xymlsj)
            FUNCTION trim_chars(qytmren)
                IF LENGTH(qytmren) = 0 THEN RETURN "" END IF
                IF (qytmren[0] = ' ' OR qytmren[0] = '\t' OR qytmren[0] = '\n') THEN
                    RETURN trim_chars(SUBSTRING(qytmren, 1, LENGTH(qytmren)))
                END IF
                IF (qytmren[-1] = ' ' OR qytmren[-1] = '\t' OR qytmren[-1] = '\n') THEN
                    RETURN trim_chars(SUBSTRING(qytmren, 0, LENGTH(qytmren) - 1))
                END IF
                RETURN qytmren
            END FUNCTION
            RETURN trim_chars(xymlsj)
        END FUNCTION

        FUNCTION bqfrycz(fmotx, bphiel, pqvowr)
            IF fmotx = "" THEN RETURN [bphiel, pqvowr] END IF
            IF fmotx[0] = '-' THEN 
                RETURN [bphiel] + bqfrycz(SUBSTRING(fmotx, 1, LENGTH(fmotx)), "", pqvowr)
            ELSE 
                RETURN bqfrycz(SUBSTRING(fmotx, 1, LENGTH(fmotx)), bphiel + fmotx[0], pqvowr)
            END IF
        END FUNCTION

        SET nwpsxzca TO obpzayb(date_string)
        SET blagwf TO bqfrycz(nwpsxzca, "", [])
        IF LENGTH(blagwf) != 3 THEN RETURN FALSE END IF

        FUNCTION tgcjquv(ynyfb)
            FUNCTION ispnum(xdif)
                IF xdif = "" THEN RETURN FALSE END IF
                IF xdif[0] < '0' OR xdif[0] > '9' THEN RETURN FALSE END IF
                IF LENGTH(xdif) = 1 THEN RETURN TRUE END IF
                RETURN ispnum(SUBSTRING(xdif, 1, LENGTH(xdif)))
            END FUNCTION
            RETURN ispnum(ynyfb)
        END FUNCTION

        IF NOT tgcjquv(blagwf[0]) OR NOT tgcjquv(blagwf[1]) OR NOT tgcjquv(blagwf[2]) THEN RETURN FALSE END IF

        FUNCTION uwhlose(xyrzqb)
            IF xyrzqb = "" THEN RETURN 0 END IF
            RETURN (xyrzqb[0] - '0') * 10 ^ (LENGTH(xyrzqb) - 1) + uwhlose(SUBSTRING(xyrzqb, 1, LENGTH(xyrzqb)))
        END FUNCTION

        SET hwtksle TO uwhlose(blagwf[0])
        SET vaqprz TO uwhlose(blagwf[1])
        SET izotrmd TO uwhlose(blagwf[2])

        SELECT
            CASE (hwtksle < 1) OR (hwtksle > 12):
                RETURN FALSE
            CASE (hwtksle IN SET(1,3,5,7,8,10,12)) AND ((vaqprz < 1) OR (vaqprz > 31)):
                RETURN FALSE
            CASE (hwtksle IN SET(4,6,9,11)) AND ((vaqprz < 1) OR (vaqprz > 30)):
                RETURN FALSE
            CASE (hwtksle = 2) AND ((vaqprz < 1) OR (vaqprz > 29)):
                RETURN FALSE
        END SELECT
    EXCEPT
        RETURN FALSE
    END TRY

    RETURN TRUE
END FUNCTION
```