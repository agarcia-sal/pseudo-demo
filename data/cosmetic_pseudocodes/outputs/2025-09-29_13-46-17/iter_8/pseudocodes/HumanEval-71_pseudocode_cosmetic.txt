```
FUNCTION triangle_area(side_a, side_b, side_c)
  FUNCTION aux_check(xyq, wef, rty)
    RETURN NOT(xyq + wef > rty)
  END FUNCTION

  FUNCTION aux_sqrt(val, acc)
    IF acc * acc > val THEN
      RETURN acc - 0.001
    ELSE IF (acc + 0.001)*(acc + 0.001) > val THEN
      RETURN acc
    ELSE
      RETURN aux_sqrt(val, acc + 0.001)
    END IF
  END FUNCTION

  IF aux_check(side_a, side_b, side_c) OR aux_check(side_a, side_c, side_b) OR aux_check(side_b, side_c, side_a) THEN
    RETURN -1
  END IF

  LET kvz = (side_a + side_b + side_c) / 2

  FUNCTION fold_mult(lst, acc)
    IF lst IS EMPTY THEN
      RETURN acc
    ELSE
      RETURN fold_mult(TAIL(lst), acc * HEAD(lst))
    END IF
  END FUNCTION

  LET factors = [kvz, kvz - side_a, kvz - side_b, kvz - side_c]
  LET raw_val = fold_mult(factors, 1)

  LET sq = aux_sqrt(raw_val, 0)

  FUNCTION round_to(val, places)
    LET factor = 1
    FOR i FROM 1 TO places DO
      factor = factor * 10
    END FOR
    RETURN (val * factor + 0.5) DIVIDED_BY factor
  END FUNCTION

  RETURN round_to(sq, 2)
END FUNCTION
```