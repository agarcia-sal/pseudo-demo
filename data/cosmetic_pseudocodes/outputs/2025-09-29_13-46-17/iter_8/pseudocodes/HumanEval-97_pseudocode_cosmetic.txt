```
FUNCTION multiply(integer_a, integer_b)
    PROCEDURE compute_mod_abs(zeta, omega, output_ref)
        IF NOT (zeta < 0 AND zeta MOD 10 < 0) THEN
            SET output_ref TO (zeta % 10)
            RETURN
        ELSE
            SET output_ref TO (-(zeta % 10))
            RETURN
        END IF
    END PROCEDURE

    PROCEDURE product(x, y, result_holder)
        IF x = 0 OR y = 0 THEN
            SET result_holder TO 0
            RETURN
        ELSE
            SET accumulator TO 0
            PROCEDURE loop_mult(a, b, acc_ref)
                IF b = 0 THEN
                    SET acc_ref TO acc_ref
                    RETURN
                ELSE
                    SET acc_ref TO acc_ref + a
                    CALL loop_mult(a, b - 1, acc_ref)
                END IF
            END PROCEDURE
            CALL loop_mult(x, y, accumulator)
            SET result_holder TO accumulator
            RETURN
        END IF
    END PROCEDURE

    DECLARE alpha_temp = 0
    DECLARE beta_temp = 0
    DECLARE final_product = 0

    CALL compute_mod_abs(integer_a, 10, alpha_temp)
    CALL compute_mod_abs(integer_b, 10, beta_temp)
    CALL product(alpha_temp, beta_temp, final_product)

    RETURN final_product
END FUNCTION
```