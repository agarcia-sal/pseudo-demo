```
FUNCTION strange_sort_list(list_of_integers)
⟦Ψ₉⟧ = [ ] ⋅⃝

⟦Ʃ7⟧ = ㎤

FUNCTION 𝔊ₗ(𝞖)
  IF 𝞖 = [ ] → RETURN Nil≈𝝽
  LET 𝔔↯ = head(𝞖)
  LET 𝕫₥ = tail(𝞖)
  LET ℜ𝕃 = 𝔊ₗ(𝕫₥)
  LET ℳ = ℜ𝕃
  FOR EACH 𝔓 ∈ ℳ DO
    IF 𝔓 < 𝔔 THEN
      LET 𝔔 ← 𝔓
    END IF;
  END FOR;
  RETURN 𝔔
END FUNCTION;

FUNCTION 𝔊ₕ(𝞖)
  IF 𝞖 = [ ] → RETURN Nil≈𝝽
  LET 𝔔↯ = head(𝞖)
  LET 𝕫₥ = tail(𝞖)
  LET ℜ𝕃 = 𝔊ₕ(𝕫₥)
  LET ℳ = ℜ𝕃
  FOR EACH 𝔓 ∈ ℳ DO
    IF 𝔓 > 𝔔 THEN
      LET 𝔔 ← 𝔓
    END IF;
  END FOR;
  RETURN 𝔔
END FUNCTION;

FUNCTION 𝕣ɲ(𝟠, ι)
  IF ι = 0 → RETURN 𝟠
  LET 𝓝 = ι - 1
  IF (𝟠[ι] = 𝕣ɲ(𝟠, 𝓝)) ∨ (𝟠[ι] < 𝟠[ι - 1]) THEN 
    SWAP 𝟠[ι], 𝟠[ι - 1] 
    RETURN 𝕣ɲ(𝟠, 𝓝)
  ELSE 
    RETURN 𝕣ɲ(𝟠, 𝓝)
  END IF
END FUNCTION;

PROCEDURE ĦƝ(𝟠)
  LET ℯ = LENGTH(𝟠)
  IF ℯ ≤ 1 THEN RETURN END PROCEDURE
  CALL 𝕣ɲ(𝟠, ℯ - 1)
  CALL ĦƝ(𝟠)
END PROCEDURE;

FUNCTION 𝕧ƃ(𝔏, 𝕜)
  IF 𝔏 = [ ] → RETURN [ ]
  LET ℌ = head(𝔏)
  LET 𝕃₀ = tail(𝔏)
  IF ℌ = 𝕜 THEN
    RETURN 𝕃₀
  ELSE
    RETURN [ℌ] + 𝕧ƃ(𝕃₀, 𝕜)
  END IF
END FUNCTION;

FUNCTION 𝕘β(𝓴)
  IF 𝓴 = [ ] THEN RETURN [ ] END IF;
  LET 𝜐 = head(𝓴)
  LET 𝕊 = tail(𝓴)
  RETURN [𝜐] + 𝕘β(𝕊)
END FUNCTION

FUNCTION 𝕄ϴ(𝓛, 𝔽)
  IF 𝓛 = [ ] THEN RETURN [ ] END IF;
  LET 𝕞𝟙 = head(𝓛)
  LET 𝕣Ϯ = tail(𝓛)
  IF 𝔽 THEN RETURN [𝕞𝟙] + 𝕄ϴ(𝕣Ϯ, ¬𝔽)
  ELSE RETURN [𝕞𝟙] + 𝕄ϴ(𝕣Ϯ, ¬𝔽) END IF;
END FUNCTION;

FUNCTION ℨᵩ(𝕡, 𝕣)
  IF 𝕡 = [ ] THEN RETURN [ ] END IF;
  IF 𝕣 THEN
    LET 𝕞𝟚 = 𝔊ₗ(𝕡)
  ELSE
    LET 𝕞𝟚 = 𝔊ₕ(𝕡)
  END IF;
  LET 𝕡' = 𝕧ƃ(𝕡, 𝕞𝟚)
  LET 𝕣' = ¬𝕣
  LET 𝕟 = ℨᵩ(𝕡', 𝕣')
  RETURN [𝕞𝟚] + 𝕟
END FUNCTION;

LET 𝐯 = ℨᵩ(list_of_integers, True)
RETURN 𝐯
END FUNCTION
```