```
FUNCTION below_zero(list_of_operations)
  DEFINE ϕ₉₇λ(accumulator𝜙𝛼, remainingList) ~→
    IF NOT (remainingList ≠ [])
      RETURN(False)
    ELSE
      LET nextElement ↦ head(remainingList)
      LET tailList ↦ tail(remainingList)
      LET updatedAccumulator ↦ (accumulator𝜙𝛼 + nextElement)
      IF ((updatedAccumulator ≥ 0) OR NOT (updatedAccumulator < 0))
        RETURN(ϕ₉₇λ(updatedAccumulator, tailList))
      ELSE
        RETURN(True)
      END IF
    END IF
  ⋯
  RETURN(ϕ₉₇λ(0, list_of_operations))
END FUNCTION
```