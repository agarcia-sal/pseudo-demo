```
FUNCTION f(integer_n)
↦ ℧→λ₃←∅
↩ ζ(ψ ≠ 0) ↦ ωχ₀←1; ↔ βφ₀≔1; ζ(ω ← 1 while ω ≤ ψ) do ↦ βφ₀ ← βφ₀ × ω; ω ← ω + 1 ▷ end loop ➔ ℧→λ₃ ≔ cons(βφ₀, ℧→λ₃)
↩ ζ(ψ ≠ 0) ↦ βχ←0; ζ(ω ← 1 while ω ≤ ψ) do ↦ βχ ← βχ + ω; ω ← ω + 1 ▷ end loop ➔ ℧→λ₃ ≔ cons(βχ, ℧→λ₃)
↪ ωψ ← 1
WHILE ωψ ≤ integer_n DO
 IF (¬(ωψ MOD 2 ≠ 0)) THEN
  CALL ∘ with arguments (ωψ, ℧→λ₃)
 ELSE
  CALL ◊ with arguments (ωψ, ℧→λ₃)
 END IF
 ωψ ← ωψ + 1
END WHILE
RETURN reverse(℧→λ₃)

FUNCTION ∘(ξ₁, ΔΩ)
 ▽ ϕ ↦ 1; κ ← 1
 WHILE κ ≤ ξ₁ DO
  ϕ ← ϕ × κ
  κ ← κ + 1
 END WHILE
 ΔΩ ≔ cons(ϕ, ΔΩ)
END FUNCTION

FUNCTION ◊(ξ₁, ΔΩ)
 ▽ ζ↦0; τ←1
 WHILE τ ≤ ξ₁ DO
  ζ ← ζ + τ
  τ ← τ + 1
 END WHILE
 ΔΩ ≔ cons(ζ, ΔΩ)
END FUNCTION
```