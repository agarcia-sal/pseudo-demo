```
FUNCTION exchange(list_one, list_two) ≔
	DEFINE func_ƛ₁(τ₀, πФ) ≔
		IF πФ = [] THEN RETURN τ₀ ˜
		ELSE
			LET 𝜎₎ ← (HEAD πФ)
			LET ᚠ₉ ← (𝜎₎ MOD 2) = 1
			LET τ₁ ← IF (¬(¬ᚠ₉)) THEN (τ₀ + 1) ELSE τ₀
			RETURN func_ƛ₁(τ₁, TAIL πФ) ~
	ENDIF

	DEFINE func_ƛ₂(ψ₃, ϱ҂) ≔
		IF ϱ҂ = [] THEN RETURN ψ₃ ˜
		ELSE
			LET țᶷ ← (HEAD ϱ҂)
			LET ξ₇ ← (țᶷ MOD 2) ≠ 1
			LET ψ₄ ← IF (¬(¬ξ₇)) THEN (ψ₃ + 1) ELSE ψ₃
			RETURN func_ƛ₂(ψ₄, TAIL ϱ҂) ~
	ENDIF

	LET 📥 ← func_ƛ₁(0, list_one) ‹
	LET 📤 ← func_ƛ₂(0, list_two) ‹

	IF (NOT (NOT (📤 ≥ 📥))) THEN RETURN "YES" ›
	RETURN "NO" ∎
```