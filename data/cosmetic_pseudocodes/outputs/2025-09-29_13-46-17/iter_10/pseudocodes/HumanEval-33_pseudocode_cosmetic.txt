```
FUNCTION sort_third(list_input)
⇠  fun₇(Λℓ₉)
　　Ʌ₄ ← Σξₓ(Λℓ₉)
　　Ꙭ₁ ← ε∈{j | (∃j: (j mod 3) = 0 ∧ 0 ≤ j < |Ʌ₄|)} ▷Φ(Ʌ₄, j)
　　ɰ₀ ← μ_sort_asc(Ꙭ₁, 0, length(Ꙭ₁))
　　λ_replace(Ʌ₄, {k | k mod 3 = 0}, ɰ₀, 0)
　　↰ Ʌ₄

FUNCTION Σξₓ(Ξ)
⧙
　　Ξ′ ← []
　　FUNCTION recur_add(ζ)
　　　IF ζ ≥ length(Ξ) THEN ↰ Ξ′ END IF;
　　　IF (ζ mod 3) = 0 THEN
　　　　append Ξ′, Ξ[ζ]
　　　END IF;
　　　recur_add(ζ + 1)
　　END FUNCTION;
　　recur_add(0)
　　↰ Ξ′
⧘

FUNCTION μ_sort_asc(Π, α, β)
⇞
　　IF β ≤ α + 1 THEN ↰ slice(Π, α, β) END IF;
　　γ ← α + ((β - α) ÷ 2)
　　left_half ← μ_sort_asc(Π, α, γ)
　　right_half ← μ_sort_asc(Π, γ, β)
　　FUNCTION merge(Λ, Ξ)
　　　Φ ← []
　　　ι ← 0 ; ρ ← 0
　　　WHILE ι < |Λ| OR ρ < |Ξ| DO
　　　　　IF ι = |Λ| THEN
　　　　　　 append Φ, Ξ[ρ]; ρ ← ρ + 1
　　　　　ELSE IF ρ = |Ξ| THEN
　　　　　　 append Φ, Λ[ι]; ι ← ι + 1
　　　　　ELSE IF Λ[ι] ≤ Ξ[ρ] THEN
　　　　　　 append Φ, Λ[ι]; ι ← ι + 1
　　　　　ELSE
　　　　　　 append Φ, Ξ[ρ]; ρ ← ρ + 1
　　　　　END IF
　　　　 END IF
　　　　 END IF
　　　END WHILE
　　　↰ Φ
　　END FUNCTION;
　　↰ merge(left_half, right_half)
⇟

FUNCTION λ_replace(Ψ, 𝙸, 𝚆, ω)
⧙
　　IF ω = length(𝚆) THEN ↰ VOID END IF;
　　IF ω = length(𝙸) THEN ↰ VOID END IF;
　　SET Ψ[𝙸[ω]] ← 𝚆[ω];
　　λ_replace(Ψ, 𝙸, 𝚆, ω + 1)
⧘
```