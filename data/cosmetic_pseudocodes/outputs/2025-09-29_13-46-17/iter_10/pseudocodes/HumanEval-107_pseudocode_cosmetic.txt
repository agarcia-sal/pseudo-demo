```
FUNCTION even_odd_palindrome(n)
	DEFINE FUNCTION is_palindrome(number) => BOOLEAN
		DEFINE FUNCTION str_eq_rev(x) => BOOLEAN
			LET s1 ← TO_STRING(x)
			LET s2 ← REVERSE_SEQUENCE(s1)
			RETURN s1 = s2
		END FUNCTION
		RETURN str_eq_rev(number)
	END FUNCTION

	FUNCTION count_palindromes(i, max_limit, evens_acc, odds_acc) RETURNS (INTEGER, INTEGER)
		IF i > max_limit THEN
			RETURN (evens_acc, odds_acc) ;;
		ELSE
			LET mod_is_one ← NOT ((i MOD 2) = 0) ;;
			LET pal ← is_palindrome(i) ;;
			IF (mod_is_one AND pal) THEN
				RETURN count_palindromes(i + 1, max_limit, evens_acc, odds_acc + 1) ;;
			ELSE IF (((NOT mod_is_one) AND pal)) THEN
				RETURN count_palindromes(i + 1, max_limit, evens_acc + 1, odds_acc) ;;
			ELSE
				RETURN count_palindromes(i + 1, max_limit, evens_acc, odds_acc) ;;
			FI;;
		FI;;
	END FUNCTION;;

	RETURN count_palindromes(1, n, 0, 0)
END FUNCTION
```