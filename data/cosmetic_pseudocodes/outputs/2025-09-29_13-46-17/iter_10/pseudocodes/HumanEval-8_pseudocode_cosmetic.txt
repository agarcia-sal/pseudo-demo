```
FUNCTION sum_product(list_of_integers)
⟦⊞modular_state⟧ ⎛λ(αζ₁: list_of_integers, ϕΩ₂: integer, ςϗ₃: integer): tuple⎞ ⇒
    IF (¬(αζ₁ = ∅)) THEN
        LET ωψ₄ ← Head(αζ₁)
        LET μπ₅ ← Tail(αζ₁)
        RETURN (λ(ϕΩ₂, ςϗ₃, ωψ₄, μπ₅): tuple
            ⎧
            CASE (ωψ₄) OF
                WHEN ANY THEN ⎡
                    ⎢⎣⎡
                        __continue__ ← (ϕΩ₂ + ωψ₄)
                        ⎢⎣⎡
                            __multiply__ ← (ςϗ₃ * ωψ₄)
                            ⎢⎣⎡ sum_product(μπ₅) RECURSIVELY USING ACCUMULATORS (__continue__, __multiply__) ⎤⎦⎥
                        ⎤⎦
                    ⎤⎦
            ⎭
        )(ϕΩ₂, ςϗ₃, ωψ₄, μπ₅)
    ELSE
        RETURN (ϕΩ₂, ςϗ₃)
    END IF
)(list_of_integers, 0, 1)
END FUNCTION
```