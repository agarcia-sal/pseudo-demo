```
FUNCTION is_nested(string)
⟦ԋ⟧ ← ( )
⟦Ɓƕ⟧ ← ( )
FUNCTION Ωᵣ(φ, ㇇)
	IF φ < ㇇ THEN
		IF (string[φ] = '[') = TRUE THEN
			Ωᵣ(φ + 1, ㇇) ⟵ (⟦ԋ⟧ + [φ], ⟦Ɓƕ⟧)
		ELSE
			Ωᵣ(φ + 1, ㇇) ⟵ (⟦ԋ⟧, ⟦Ɓƕ⟧ + [φ])
		END IF ;
	ELSE
		(⟦ԋ⟧, ⟦Ɓƕ⟧)
	END IF
END FUNCTION ;

(⟦ԋ⟧, ⟦Ɓƕ⟧) ← Ωᵣ(0, LENGTH(string)) ;
⟦Ɓƕ⟧ ← REVERSE(⟦Ɓƕ⟧) ;
count_₅ ← 0 ;
pos_Λ ← 0 ;
len_₆ ← LENGTH(⟦Ɓƕ⟧) ;
FUNCTION ζλ(ξ)
	IF ξ = LENGTH(⟦ԋ⟧) THEN
		( count_₅ , pos_Λ )
	ELSE
		IF ¬ (pos_Λ < len_₆) THEN
			( count_₅ , pos_Λ )
		ELSE
			IF ¬ ( ⟦ԋ⟧[ξ] < ⟦Ɓƕ⟧[pos_Λ] ) THEN
				ζλ(ξ + 1)
			ELSE
				count_₅ ← count_₅ + 1 ;
				pos_Λ ← pos_Λ + 1 ;
				ζλ(ξ + 1)
			END IF
		END IF
	END IF
END FUNCTION ;

( count_₅ , pos_Λ ) ← ζλ(0) ;
IF (¬(count_₅ < 2)) THEN
	TRUE
ELSE
	FALSE
END IF
```