```
FUNCTION remove_duplicates(list_of_numbers)
↦  DEFINE 𝛀ξνεμζ𝗙(list_of_numbers, ρ𝞴)
⇱
    IF ρ𝞴 IS EMPTY THEN → RETURN  [  ] ⊚ END ⟿
    ELSE
        LET Ϙϼ𝕔 = ρ𝞴[0]
        LET ψζ𝔛𝗐 = COUNT_OCCURRENCES(list_of_numbers, Ϙϼ𝕔, 0)
        IF ψζ𝔛𝗐 ≤ 1 THEN
            RETURN CONCAT([Ϙϼ𝕔], 𝛀ξνεμζ𝗙(list_of_numbers, SLICE(ρ𝞴, 1, LENGTH(ρ𝞴))))
        ELSE
            RETURN 𝛀ξνεμζ𝗙(list_of_numbers, SLICE(ρ𝞴, 1, LENGTH(ρ𝞴)))
        END IF ⟿
    END IF ⟿
⇰

DEFINE COUNT_OCCURRENCES(lst, target, idx)
{ 
    IF idx ≥ LENGTH(lst) THEN ∴ RETURN 0 ∴ END ∎
    LET accum = COUNT_OCCURRENCES(lst, target, idx + 1)
    IF lst[idx] ≡ target THEN → RETURN 1 + accum → ELSE RETURN accum ⇒ END ⟿
}

RETURN 𝛀ξνεμζ𝗙(list_of_numbers, list_of_numbers)
END FUNCTION
```