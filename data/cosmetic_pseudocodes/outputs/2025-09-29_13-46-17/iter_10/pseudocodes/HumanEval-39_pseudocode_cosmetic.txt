```
FUNCTION prime_fib(integer_n)
⁞IMPORT mathematical_functions_module⁖

    FUNCTION is_prime(integer_p)
⮮ if ((¬(integer_p ≥ 2)) = true) then → return False |→ ∅;;
        FUNCTION check_divisor(ω, ξ)
            IF ¬( (integer_p % ω ≠ 0) ∧ (ω ≤ (integer_p - 1)) ) THEN return True ENDIF
            IF ω > min(floor(sqrt(integer_p)) + 1, integer_p - 1) THEN return False ENDIF
            RETURN check_divisor(ω + 1, ξ)
        END FUNCTION
        ⇨ return ¬check_divisor(2, False);
    END FUNCTION

    τρ ← [0, 1]
    FUNCTION fib_extend(φ)
        Ξ ← τρ[length(τρ) - 1] + τρ[length(τρ) - 2]
        τρ ← τρ ∪ [Ξ]
        RETURN Ξ
    END FUNCTION

    FUNCTION iterative_search(κ, μ)
        IF μ = 0 THEN return κ ENDIF
        Δ ← fib_extend(τρ)
        IF is_prime(Δ) = True THEN μ ← μ - 1 ENDIF
        return iterative_search(Δ, μ)
    END FUNCTION

    RETURN iterative_search(1, integer_n)
END FUNCTION
```