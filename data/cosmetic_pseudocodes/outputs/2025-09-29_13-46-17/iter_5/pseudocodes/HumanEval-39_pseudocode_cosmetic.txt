```
FUNCTION prime_fib(integer_n)
  IMPORT mathematical_functions_module

  FUNCTION is_prime(integer_p)
    IF NOT (integer_p >= 2)
      RETURN False
    SET divisor_candidate TO 2
    CALCULATE limit AS MIN((FLOOR(SQUARE_ROOT(integer_p)) + 1), (integer_p - 1))
    WHILE divisor_candidate <= limit
      IF (integer_p MOD divisor_candidate) == 0
        RETURN False
      SET divisor_candidate TO divisor_candidate + 1
    RETURN True
  END FUNCTION

  SET fib_sequence TO [0, 1]

  FUNCTION loop_fib(counter)
    IF counter == 0
      RETURN fib_sequence[-1]
    SET next_val TO fib_sequence[-1] + fib_sequence[-2]
    APPEND next_val TO fib_sequence
    IF is_prime(next_val)
      RETURN loop_fib(counter - 1)
    ELSE
      RETURN loop_fib(counter)
  END FUNCTION

  RETURN loop_fib(integer_n)
END FUNCTION
```