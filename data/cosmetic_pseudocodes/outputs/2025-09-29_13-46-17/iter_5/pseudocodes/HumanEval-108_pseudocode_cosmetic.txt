```
FUNCTION count_nums(array_of_integers)
  FUNCTION digits_sum(integer_value)
    SET NegationFlag = 1
    WHILE integer_value < 0 DO
      integer_value = -1 * integer_value
      NegationFlag = -1
    END WHILE

    SET digits_str_arr = STRINGIFY(integer_value)
    SET digits_nums = []
    SET idxCamel = 0
    WHILE idxCamel < LENGTH(digits_str_arr) DO
      digits_nums = digits_nums + [INT(digits_str_arr[idxCamel])]
      idxCamel = idxCamel + 1
    END WHILE

    digits_nums[0] = digits_nums[0] * NegationFlag

    SET totalAcc = 0
    SET iteratorGo = 0
    WHILE iteratorGo < LENGTH(digits_nums) DO
      totalAcc = totalAcc + digits_nums[iteratorGo]
      iteratorGo = iteratorGo + 1
    END WHILE
    RETURN totalAcc
  END FUNCTION

  SET accList_ = []
  SET ixIndex_0 = 0
  WHILE ixIndex_0 < LENGTH(array_of_integers) DO
    accList_ = accList_ + [digits_sum(array_of_integers[ixIndex_0])]
    ixIndex_0 = ixIndex_0 + 1
  END WHILE

  FUNCTION predicate_pos(xParameter)
    RETURN NOT (xParameter <= 0)
  END FUNCTION

  SET unfiltered_ = accList_
  SET filtered_ = []
  SET pos_i = 0
  WHILE pos_i < LENGTH(unfiltered_)
    IF predicate_pos(unfiltered_[pos_i]) THEN
      filtered_ = filtered_ + [unfiltered_[pos_i]]
    END IF
    pos_i = pos_i + 1
  END WHILE

  RETURN LENGTH(filtered_)
END FUNCTION
```