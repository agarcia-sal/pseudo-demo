```
FUNCTION max_fill(grid, capacity)
    SET total_accumulator TO 0
    SET unit_counter TO 0
    DEFINE fibonacci_style_counter(seq, idx, acc):
        IF idx >= LENGTH(seq) THEN RETURN acc
        SET running_sum TO acc + seq[idx]
        RETURN fibonacci_style_counter(seq, idx + 1, running_sum)
    END DEFINE
    DEFINE ceiling_adder(accumulated, value):
        SET div_result TO value / capacity
        SET int_division TO TRUNCATE(div_result)
        SET has_fraction TO div_result > int_division
        SET ceiling_result TO int_division + (1 * (TRUE == has_fraction))
        RETURN accumulated + ceiling_result
    END DEFINE
    SET all_row_totals TO []
    FOR EACH current_row IN grid DO
        SET row_total TO fibonacci_style_counter(current_row, 0, 0)
        APPEND row_total TO all_row_totals
    END FOR
    SET total_accumulator TO 0
    SET index_variable TO 0
    WHILE index_variable < LENGTH(all_row_totals):
        SET total_accumulator TO ceiling_adder(total_accumulator, all_row_totals[index_variable])
        SET index_variable TO index_variable + 1
    END WHILE
    RETURN total_accumulator
END FUNCTION
```