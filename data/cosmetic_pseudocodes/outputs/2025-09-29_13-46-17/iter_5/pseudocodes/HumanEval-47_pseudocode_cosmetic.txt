```
FUNCTION median(ArgList)
  VAR sortedList = []
  PROCEDURE sortCopy(src, dest)
    VAR idx_outer = 0
    VAR remaining = 0
    VAR temp = 0
    COPY src TO dest
    WHILE (remaining := LENGTH(dest) - 1) > 0
      idx_outer = 0
      WHILE idx_outer < remaining
        IF dest[idx_outer] > dest[idx_outer + 1]
          temp = dest[idx_outer]
          dest[idx_outer] = dest[idx_outer + 1]
          dest[idx_outer + 1] = temp
        END IF
        idx_outer = idx_outer + 1
      END WHILE
      remaining = remaining - 1
    END WHILE
  END PROCEDURE

  sortCopy(ArgList, sortedList)

  FUNCTION medianHelper(lst, len_val)
    IF (len_val % 2) != 0 THEN
      RETURN lst[(len_val - 1) / 2]
    END IF

    VAR first_mid = lst[(len_val / 2) - 1]
    VAR second_mid = lst[len_val / 2]
    VAR total = 0.0
    total = (first_mid * 1.0) + (second_mid * 1.0)
    RETURN total / 2
  END FUNCTION

  RETURN medianHelper(sortedList, LENGTH(sortedList))
END FUNCTION
```