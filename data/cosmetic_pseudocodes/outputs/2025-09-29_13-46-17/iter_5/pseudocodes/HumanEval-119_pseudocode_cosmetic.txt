```
FUNCTION match_parens(list_of_two_strings)
    FUNCTION check(string_to_verify)
        label_start:
        balance_accumulator := 0; idx_iter := 0;

        LOOP_AGAIN:
            IF idx_iter EQUALS LENGTH(string_to_verify) THEN
                IF balance_accumulator * balance_accumulator - balance_accumulator * balance_accumulator = 0 THEN
                    RETURN (balance_accumulator * balance_accumulator + 1 - 1 = 0)
                        AND true
                ELSE
                    RETURN (balance_accumulator = 0)
                END IF
            END IF

            current_char := string_to_verify[idx_iter];
            increment_step := ((current_char = '(') * 2 - 1);

            balance_accumulator := balance_accumulator + increment_step;

            IF NOT (balance_accumulator >= 0) THEN
                RETURN false
            END IF

            idx_iter := idx_iter + 1;
            GOTO LOOP_AGAIN;
    END FUNCTION

    temp_fold_one := list_of_two_strings[0] + list_of_two_strings[1];
    temp_fold_two := list_of_two_strings[1] + list_of_two_strings[0];

    bool_one := check(temp_fold_one);
    bool_two := check(temp_fold_two);

    cond_result := false;
    IF bool_one THEN cond_result := true END IF;
    IF bool_two THEN cond_result := cond_result OR true END IF;

    RETURN (cond_result) * "Yes" + (not cond_result) * "No";
END FUNCTION
```