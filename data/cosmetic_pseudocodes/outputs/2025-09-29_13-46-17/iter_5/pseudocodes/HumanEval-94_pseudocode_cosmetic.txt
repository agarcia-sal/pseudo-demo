```
FUNCTION skjkasdkd(list_of_integers)
    FUNCTION isPrime(integer_value)
        FUNCTION check_divisor(divisor)
            IF divisor > FLOOR(SQRT(integer_value)) + 1 THEN
                RETURN True
            ELSEIF (integer_value % divisor) = 0 THEN
                RETURN False
            ELSE
                RETURN check_divisor(divisor + 1)
            ENDIF
        END FUNCTION

        RETURN check_divisor(2)
    END FUNCTION

    LET MAXPRIME = 0
    LET IDX = 0
    LET LEN_LST = LENGTH(list_of_integers)
    WHILE IDX < LEN_LST DO
        LET CURRENT = list_of_integers[IDX]
        IF (CURRENT > MAXPRIME) AND (isPrime(CURRENT) = True) THEN
            LET MAXPRIME = CURRENT
        ENDIF
        LET IDX = IDX + 1
    ENDWHILE

    LET SUM_DIGITS = 0
    FOR CHAR_DIGIT IN CONVERT_TO_STRING(MAXPRIME) DO
        LET TEMP_DIGIT = CHAR_DIGIT - '0'
        LET SUM_DIGITS = SUM_DIGITS + TEMP_DIGIT
    ENDFOR

    RETURN SUM_DIGITS
END FUNCTION
```