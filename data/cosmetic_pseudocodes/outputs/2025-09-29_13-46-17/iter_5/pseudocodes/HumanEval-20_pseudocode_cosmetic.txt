```
FUNCTION find_closest_elements(primary_sequence)
  closest_pair_result ← None
  minimal_gap ← None

  PROCEDURE inner_loop(i, j, current_pair, current_gap)
    IF j = LENGTH(primary_sequence) THEN
      RETURN (current_pair, current_gap)
    ELSE
      a ← primary_sequence[i]
      b ← primary_sequence[j]
      updated_pair ← current_pair
      updated_gap ← current_gap

      IF i ≠ j THEN
        temp_diff ← (a - b)
        IF temp_diff < 0 THEN temp_diff ← -temp_diff END IF

        IF current_gap = None THEN
          updated_gap ← temp_diff
          updated_pair ← (IF a < b THEN (a, b) ELSE (b, a) END IF)
        ELSEIF temp_diff < current_gap THEN
          updated_gap ← temp_diff
          updated_pair ← (IF a < b THEN (a, b) ELSE (b, a) END IF)
        ENDIF
      ENDIF

      RETURN inner_loop(i, j + 1, updated_pair, updated_gap)
    ENDIF
  END PROCEDURE

  PROCEDURE outer_loop(m)
    IF m = LENGTH(primary_sequence) THEN
      RETURN closest_pair_result
    ELSE
      (new_pair, new_gap) ← inner_loop(m, 0, closest_pair_result, minimal_gap)
      closest_pair_result ← new_pair
      minimal_gap ← new_gap
      RETURN outer_loop(m + 1)
    ENDIF
  END PROCEDURE

  RETURN outer_loop(0)
END FUNCTION
```