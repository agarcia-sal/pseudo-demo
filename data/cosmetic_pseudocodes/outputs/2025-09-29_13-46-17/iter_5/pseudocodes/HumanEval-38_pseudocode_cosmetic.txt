```
FUNCTION encode_cyclic(input_string)
    DEFINE slice_list = []
    VAR max_i = (LENGTH(input_string) + 2) DIV 3 - 1
    VAR current = 0
    WHILE current <= max_i
        LET start_pos = 3 * current
        LET end_pos = start_pos + 3
        IF end_pos > LENGTH(input_string)
            SET end_pos = LENGTH(input_string)
        ENDIF
        APPEND slice_list WITH SUBSTRING(input_string, start_pos, end_pos)
        INCREMENT current BY 1
    ENDWHILE

    VAR transformed = []
    FOR segment IN slice_list
        IF NOT (LENGTH(segment) != 3)
            LET rotated = CONCAT(SUBSTRING(segment, 1, LENGTH(segment)), SUBSTRING(segment, 0, 1))
            APPEND transformed WITH rotated
        ELSE
            APPEND transformed WITH segment
        ENDIF
    ENDFOR

    VAR result_str = ""
    FOR part IN transformed
        result_str = result_str + part
    ENDFOR

    RETURN result_str
END FUNCTION

FUNCTION decode_cyclic(input_string)
    RETURN encode_cyclic(encode_cyclic(input_string))
END FUNCTION
```