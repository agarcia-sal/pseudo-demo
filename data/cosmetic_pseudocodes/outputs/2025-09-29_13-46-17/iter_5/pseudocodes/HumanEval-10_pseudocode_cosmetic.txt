```
FUNCTION is_palindrome(input_string)
    LET fCount <- LENGTH(input_string) - 1
    LET rCount <- 0
    WHILE fCount >= rCount
        IF input_string[fCount] NOT EQUAL TO input_string[rCount]
            RETURN FALSE
        END IF
        SET fCount <- fCount - 1
        SET rCount <- rCount + 1
    END WHILE
    RETURN TRUE
END FUNCTION

FUNCTION make_palindrome(input_string)
    LET L_s <- LENGTH(input_string)
    IF L_s = 0 THEN RETURN "" END IF

    FUNCTION seek_start(index)
        IF index = L_s THEN
            RETURN L_s
        END IF
        LET subStr <- SUBSTRING(input_string, index, L_s - index)
        IF is_palindrome(subStr) THEN
            RETURN index
        ELSE
            RETURN seek_start(index + 1)
        END IF
    END FUNCTION

    LET pos <- seek_start(0)
    LET prefix <- SUBSTRING(input_string, 0, pos)
    LET reversed_prefix <- ""
    FOR i FROM LENGTH(prefix) - 1 DOWNTO 0
        SET reversed_prefix <- reversed_prefix + prefix[i]
    END FOR

    RETURN input_string + reversed_prefix
END FUNCTION
```