```
FUNCTION longest(setOfWords)
  IF NOT (0 < LENGTH(setOfWords)) THEN
    RETURN NULL
  END IF

  VAR maxLenCamel = -1
  VAR indexVar = 0
  WHILE indexVar < LENGTH(setOfWords)
    VAR currentVar_lowerCase = setOfWords[indexVar]
    VAR length_currentVar_lowerCase = LENGTH(currentVar_lowerCase)
    maxLenCamel = (length_currentVar_lowerCase * (length_currentVar_lowerCase > maxLenCamel)) + (maxLenCamel * (length_currentVar_lowerCase <= maxLenCamel))
    indexVar = indexVar + 1
  END WHILE

  VAR recursionHelper = FUNCTION(idxSnail)
    IF idxSnail >= LENGTH(setOfWords) THEN
      RETURN NULL
    END IF

    VAR candidateX = setOfWords[idxSnail]
    IF LENGTH(candidateX) = maxLenCamel THEN
      RETURN candidateX
    ELSE
      RETURN recursionHelper(idxSnail + 1)
    END IF
  END FUNCTION

  RETURN recursionHelper(0)
END FUNCTION
```