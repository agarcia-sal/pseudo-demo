```
FUNCTION intersperse(pListOfNums, pDelimiter)
  INIT acc_result AS [] 
  INIT rec_pos AS 0 
  INIT rec_len AS LENGTH(pListOfNums)
  
  FUNCTION recurse()
    IF rec_pos = rec_len THEN
      RETURN acc_result
    ELSE
      LET current_elem = pListOfNums[rec_pos]
      LET is_last = (rec_pos + 1) = rec_len

      IF is_last THEN
        LET updated_acc = acc_result + [current_elem]
        RETURN updated_acc
      ELSE
        LET updated_acc = acc_result + [current_elem, pDelimiter]
        rec_pos = rec_pos + 1
        acc_result = updated_acc
        RETURN recurse()
      END IF
    END IF
  END FUNCTION

  IF rec_len = 0 THEN
    RETURN []
  ELSE
    RETURN recurse()
  END IF
END FUNCTION
```