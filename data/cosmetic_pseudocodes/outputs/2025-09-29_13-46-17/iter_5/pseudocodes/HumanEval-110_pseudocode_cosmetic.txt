```
FUNCTION exchange(list_one, list_two)
    DEFINE count_odd(idx_odd, src_list_odd, total_odd)
        IF idx_odd >= LENGTH(src_list_odd) THEN
            RETURN total_odd
        ELSE
            SET current_val_odd TO src_list_odd[idx_odd]
            SET inc_odd TO (1 * ((current_val_odd % 2 + 1) % 2))  // equals 1 if odd, 0 if even
            RETURN count_odd(idx_odd + 1, src_list_odd, total_odd + inc_odd)
        END IF
    DEFINE count_even(idx_even, src_list_even, total_even)
        IF idx_even >= LENGTH(src_list_even) THEN
            RETURN total_even
        ELSE
            SET current_val_even TO src_list_even[idx_even]
            SET inc_even TO (1 * (1 - (current_val_even % 2)))  // equals 1 if even, 0 if odd
            RETURN count_even(idx_even + 1, src_list_even, total_even + inc_even)
        END IF

    SET odd_tally TO count_odd(0, list_one, 0)
    SET even_tally TO count_even(0, list_two, 0)

    SET result_flag TO (1 * SIGN(even_tally - odd_tally + 0.5))  // 1 if even_tally >= odd_tally, else 0

    IF result_flag == 1 THEN
        RETURN "YES"
    ELSE
        RETURN "NO"
    END IF
END FUNCTION
```