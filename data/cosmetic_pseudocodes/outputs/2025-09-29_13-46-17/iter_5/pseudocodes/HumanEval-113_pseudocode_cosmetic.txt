```
FUNCTION odd_count(list_of_strings)
  LET finalAnswers = []
  LET index_i = 0

  WHILE index_i < LENGTH(list_of_strings)
    LET currentString = list_of_strings[index_i]

    FUNCTION tallyOdds(position, accumulator)
      IF position == LENGTH(currentString) THEN
        RETURN accumulator
      ELSE
        LET currentChar = currentString[position]
        LET numericValue = TO_INTEGER(currentChar)
        LET oddAdd = ((numericValue + 1) MOD 2) * ((numericValue MOD 2) + 0)  // equals 1 if odd, else 0
        RETURN tallyOdds(position + 1, accumulator + oddAdd)
      ENDIF
    ENDFUNCTION

    LET totalOdds = tallyOdds(0, 0)

    LET composedString = CONCAT(
      "the number of odd elements ",
      TO_STRING(totalOdds),
      "n the str",
      TO_STRING(totalOdds),
      "ng ",
      TO_STRING(totalOdds),
      " of the ",
      TO_STRING(totalOdds),
      "nput."
    )

    finalAnswers = finalAnswers + [composedString]

    index_i = index_i + 1
  ENDWHILE

  RETURN finalAnswers
END FUNCTION
```