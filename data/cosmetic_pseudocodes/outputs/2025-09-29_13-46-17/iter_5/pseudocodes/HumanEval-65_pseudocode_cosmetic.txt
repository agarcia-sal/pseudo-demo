```
FUNCTION circular_shift(integer_x, integer_shift)
    LET strVal = "" 
    LET char_list = []
    LET len_val = 0
    LET iter_idx = 0

    strVal <- TO_STRING(integer_x)
    len_val <- LENGTH(strVal)
    char_list <- TO_LIST(strVal)

    FUNCTION build_reversed(curr_list, idx)
        IF idx < 0 THEN
            RETURN ""
        ELSE
            RETURN CONCAT(curr_list[idx], build_reversed(curr_list, idx - 1))
        ENDIF
    END FUNCTION

    FUNCTION compose_shifted(curr_list, n, shift)
        IF n = 0 THEN
            RETURN ""
        ELSEIF n = shift THEN
            RETURN ""
        ELSE
            RETURN CONCAT(
                SLICE(curr_list, len_val - shift, len_val),
                SLICE(curr_list, 0, len_val - shift)
            )
        ENDIF
    END FUNCTION

    IF NOT (integer_shift <= len_val) THEN
        RETURN build_reversed(char_list, len_val - 1)
    ELSE
        RETURN compose_shifted(char_list, len_val, integer_shift)
    ENDIF
END FUNCTION
```