```
FUNCTION words_string(input_string)
    DEFINE helper_chars(accumulator, index)
        IF index >= LENGTH(input_string) THEN RETURN accumulator

        LET currentChar = input_string[index]
        LET updatedAcc = IF currentChar = ',' THEN accumulator + [' '] ELSE accumulator + [currentChar]

        RETURN helper_chars(updatedAcc, index + 1)
    END DEFINE

    IF NOT (input_string = "") THEN
        LET collectedList = helper_chars([], 0)
        LET combined = ""
        FOR element IN collectedList DO
            combined = combined + element
        END FOR

        LET splitted = []
        LET word = ""

        FOR i IN 0 TO LENGTH(combined) - 1 DO
            LET c = combined[i]
            IF c = ' ' THEN
                IF word != "" THEN
                    splitted = splitted + [word]
                    word = ""
                END IF
            ELSE
                word = word + c
            END IF
        END FOR

        IF word != "" THEN
            splitted = splitted + [word]
        END IF

        RETURN splitted
    ELSE
        RETURN []
    END IF
END FUNCTION
```