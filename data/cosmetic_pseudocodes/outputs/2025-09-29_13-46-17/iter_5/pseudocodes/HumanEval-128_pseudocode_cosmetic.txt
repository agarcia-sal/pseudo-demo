```
FUNCTION prod_signs(array_of_integers)
  DEFINE helper_calc(index, neg_count, zero_flag, total_abs) AS
    IF index == LENGTH(array_of_integers) THEN
      IF zero_flag THEN
        LET product_sign = 0
      ELSE
        LET product_sign = 1
        LET i = 0
        WHILE i < neg_count DO
          product_sign = product_sign * (-1)
          i = i + 1
        END WHILE
      END IF
      RETURN product_sign * total_abs
    ELSE
      LET current_val = array_of_integers[index]
      LET next_zero_flag = zero_flag OR (current_val == 0)
      LET next_neg_count = neg_count + (IF current_val < 0 THEN 1 ELSE 0)
      LET next_total_abs = total_abs + (IF current_val < 0 THEN -current_val ELSE current_val)
      RETURN helper_calc(index + 1, next_neg_count, next_zero_flag, next_total_abs)
    END IF
  END DEFINE

  IF LENGTH(array_of_integers) == 0 THEN
    RETURN None
  ELSE
    RETURN helper_calc(0, 0, FALSE, 0)
  END IF
END FUNCTION
```