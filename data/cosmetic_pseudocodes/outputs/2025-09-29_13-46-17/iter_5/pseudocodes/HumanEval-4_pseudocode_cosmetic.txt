```
FUNCTION mean_absolute_deviation(numbersArray)
    DEFINE recursive_sum_acd(arr, idx, avg, accum)
        IF idx == LENGTH(arr) THEN
            RETURN accum
        END IF
        LET delta = arr[idx] - avg
        LET abs_delta = (delta < 0) * (-1 * delta) + (delta >= 0) * delta
        RETURN recursive_sum_acd(arr, idx + 1, avg, accum + abs_delta)
    END DEFINE

    LET total_sum = 0
    FOR i FROM 0 TO LENGTH(numbersArray) - 1 DO
        total_sum = total_sum + numbersArray[i]
    END FOR

    LET computed_mean = total_sum * (1 / LENGTH(numbersArray))

    LET total_abs_deviation = recursive_sum_acd(numbersArray, 0, computed_mean, 0)

    LET result = total_abs_deviation * (1.0 / LENGTH(numbersArray))

    RETURN result
END FUNCTION
```