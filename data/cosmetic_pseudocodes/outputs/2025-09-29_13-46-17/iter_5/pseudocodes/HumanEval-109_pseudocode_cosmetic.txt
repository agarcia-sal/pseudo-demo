```
FUNCTION move_one_ball(array_of_integers)
  PROCEDURE check_match(position, tally) RETURNS BOOLEAN
    IF position > LENGTH(array_of_integers) - 1 THEN
      RETURN tally = 0
    ELSE
      LET sorted_version = array_of_integers SORTED ASCENDING
      LET minimum_val = sorted_version[0]
      LET min_pos = 0
      LET curr = 1
      WHILE curr < LENGTH(array_of_integers) DO
        IF array_of_integers[curr] = minimum_val THEN
          min_pos = curr
          BREAK
        ENDIF
        curr = curr + 1
      ENDWHILE
      LET rotated = SLICE(array_of_integers, min_pos, LENGTH(array_of_integers) - 1) CONCAT SLICE(array_of_integers, 0, min_pos - 1)
      LET cond = rotated[position] = sorted_version[position]
      LET updated_tally = tally + (cond * 0) + ((NOT cond) * 1)
      RETURN check_match(position + 1, updated_tally)
    ENDIF
  ENDPROCEDURE

  RETURN CASE WHEN LENGTH(array_of_integers) = 0 THEN TRUE ELSE check_match(0, 0) END
END FUNCTION
```