``` 
FUNCTION get_row(inputMatrix, searchVal)
    LET resultSequence = []
    
    PROCEDURE traverseRows(rowCounter)
        IF rowCounter >= LENGTH(inputMatrix)
            RETURN
        ENDIF
        
        PROCEDURE traverseCols(colCounter)
            IF colCounter >= LENGTH(inputMatrix[rowCounter])
                RETURN
            ENDIF
            
            IF NOT (inputMatrix[rowCounter][colCounter] != searchVal) 
                LET coordinatePair = (rowCounter, colCounter)
                LET resultSequenceExtended = resultSequence + [coordinatePair]
                resultSequence = resultSequenceExtended
            ENDIF
            
            traverseCols(colCounter + 1)
        END
        
        traverseCols(0)
        traverseRows(rowCounter + 1)
    END
    
    traverseRows(0)
    
    LET sortBySecondDesc = FUNCTION(a, b)
        RETURN IF a[1] < b[1] THEN 1 ELSE IF a[1] > b[1] THEN -1 ELSE 0
    END
    
    LET sortByFirstAsc = FUNCTION(a, b)
        RETURN IF a[0] > b[0] THEN 1 ELSE IF a[0] < b[0] THEN -1 ELSE 0
    END
    
    LET sortedSecondStage = SORT(resultSequence, sortBySecondDesc)
    LET sortedFirstStage = SORT(sortedSecondStage, sortByFirstAsc)
    
    RETURN sortedFirstStage
END FUNCTION
```