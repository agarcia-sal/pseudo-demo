```
FUNCTION encode_shift(input_string)
  tempAccumulator <- ""
  indexCounter <- 0
  loopCondition <- (indexCounter < LENGTH(input_string))
  WHILE loopCondition
    currentSymbol <- SUBSTRING(input_string, indexCounter, indexCounter + 1)
    asciiNum <- ORD(currentSymbol)
    baseAscii <- ORD("a")
    shiftedVal <- ((asciiNum + (3 + 2) - baseAscii) - (26 * FLOOR((asciiNum + 5 - baseAscii) / 26))) + baseAscii
    alteredChar <- CHR(shiftedVal)
    tempAccumulator <- tempAccumulator + alteredChar
    indexCounter <- indexCounter + 1
    loopCondition <- (indexCounter < LENGTH(input_string))
  END WHILE
  RETURN tempAccumulator
END FUNCTION


FUNCTION decode_shift(input_string)
  tempResult <- ""
  counter_i <- 0
  condition_check <- (counter_i < LENGTH(input_string))
  WHILE condition_check
    symbolChar <- SUBSTRING(input_string, counter_i, counter_i + 1)
    asciiVal <- ORD(symbolChar)
    offset <- ORD("a")
    adjusted <- ((asciiVal + (26 - 5) - offset) - 26 * FLOOR((asciiVal - 5 - offset) / 26)) + offset
    transformed <- CHR(adjusted)
    tempResult <- tempResult + transformed
    counter_i <- counter_i + 1
    condition_check <- (counter_i < LENGTH(input_string))
  END WHILE
  RETURN tempResult
END FUNCTION
```