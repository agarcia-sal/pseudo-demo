```
FUNCTION sort_third(container)
  LET backupList <- []
  LET idxSequence <- 0
  WHILE idxSequence < LENGTH(container)
    APPEND container[idxSequence] TO backupList
    LET idxSequence <- idxSequence + 1
  END WHILE

  LET subsetMap <- {}
  LET posCursor <- 0
  REPEAT
    IF posCursor >= LENGTH(backupList) THEN BREAK END IF
    LET subsetMap[posCursor] <- backupList[posCursor]
    LET posCursor <- posCursor + 3
  UNTIL FALSE

  LET sortedSubset <- []
  FOR EACH keyValue IN subsetMap
    APPEND keyValue[1] TO sortedSubset
  END FOR
  CALL sortedSubset.SORT() // ascending default

  LET replaceIndex <- 0
  FOR EACH key IN KEYS(subsetMap)
    backupList[key] <- sortedSubset[replaceIndex]
    LET replaceIndex <- replaceIndex + 1
  END FOR

  RETURN backupList
END FUNCTION
```