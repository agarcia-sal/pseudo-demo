```
FUNCTION unique_digits(list_of_positive_integers)
    PROCEDURE check_all_odd(n, isAllOdd)
        IF n == 0 THEN
            RETURN isAllOdd
        ELSE
            LET current_check BE (n MOD 10) MOD 2
            RETURN check_all_odd(n DIV 10, isAllOdd * current_check)
        ENDIF
    END PROCEDURE

    LET accumulator_collection BE []
    FOR element_index IN 0 TO LENGTH(list_of_positive_integers) - 1 DO
        LET candidate_value BE list_of_positive_integers[element_index]
        IF check_all_odd(candidate_value, 1) == 1 THEN
            accumulator_collection <- accumulator_collection + [candidate_value]
        ENDIF
    ENDFOR

    LET final_sorted_list BE accumulator_collection
    FOR i IN 1 TO LENGTH(accumulator_collection) - 1 DO
        LET key_value BE final_sorted_list[i]
        LET j BE i - 1
        WHILE j >= 0 AND final_sorted_list[j] > key_value DO
            final_sorted_list[j + 1] <- final_sorted_list[j]
            j <- j - 1
        ENDWHILE
        final_sorted_list[j + 1] <- key_value
    ENDFOR

    RETURN final_sorted_list
END FUNCTION
```