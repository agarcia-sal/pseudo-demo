```
FUNCTION words_string(S)
⎡
    DEFINE recursive λ(α, ω) =
    ⎡
        IF ¬(α < ω) THEN RETURN [] ⎤
    
    DEFINE λ_replace(ξ, ζ, κ) =
    ⎡
        IF ζ = ',' THEN RETURN ' ' ELSE RETURN ζ END IF
    ⎤

    LET μ ← λ_replace(S[α], ',',
        CASE (TRUE) OF
            | TRUE → S[α]
        END CASE
    )

    RETURN [μ] + λ(α + 1, ω)
⎤

LET ρ ← λ(0, |S|)

DEFINE λ_join(Ι, Λ)
⎡
    IF Λ = 0 THEN RETURN '' END IF
    RETURN Ι[0] + λ_join(Ι[1..], Λ - 1)
⎤

LET β ← λ_join(ρ, |ρ|)

DEFINE λ_split(Φ, Δ)
⎡
    IF Δ ≥ |Φ| THEN RETURN [] END IF
    
    DEFINE λ_seek(ε) =
    ⎡
        IF ε ≥ |Φ| OR Φ[ε] = ' ' THEN RETURN ε ELSE RETURN λ_seek(ε + 1) END IF
    ⎤

    LET σ ← λ_seek(Δ)
    LET τ ← Φ[Δ .. σ - 1]

    IF |τ| = 0 THEN RETURN λ_split(Φ, σ + 1) ELSE RETURN [τ] + λ_split(Φ, σ + 1) END IF
⎤

IF |S| = 0 THEN RETURN [] ELSE RETURN λ_split(β, 0) END IF
```