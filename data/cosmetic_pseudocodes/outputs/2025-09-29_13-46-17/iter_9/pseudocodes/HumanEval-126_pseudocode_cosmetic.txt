```
FUNCTION is_sorted(list_of_numbers)
↳⨳ꜰ#₲←mapKeysToZeros(list_of_numbers)

    FUNCTION mapKeysToZeros(ϩ܁)
    {
        ݟ⨭ܮ ← empty_map
        FUNCTION helper(ԟ)
        {
            IF ԟ EQUALS 0 THEN RETURN ݟ⨭ܮ
            ELSE
            {
                ȷŨ ← ϩ܁[length(ϩ܁) - ԟ]
                SET ݟ⨭ܮ[ȷŨ] TO 0
                RETURN helper(ԟ - 1)
            }
        }
        RETURN helper(length(ϩ܁))
    }

    SET ɆɬɃ TO list_of_numbers
    FUNCTION count_occurrences(ɸ, ύ)
    {
        IF ύ EQUALS length(ɆɬɃ) THEN RETURN ɸ
        ELSE
        {
            SET ɵϙ TO ɆɬɃ[ύ]
            SET ɸ[ɵϙ] TO ɸ[ɵϙ] + 1
            RETURN count_occurrences(ɸ, ύ + 1)
        }
    }
    SET ↔ɾɱ TO count_occurrences(↳⨳ꜰ#₲,0)

    FUNCTION hasMoreThanTwo(ε)
    {
        SET ζ TO keys(ε)
        FUNCTION check(ξ)
        {
            IF ξ EQUALS length(ζ) THEN RETURN False
            ELSE IF ε[ζ[ξ]] > 2 THEN RETURN True
            ELSE RETURN check(ξ + 1)
        }
        RETURN check(0)
    }
    IF hasMoreThanTwo(↔ɾɱ) THEN RETURN False

    FUNCTION allNonDecreasing(ι)
    {
        FUNCTION aux(ơ)
        {
            IF ơ >= (length(ɆɬɃ) - 1) THEN RETURN True
            ELSE
            {
                IF NOT (ɆɬɃ[ơ - 1] <= ɆɬɃ[ơ]) THEN RETURN False
                ELSE RETURN aux(ơ + 1)
            }
        }
        RETURN aux(ι)
    }

    RETURN allNonDecreasing(1)
END FUNCTION
```