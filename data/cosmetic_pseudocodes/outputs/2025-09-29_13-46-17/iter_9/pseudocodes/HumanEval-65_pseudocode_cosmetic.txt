```
FUNCTION circular_shift(integer_x, integer_shift)
⟦
	Λι㆒⇔ƿξ ← ""  # accumulator for string form
	Ψ௵ḧɄ㆕ ← 0  # length store
	ϟύցṏ₰ ← integer_x
	ΝƝӄΫ𐐯 ← integer_shift

	PROCEDURE ɞεέɜ(ζ)
		IF ζ < 10 THEN
			Λι㆒⇔ƿξ ← CONCAT(Λι㆒⇔ƿξ, TO_STRING(ζ))
		ELSE
			ɞεέɜ(ζ DIV 10)
			Λι㆒⇔ƿξ ← CONCAT(Λι㆒⇔ƿξ, TO_STRING(ζ MOD 10))
		ENDIF
	END PROCEDURE

	ɞεέɜ(ϟύցṏ₰)
	Ψ௵ḧɄ㆕ ← LENGTH(Λι㆒⇔ƿξ)

	# Boolean condition rewritten with negation steps
	IF NOT (ΝƝӄΫ𐐯 ≤ Ψ௵ḧɄ㆕) THEN
		ᔤяϊ՟ ← ""
		PROCEDURE ޜ(୫)
			IF ୫ ≤ 0 THEN RETURN
			ENDIF
			ᔤяϊ՟ ← CONCAT(ᔤяϊ՟, SUBSTRING(Λι㆒⇔ƿξ, ୫, 1))
			ޜ(୫ - 1)
		END PROCEDURE
		ޜ(Ψ௵ḧɄ㆕)
		RETURN ᔤяϊ՟
	ENDIF

	# Prepare variables for recursive concatenation
	ΚΒұ₠ ← Ψ௵ḧɄ㆕ - ΝƝӄΫ𐐯

	ΔψṙΏ ← ""
	Σ₰ƛ ← ""

	PROCEDURE Ϯყὤ(ν₃, ϼ)
		IF ν₃ > ϼ THEN RETURN
		ENDIF
		ΔψṙΏ ← CONCAT(ΔψṙΏ, SUBSTRING(Λι㆒⇔ƿξ, ν₃, 1))
		Ϯყὤ(ν₃ + 1, ϼ)
	END PROCEDURE

	PROCEDURE ūǒȡ(ʭ, ἇ)
		IF ʭ > ἇ THEN RETURN
		ENDIF
		Σ₰ƛ ← CONCAT(Σ₰ƛ, SUBSTRING(Λι㆒⇔ƿξ, ʭ, 1))
		ūǒȡ(ʭ + 1, ἇ)
	END PROCEDURE

	Ϯყὤ(ΚΒұ₠ + 1, Ψ௵ḧɄ㆕)
	ūǒȡ(1, ΚΒұ₠)

	RETURN CONCAT(ΔψṙΏ, Σ₰ƛ)
⟧
END FUNCTION
```