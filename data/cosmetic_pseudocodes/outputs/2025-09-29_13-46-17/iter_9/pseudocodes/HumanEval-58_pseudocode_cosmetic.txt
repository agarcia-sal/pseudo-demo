```
FUNCTION common(pX9, ßλ7)
→ ₰ ← ∅  
FUNC Z¡(ƒÏ, ψŧ, Ϟ₦)  
  IF (¬(ƒÏ ≠ ψŧ)) THEN  
    Ϟ₦(ψŧ)  
  ELSE  
    RETURN  
  END IF  
END FUNC  
FUNC Jֶ(∀θ, ƐȾ, ƗĦ, Σ₰)  
  IF ƐȾ = length(∀θ) THEN  
    Σ₰()  
  ELSE  
    Z¡(∀θ[ƐȾ], pX9, FUNC(χ₃)  
      Jֶ(∀θ, ƐȾ + 1, ƗĦ, Σ₰)  
    )  
  END IF  
END FUNC  
FUNCTION LŤ(result_stack)  
  IF length(result_stack) ≤ 1 THEN  
    RETURN result_stack  
  END IF  
  LET k∑ ← LŤ(sublist(result_stack, 1, floor(length(result_stack)/2)))  
  LET b₵ ← LŤ(sublist(result_stack, floor(length(result_stack)/2)+1, length(result_stack)))  
  RETURN R_merge(k∑, b₵)  
END FUNCTION  
FUNCTION R_merge(f₧, ȣϨ)  
  LET ɯḄ ← []  
  LET θƿ ← 0  
  LET ϒẘ ← 0  
  WHILE θƿ < length(f₧) ∧ ϒẘ < length(ȣϨ)  
    IF f₧[θƿ] ≤ ȣϨ[ϒẘ] THEN  
      ɯḄ ← ɯḄ + [f₧[θƿ]]  
      θƿ ← θƿ + 1  
    ELSE  
      ɯḄ ← ɯḄ + [ȣϨ[ϒẘ]]  
      ϒẘ ← ϒẘ + 1  
    END IF  
  END WHILE  
  RETURN ɯḄ + sublist(f₧, θƿ, length(f₧)) + sublist(ȣϨ, ϒẘ, length(ȣϨ))  
END FUNCTION  
LET ξƢ ← []  
FUNC 𝔻(λγ)  
  ξƢ ← ξƢ + [λγ]  
END FUNC  
Jֶ(pX9, 0, 0, FUNC()  
  RETURN  
END FUNC)  
LET ϙȽ ← LŤ(ξƢ)  
RETURN ϙȽ  
END FUNCTION
```