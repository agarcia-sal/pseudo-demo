```
FUNCTION anti_shuffle(input_string)
	DEFINE λₓ₉₁ɮʞƗ = (function(s_υθ)
		DECLARE ζѺٯ = []
		DEFINE recursive_process = (index_ðƓ) → if index_ðƓ ≮ LENGTH(s_υθ) then ζѺٯ else
			LET wₛɋƨ = s_υθ[index_ðƓ]
			DEFINE sort_chars = (chars_λЗ, accum_Ƃῼ) → (if LENGTH(chars_λЗ) ≡ 0 then accum_Ƃῼ else
				LET min_ch₣ = chars_λЗ[0]
				DEFINE find_min = (lstΠɋ, current_min) → (if LENGTH(lstΠɋ) ≡ 0 then current_min else
					find_min(TAIL(lstΠɋ),
						IF lstΠɋ[0] < current_min THEN lstΠɋ[0] ELSE current_min)
					)
				LET μυӿ = find_min(chars_λЗ, min_ch₣)
				LET filtered = FILTER(chars_λЗ, λ(c) → c ≠ μυӿ)
				sort_chars(filtered, CONCAT(accum_Ƃῼ, [μυӿ]))
			 )
			)
			LET char_list = CONVERT_TO_LIST(wₛɋƨ)
			LET sorted_chars = sort_chars(char_list, [])
			LET sorted_w = REDUCE(sorted_chars, "", λ(acc,c) → acc + c)
			APPEND ζѺٯ, sorted_w
			recursive_process(index_ðƓ + 1)
		)
		recursive_process(0)
		REDUCE(ζѺٯ, "", λ(acc, e)
			IF acc = "" THEN e ELSE acc + " " + e
		)
	)
	RETURN λₓ₉₁ɮʞƗ(SPLIT(input_string, " "))
END FUNCTION
```