```
FUNCTION encode_cyclic(input_string)
	DEFINE Λσ⃗ζ₁₉₇ₓᵦℵₐ = []
	DEFINE ζ₍ₚᵨ₁𝛩𝟠ₗξⵔᾎ = 0

	DEFINE FUNCTION ƬₛⱵₐᵖₓ(ψϞ𝚏Ϯ, υ₄₎₀ϒ)
		IF υ₄₎₀ϒ = 0 THEN RETURN ""
		RETURN ψϞ𝚏Ϯ[0] + ƬₛⱵₐᵖₓ(ψϞ𝚏Ϯ[1:], υ₄₎₀ϒ - 1)
	END FUNCTION

	WHILE (ζ₍ₚᵨ₁𝛩𝟠ₗξⵔᾎ < DIVIDE(SUBTRACT(LENGTH(input_string), -2), 3))
		DEFINE ϖₒₗↈ = MULTIPLY(3, ζ₍ₚᵨ₁𝛩𝟠ₗξⵔᾎ)
		DEFINE 𓂀ᔑ𓀠 = IF LESS_THAN(ϖₒₗↈ + 3, LENGTH(input_string)) THEN ϖₒₗↈ + 3 ELSE LENGTH(input_string)
		APPEND(ƬₛⱵₐᵖₓ(input_string[ϖₒₗↈ : ], SUBTRACT(𓂀ᔑ𓀠, ϖₒₗↈ)), Λσ⃗ζ₁₉₇ₓᵦℵₐ)
		SET ζ₍ₚᵨ₁𝛩𝟠ₗξⵔᾎ = ζ₍ₚᵨ₁𝛩𝟠ₗξⵔᾎ + 1
	END WHILE

	DEFINE 𝝽ₖ⊹ᾘℛ = []
	DEFINE ᖎᴣₚ₍ᴢₜ𝐜 = 0

	DEFINE FUNCTION Ɨ᠎᠑(𝝰)
		IF LENGTH(𝝰) = 3 THEN
			RETURN CONCAT(𝝰[1:], 𝝰[0])
		ELSE
			RETURN 𝝰
		END IF
	END FUNCTION

	WHILE ᖎᴣₚ₍ᴢₜ𝐜 < LENGTH(Λσ⃗ζ₁₉₇ₓᵦℵₐ)
		APPEND(Ɨ᠎᠑(Λσ⃗ζ₁₉₇ₓᵦℵₐ[ᖎᴣₚ₍ᴢₜ𝐜]), 𝝽ₖ⊹ᾘℛ)
		SET ᖎᴣₚ₍ᴢₜ𝐜 = ᖎᴣₚ₍ᴢₜ𝐜 + 1
	END WHILE

	DEFINE FUNCTION Ƙϴ₃Ꮚ(ɮ)
		IF LENGTH(ɮ) = 0 THEN RETURN ""
		RETURN ɮ[0] + Ƙϴ₃Ꮚ(ɮ[1:])
	END FUNCTION

	RETURN Ƙϴ₃Ꮚ(𝝽ₖ⊹ᾘℛ)
END FUNCTION

FUNCTION decode_cyclic(input_string)
	RETURN encode_cyclic(encode_cyclic(input_string))
END FUNCTION
```