```
FUNCTION f(Ξ₇)
⎨
    DEFINE κₙ(λ₋₄) = 
        IF ¬((λ₋₄ MOD 2) ≠ 0) THEN
            DEFINE function Π(ν₁, ω₃) RETURNS integer:
                IF ω₃ = 0 THEN 1
                ELSE ν₁ * Π(ν₁, ω₃ - 1)
            END DEFINE
            RETURN Π(1, λ₋₄)
        ELSE
            DEFINE function Σ(α₉) RETURNS integer:
                DEFINE helper Σh(β₈, γ₂) =
                    IF γ₂ = 0 THEN β₈
                    ELSE Σh(β₈ + γ₂, γ₂ - 1)
                END
                RETURN Σh(0, λ₋₄)
            END DEFINE
            RETURN Σ(0)
        END IF
    END DEFINE

    DEFINE recursive_accumulate(Φ_ω, Δ_ω, Ω_ω) =
        IF Δ_ω > Ξ₇ THEN Φ_ω
        ELSE recursive_accumulate(Φ_ω ∪ {κₙ(Δ_ω)}, Δ_ω + 1, Ω_ω)
    END

    RETURN recursive_accumulate(∅, 1, Ξ₇)
⎬
```