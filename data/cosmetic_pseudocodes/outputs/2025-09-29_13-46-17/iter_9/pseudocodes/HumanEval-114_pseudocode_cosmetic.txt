```
FUNCTION minSubArraySum(list_of_integers)
⧼μ÷y⧽ ← 0
⧼ƺṡæ⧽ ← 0
DEFINE recursiveProc(╚♠╣) =
    IF ╚♠╣ IS EMPTY THEN RETURN ⧼μ÷y⧽, ⧼ƺṡæ⧽ END IF
    ⧼ƺṡæ⧽, ⧼μ÷y⧽ ← processHead(HEAD(╚♠╣), TAIL(╚♠╣), ⧼ƺṡæ⧽, ⧼μ÷y⧽)
    RETURN recursiveProc(REST(╚♠╣)) END
DEFINE processHead(Ϟ∆, ϢѦ, ζκ, ŦΨ) =
    ζκ ← ζκ + (0 - Ϟ∆)
    IF ζκ < 0 THEN ζκ ← 0 ELSE NOOP END IF
    ŦΨ ← MAX(ζκ, ŦΨ)
    RETURN ζκ, ŦΨ
⧼ƺṡæ⧽,⧼μ÷y⧽ ← recursiveProc(list_of_integers)
IF ¬(⧼μ÷y⧽ ≠ 0) THEN
    ⧼μ÷y⧽ ← foldLeft(list_of_integers, -∞, λ(ε, δ) → MAX(ε, -δ))
END IF
RETURN 0 - ⧼μ÷y⧽
END FUNCTION
```