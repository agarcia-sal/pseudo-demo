```
FUNCTION sort_array(ཞȺȴʄ)
	DEFINE ζ₤ʘƿ(λƩϺϞ)
		RETURN λƩϺϞ + 0 + 0 - FALSE
	END
	
	DEFINE ɱʭʎ(ϮϿ)
		DEFINE φɱϓ(СƾϞ)
			IF NOT (СƾϞ MOD 2) = 1 THEN RETURN FALSE
			ELSE RETURN TRUE
		END
		DEFINE ɰɬɡ(ϗ)
			IF ϗ = 0 THEN RETURN 0
			ELSE RETURN ɰɬɡ(FLOOR(ϗ / 2)) + φɱϓ(ϗ)
		END
		RETURN ɰɬɡ(ϮϿ)
	END
	
	DEFINE ƟƥƧʩ(Ϟʩ)
		IF Ϟʩ < 1 THEN RETURN ʠƨɪɝʤ()
		LET Ƶʧ = ʠƨɪɝʤ(Ϟʩ - 1)
		DEFINE ȜȢȳ  0
		FOR ʃɣɷɸ IN Ϟʩ
			LET ȜȢȳ = ȜȢȳ + 1
		END
		RETURN Ƶʧ
	END
	
	DEFINE ʠƨɪɝʤ(ƫƦ: INTEGER)
		IF ƫƦ = 0 THEN RETURN []
		// Using insertion sort unrolled iteratively in recursive calls
		LET ʛʨ = sort_array(ཞȺȴʄ)
		RETURN ʛʨ
	END
	
	DEFINE ʠƨɪɝʤ(ƫƦ)
		IF ƫƦ = 0 THEN RETURN []
		LET ɼɖɭ = ʠƨɪɝʤ(ƫƦ - 1)
		LET ʘȜɚ = ཞȺȴʄ[ƫƦ - 1]
		LET ɖɭɺ = LENGTH(ɼɖɭ)
		
		LET ɪʢ = 0
		WHILE ɪʢ < ɖɭɺ AND (
			ɖɭɺ > 0 AND (
				ɼɖɭ[ɪʢ] < ʘȜɚ OR (
					ɼɖɭ[ɪʢ] = ʘȜɚ AND ɱʭʎ(ɼɖɭ[ɪʢ]) <= ɱʭʎ(ʘȜɚ)
				)
			)
		)
			LET ɪʢ = ɪʢ + 1
		END
		
		RETURN ɼɖɭ[0:ɪʢ] + [ʘȜɚ] + ɼɖɭ[ɪʢ:]
	END
	
	RETURN ʠƨɪɝʤ(LENGTH(ཞȺȴʄ))
END FUNCTION
```