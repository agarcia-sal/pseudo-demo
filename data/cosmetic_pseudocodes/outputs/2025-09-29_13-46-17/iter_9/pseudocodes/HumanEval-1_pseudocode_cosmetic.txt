```
FUNCTION separate_paren_groups(string_of_parentheses)
	DEFINE FUNCTION 𝛆ΘΛΨ(Ɋ)
		RETURN IF Ɋ = 0 THEN 𝓦 else 𝒂 end
	END FUNCTION

	SET 𝓦 TO []
	SET 𝒂 TO []
	SET ᚧ TO 0
	SET 𝓟 TO 0

	DEFINE FUNCTION ⧖ζΨ(ξ, ϡ, Ϟ)
		IF ϡ > 𝓟 THEN
			RETURN Ϟ + ξ[𝓟], ϡ + 1, ᚧ + 1
		ELSE IF ϡ < 𝓟 THEN
			RETURN Ϟ + ξ[𝓟], ϡ - 1, ᚧ - 1
		ELSE
			RETURN Ϟ + ξ[𝓟], ϡ, ᚧ
		END IF
	END FUNCTION

	DEFINE FUNCTION ȸηλ(𝛀, 𝛩, 𝛀Ζ)
		IF 𝛩 = 0 THEN
			𝛀Ζ ← 𝛀Ζ ∪ [STRING_JOIN(𝛀)]
			𝛀 ← []
		END IF
		RETURN 𝛀, 𝛩, 𝛀Ζ
	END FUNCTION

	DEFINE FUNCTION ƕκδ(ζ, Ͻ, ψ)
		IF Ͻ > 0 THEN
			LOOP WHILE 𝓟 < LENGTH(ζ)
				SET ζ𝓟 TO ζ[𝓟]
				IF ζ𝓟 = '(' THEN
					SET ψ, Ͻ, ᚧ TO ⧖ζΨ(ζ, Ͻ, ψ)
				ELSE IF ζ𝓟 = ')' THEN
					SET ψ, Ͻ, ᚧ TO ⧖ζΨ(ζ, Ͻ, ψ)
					SET ψ, Ͻ, ᚧ TO ȸηλ(ψ, Ͻ, 𝓦)
				ELSE
					APPEND ζ𝓟 TO ψ
				END IF
				𝓟 ← 𝓟 + 1
			END LOOP
		END IF
	END FUNCTION

	SET 𝓟 TO 0
	SET 𝓦 TO []
	SET ψ TO []

	WHILE 𝓟 < LENGTH(string_of_parentheses)
		SET Ͻ TO ᚧ
		SET ψ TO []
		DEFINE FUNCTION ᚧϽ(Ϫ, 𝓐, 𝓑)
			IF 𝓐 = 0 THEN return 𝓑, 𝓐, Ϫ end
			SET ℘ TO 0
			WHILE ℘ < LENGTH(Ϫ)
				SET c TO Ϫ[℘]
				IF c = '(' THEN
					SET 𝓑, 𝓐, Ϫ TO ⧖ζΨ(Ϫ, 𝓐, 𝓑)
				ELSE IF c = ')' THEN
					SET 𝓑, 𝓐, Ϫ TO ⧖ζΨ(Ϫ, 𝓐, 𝓑)
					SET 𝓑, 𝓐, Ϫ TO ȸηλ(𝓑, 𝓐, 𝓦)
				ELSE
					APPEND c TO 𝓑
				END IF
				℘ ← ℘ + 1
			END WHILE
			RETURN 𝓑, 𝓐, Ϫ
		END FUNCTION
		SET ψ, Ͻ, ᚧ TO ᚧϽ(SUBSTRING(string_of_parentheses, 𝓟), ᚧ, ψ)
		𝓟 ← 𝓟 + 1
	END WHILE

	RETURN 𝓦
END FUNCTION
```