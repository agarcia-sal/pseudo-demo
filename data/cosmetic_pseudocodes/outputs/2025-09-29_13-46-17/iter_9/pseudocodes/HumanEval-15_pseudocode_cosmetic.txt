FUNCTION string_sequence(integer_n)
	DEFINE small_ω ← 0
	DEFINE Φ₀ ← LIST FROM 0 TO integer_n INCLUSIVE
	DEFINE 𝄞λ ← FUNCTION(α)
		IF NOT (α >= small_ω) THEN
			RETURN EMPTY LIST
		END IF
		IF α = small_ω THEN
			RETURN [small_ω]
		END IF
		DEFINE ρ ← 𝄞λ(α - 1)
		RETURN ρ + [α]
	END FUNCTION
	DEFINE ϰχ ← 𝄞λ(integer_n)
	DEFINE 𝔹𝔾𝔻 ← FUNCTION(ȷ)
		IF ȷ < 0 THEN RETURN "" END IF
		IF ȷ = 0 THEN RETURN "0" END IF
		DEFINE ζ₁ ← ""
		DEFINE ρₗ ← ȷ
		WHILE ρₗ > 0 DO
			DEFINE κ₈ ← ρₗ MOD 10
			ρₗ ← (ρₗ - κ₈) / 10
			ζ₁ ← CONCAT(CHAR('0' + κ₈), ζ₁)
		END WHILE
		RETURN ζ₁
	END FUNCTION
	DEFINE χ𝓝ȼ ← FUNCTION(δω, ιτ, ςμ)
		IF ιτ >= LENGTH(δω) THEN RETURN ςμ END IF
		RETURN χ𝓝ȼ(δω, ιτ + 1, ςμ + [𝔹𝔾𝔻(δω[ιτ])])
	END FUNCTION
	DEFINE 𝕍𝔰𝕕 ← χ𝓝ȼ(ϰχ, 0, [])
	DEFINE 𝓅𝒻 ← ""
	IF LENGTH(𝕍𝔰𝕕) = 0 THEN
		𝓅𝒻 ← ""
	ELSE
		DEFINE 𝓊ʍ ← FUNCTION(ℎ, ϒ)
			IF ϒ = LENGTH(ℎ) - 1 THEN RETURN ℎ[ϒ] END IF
			RETURN ℎ[ϒ] + " " + 𝓊ʍ(ℎ, ϒ + 1)
		END FUNCTION
		𝓅𝒻 ← 𝓊ʍ(𝕍𝔰𝕕, 0)
	END IF
	RETURN 𝓅𝒻
END FUNCTION