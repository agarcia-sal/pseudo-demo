```
FUNCTION is_nested(string)
  FUNCTION loop_through(i, op_idx, cl_idx, pos, cnt)
    IF i EQUALS LENGTH(op_idx) THEN
      RETURN cnt >= 2
    ELSE
      LET current_op_index BE op_idx[i]
      IF pos < LENGTH(cl_idx) AND current_op_index < cl_idx[pos] THEN
        RETURN loop_through(i + 1, op_idx, cl_idx, pos + 1, cnt + 1)
      ELSE
        RETURN loop_through(i + 1, op_idx, cl_idx, pos, cnt)
  LET open_indices BE []
  LET close_indices BE []
  PROCEDURE gather_indices(idx)
    IF idx EQUALS LENGTH(string) THEN
      RETURN
    ELSE
      IF string[idx] = '[' THEN
        APPEND idx TO open_indices
      ELSE
        APPEND idx TO close_indices
      CALL gather_indices(idx + 1)
  CALL gather_indices(0)
  SET close_indices TO REVERSED(close_indices)
  RETURN loop_through(0, open_indices, close_indices, 0, 0)
END FUNCTION
```