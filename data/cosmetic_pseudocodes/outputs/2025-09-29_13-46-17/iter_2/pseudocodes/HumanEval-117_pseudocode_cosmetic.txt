```
FUNCTION select_words(string_s, natural_number_n)
  DEFINE FUNCTION count_consonants_in_word(w, position, limit, count)
    IF position >= limit THEN
      RETURN count
    ELSE
      LET current_char = LOWERCASE w[position]
      LET is_consonant = NOT (current_char = "a" OR current_char = "e" OR current_char = "i" OR current_char = "o" OR current_char = "u")
      RETURN count_consonants_in_word(w, position + 1, limit, count + IF is_consonant THEN 1 ELSE 0)
    END IF
  END FUNCTION

  LET accumulated_result = []

  DEFINE FUNCTION process_words(word_list, idx, upper_bound)
    IF idx >= upper_bound THEN
      RETURN accumulated_result
    ELSE
      LET current_word = word_list[idx]
      LET num_consonants = count_consonants_in_word(current_word, 0, LENGTH current_word, 0)
      IF num_consonants = natural_number_n THEN
        accumulated_result = accumulated_result + [current_word]
      END IF
      RETURN process_words(word_list, idx + 1, upper_bound)
    END IF
  END FUNCTION

  LET words_array = SPLIT string_s BY " "
  RETURN process_words(words_array, 0, LENGTH words_array)
END FUNCTION
```