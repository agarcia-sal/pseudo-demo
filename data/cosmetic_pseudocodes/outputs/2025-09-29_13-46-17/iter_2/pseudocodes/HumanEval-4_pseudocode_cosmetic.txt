```
FUNCTION mean_absolute_deviation(list_of_numbers)
  DEFINE FUNCTION recursive_sum_abs_diff(elements, mean_val, index, acc)
    IF index EQUALS LENGTH OF elements THEN
      RETURN acc
    ELSE
      LET current_element = elements[index]
      LET updated_acc = acc + ABS(current_element - mean_val)
      RETURN recursive_sum_abs_diff(elements, mean_val, index + 1, updated_acc)
    END IF
  END FUNCTION

  LET total_sum = 0
  LET idx = 0
  WHILE idx < LENGTH OF list_of_numbers DO
    total_sum = total_sum + list_of_numbers[idx]
    idx = idx + 1
  END WHILE

  LET mean_value = total_sum * (1 / LENGTH OF list_of_numbers)
  LET sum_abs_deviation = recursive_sum_abs_diff(list_of_numbers, mean_value, 0, 0)
  LET mad_result = sum_abs_deviation / LENGTH OF list_of_numbers
  RETURN mad_result
END FUNCTION
```