```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
      IF NOT (integer_p >= 2) THEN
        RETURN False
      END IF

      FUNCTION check_divisors(divisor, limit)
        IF divisor > limit THEN
          RETURN True
        ELSE IF integer_p % divisor = 0 THEN
          RETURN False
        ELSE
          RETURN check_divisors(divisor + 1, limit)
        END IF
      END FUNCTION

      SET max_divisor TO (INTEGER PART OF (mathematical_functions_module.sqrt(integer_p))) + 1
      SET limit_divisor TO max_divisor
      IF integer_p - 1 < max_divisor THEN
        SET limit_divisor TO integer_p - 1
      END IF

      RETURN check_divisors(2, limit_divisor)
    END FUNCTION

    SET fib_sequence TO [0,1]

    FUNCTION generate_prime_fib(remaining)
      SET next_fib TO fib_sequence[-1] + fib_sequence[-2]
      fib_sequence.APPEND(next_fib)

      IF is_prime(next_fib) THEN
        SET remaining TO remaining - 1
      END IF

      IF remaining = 0 THEN
        RETURN next_fib
      ELSE
        RETURN generate_prime_fib(remaining)
      END IF
    END FUNCTION

    RETURN generate_prime_fib(integer_n)
END FUNCTION
```