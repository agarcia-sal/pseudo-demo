```
FUNCTION histogram(test_string)
  frequency_map ← {}
  letters_array ← SPLIT(test_string, " ")
  max_occurrences ← 0

  FUNCTION find_max(index)
    IF index = LENGTH(letters_array) THEN RETURN
    current_letter ← letters_array[index]
    IF current_letter ≠ "" THEN
      occurrences ← 0
      FUNCTION count_letter(pos)
        IF pos = LENGTH(letters_array) THEN RETURN 0
        RETURN (letters_array[pos] = current_letter ? 1 : 0) + count_letter(pos + 1)
      END FUNCTION
      occurrences ← count_letter(0)
      IF occurrences > max_occurrences THEN max_occurrences ← occurrences
    find_max(index + 1)
  END FUNCTION

  find_max(0)

  IF max_occurrences > 0 THEN
    FUNCTION fill_dictionary(i)
      IF i = LENGTH(letters_array) THEN RETURN
      letter ← letters_array[i]
      FUNCTION letter_count(j)
        IF j = LENGTH(letters_array) THEN RETURN 0
        RETURN (letters_array[j] = letter ? 1 : 0) + letter_count(j + 1)
      END FUNCTION
      IF letter_count(0) = max_occurrences THEN
        frequency_map[letter] ← max_occurrences
      fill_dictionary(i + 1)
    END FUNCTION
    fill_dictionary(0)
  END IF

  RETURN frequency_map
END FUNCTION
```