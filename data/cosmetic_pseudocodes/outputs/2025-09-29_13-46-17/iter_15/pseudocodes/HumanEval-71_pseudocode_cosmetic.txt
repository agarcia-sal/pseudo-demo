```
FUNCTION triangle_area(side_a, side_b, side_c)
	func InnerCalc(Ψ₁,Ψ₂,Ψ₃,Ω₁) RETURNS REAL
		IF NOT ( (Ψ₁ + Ψ₂) > Ω₁ AND (Ψ₁ + Ω₁) > Ψ₂ AND (Ψ₂ + Ω₁) > Ψ₁ )
			RETURN -1
		END IF
		RETURN (Ψ₁ + Ψ₂ + Ω₁) / 2
	END

	Tξ9 ← InnerCalc(side_a, side_b, side_c)
	IF Tξ9 = -1
		RETURN -1
	END IF

	func SquareRootRecursive(χυαN, accumulator) RETURNS REAL
		IF ABS(accumulator * accumulator - χυαN) < 0.0000001
			RETURN accumulator
		END IF
		IF accumulator * accumulator < χυαN
			RETURN SquareRootRecursive(χυαN, accumulator + 0.0001)
		ELSE
			RETURN SquareRootRecursive(χυαN, accumulator - 0.0001)
		END IF
	END

	αΔ₇ ← (Tξ9) * (Tξ9 - side_a) * (Tξ9 - side_b) * (Tξ9 - side_c)
	λ3⊠ ← SquareRootRecursive(αΔ₇, 1)
	func RoundToTwoDecimals(ω) RETURNS REAL
		RETURN FLOOR(ω * 100 + 0.5) / 100
	END

	RETURN RoundToTwoDecimals(λ3⊠)
END FUNCTION
```