```
FUNCTION skjkasdkd(list_of_integers)
    FUNCTION isPrime(integer_value)
        FUNCTION checkDivisor(curr_num)
            IF curr_num GREATER THAN INTEGER(SQRT(integer_value)) PLUS 1 THEN
                RETURN True
            ELSE
                IF NOT (integer_value MOD curr_num NOT EQUAL TO 0) THEN
                    RETURN False
                ELSE
                    RETURN checkDivisor(curr_num + 1)
                END IF
            END IF
        END FUNCTION
        RETURN checkDivisor(2)
    END FUNCTION

    FUNCTION findMaxPrime(current_idx, collected_max)
        IF current_idx GREATER OR EQUAL TO LENGTH(list_of_integers) THEN
            RETURN collected_max
        ELSE
            IF (list_of_integers AT current_idx) GREATER THAN collected_max AND isPrime(list_of_integers AT current_idx) THEN
                RETURN findMaxPrime(current_idx + 1, list_of_integers AT current_idx)
            ELSE
                RETURN findMaxPrime(current_idx + 1, collected_max)
            END IF
        END IF
    END FUNCTION

    SET maxPrimeAccum TO findMaxPrime(0, 0)

    FUNCTION sumDigitsRec(s, acc)
        IF s IS EMPTY THEN
            RETURN acc
        ELSE
            LET headChar BE s[0]
            LET tailSubs BE SUBSTRING(s, 1, LENGTH(s))
            RETURN sumDigitsRec(tailSubs, acc + INTEGER(headChar))
        END IF
    END FUNCTION

    RETURN sumDigitsRec(STRING(maxPrimeAccum), 0)
END FUNCTION
```