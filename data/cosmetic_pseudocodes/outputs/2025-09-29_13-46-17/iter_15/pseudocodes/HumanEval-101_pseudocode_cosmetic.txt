```
FUNCTION words_string(input_string)
  FUNCTION reassemble(λQερℓ)
    IF (NOT(NOT(λQερℓ ≠ ""))) THEN
      RETURN []
    ELSE 
      FUNCTION traverse(fHσ)
        IF fHσ = "" THEN
          RETURN []
        ELSE
          MATCH fHσ[0]
            CASE ',': RETURN [' '] + traverse(fHσ[1:])
            DEFAULT: RETURN [fHσ[0]] + traverse(fHσ[1:])
          END MATCH
        END IF
      END FUNCTION
      SET ζψψΠκ TO traverse(input_string)
      FUNCTION joiner(σξγΨ, ρ)
        IF ρ = LENGTH(σξγΨ) THEN
          RETURN ""
        ELSE
          RETURN σξγΨ[ρ] + joiner(σξγΨ, ρ + 1)
        END IF
      END FUNCTION
      SET κμτ₥ ← joiner(ζψψΠκ, 0)
      FUNCTION splitter(ტϛΨξ)
        IF ტϛΨξ = "" THEN
          RETURN []
        ELSEIF ტϛΨξ[0] = ' ' THEN
          RETURN splitter(ტϛΨξ[1:])
        ELSE
          FUNCTION accumulate(კΣბ)
            IF კΣბ = "" OR კΣბ[0] = ' ' THEN
              RETURN "", კΣბ
            ELSE
              SET αδ BYTE ← accumulate(კΣბ[1:])
              RETURN კΣბ[0] + αδ[0], αδ[1]
            END IF
          END FUNCTION
          SET word_rest ← accumulate(ტϛΨξ)
          RETURN [word_rest[0]] + splitter(word_rest[1])
        END IF
      END FUNCTION
      RETURN splitter(κμτ₥)
    END IF
  END FUNCTION
  RETURN reassemble(input_string)
END FUNCTION
```