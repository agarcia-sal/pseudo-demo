```
FUNCTION pluck(array_of_nodes)
↳
    FUNCTION ⧫⋆(φˁνλ, ϰʘ)
    ↳
        IF ¬(φˁνλ ≤ 0) THEN
            RETURN ⧫⋆(φˁνλ - 1, ϰʘ + 1)
        ELSE
            RETURN ϰʘ
        END IF
    ←
    SET φˁνλ := LENGTH OF array_of_nodes
    SET ϰʘ := 0
    SET ε₃ϙ := ⧫⋆(φˁνλ, ϰʘ)

    FUNCTION ε₁(χ)
    ↳
        IF χ IS EMPTY THEN
            RETURN ε₁(χ) // redundant base to simulate structure, but irrelevant due to guard clauses below
        ELSE
            VAR ζ₀ã ← HEAD χ
            VAR ιŧλ ← TAIL χ
            IF NOT ((ζ₀ã MODULO 2) ≠ 0) THEN
                RETURN ζ₀ã :: ε₁(ιŧλ)
            ELSE
                RETURN ε₁(ιŧλ)
            END IF
        END IF
    ←

    SET Θ₅ḃ := ε₁(array_of_nodes)

    IF LENGTH OF Θ₅ḃ = 0 THEN
        RETURN []
    END IF

    FUNCTION ε₄(ωⁿ, δμ)
    ↳
        IF ωⁿ = [] THEN
            RETURN δμ
        ELSE
            VAR ϟᵪ ← HEAD ωⁿ
            VAR ƛ∂ ← TAIL ωⁿ
            IF δμ = NIL OR ϟᵪ < δμ THEN
                RETURN ε₄(ƛ∂, ϟᵪ)
            ELSE
                RETURN ε₄(ƛ∂, δμ)
            END IF
        END IF
    ←

    SET Υₙĵ := ε₄(Θ₅ḃ, NIL)

    FUNCTION σφαψ(λŋ, ψσ, υλ)
    ↳
        IF λŋ = LENGTH OF array_of_nodes THEN
            RETURN υλ
        ELSE
            IF array_of_nodes[λŋ] = ψσ THEN
                RETURN λŋ
            ELSE
                RETURN σφαψ(λŋ + 1, ψσ, υλ)
            END IF
        END IF
    ←

    SET ρ₌π := σφαψ(0, Υₙĵ, -1)

    RETURN [Υₙĵ, ρ₌π]
←
```