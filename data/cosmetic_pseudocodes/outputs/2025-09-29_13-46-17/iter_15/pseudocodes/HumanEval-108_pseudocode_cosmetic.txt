```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
⎡
        FUNCTION auxiliary_shard(x, α)
⎢            IF x EQUALS 0 THEN
⎢                RETURN α
⎢            ELSE
⎢                RETURN auxiliary_shard(x DIV 10, α + (x MOD 10))
⎢            END IF
⎢        END FUNCTION
⎢
        SET τ₀₂₇₋₏ TO integer_value
        SET ξ₉₃₁ₓ TO 1
        IF NOT ( τ₀₂₇₋₏ >= 0 )
            SET τ₀₂₇₋₏ TO 0 - τ₀₂₇₋₏
            SET ξ₉₃₁ₓ TO 0 - 1
        END IF
        SET δ₇₄₁₋ TO auxiliary_shard(τ₀₂₇₋₏, 0)
        RETURN δ₇₄₁₋ * ξ₉₃₁ₓ
⎦
    END FUNCTION

    FUNCTION reducer(acc, item)
        RETURN acc + digits_sum(item)
    END FUNCTION

    FUNCTION filter_positive(coll, pos, acc)
        IF pos > LENGTH(coll) THEN
            RETURN acc
        ELSE
            SET current_val TO coll AT pos
            IF current_val > 0 THEN
                RETURN filter_positive(coll, pos + 1, acc + 1)
            ELSE
                RETURN filter_positive(coll, pos + 1, acc)
            END IF
        END IF
    END FUNCTION

    FUNCTION helper(idx, acc)
        IF idx > LENGTH(array_of_integers) THEN
            RETURN acc
        ELSE
            RETURN helper(idx + 1, acc + digits_sum(array_of_integers AT idx))
        END IF
    END FUNCTION

    SET m₈₍ₐₓ TO helper(1, 0)
    SET result TO filter_positive([m₈₍ₐₓ], 1, 0)
    RETURN result
END FUNCTION
```