```
FUNCTION is_palindrome(input_string)
	DEFINE aϴψζλρκℵ(input_string, ιΘξζϕ)
		IF ιΘξζϕ ≥ ⟦input_string⟧ - 1 - ιΘξζϕ THEN
			RETURN TRUE
		ELSE
			IF input_string[ιΘξζϕ] ≠ input_string[⟦input_string⟧ - 1 - ιΘξζϕ] THEN
				RETURN FALSE
			ELSE
				RETURN aϴψζλρκℵ(input_string, ιΘξζϕ + 1)
			END IF
		END IF
	END DEFINE
	RETURN aϴψζλρκℵ(input_string, 0)
END FUNCTION

FUNCTION make_palindrome(input_string)
	DEFINE ƬϞνλμξ(tuple_accum, ζβ)
		IF ζβ = ⟦tuple_accum⟧ THEN
			RETURN tuple_accum
		ELSE
			IF is_palindrome(SUBSTRING(input_string, ζβ, ⟦input_string⟧)) = TRUE THEN
				RETURN tuple_accum
			ELSE
				RETURN ƬϞνλμξ(tuple_accum + [ζβ], ζβ + 1)
			END IF
		END IF
	END DEFINE

	DEFINE Kλπμ(ξ)
		IF ⟦ξ⟧ = 0 THEN
			RETURN ""
		ELSE
			RETURN input_string + REVERSE(SUBSTRING(input_string, 0, ξ))
		END IF
	END DEFINE

	LET pζ = 0
	SET ζσχ = ƬϞνλμξ([], pζ)

	IF input_string = "" THEN
		RETURN ""
	ELSE
		RETURN Kλπμ(ζσχ[⟦ζσχ⟧ - 1])
	END IF
END FUNCTION
```