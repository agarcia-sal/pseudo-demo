```
FUNCTION max_fill(grid, capacity)
    FUNCTION recursive_sum(collection, idx, acc)
        IF idx >= LENGTH(collection) THEN
            RETURN acc
        ELSE
            RETURN recursive_sum(collection, idx + 1, acc + collection[idx])
        END IF
    END FUNCTION

    FUNCTION inner_ceiling(value)
        IF value = INTEGER(value) THEN
            RETURN INTEGER(value)
        ELSE
            RETURN INTEGER(value) + 1
        END IF
    END FUNCTION

    FUNCTION fold_over_rows(matrix, indexer, accumulator)
        IF indexer = LENGTH(matrix) THEN
            RETURN accumulator
        ELSE
            DECLARE current_row_sum := recursive_sum(matrix[indexer], 0, 0)
            DECLARE division_result := current_row_sum / capacity
            DECLARE applied_ceiling := inner_ceiling(division_result)
            RETURN fold_over_rows(matrix, indexer + 1, accumulator + applied_ceiling)
        END IF
    END FUNCTION

    RETURN fold_over_rows(grid, 0, 0)
END FUNCTION
```