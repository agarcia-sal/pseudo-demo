```
FUNCTION rescale_to_unit(list_of_numbers)
  FUNCTION auxiliary_recursive(norm_minimum, norm_maximum, residue, source_list, accumulator)
    IF source_list IS EMPTY THEN
      RETURN accumulator
    ELSE
      LET head_element BE FIRST ELEMENT OF source_list
      LET tail_sequence BE REMAINDER OF source_list
      LET recalculated_value BE (head_element + (-(norm_minimum))) * ((1) / (norm_maximum + (-(norm_minimum))))
      RETURN auxiliary_recursive(norm_minimum, norm_maximum, residue, tail_sequence, accumulator CONCATENATED WITH recalculated_value)
    END IF
  END FUNCTION

  LET identified_minimum BE head_of(recursive_fold(list_of_numbers, list_of_numbers[0], FUNCTION(x, y) IF x < y THEN x ELSE y END))
  LET identified_maximum BE head_of(recursive_fold(list_of_numbers, list_of_numbers[0], FUNCTION(x, y) IF x > y THEN x ELSE y END))
  RETURN auxiliary_recursive(identified_minimum, identified_maximum, 0, list_of_numbers, EMPTY_LIST)
END FUNCTION
```