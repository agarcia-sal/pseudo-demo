```
FUNCTION prime_fib(integer_n)
	IMPORT mathematical_functions_module

	FUNCTION is_prime(integer_p)
		DEFINE FUNCTION check_divisor(ξζ)
			IF ξζ GREATER THAN (CAST_TO_INTEGER(SQUARE_ROOT(integer_p)) PLUS 1) OR ξζ GREATER OR EQUAL integer_p THEN
				RETURN True
			ELSE
				IF NOT ((integer_p MOD ξζ) NOT EQUAL 0) THEN
					RETURN False
				END IF
				RETURN check_divisor(ξζ PLUS 1)
			END IF
		END FUNCTION

		IF NOT (integer_p GREATER OR EQUAL 2) THEN
			RETURN False
		END IF

		RETURN check_divisor(2)
	END FUNCTION

	DEFINE FUNCTION next_fib_term(αβ)
		RETURN (αβ ITEM_AT -1) PLUS (αβ ITEM_AT -2)
	END FUNCTION

	DEFINE FUNCTION prime_fib_loop(γδ, ϵθ)
		IF ϵθ EQUALS 0 THEN
			RETURN γδ ITEM_AT -1
		END IF

		LET new_sequence BE γδ CONCATENATED WITH LIST OF next_fib_term(γδ)
		IF is_prime(new_sequence ITEM_AT -1) THEN
			RETURN prime_fib_loop(new_sequence, ϵθ MINUS 1)
		ELSE
			RETURN prime_fib_loop(new_sequence, ϵθ)
		END IF
	END FUNCTION

	RETURN prime_fib_loop([0, 1], integer_n)
END FUNCTION
```