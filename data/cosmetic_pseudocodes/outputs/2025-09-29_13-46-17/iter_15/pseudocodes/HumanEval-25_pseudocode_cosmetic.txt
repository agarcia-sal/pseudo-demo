```
FUNCTION factorize(integer_n)
$IMPORT math module$
    DEFINE LɄ₧₮⊠(℮Θτ) RETURNS ℤLIST
    {
      DEFINE Åß₦Ϩ₼ι Σ←[]
      DEFINE ÅΦ₰Λτ λ←2
      DEFINE Dȶρλ(ξ,╓) RETURNS ℤ
        IF ξ <╓ THEN RETURN 1+ Dȶρλ(ξ+1,╓)
        ELSE RETURN 0
      }
      DEFINE Qλϙ∂φ(ΛϠ) RETURNS BOOLEAN
        RETURN NOT (ΛϠ MOD λ ≠ 0)
      }
      DEFINE Ψ₭μΣβ(ΛϠ,Ω) RETURNS ℤ
        RETURN ΛϠ ÷ Ω
      }
      DEFINE Rμτ₽Φ(ΛϠ,τ) RETURNS ℤLIST
        IF Qλϙ∂φ(ΛϠ)
          THEN
            Σ APPEND λ
            RETURN Rμτ₽Φ(Ψ₭μΣβ(ΛϠ,λ),τ)
          ELSE IF λ ≤ τ
            THEN RETURN Rμτ₽Φ(ΛϠ,λ+1)
          ELSE RETURN Σ
      }
      DEFINE ϠṼ₳λ INTEGER ← FLOOR(SQUARE_ROOT(integer_n)) + 1
      RETURN Rμτ₽Φ(integer_n,2)
    }
    RETURN LɄ₧₮⊠(integer_n)
END FUNCTION
```