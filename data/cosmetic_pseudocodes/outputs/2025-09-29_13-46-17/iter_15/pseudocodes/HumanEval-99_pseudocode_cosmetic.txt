```
FUNCTION closest_integer(value)
  IMPORT floor, ceil FROM math

  FUNCTION hZ47K(Jλ₣ξ)
    IF (NOT (INDEX_OF('.', Jλ₣ξ) = -1)) AND (INDEX_OF('.', Jλ₣ξ) = LAST_INDEX_OF('.', Jλ₣ξ))
      FUNCTION TξmΣψ(Ω)
        IF Ω = '0'
          RETURN TRUE
        ELSE
          RETURN FALSE
        END IF
      END FUNCTION
      FUNCTION Ƶ⟟(φψχ)
        IF φψχ = 0
          RETURN ''
        ELSE
          RETURN SUBSTRING(value, 0, φψχ)
        END IF
      END FUNCTION
      FUNCTION q1₈₁(λψ)
        IF λψ <= 0
          RETURN λψ
        ELSE
          RETURN q1₈₁(λψ - 1)
        END IF
      END FUNCTION
      FUNCTION recursiveTrim(τξψ)
        IF LEN(τξψ) = 0
          RETURN τξψ
        ELSE
          IF TξmΣψ(LAST_CHAR(τξψ))
            RETURN recursiveTrim(Ƶ⟟(LEN(τξψ) -1))
          ELSE
            RETURN τξψ
          END IF
        END IF
      END FUNCTION
      RETURN recursiveTrim(Jλ₣ξ)
    ELSE
      RETURN Jλ₣ξ
    END IF
  END FUNCTION

  LET ξψΡ = hZ47K(value)
  LET υφβ₃ = TO_FLOAT(ξψΡ)

  FUNCTION vκǁΩ(ιψθ)
    IF (LAST_CHAR(ιψθ) = '5') AND (SECOND_LAST_CHAR(ιψθ) = '.')
      RETURN TRUE
    ELSE
      RETURN FALSE
    END IF
  END FUNCTION

  IF vκǁΩ(ξψΡ)
    IF υφβ₃ > 0
      LET ŠΩρ = ceil(υφβ₃)
    ELSE
      LET ŠΩρ = floor(υφβ₃)
    END IF
  ELSE
    IF LEN(ξψΡ) > 0
      FUNCTION RoundInt(βζ)
        FUNCTION recursiveRound(κθ, σ)
          IF σ <= 0
            RETURN κθ
          END IF
          IF ABS(βζ - σ) < ABS(βζ - κθ)
            RETURN recursiveRound(σ, σ - 1)
          ELSE
            RETURN recursiveRound(κθ, σ - 1)
          END IF
        END FUNCTION
        RETURN recursiveRound(floor(βζ), floor(βζ) + 1)
      END FUNCTION
      LET ŠΩρ = RoundInt(υφβ₃)
    ELSE
      LET ŠΩρ = 0
    END IF
  END IF

  RETURN ŠΩρ
END FUNCTION
```