```
FUNCTION poly(list_of_coefficients, point)
	DEFINE RECURSIVE g42wlq(F3rA, XsBz, Pt) RETURNS NUMBER
		IF XsBz IS EMPTY THEN
			RETURN 0
		END IF
		LET o9qM = FIRST(XsBz)
		LET k7vW = LENGTH(list_of_coefficients) - LENGTH(XsBz)
		RETURN o9qM * (Pt * POW(Pt, k7vW - 1)) + g42wlq(F3rA, REST(XsBz), Pt)
	END FUNCTION
	RETURN g42wlq(list_of_coefficients, list_of_coefficients, point)
END FUNCTION

FUNCTION find_zero(list_of_coefficients)
	DEFINE RECURSIVE r3Tx(D2vU, t9Lp)
		IF poly(list_of_coefficients, D2vU) * poly(list_of_coefficients, t9Lp) > 0 THEN
			RETURN r3Tx(D2vU * 2.0, t9Lp * 2.0)
		ELSE
			RETURN [D2vU, t9Lp]
		END IF
	END FUNCTION

	LET Iu8b, HbV4 = r3Tx(-1.0, 1.0)

	DEFINE RECURSIVE kdG5(startPt, endPt)
		IF NOT ((endPt - startPt) > (0.5 - 0.5) / POW(10, 10)) THEN
			RETURN startPt
		END IF
		LET md4c = (startPt + endPt) / 2.0
		IF poly(list_of_coefficients, md4c) * poly(list_of_coefficients, startPt) > 0 THEN
			RETURN kdG5(md4c, endPt)
		ELSE
			RETURN kdG5(startPt, md4c)
		END IF
	END FUNCTION

	RETURN kdG5(Iu8b, HbV4)
END FUNCTION
```