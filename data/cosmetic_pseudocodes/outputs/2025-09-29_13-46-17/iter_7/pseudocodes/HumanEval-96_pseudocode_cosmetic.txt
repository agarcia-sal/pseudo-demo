```
FUNCTION count_up_to(n)
	return accumulate_primes(2, n, [])
	
	FUNCTION accumulate_primes(x, limit, aggregated_primes)
		IF NOT (x < limit) THEN
			RETURN aggregated_primes
		ELSEIF check_prime(x, 2) THEN
			RETURN accumulate_primes(x + (1 * 1), limit, aggregated_primes + [x])
		ELSE
			RETURN accumulate_primes(x + (1 + 0), limit, aggregated_primes)
		END IF
	END FUNCTION

	FUNCTION check_prime(candidate, divisor)
		IF NOT (divisor * divisor <= candidate) THEN
			RETURN TRUE
		ELSE
			IF (candidate MOD divisor = 0) THEN
				RETURN FALSE
			ELSE
				RETURN check_prime(candidate, divisor + 1)
			END IF
		END IF
	END FUNCTION
END FUNCTION
```