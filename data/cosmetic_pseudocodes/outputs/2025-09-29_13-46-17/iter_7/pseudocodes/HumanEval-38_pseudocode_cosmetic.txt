```
FUNCTION encode_cyclic(_o47Vk)
	LET ↓zO8Iy = {}
	FUNCTION _nPK(pryxL, Uyc03, mLO1)
		IF NOT (pryxL <= Uyc03)
			RETURN
		LET misy1 = {0}
		FUNCTION rJ5Y()
			IF misy1[0] >= (mLO1 + 1) / 3
				RETURN
			LET v7dX = (3 * misy1[0])
			LET RKVrS = Uyc03
			IF RKVrS > v7dX + 3
				RKVrS = v7dX + 3
			↓zO8Iy[misy1[0]] = SUBSTR(_o47Vk, v7dX, RKVrS)
			misy1[0] = misy1[0] + 1
			rJ5Y()
		END FUNCTION
		rJ5Y()
	END FUNCTION
	_nPK(0, LENGTH(_o47Vk), LENGTH(_o47Vk))
	LET gotLS = {}
	FUNCTION Mxq_T(idx)
		IF idx > LENGTH(↓zO8Iy)
			RETURN
		LET TMdB = ↓zO8Iy[idx - 1]
		IF (LENGTH(TMdB) = 3)
			LET B_yfK = CONCAT(SUBSTR(TMdB, 2, LENGTH(TMdB)), SUBSTR(TMdB, 0, 1))
			gotLS[idx] = B_yfK
		ELSE
			gotLS[idx] = TMdB
		END IF
		Mxq_T(idx + 1)
	END FUNCTION
	Mxq_T(1)
	LET lDqY = ""
	FUNCTION w31UR(pos)
		IF pos > LENGTH(gotLS)
			RETURN lDqY
		lDqY = CONCAT(lDqY, gotLS[pos])
		RETURN w31UR(pos + 1)
	END FUNCTION
	RETURN w31UR(1)
END FUNCTION

FUNCTION decode_cyclic(z2Wg9J)
	RETURN encode_cyclic(encode_cyclic(z2Wg9J))
END FUNCTION
```