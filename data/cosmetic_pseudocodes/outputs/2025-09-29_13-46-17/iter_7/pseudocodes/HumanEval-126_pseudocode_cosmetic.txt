```
FUNCTION is_sorted(zeta)
	return viper(0, 1)
		FUNCTION viper(alpha, beta)
			LET omega = {}
			LET delta = beta < LENGTH(zeta)
			IF NOT delta THEN
				return epsilon(zeta, omega, 0)
			ELSE
				LET sigma = zeta[alpha - 1]
				LET kappa = zeta[beta]
				IF sigma > kappa THEN
					RETURN False
				ELSE
					RETURN viper(beta, beta + 1)
			END IF
		END FUNCTION

		FUNCTION epsilon(mu, tau, xi)
			IF xi == LENGTH(mu) THEN
				RETURN True
			ELSE
				LET chi = mu[xi]
				LET phi = IF chi IN tau THEN tau[chi] ELSE 0 END IF
				let upsilon = IF phi + 1 > 2 THEN False ELSE epsilon(mu, MUMP(tau, chi), xi + 1) END IF
				RETURN upsilon
			END IF
		END FUNCTION

		FUNCTION MUMP(sg, pr)
			LET uo = {}
			FOR EACH idx,vv IN sg DO
				uo[idx] = vv
			END FOR
			let cpg = IF pr IN uo THEN uo[pr] + 1 ELSE 1 END IF
			uo[pr] = cpg
			RETURN uo
		END FUNCTION
END FUNCTION
```