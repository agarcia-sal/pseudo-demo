```
FUNCTION is_multiply_prime(a)
	TYPE BoolFlag IS {TRUE, FALSE}
	FUNCTION is_prime(n)
		FUNCTION check_prime(current, limit)
			IF current >= limit THEN RETURN TRUE
			IF (n MOD current) = 0 THEN RETURN FALSE
			RETURN check_prime(current + 1, limit)
		END FUNCTION
		RETURN check_prime(2, n)
	END FUNCTION

	FUNCTION loop_over_i(i)
		IF i > 100 THEN RETURN FALSE

		FUNCTION loop_over_j(j)
			IF j > 100 THEN RETURN loop_over_i(i + 1)
			IF NOT is_prime(j) THEN RETURN loop_over_j(j + 1)

			FUNCTION loop_over_k(k)
				IF k > 100 THEN RETURN loop_over_j(j + 1)
				IF NOT is_prime(k) THEN RETURN loop_over_k(k + 1)
				IF i * j * k = a THEN RETURN TRUE
				RETURN loop_over_k(k + 1)
			END FUNCTION

			RETURN IF loop_over_k(2) THEN TRUE ELSE loop_over_j(j + 1)
		END FUNCTION

		RETURN IF is_prime(i) THEN loop_over_j(2) ELSE loop_over_i(i + 1)
	END FUNCTION

	RETURN loop_over_i(2)
END FUNCTION
```