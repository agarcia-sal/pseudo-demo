```
FUNCTION separate_paren_groups(str_input)
	DEFINE RECURSIVE FUNCTION aux(itr_chars, acc_results, acc_current, depth_tracker)
		IF depth_tracker = 0 AND LENGTH(acc_current) > 0 THEN
			LET updated_acc_results := acc_results + [acc_current]
		ELSE
			LET updated_acc_results := acc_results
		END IF
		IF itr_chars IS EMPTY THEN
			RETURN updated_acc_results
		ELSE
			LET h, *t := itr_chars
			IF h = '(' THEN
				RETURN aux(t, updated_acc_results, acc_current + [h], depth_tracker + 1)
			ELSE IF h = ')' THEN
				LET new_depth := depth_tracker - 1
				RETURN aux(t, updated_acc_results, acc_current + [h], new_depth)
			ELSE
				RETURN aux(t, updated_acc_results, acc_current + [h], depth_tracker)
			END IF
		END IF
	END FUNCTION
	RETURN aux(LIST(str_input), [], [], 0)
END FUNCTION
```