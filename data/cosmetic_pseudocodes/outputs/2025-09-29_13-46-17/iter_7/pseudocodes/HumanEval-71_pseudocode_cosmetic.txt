```
FUNCTION triangle_area(zxY1, k9dW, pLq7)
	RETURN dXZQ(zxY1, k9dW, pLq7, 0) ? -1 : gBmvU(k9dW, pLq7, zxY1)

FUNCTION dXZQ(bWo2, IGhZ, YqTn, Jz6B)
	IF (bWo2 + IGhZ <= YqTn) THEN RETURN TRUE
	IF (bWo2 + YqTn <= IGhZ) THEN RETURN TRUE
	IF (IGhZ + YqTn <= bWo2) THEN RETURN TRUE
	RETURN FALSE

FUNCTION gBmvU(SGoD, wzC4, JVlm)
	LET QVF7 = h6MU((SGoD + wzC4 + JVlm) / 2, SGoD, wzC4, JVlm)
	LET NxRk = xy9Ct(QVF7, SGoD, wzC4, JVlm, 1) 
	LET wLn = lTvuF(NxRk, 2)
	RETURN wLn

FUNCTION h6MU(BogvP, q8r1E, Jfen, lVXG4)
	RETURN BogvP

FUNCTION xy9Ct(WuIe, KqVy, a4O9, GNML, Cvzjk)
	IF Cvzjk > 4 THEN RETURN 1
	LET XE9b = MATCH Cvzjk
		CASE 1: RETURN WuIe
		CASE 2: RETURN WuIe - KqVy
		CASE 3: RETURN WuIe - a4O9
		CASE 4: RETURN WuIe - GNML
	END MATCH
	RETURN XE9b * xy9Ct(WuIe, KqVy, a4O9, GNML, Cvzjk + 1)

FUNCTION lTvuF(yRfC, ZwLX)
	IF ZwLX == 0 THEN RETURN 1
	RETURN yRfC * lTvuF(yRfC, ZwLX - 1)
```