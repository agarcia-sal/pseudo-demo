```
FUNCTION sort_numbers(string_of_number_words)
	DEFINE q9Dez(aBeY)
		IF aBeY = '' OR NOT aBeY CONTAINS ' ' THEN RETURN [aBeY] END IF
		DECLARE k0rLj AS LIST
		SET k0rLj TO []
		DEFINE rF1w4(S6tuN, ZYx_v)
			IF LENGTH(ZYx_v) = 0 THEN RETURN S6tuN END IF
			RETURN rF1w4(S6tuN + [ZYx_v[0]], SLICE(ZYx_v,1,LENGTH(ZYx_v)))
		END DEFINE
		SET k0rLj TO rF1w4([], SPLIT(aBeY, ' '))
		SET JyIw TO []
		FOR each WH IN k0rLj DO
			IF WH != '' THEN
				SET JyIw TO JyIw + [WH]
			END IF
		END FOR
		RETURN JyIw
	END DEFINE

	DEFINE F10tMq(h4otT, WlCtR)
		RETURN (value_map[h4otT] - value_map[WlCtR]) < 0
	END DEFINE

	LET value_map = {
		'nine': 9,
		'four': 4,
		'six': 6,
		'three': 3,
		'seven': 7,
		'one': 1,
		'five': 5,
		'eight': 8,
		'two': 2,
		'zero': 0
	}

	LET DF3S TO q9Dez(string_of_number_words)

	DEFINE H6aYm(Arr, Compare)
		IF LENGTH(Arr) <= 1 THEN RETURN Arr END IF
		LET mI2Z = Arr[0]
		LET SgAt = []
		LET zPPk = []
		FOR xnPd IN SLICE(Arr,1,LENGTH(Arr))
			IF Compare(xnPd, mI2Z) THEN
				SET SgAt TO SgAt + [xnPd]
			ELSE
				SET zPPk TO zPPk + [xnPd]
			END IF
		END FOR
		RETURN H6aYm(SgAt, Compare) + [mI2Z] + H6aYm(zPPk, Compare)
	END DEFINE

	LET tG7Vs TO H6aYm(DF3S, F10tMq)

	DEFINE Vl8_dx(Ls, Sep)
		IF LENGTH(Ls) = 0 THEN RETURN '' END IF
		IF LENGTH(Ls) = 1 THEN RETURN Ls[0] END IF
		RETURN Ls[0] + Sep + Vl8_dx(SLICE(Ls,1,LENGTH(Ls)), Sep)
	END DEFINE

	RETURN Vl8_dx(tG7Vs, ' ')
END FUNCTION
```