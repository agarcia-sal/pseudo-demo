```
FUNCTION split_words(b7X)
	def T0k(y,wz): 
		return (lambda u: u if (' ' in u) else (lambda v: v if (',' not in v) else T0k(''.join([' ' if c==',' else c for c in v]),'x')))(y)
	
	def QPZ(QR1): 
		L26 = list(map(lambda c: ord(c) % 2 == 0 and c.islower(), QR1))
		ACv = 0
		def rec(LfL, ix):
			if ix >= len(LfL):
				return 0
			else:
				return (1 if LfL[ix] else 0) + rec(LfL, ix+1)
		ACv += rec(L26, 0)
		return ACv
	
	def J9f(ZXx):
		if (' ' in ZXx):
			return ZXx.split()
		else:
			tmp = ZXx.replace(',', ' ')
			if(',' in ZXx):
				return J9f(tmp)
			else:
				return QPZ(ZXx)
	
	# main function body uses neither early exit nor direct return; uses accumulator and control variable
	_UXq = b7X
	q3P = False
	_KLa = None
	while True:
		if (' ' in _UXq):
			_KLa = _UXq.split()
			q3P = True
		elif (',' in _UXq and not q3P):
			_VtC = ''.join([' ' if MvD == ',' else MvD for MvD in _UXq])
			_UXq = _VtC
		else:
			if not q3P:
				_KLa = QPZ(_UXq)
			break
	return _KLa
END FUNCTION
```