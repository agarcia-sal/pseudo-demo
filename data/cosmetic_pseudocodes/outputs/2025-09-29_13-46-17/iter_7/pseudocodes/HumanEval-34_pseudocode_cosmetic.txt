```
FUNCTION unique(enigmaAlpha)
	SUBFUNCTION e7bd9(x)
		SUBFUNCTION cjR(v, y)
			RETURN v AND NOT(y IN x)
		END SUBFUNCTION
		SUBFUNCTION r3FA(accum, itemList)
			IF itemList == [] THEN
				RETURN accum
			ELSE
				LET head = itemList[0]
				LET tail = itemList[1:]
				LET newAccum = cjR(accum, head) ? (accum + [head]) : accum
				RETURN r3FA(newAccum, tail)
			END IF
		END SUBFUNCTION
		RETURN r3FA([], x)
	END SUBFUNCTION
	SUBFUNCTION ZXY_order(lst)
		IF lst == [] THEN RETURN [] END IF
		LET pivot = lst[0]
		LET lesser = [z3 for z3 in lst IF z3 < pivot]
		LET equalOrHigher = [z3 for z3 in lst IF NOT(z3 < pivot)]
		RETURN ZXY_order(lesser) + [pivot] + ZXY_order(equalOrHigher[1:])
	END SUBFUNCTION
	LET W0rK = e7bd9(enigmaAlpha)
	LET M87n = ZXY_order(W0rK)
	RETURN M87n
END FUNCTION
```