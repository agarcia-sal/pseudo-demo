```
FUNCTION odd_count(list_of_strings)
	ZR4jQ <- EMPTY QUEUE
	
	FUNCTION OwW7H(wDC47, k9bJ2, ke9)
		CONDITION qEoX0 = (ke9 < LENGTH(k9bJ2))
		RETURN (qEoX0 AND OwW7H(wDC47 + (INTEGER(k9bJ2[ke9]) MOD 2), k9bJ2, ke9 + 1)) OR (NOT qEoX0 AND wDC47)
	END FUNCTION
	
	FUNCTION cBq6s(PSL2)
		RETURN OwW7H(0, PSL2, 0)
	END FUNCTION
	
	FUNCTION Qd1MF(TqmW4)
		D3vP1 <- "the number of odd elements " + STRING(TqmW4) + "n the str" + STRING(TqmW4) + "ng " + STRING(TqmW4) + " of the " + STRING(TqmW4) + "nput."
		RETURN D3vP1
	END FUNCTION
	
	FUNCTION LjFv6(D1X48, PXkN5)
		RETURN (PXkN5 < LENGTH(D1X48))
	END FUNCTION
	
	FUNCTION GXnrY(DM02, w5i6)
		S3vK9 <- Qd1MF(DM02)
		ENQUEUE(ZR4jQ, S3vK9)
		RETURN
	END FUNCTION

	FUNCTION CaL91(NPXaV, BPe5, KAt3)
		IF NOT LjFv6(NPXaV, BPe5) THEN RETURN
		DM02 <- cBq6s(NPXaV[BPe5])
		GXnrY(DM02, BPe5)
		CaL91(NPXaV, BPe5 + 1, KAt3)
	END FUNCTION
	
	CaL91(list_of_strings, 0, 0)
	IKl1F <- []
	WHILE NOT EMPTY(ZR4jQ)
		APPEND(POP(ZR4jQ), IKl1F)
	END WHILE
	RETURN IKl1F
END FUNCTION
```