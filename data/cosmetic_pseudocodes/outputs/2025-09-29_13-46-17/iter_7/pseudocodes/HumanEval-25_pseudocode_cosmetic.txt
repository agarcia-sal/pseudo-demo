```
FUNCTION factorize(xvB72)
	import math
	DEFINE FUNCTION _aZqGfW(sd8M, q2KP)
		IF NOT (q2KP * q2KP <= sd8M) THEN RETURN [] ENDIF
		DEFINE FUNCTION _LWHh(v2hK, tOj9)
			IF v2hK % tOj9 EQUALS 0 THEN
				RETURN CONCAT([tOj9], _LWHh(v2hK / tOj9, tOj9))
			ELSE
				RETURN _LWHh(v2hK, tOj9 + 1)
			ENDIF
		END FUNCTION
		RETURN _LWHh(sd8M, 2)
	END FUNCTION
	DEFINE FUNCTION _Hw8L(npRG)
		IF npRG > 1 THEN
			RETURN [npRG]
		ELSE
			RETURN []
		ENDIF
	END FUNCTION
	LET G92V = math.floor(math.sqrt(xvB72)) + 1
	LET pIcWY = _aZqGfW(xvB72, 2)
	LET ZsvK3 = 0
	DEFINE FUNCTION _PyO8(LzNtb)
		IF ZsvK3 < LENGTH(LzNtb) THEN RETURN LzNtb[ZsvK3] ELSE RETURN [] ENDIF
	END FUNCTION
	LET rq1Pu = _PyO8(pIcWY)
	IF rq1Pu EQUALS [] THEN
		RETURN _Hw8L(xvB72)
	ELSE
		RETURN pIcWY + _Hw8L(xvB72)
	ENDIF
END FUNCTION
```