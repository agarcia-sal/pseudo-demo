```
FUNCTION prime_fib(integer_n)
 IMPORT mathematical_functions_module

 FUNCTION is_prime(integer_p)
  LET ρλ₉₅µ = TRUE
  LET ∂ϕ𝛉 = 2
  CONTINUATION cp_loop(δτε₄)
   IF NOT (integer_p ≥ 2) THEN
    RETURN FALSE
   END IF
   IF δτε₄ > MIN((FLOOR(SQRT(integer_p)) + 1), (integer_p - 1)) THEN
    RETURN ρλ₉₅µ
   END IF
   IF (integer_p % δτε₄) = 0 THEN
    ρλ₉₅µ ← FALSE
    RETURN ρλ₉₅µ
   END IF
   RETURN cp_loop(δτε₄ + 1)
  END CONTINUATION
  RETURN cp_loop(2)
 END FUNCTION

 FUNCTION ζ⚡η(ψγδ, ωθ)
  IF ωθ = 0 THEN RETURN ψγδ(0,0) END IF
  RETURN ζ⚡η(ψγδ, ωθ - 1, ψγδ(0, ωθ - 1) + ψγδ(0, ωθ - 2))
 END FUNCTION

 FUNCTION ζ⚡η(ψγδ, ωθ, ζβ)
  APPEND ζβ TO ψγδ
  RETURN ψγδ
 END FUNCTION

 FUNCTION δφψρ(ζλα)
  IF integer_n = 0 THEN
   RETURN LAST_ELEMENT(ζλα)
  ELSE
   LET αφω = ζ⚡η(ζλα, LENGTH(ζλα))
   IF is_prime(LAST_ELEMENT(αφω)) THEN
    RETURN δφψρ(αφω, integer_n - 1)
   ELSE
    RETURN δφψρ(αφω, integer_n)
   END IF
  END IF
 END FUNCTION

 RETURN δφψρ([0,1], integer_n)
END FUNCTION
```