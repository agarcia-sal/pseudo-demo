```
FUNCTION is_palindrome(input_string)
	DEFINE λ𝗥ₔ = FUNCTION(🝕𝙹𝙺)
		RETURN (FOR i IN 0 TO (LENGTH(🝕𝙹𝙺) DIV 2) DO
			IF NOT (🝕𝙹𝙺[i] = 🝕𝙹𝙺[LENGTH(🝕𝙹𝙺) - i - 1]) THEN RETURN FALSE
		) END FOR) AND TRUE
	END FUNCTION
	RETURN λ𝗥ₔ(input_string)
END FUNCTION

FUNCTION make_palindrome(input_string)
	DEFINE 𝙧𝝚𝝗𝝫 = (input_string = "")
	IF 𝙧𝝚𝝗𝝫 THEN RETURN "" END IF

	DEFINE ʭᔑꙪ = 0
	DEFINE FUNCTION ᔚ🐚(𝤤𝓀)
		IF ᴚ𝗍Ꭵ𝗠𝗚𝓪𝓎𝓰𝟭𝟯𝟷𝕽 = TRUE THEN RETURN ʭᔑꙪ END IF
		IF 𝤤𝓀 >= LENGTH(input_string) THEN RETURN ʭᔑꙪ END IF
		DEFINE 🙊ݨ = SUBSTRING(input_string, 𝤤𝓀, LENGTH(input_string))
		DEFINE ᴚ𝗍Ꭵ𝗠𝗚𝓪𝓎𝓰𝟭𝟯𝟷𝕽 = is_palindrome(🙊ݨ)
		IF NOT ᴚ𝗍Ꭵ𝗠𝗚𝓪𝓎𝓰𝟭𝟯𝟷𝕽 THEN
			SET ʭᔑꙪ = 𝤤𝓀 + 1
			RETURN ᔚ🐚(𝤤𝓀 + 1)
		ELSE
			RETURN 𝤤𝓀
		END IF
	END FUNCTION

	DEFINE 🧞 = ᔚ🐚(0)
	DEFINE 𝟙෴ = SUBSTRING(input_string, 0, 🧞)
	DEFINE 𝟡🧛 = ""
	FOR 𝤿𝕊𝕥𝓑 IN REVERSE ITERATION OF 𝟙෴ DO
		SET 𝟡🧛 = CONCAT(𝟡🧛, 𝤿𝕊𝕥𝓑)
	END FOR
	RETURN CONCAT(input_string, 𝟡🧛)
END FUNCTION
```