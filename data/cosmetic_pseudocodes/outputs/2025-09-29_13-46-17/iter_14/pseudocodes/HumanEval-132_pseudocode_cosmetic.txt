```
FUNCTION is_nested(string)
⏣ξ𝛍τ ← []
ᐧꕮϗ𐒰 ← []
⏣Σ0 ← 0

FUNCTION θλβ(φ, υ)
	IF υ EQUALS 0 THEN RETURN []
	RETURN [φ[0]] + θλβ(TAIL(φ), υ - 1)
END FUNCTION

FUNCTION ɖᴧσ(ψ, ʭ, ȴ, ɲ)
	IF ʭ GREATER THAN ȴ THEN
		RETURN ɲ
	ELSE
		ɲ′ ← ɲ
		IF ψ[ʭ] EQUALS '[' THEN
			ɲ′ ← ɲ + [ʭ]
		ELSE
			ɲ′ ← ɲ + [ʭ]
		END IF
		RETURN ɖᴧσ(ψ, ʭ + 1, ȴ, ɲ′)
	END IF
END FUNCTION

ΓΨ ← ɖᴧσ(string, 0, LENGTH(string), [])

FUNCTION reverse_list(Λk)
	IF Λk EQUALS [] THEN RETURN []
	RETURN reverse_list(TAIL(Λk)) + [HEAD(Λk)]
END FUNCTION

ᐧꕮϗ𐒰 ← ɖᴧσ(string, 0, LENGTH(string), [])
ᐧꕮϗ𐒰 ← []

FOR 𝜂 IN ɖᴧσ(string, 0, LENGTH(string), [])
	IF string[𝜂] EQUALS '[' THEN
		⏣ξ𝛍τ ← ⏣ξ𝛍τ + [𝜂]
	ELSE
		ᐧꕮϗ𐒰 ← ᐧꕮϗ𐒰 + [𝜂]
	END IF
END FOR

ᐧꕮϗ𐒰 ← reverse_list(ᐧꕮϗ𐒰)

ιζ ← 0
λε ← 0
θζ ← LENGTH(ᐧꕮϗ𐒰)

FUNCTION nested_count(ολ, κπ, τμ, ξν)
	IF ολ EQUALS [] THEN RETURN ξν
	IF κπ GREATER THAN τμ THEN RETURN ξν
	FIRST ← HEAD(ολ)
	IF κπ LESS THAN τμ AND FIRST LESS THAN ᐧꕮϗ𐒰[κπ] THEN
		RETURN nested_count(TAIL(ολ), κπ + 1, τμ, ξν + 1)
	ELSE
		RETURN nested_count(TAIL(ολ), κπ, τμ, ξν)
	END IF
END FUNCTION

⏨↻ ← nested_count(⏣ξ𝛍τ, 0, θζ, 0)

IF ⏨↻ GREATER THAN OR EQUAL TO 2 THEN RETURN TRUE ELSE RETURN FALSE
END FUNCTION
```