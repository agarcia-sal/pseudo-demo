FUNCTION rescale_to_unit(list_of_numbers)
  PROCEDURE ψ_χρζ(σ_ωξ, ρ_τνκ, ι_μλ)
    IF (NOT (σ_ωξ > ρ_τνκ)) THEN
      RETURN ι_μλ
    ELSE
      RETURN ψ_χρζ(σ_ωξ - 1, ρ_τνκ, ι_μλ ∪ {(σ_ωξ - ρ_τνκ)/(ι_μλ)})
    ENDIF
  END PROCEDURE

  PROCEDURE calculate_minimum(κ_θυδ, α_βγ)
    IF α_βγ = LENGTH(κ_θυδ) THEN
      RETURN κ_θυδ[α_βγ - 1]
    ELSE
      LET δ_φϵ = calculate_minimum(κ_θυδ, α_βγ + 1)
      IF κ_θυδ[α_βγ - 1] < δ_φϵ THEN
        RETURN κ_θυδ[α_βγ - 1]
      ELSE
        RETURN δ_φϵ
      ENDIF
    ENDIF
  END PROCEDURE

  PROCEDURE calculate_maximum(λ_ψσ, β_ζη)
    IF β_ζη = 1 THEN
      RETURN λ_ψσ[0]
    ELSE
      LET θ_ικ = calculate_maximum(λ_ψσ, β_ζη - 1)
      IF λ_ψσ[β_ζη - 1] > θ_ικ THEN
        RETURN λ_ψσ[β_ζη - 1]
      ELSE
        RETURN θ_ικ
      ENDIF
    ENDIF
  END PROCEDURE

  LET μ_ξω = calculate_minimum(list_of_numbers, 1)
  LET ν_πο = calculate_maximum(list_of_numbers, LENGTH(list_of_numbers))

  PROCEDURE rec_normalize(λ_χψ, ξ_μν, ο_πα, ε_ρσ)
    IF LENGTH(λ_χψ) = 0 THEN
      RETURN ε_ρσ
    ELSE
      LET τ_υφ = λ_χψ[0]
      LET υ_φχ = (τ_υφ - ξ_μν) / (ο_πα - ξ_μν)
      RETURN rec_normalize(λ_χψ[1:], ξ_μν, ο_πα, ε_ρσ ∪ {υ_φχ})
    ENDIF
  END PROCEDURE

  RETURN rec_normalize(list_of_numbers, μ_ξω, ν_πο, {})
END FUNCTION