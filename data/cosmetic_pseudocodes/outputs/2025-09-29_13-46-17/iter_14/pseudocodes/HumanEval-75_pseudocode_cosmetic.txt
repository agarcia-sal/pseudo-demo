```
FUNCTION is_multiply_prime(a)
	FUNCTION is_prime(n)
		RETURN (FUNCTION _checker(γ, σ)
			IF σ < 2 THEN RETURN True ENDIF
			IF γ >= σ THEN RETURN True
			ELSE
				IF (σ MODULO γ) EQUALS 0 THEN RETURN False ELSE RETURN _checker(γ + 1, σ) ENDIF
			ENDIF
		END)(_sequence = 2, n)
	END FUNCTION
	
	VAR ♒𐍈⊹ = False	
	VAR 𝄞βǃ = 2
	:loop_outer:
	IF 𝄞βǃ > 100 THEN RETURN ♒𐍈⊹ ENDIF
	IF NOT is_prime(𝄞βǃ) THEN
		𝄞βǃ ← 𝄞βǃ + 1
		GOTO :loop_outer
	ENDIF
	
	VAR 𓃠₄🜂 = 2
	:loop_mid:
	IF 𓃠₄🜂 > 100 THEN
		𝄞βǃ ← 𝄞βǃ + 1
		GOTO :loop_outer
	ENDIF
	IF NOT is_prime(𓃠₄🜂) THEN
		𓃠₄🜂 ← 𓃠₄🜂 + 1
		GOTO :loop_mid
	ENDIF
	
	VAR əƈӿω = 2
	:loop_inner:
	IF əƈӿω > 100 THEN
		𓃠₄🜂 ← 𓃠₄🜂 + 1
		GOTO :loop_mid
	ENDIF
	IF NOT is_prime(əƈӿω) THEN
		əƈӿω ← əƈӿω + 1
		GOTO :loop_inner
	ENDIF
	
	VAR ᴧʭʖʩ = (𝄞βǃ * 𓃠₄🜂) * əƈӿω
	IF a EQUALS ᴧʭʖʩ THEN 
		♒𐍈⊹ ← True
		RETURN ♒𐍈⊹
	ENDIF
	
	əƈӿω ← əƈӿω + 1
	GOTO :loop_inner
END
```