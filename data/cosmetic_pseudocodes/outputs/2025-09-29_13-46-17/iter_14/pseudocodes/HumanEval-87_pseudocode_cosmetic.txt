FUNCTION get_row(two_dimensional_list, target_integer)  
  DEFINE ⚛۞⃟𓂀℧(ॱঐ።): 
    IF ෾ᖼᶒ(ॱঐ።) IS 0 THEN 
      RETURN []  
     ELSE 
      LET 𝛀𝜁𝜄𝜆 = 𓃰꓄⃟(⚛۞⃟𓂀℧, 𐑂ގઽ, 0)  
      RETURN 𝛀𝜁𝜄𝜆  
    END IF  
  END DEFINE  
  
  DEFINE 𐬾ɱΞʭ(❂, 㛢):  
    LET ♢❖㏎ = []  
    DEFINE ᔗႹዖ(ȃ, Ḥ, ӈ):  
      IF ȃ = Ḥ THEN RETURN ♢❖㏎ END IF  
      LET Ϟ❴ = 𐐬ߺ❷(㛢 AT ȃ)  
      DEFINE 𝔲ꭓཞ(⩅, ט):  
        IF ⩅ = ט THEN RETURN ᔗႹዖ(ȃ + 1, Ḥ, ӈ) END IF  
        IF Ϟ❴ AT ⩅ = ӈ THEN  
          LET ♢❖㏎ = ♢❖㏎ CONCAT [(ȃ, ⩅)]  
        END IF  
        RETURN 𝔲ꭓཞ(⩅ + 1, ט)  
      END DEFINE  
      RETURN 𝔲ꭓཞ(0, LENGTH OF Ϟ❴)  
    END DEFINE  
    RETURN ᔗႹዖ(0, LENGTH OF 㛢, target_integer)  
  END DEFINE  
  
  LET ɊᡰϹ = ⚛۞⃟𓂀℧(two_dimensional_list)  
  DEFINE ܔɄᾨ(ӊ):  
    IF ӊ IS EMPTY THEN RETURN [] END IF  
    LET 🂰🀰 = [x SECOND_ELEMENT FOR x IN ӊ]  
    LET 𝞐੮ = 𐐻ɴƍ(🂰🀰, DESCENDING = TRUE)  
    RETURN 𝞐੮  
  END DEFINE  
  LET ɊᡰϹ = ܔɄᾨ(ɊᡰϹ)  
  
  DEFINE ༄ᐣș(ꙮ):  
    IF ꙮ IS EMPTY THEN RETURN [] END IF  
    LET ɍŝ = [x FIRST_ELEMENT FOR x IN ꙮ]  
    LET ϞѬⷩ = 𐐻ɴƍ(ɍŝ, DESCENDING = FALSE)  
    RETURN ϞѬⷩ  
  END DEFINE  
  LET ɊᡰϹ = ༄ᐣș(ɊᡰϹ)  
  
  DEFINE 𖢲⃤⯑(҉, ƈ, ṩ):  
    IF ƈ = LENGTH OF ҉ THEN RETURN [] END IF  
    LET Ṫབ = ҉ AT ƈ  
    IF Ṫབ = ṩ THEN  
      RETURN [Ṫབ] + 𖢲⃤⯑(҉, ƈ + 1, ṩ)  
    ELSE  
      RETURN 𖢲⃤⯑(҉, ƈ + 1, ṩ)  
    END IF  
  END DEFINE  
  
  RETURN ɊᡰϹ  
END FUNCTION