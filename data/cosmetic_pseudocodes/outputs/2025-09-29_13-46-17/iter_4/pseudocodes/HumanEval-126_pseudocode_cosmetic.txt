```
FUNCTION is_sorted(list_of_numbers)
    DEFINE tally_map AS empty map
    PROCEDURE accumulate_counts(seq, idx)
        IF idx >= LENGTH(seq) THEN RETURN
        LET element = seq[idx]
        IF element NOT IN tally_map THEN
            tally_map[element] = 1
        ELSE
            tally_map[element] = tally_map[element] + 1
        ENDIF
        accumulate_counts(seq, idx + 1)
    END PROCEDURE

    CALL accumulate_counts(list_of_numbers, 0)

    FOR key IN KEYS(tally_map)
        IF tally_map[key] > 2 THEN RETURN False ENDIF
    ENDFOR

    LET position = 1
    WHILE position < LENGTH(list_of_numbers)
        IF NOT (list_of_numbers[position - 1] <= list_of_numbers[position]) THEN RETURN False ENDIF
        position = position + 1
    ENDWHILE

    RETURN True
END FUNCTION
```