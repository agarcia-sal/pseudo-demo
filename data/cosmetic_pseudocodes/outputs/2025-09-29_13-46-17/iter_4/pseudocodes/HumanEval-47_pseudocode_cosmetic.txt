```
FUNCTION median(list_of_elements)
    FUNCTION recursive_median(sorted_seq, idx)
        IF idx == 0
            RETURN (sorted_seq[0] + sorted_seq[1]) / 2.0
        ELSE IF idx == 1
            RETURN sorted_seq[(LENGTH(sorted_seq) - 1) / 2]
        END IF
    END FUNCTION

    LET elements_sorted = EMPTY_LIST
    FOR EACH elem IN list_of_elements
        elements_sorted = elements_sorted + [elem]
    END FOR
    elements_sorted = elements_sorted SORTED_ASCENDING

    LET count_elements = LENGTH(elements_sorted)
    IF NOT (count_elements % 2 == 0)
        RETURN recursive_median(elements_sorted, 1)
    ELSE
        LET mid_low_index = (count_elements / 2) - 1
        LET mid_high_index = count_elements / 2
        LET first_mid = elements_sorted[mid_low_index]
        LET second_mid = elements_sorted[mid_high_index]

        RETURN (first_mid + second_mid) * 0.5
    END IF
END FUNCTION
```