```
FUNCTION anti_shuffle(input_string)
    DEFINE accumulateSortedWords(idx, word_array, collected)
        IF idx < LENGTH(word_array) THEN
            LET current_word = word_array[idx]
            LET chars_list = ARRAY_FROM_STRING(current_word)
            LET sorted_chars = SORT_ASC(chars_list)
            LET recomposed_word = STRING_FROM_ARRAY(sorted_chars)
            RETURN accumulateSortedWords(idx + 1, word_array, collected + [recomposed_word])
        ELSE
            RETURN collected
        END IF
    END DEFINE

    LET wordsArr = SPLIT(input_string, " ")
    LET sortedWordsArr = accumulateSortedWords(0, wordsArr, [])
    LET outputStr = JOIN(sortedWordsArr, " ")
    RETURN outputStr
END FUNCTION
```