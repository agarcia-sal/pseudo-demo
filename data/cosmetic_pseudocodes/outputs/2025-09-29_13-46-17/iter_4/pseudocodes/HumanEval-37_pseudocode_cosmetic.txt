```
FUNCTION sort_even(list_of_elements)
    PROCEDURE interleave(accumulator, even_items, odd_items, position)
        IF position EQUALS LENGTH(even_items) THEN
            RETURN accumulator
        ELSE
            SET new_accumulator TO accumulator CONCATENATED WITH even_items[position]
            IF position < LENGTH(odd_items) THEN
                SET new_accumulator TO new_accumulator CONCATENATED WITH odd_items[position]
            END IF
            RETURN interleave(new_accumulator, even_items, odd_items, position + 1)
        END IF
    END PROCEDURE

    SET evens_collection TO EMPTY LIST
    SET odds_collection TO EMPTY LIST
    FOR idx FROM 0 TO LENGTH(list_of_elements) - 1 DO
        IF NOT (idx MOD 2 = 1) THEN
            APPEND list_of_elements[idx] TO evens_collection
        ELSE
            APPEND list_of_elements[idx] TO odds_collection
        END IF
    END FOR

    CALL evens_collection.SORT()  // ascending order by default

    RETURN interleave(EMPTY LIST, evens_collection, odds_collection, 0)
END FUNCTION
```