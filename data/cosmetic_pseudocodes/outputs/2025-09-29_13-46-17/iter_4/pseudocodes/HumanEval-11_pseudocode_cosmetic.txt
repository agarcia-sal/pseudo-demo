```
FUNCTION string_xor(string_a, string_b)
    FUNCTION diff_bit(bit_m, bit_n)
        SWITCH TRUE
            CASE bit_m != bit_n:
                RETURN '1'
            DEFAULT:
                RETURN '0'
        END SWITCH
    END FUNCTION

    FUNCTION loop_zipper(iterator_p, iterator_q, acc)
        IF iterator_p IS EMPTY OR iterator_q IS EMPTY
            RETURN acc
        ELSE
            LET head_p = FIRST(iterator_p)
            LET head_q = FIRST(iterator_q)
            LET tail_p = REST(iterator_p)
            LET tail_q = REST(iterator_q)
            RETURN loop_zipper(tail_p, tail_q, acc + diff_bit(head_p, head_q))
    END FUNCTION

    RETURN loop_zipper(CONVERT_TO_LIST(string_a), CONVERT_TO_LIST(string_b), '')
END FUNCTION
```