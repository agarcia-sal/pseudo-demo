```
FUNCTION pluck(array_of_nodes)
    FUNCTION find_even_values(index, collected)
        IF index == LENGTH(array_of_nodes) THEN
            RETURN collected
        ELSE
            SET current_element TO array_of_nodes[index]
            IF (current_element MOD 2) != 1 THEN
                SET new_collected TO collected + [current_element]
            ELSE
                SET new_collected TO collected
            END IF
            RETURN find_even_values(index + 1, new_collected)
        END IF
    END FUNCTION

    SET even_set TO find_even_values(0, [])

    IF even_set == [] THEN RETURN [] END IF

    FUNCTION find_minimum_value(list_values, idx, current_min, current_min_index)
        IF idx == LENGTH(list_values) THEN
            RETURN current_min, current_min_index
        ELSE
            SET value_at_idx TO list_values[idx]
            IF value_at_idx < current_min THEN
                RETURN find_minimum_value(list_values, idx + 1, value_at_idx, idx)
            ELSE
                RETURN find_minimum_value(list_values, idx + 1, current_min, current_min_index)
            END IF
        END IF
    END FUNCTION

    SET min_even_val, min_index_in_even TO find_minimum_value(even_set, 0, even_set[0], 0)

    FUNCTION find_index_in_array(target, index)
        IF index == LENGTH(array_of_nodes) THEN
            RETURN -1
        END IF
        IF array_of_nodes[index] == target THEN
            RETURN index
        ELSE
            RETURN find_index_in_array(target, index + 1)
        END IF
    END FUNCTION

    SET index_in_original TO find_index_in_array(min_even_val, 0)

    RETURN [min_even_val, index_in_original]
END FUNCTION
```