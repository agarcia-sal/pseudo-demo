```
FUNCTION longest(list_of_strings)
    FUNCTION find_max_length(strings_iter, current_max)
        IF strings_iter IS EMPTY
            RETURN current_max
        ELSE
            LET head_element <- strings_iter[0]
            LET tail_elements <- strings_iter[1:]
            LET head_length <- LENGTH(head_element)
            LET updated_max <- (head_length > current_max) ? head_length : current_max
            RETURN find_max_length(tail_elements, updated_max)
        END IF
    END FUNCTION

    FUNCTION locate_longest_string(strings_iter, target_length)
        IF strings_iter IS EMPTY
            RETURN None
        ELSE
            LET candidate_string <- strings_iter[0]
            LET remainder_list <- strings_iter[1:]
            IF LENGTH(candidate_string) = target_length THEN
                RETURN candidate_string
            ELSE
                RETURN locate_longest_string(remainder_list, target_length)
            END IF
        END IF
    END FUNCTION

    IF list_of_strings = [] THEN
        RETURN None
    ELSE
        LET max_len = find_max_length(list_of_strings, -1)
        RETURN locate_longest_string(list_of_strings, max_len)
    END IF
END FUNCTION
```