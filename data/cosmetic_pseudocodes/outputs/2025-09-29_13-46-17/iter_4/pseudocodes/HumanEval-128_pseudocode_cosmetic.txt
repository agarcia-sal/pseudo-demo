```
FUNCTION prod_signs(array_of_integers)
    FUNCTION abs_sum(index, acc)
        IF index >= LENGTH(array_of_integers)
            RETURN acc
        ELSE
            RETURN abs_sum(index + 1, acc + ABS(array_of_integers[index]))
        END IF
    END FUNCTION

    FUNCTION count_negatives(idx, tally)
        IF idx = LENGTH(array_of_integers)
            RETURN tally
        ELSE
            IF array_of_integers[idx] < 0
                RETURN count_negatives(idx + 1, tally + 1)
            ELSE
                RETURN count_negatives(idx + 1, tally)
            END IF
        END IF
    END FUNCTION

    IF LENGTH(array_of_integers) = 0 THEN RETURN None END IF

    VARIABLE zero_flag = FALSE
    VARIABLE iterator = 0
    WHILE iterator < LENGTH(array_of_integers) AND zero_flag = FALSE
        IF array_of_integers[iterator] = 0 THEN zero_flag = TRUE ELSE iterator = iterator + 1 END IF
    END WHILE

    VARIABLE POWER_NEG_ONE = -1
    VARIABLE signed_multiplier = 0
    IF zero_flag = TRUE THEN
        signed_multiplier = 0
    ELSE
        VARIABLE negative_count = count_negatives(0, 0)
        VARIABLE exponent = negative_count
        VARIABLE result = 1
        WHILE exponent > 0
            result = result * POWER_NEG_ONE
            exponent = exponent - 1
        END WHILE
        signed_multiplier = result
    END IF

    VARIABLE magnitude_sum = abs_sum(0, 0)
    RETURN signed_multiplier * magnitude_sum
END FUNCTION
```