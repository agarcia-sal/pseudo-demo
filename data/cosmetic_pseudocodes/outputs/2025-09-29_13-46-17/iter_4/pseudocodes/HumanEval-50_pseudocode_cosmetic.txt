```
FUNCTION encode_shift(input_string)
    DEFINE helper_shift(STRING s, INTEGER index, STRING acc)
        IF index == LENGTH(s) THEN
            RETURN acc
        ELSE
            LET current_char_code = ASCII_VALUE(s[index])
            LET shifted_code = ((current_char_code - ASCII_VALUE("a") + 5) MOD 26) + ASCII_VALUE("a")
            LET new_acc = acc + CHAR_FROM_ASCII(shifted_code)
            RETURN helper_shift(s, index + 1, new_acc)
    END DEFINE

    RETURN helper_shift(input_string, 0, "")
END FUNCTION

FUNCTION decode_shift(input_string)
    INITIALIZE result_str TO EMPTY STRING
    INITIALIZE i TO 0

    WHILE i < LENGTH(input_string) DO
        LET char_value = ASCII_VALUE(input_string[i])
        LET adjusted_val = ASCII_VALUE("a") + ((char_value - ASCII_VALUE("a") - 5 + 26) MOD 26)
        LET decoded_char = CHAR_FROM_ASCII(adjusted_val)
        SET result_str = result_str + decoded_char
        INCREMENT i BY 1
    END WHILE

    RETURN result_str
END FUNCTION
```