``` 
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(val_int)
        signFlag := 1
        WHILE NOT (val_int >= 0)
            val_int := 0 - val_int
            signFlag := -1
        END WHILE

        str_digits := STRING(val_int)
        digit_list := []
        index_counter := 0

        LOOP
            IF index_counter >= LENGTH(str_digits) THEN BREAK
            digit_list APPEND TO INTEGER(str_digits[index_counter])
            index_counter := index_counter + 1
        END LOOP

        digit_list[0] := digit_list[0] * signFlag

        acc_sum := 0
        FOR i IN 0 TO LENGTH(digit_list) - 1
            acc_sum := acc_sum + digit_list[i]
        END FOR
        RETURN acc_sum
    END FUNCTION

    helper := []
    idx := 0
    WHILE idx < LENGTH(array_of_integers)
        val := array_of_integers[idx]
        helper APPEND TO digits_sum(val)
        idx := idx + 1
    END WHILE

    filtered := []
    posIndex := 0
    WHILE posIndex < LENGTH(helper)
        current_val := helper[posIndex]
        IF NOT (current_val <= 0)
            filtered APPEND TO current_val
        END IF
        posIndex := posIndex + 1
    END WHILE

    result_count := 0
    FOR eachElement IN filtered
        result_count := result_count + 1
    END FOR

    RETURN result_count
END FUNCTION
```