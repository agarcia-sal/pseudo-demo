```
FUNCTION largest_prime_factor(n)
    FUNCTION is_prime(k)
        IF NOT (k >= 2) THEN
            RETURN False
        END IF

        FUNCTION check_divisor(x)
            IF x >= k THEN
                RETURN True
            ELSE IF k MODULO x = 0 THEN
                RETURN False
            ELSE
                RETURN check_divisor(x + 1)
            END IF
        END FUNCTION

        RETURN check_divisor(2)
    END FUNCTION

    accumulator_max := 1

    FUNCTION scan_divisor(candidate)
        IF candidate > n THEN
            RETURN accumulator_max
        ELSE
            IF (n MODULO candidate = 0) AND is_prime(candidate) THEN
                accumulator_max := (accumulator_max > candidate) ? accumulator_max : candidate
            END IF
            RETURN scan_divisor(candidate + 1)
        END IF
    END FUNCTION

    RETURN scan_divisor(2)
END FUNCTION
```