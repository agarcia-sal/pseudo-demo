```
FUNCTION fizz_buzz(integer_n)
    DEFINE traverse_and_filter(counter_p, accumulator_M)
        IF counter_p >= integer_n THEN
            RETURN accumulator_M
        ELSE IF NOT ((counter_p MOD 11 != 0) AND (counter_p MOD 13 != 0)) THEN
            RETURN traverse_and_filter(counter_p + 1, accumulator_M + {counter_p})
        ELSE
            RETURN traverse_and_filter(counter_p + 1, accumulator_M)
        END IF
    END DEFINE

    DEFINE build_concatenation(list_Q, idx_v, result_S)
        IF idx_v >= LEN(list_Q) THEN
            RETURN result_S
        ELSE
            RETURN build_concatenation(list_Q, idx_v + 1, result_S + TO_STRING(list_Q[idx_v]))
        END IF
    END DEFINE

    DEFINE count_digit_seven(string_X, index_i, total_O)
        IF index_i < 0 THEN
            RETURN total_O
        ELSE 
            SET is_seven = (string_X[index_i] = '7') ? 1 : 0
            RETURN count_digit_seven(string_X, index_i - 1, total_O + is_seven)
        END IF
    END DEFINE

    SET filtered_numbers = traverse_and_filter(0, [])
    SET merged_str = build_concatenation(filtered_numbers, 0, "")
    RETURN count_digit_seven(merged_str, LEN(merged_str) - 1, 0)
END FUNCTION
```