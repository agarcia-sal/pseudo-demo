```
FUNCTION select_words(string_s, natural_number_n)
    
    FUNCTION count_consonants(word_w, idx_i, count_c)
        IF idx_i >= LENGTH(word_w) THEN
            RETURN count_c
        ELSE
            SET current_char TO LOWERCASE(word_w[idx_i])
            IF current_char == "a" OR current_char == "e" OR current_char == "i" OR current_char == "o" OR current_char == "u" THEN
                SET updated_count TO count_c
            ELSE
                SET updated_count TO count_c + 1
            END IF
            RETURN count_consonants(word_w, idx_i + 1, updated_count)
        END IF
    END FUNCTION

    SET chosen_words TO []

    FUNCTION process_words(words_list, pos_p)
        IF pos_p >= LENGTH(words_list) THEN
            RETURN
        ELSE
            SET candidate TO words_list[pos_p]
            SET consonant_count TO count_consonants(candidate, 0, 0)
            IF consonant_count == natural_number_n THEN
                chosen_words.APPEND(candidate)
            END IF
            process_words(words_list, pos_p + 1)
        END IF
    END FUNCTION

    SET word_collection TO SPLIT(string_s, " ")
    process_words(word_collection, 0)
    RETURN chosen_words
END FUNCTION
```