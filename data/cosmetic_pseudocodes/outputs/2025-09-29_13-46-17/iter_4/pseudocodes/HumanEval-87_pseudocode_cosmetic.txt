```
FUNCTION get_row(two_dimensional_list, target_integer)
    PROCEDURE collect_positions(idx_outer, acc_positions)
        IF idx_outer >= LENGTH(two_dimensional_list) THEN
            RETURN acc_positions
        ELSE
            PROCEDURE collect_inner(idx_inner, current_row, acc_inner)
                IF idx_inner >= LENGTH(current_row) THEN
                    RETURN acc_inner
                ELSE
                    IF current_row[idx_inner] = target_integer THEN
                        RETURN collect_inner(idx_inner + 1, current_row, acc_inner + [(idx_outer, idx_inner)])
                    ELSE
                        RETURN collect_inner(idx_inner + 1, current_row, acc_inner)
            SET updated_positions TO collect_inner(0, two_dimensional_list[idx_outer], acc_positions)
            RETURN collect_positions(idx_outer + 1, updated_positions)

    SET found_coords TO collect_positions(0, [])
    
    FUNCTION desc_by_second(a, b)
        IF a[1] < b[1] THEN RETURN 1
        ELSE IF a[1] > b[1] THEN RETURN -1
        ELSE RETURN 0

    FUNCTION asc_by_first(a, b)
        IF a[0] > b[0] THEN RETURN 1
        ELSE IF a[0] < b[0] THEN RETURN -1
        ELSE RETURN 0

    SET sorted_by_col_desc TO SORT(found_coords, desc_by_second)
    SET fully_sorted TO SORT(sorted_by_col_desc, asc_by_first)
    RETURN fully_sorted
END FUNCTION
```