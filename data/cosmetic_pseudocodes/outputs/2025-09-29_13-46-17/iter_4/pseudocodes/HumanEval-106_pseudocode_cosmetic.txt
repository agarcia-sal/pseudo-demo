```
FUNCTION f(n_val)
    DEFINE FUNCTION calculate_factorial(accumulator, counter, limit)
        IF counter > limit THEN
            RETURN accumulator
        ELSE
            RETURN calculate_factorial(accumulator * counter, counter + 1, limit)
        END IF
    END FUNCTION

    DEFINE FUNCTION calculate_sum(accumulated_sum, current, end)
        IF current > end THEN
            RETURN accumulated_sum
        ELSE
            RETURN calculate_sum(accumulated_sum + current, current + 1, end)
        END IF
    END FUNCTION

    SET output_array TO []
    
    DEFINE PROCEDURE loop_through(index)
        IF index > n_val THEN
            RETURN
        ELSE
            IF NOT (index MOD 2 <> 0) THEN
                SET factorial_result TO calculate_factorial(1, 1, index)
                APPEND factorial_result TO output_array
            ELSE
                SET sum_result TO calculate_sum(0, 1, index)
                APPEND sum_result TO output_array
            END IF
            loop_through(index + 1)
        END IF
    END PROCEDURE

    loop_through(1)
    RETURN output_array
END FUNCTION
```