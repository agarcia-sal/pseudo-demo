```
FUNCTION is_palindrome(input_string)
    LET reversed_version = ""
    FOR i FROM LENGTH(input_string) - 1 DOWNTO 0
        SET reversed_version = CONCATENATE(reversed_version, input_string[i])
    END FOR
    IF reversed_version = input_string THEN
        RETURN TRUE
    ELSE
        RETURN FALSE
    END IF
END FUNCTION

FUNCTION make_palindrome(input_string)
    DEFINE helper_palindrome_start(index)
        IF index = LENGTH(input_string) THEN
            RETURN index
        END IF
        LET suffix = SUBSTRING(input_string, index, LENGTH(input_string) - index)
        IF is_palindrome(suffix) THEN
            RETURN index
        ELSE
            RETURN helper_palindrome_start(index + 1)
        END IF
    END DEFINE

    IF LENGTH(input_string) = 0 THEN
        RETURN ""
    END IF

    LET start_index = helper_palindrome_start(0)
    LET prefix_to_reverse = SUBSTRING(input_string, 0, start_index)
    LET reversed_prefix = ""
    FOR j FROM LENGTH(prefix_to_reverse) - 1 DOWNTO 0
        SET reversed_prefix = CONCATENATE(reversed_prefix, prefix_to_reverse[j])
    END FOR

    RETURN CONCATENATE(input_string, reversed_prefix)
END FUNCTION
```