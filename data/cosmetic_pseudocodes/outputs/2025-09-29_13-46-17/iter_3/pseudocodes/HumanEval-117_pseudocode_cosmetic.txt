```
FUNCTION select_words(string_s, natural_number_n)
  DEFINE helper_countConsonants(textInput)
    IF textInput = "" THEN
      RETURN 0
    END IF

    LET firstChar ← LOWERCASE(character AT textInput[0])
    LET restText ← SUBSTRING textInput FROM 1 TO LENGTH(textInput) - 1
    LET isConsonant ← (firstChar NOT IN ["a", "e", "i", "o", "u"])
    LET restCount ← helper_countConsonants(restText)

    IF isConsonant THEN
      RETURN restCount + 1
    ELSE
      RETURN restCount
    END IF
  END DEFINE

  LET collectedWords ← [] 
  DEFINE recurseWords(wordsList)
    IF wordsList = [] THEN
      RETURN
    END IF

    LET currentWord ← wordsList[0]
    LET remainingWords ← SUBLIST wordsList FROM 1 TO LENGTH(wordsList) - 1
    LET consonantCount ← helper_countConsonants(currentWord)

    IF consonantCount = natural_number_n THEN
      collectedWords ← collectedWords + [currentWord]
    END IF

    recurseWords(remainingWords)
  END DEFINE

  recurseWords(SPLIT string_s BY " ")

  RETURN collectedWords
END FUNCTION
```