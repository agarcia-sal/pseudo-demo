```
FUNCTION get_odd_collatz(n)
  PROCEDURE recurseCollatz(current, acc)
    IF current = 1 THEN
      RETURN acc
    END IF

    IF NOT (current MODULO 2 = 0) THEN
      LET nextVal = current * 3 + 1
    ELSE
      LET nextVal = current / 2
    END IF

    IF nextVal MODULO 2 != 0 THEN
      RETURN recurseCollatz(nextVal, acc + [CAST nextVal AS INTEGER])
    ELSE
      RETURN recurseCollatz(nextVal, acc)
    END IF
  END PROCEDURE

  LET initialAcc = IF n MODULO 2 != 0 THEN [CAST n AS INTEGER] ELSE []
  LET resultList = recurseCollatz(n, initialAcc)
  RETURN SORT(resultList)
END FUNCTION
```