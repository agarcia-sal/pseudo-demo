```
FUNCTION find_closest_elements(list_of_numbers)
    FUNCTION helper(i, j, currentClosest, currentDist)
        IF i = LENGTH OF list_of_numbers THEN
            RETURN currentClosest
        END IF

        IF j = LENGTH OF list_of_numbers THEN
            RETURN helper(i + 1, 0, currentClosest, currentDist)
        END IF

        IF i = j THEN
            RETURN helper(i, j + 1, currentClosest, currentDist)
        END IF

        LET valA = list_of_numbers AT i
        LET valB = list_of_numbers AT j

        LET difference = valA - valB
        IF difference < 0 THEN
            LET absDiff = -difference
        ELSE
            LET absDiff = difference
        END IF

        IF currentDist IS None OR absDiff < currentDist THEN
            LET newClosest = (IF valA < valB THEN (valA, valB) ELSE (valB, valA) END IF)
            RETURN helper(i, j + 1, newClosest, absDiff)
        ELSE
            RETURN helper(i, j + 1, currentClosest, currentDist)
        END IF
    END FUNCTION

    RETURN helper(0, 0, None, None)
END FUNCTION
```