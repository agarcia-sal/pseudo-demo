```
FUNCTION prod_signs(array_of_integers)
  DECLARE computeSign(index, negCount)
    IF index >= LENGTH(array_of_integers) THEN
      RETURN IF (negCount MOD 2) = 0 THEN 1 ELSE -1 END IF
    END IF

    DECLARE currentVal := array_of_integers[index]
    IF currentVal = 0 THEN RETURN 0 END IF

    RETURN computeSign(index + 1, 
           IF currentVal < 0 THEN negCount + 1 ELSE negCount END IF)
  END DECLARE

  DECLARE totalAbs := 0
  DECLARE idx := 0

  IF LENGTH(array_of_integers) = 0 THEN
    RETURN None
  END IF

  WHILE idx < LENGTH(array_of_integers) DO
    totalAbs := totalAbs + (IF array_of_integers[idx] < 0 THEN -array_of_integers[idx]
                           ELSE array_of_integers[idx] END IF)
    idx := idx + 1
  END WHILE

  DECLARE finalSign := computeSign(0, 0)
  RETURN finalSign * totalAbs
END FUNCTION
```