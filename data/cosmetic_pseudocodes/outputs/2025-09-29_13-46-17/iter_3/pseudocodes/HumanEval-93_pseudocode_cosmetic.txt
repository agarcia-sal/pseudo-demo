```
FUNCTION encode(originalMessage)
	vowelsString ← "AEIOUaeiou"
	vowelsMapping ← EMPTY DICTIONARY

	PROCEDURE buildMapping(index)
		IF index = LENGTH(vowelsString) THEN RETURN
		currentChar ← vowelsString[index]
		mappedChar ← CHARACTER(ASCII(currentChar) + 2)
		vowelsMapping[currentChar] ← mappedChar
		buildMapping(index + 1)
	END PROCEDURE

	buildMapping(0)

	swappedMessage ← ""
	PROCEDURE swapCase(position)
		IF position = LENGTH(originalMessage) THEN RETURN
		c ← originalMessage[position]
		IF c ≥ "a" AND c ≤ "z" THEN
			swappedMessage ← swappedMessage + TO_UPPERCASE(c)
		ELSE IF c ≥ "A" AND c ≤ "Z" THEN
			swappedMessage ← swappedMessage + TO_LOWERCASE(c)
		ELSE
			swappedMessage ← swappedMessage + c
		END IF
		swapCase(position + 1)
	END PROCEDURE

	swapCase(0)

	finalString ← ""
	PROCEDURE replaceVowelsAgainstMap(pos)
		IF pos = LENGTH(swappedMessage) THEN RETURN
		ch ← swappedMessage[pos]
		IF vowelsMapping CONTAINS KEY ch THEN
			finalString ← finalString + vowelsMapping[ch]
		ELSE
			finalString ← finalString + ch
		END IF
		replaceVowelsAgainstMap(pos + 1)
	END PROCEDURE

	replaceVowelsAgainstMap(0)

	RETURN finalString
END FUNCTION
```