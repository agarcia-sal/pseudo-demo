```
FUNCTION fruit_distribution(string_description, total_number_of_fruits)
  DEFINE FUNCTION accumulateDigits(words, idx, collected)
    IF idx >= LENGTH(words) THEN
      RETURN collected
    END IF

    LET currentWord = words[idx]

    IF NOT currentWord IS digit THEN
      RETURN accumulateDigits(words, idx + 1, collected)
    END IF

    LET updatedCollected = collected + [ TO_INTEGER(currentWord) ]

    RETURN accumulateDigits(words, idx + 1, updatedCollected)
  END FUNCTION

  LET wordsList = SPLIT(string_description, " ")
  LET digitsCollected = accumulateDigits(wordsList, 0, [])
  LET sumOfDigits = 0

  FOR EACH digitValue IN digitsCollected DO
    sumOfDigits = sumOfDigits + digitValue
  END FOR

  LET remainingFruits = total_number_of_fruits + (0 - sumOfDigits)

  RETURN remainingFruits
END FUNCTION
```