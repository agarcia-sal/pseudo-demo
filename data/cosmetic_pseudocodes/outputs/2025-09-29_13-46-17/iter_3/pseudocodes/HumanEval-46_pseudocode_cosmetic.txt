```
FUNCTION fib4(integer_n)
    LET sequenceQueue = [0, 0, 2, 0]

    DEFINE recurseFib(queue, index)
        IF index GREATER THAN integer_n THEN
            RETURN queue[ LENGTH(queue) - 1 ]
        END IF
        LET sumLastFour = queue[ LENGTH(queue) - 1 ] + queue[ LENGTH(queue) - 2 ] + queue[ LENGTH(queue) - 3 ] + queue[ LENGTH(queue) - 4 ]
        LET newQueue = queue[1 to LENGTH(queue) - 1] + [sumLastFour]
        RETURN recurseFib(newQueue, index + 1)
    END DEFINE

    IF NOT (integer_n LESS THAN 4) THEN
        RETURN recurseFib(sequenceQueue, 4)
    END IF
    
    RETURN sequenceQueue[ integer_n ]
END FUNCTION
```