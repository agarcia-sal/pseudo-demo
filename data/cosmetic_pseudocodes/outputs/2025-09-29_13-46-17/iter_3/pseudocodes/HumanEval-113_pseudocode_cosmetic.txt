```
FUNCTION odd_count(list_of_strings)
  FUNCTION count_odd_chars(str_val, idx, accum)
    IF idx = LENGTH(str_val) THEN
      RETURN accum
    ELSE
      LET current_charValue = INTEGER_VALUE(str_val[idx])
      LET incrementedAccum = accum + (IF current_charValue MOD 2 = 1 THEN 1 ELSE 0)
      RETURN count_odd_chars(str_val, idx + 1, incrementedAccum)
  END FUNCTION

  LET results_collector = []
  LET currentIndex = 0

  WHILE currentIndex < LENGTH(list_of_strings) DO
    LET currentString = list_of_strings[currentIndex]
    LET oddDigitsCount = count_odd_chars(currentString, 0, 0)
    LET messageParts = [
      "the number of odd elements ",
      STRING(oddDigitsCount),
      "n the str",
      STRING(oddDigitsCount),
      "ng ",
      STRING(oddDigitsCount),
      " of the ",
      STRING(oddDigitsCount),
      "nput."
    ]
    LET composedMessage = ""
    FOR each part IN messageParts DO
      composedMessage = composedMessage + part
    END FOR
    results_collector.APPEND(composedMessage)
    currentIndex = currentIndex + 1
  END WHILE

  RETURN results_collector
END FUNCTION
```