```
FUNCTION histogram(test_string)
  FUNCTION countOccurrences(target, sequence, index, total)
    IF index >= LENGTH(sequence) THEN
      RETURN total
    ELSE
      IF sequence[index] = target THEN
        RETURN countOccurrences(target, sequence, index + 1, total + 1)
      ELSE
        RETURN countOccurrences(target, sequence, index + 1, total)
      ENDIF
    ENDIF
  END FUNCTION

  SET lettersList TO SPLIT test_string BY " "
  SET freqDict TO EMPTY DICTIONARY
  SET maxFreq TO 0

  FUNCTION findMaxFrequency(idx)
    IF idx >= LENGTH(lettersList) THEN
      RETURN
    ENDIF

    SET currentLetter TO lettersList[idx]
    IF currentLetter <> "" THEN
      SET currentCount TO countOccurrences(currentLetter, lettersList, 0, 0)
      IF NOT (currentCount <= maxFreq) THEN
        SET maxFreq TO currentCount
      ENDIF
    ENDIF

    findMaxFrequency(idx + 1)
  END FUNCTION

  findMaxFrequency(0)

  FUNCTION fillDict(idx)
    IF idx >= LENGTH(lettersList) THEN
      RETURN
    ENDIF

    SET currentLetter TO lettersList[idx]
    SET countLetter TO countOccurrences(currentLetter, lettersList, 0, 0)
    IF countLetter = maxFreq THEN
      freqDict[currentLetter] = maxFreq
    ENDIF

    fillDict(idx + 1)
  END FUNCTION

  IF maxFreq > 0 THEN
    fillDict(0)
  ENDIF

  RETURN freqDict
END FUNCTION
```