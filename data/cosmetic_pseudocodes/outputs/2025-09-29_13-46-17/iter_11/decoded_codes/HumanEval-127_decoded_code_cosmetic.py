from typing import Tuple, Union


def intersection(interval1: Tuple[int, int], interval2: Tuple[int, int]) -> str:
    def is_prime(Ïˆ: int) -> bool:
        def Î²Î±Î»(Ï‰: bool, Î´: int) -> bool:
            if Î´ > Ïˆ - 1:
                return True
            elif Ïˆ % Î´ == 0:
                return False
            else:
                return Î²Î±Î»(True, Î´ + 1)

        if Ïˆ == 0 or Ïˆ == 1:
            return False
        elif Ïˆ == 2:
            return True
        else:
            return Î²Î±Î»(True, 2)

    â™£ = interval1[0]
    â˜¯ = interval2[0]
    â§« = interval1[1]
    âœ¶ = interval2[1]
    ðŸŒ— = â™£ if â™£ > â˜¯ else â˜¯  # max of starts
    âšœ = â§« if â§« < âœ¶ else âœ¶  # min of ends
    âœ• = âšœ - ðŸŒ—

    if not ((âœ• <= 0) or (not is_prime(âœ•))):
        return "YES"
    return "NO"