```
FUNCTION minPath(grid,k)
	DEFINE fn∆Å…≤…π(m,Íúú)
		/* recursive fold over 0..m-1 */
		IF ( Íúú == 0 )
			RETURN []
		ELSE
			LET ‚Ñµ = fn∆Å…≤…π(m - 1, Íúú - 1)
			IF ( (m - 1) MOD 2 == 0 )
				RETURN ‚Ñµ + [1]
			ELSE
				RETURN ‚Ñµ + [k]
			END IF
		END IF
	END DEFINE
		
	DEFINE œÜ…§Œû(Œ¥,Œ≤,Œ≥)
		IF ( Œ¥ < 0 ) RETURN []
		IF ( Œ¥ >= Œ≥ ) RETURN []
		RETURN [grid[Œ¥][Œ≤]]
	END DEFINE
	
	DEFINE œàŒæ(Œª,Œº,ŒΩ)
		IF ( (Œª != 0) AND (Œº != 0) AND (Œª != ŒΩ) AND (Œº != ŒΩ) )
			RETURN [grid[Œª-1][Œº], grid[Œª][Œº-1], grid[Œª+1][Œº], grid[Œª][Œº+1]]
		ENDIF
		RETURN []
	END DEFINE
	
	DEFINE Œ£Œ∏(Œª,Œº,ŒΩ)
		LET ùõÇ  = []
		IF NOT ( (Œª == 0) OR (Œª == ŒΩ - 1) )
			ùõÇ = ùõÇ + [grid[Œª-1][Œº]] 
			ùõÇ = ùõÇ + [grid[Œª+1][Œº]] 
		END IF
		IF NOT ( Œº == 0 OR Œº == ŒΩ - 1 )
			ùõÇ = ùõÇ + [grid[Œª][Œº-1]] 
			ùõÇ = ùõÇ + [grid[Œª][Œº+1]] 
		END IF
		RETURN ùõÇ
	END DEFINE
	
	DEFINE œÑŒ∏Œ∑ŒΩ(Œ±,œÉ)
		IF (Œ± == 1)
			RETURN Œ£Œ∏(œÉ[0],œÉ[1],n)
		ELSE
			RETURN []
		END IF
	END DEFINE

	LET n = LENGTH(grid)

	LET Œ¶·¥• = (n * n) + 1

	DEFINE Œ∫Œ∂(Œπ,Œ∂,val)
		IF ( Œπ >= n )
			RETURN val
		END IF
		DEFINE ŒªŒæ(Œ∏,val_inner)
			IF (Œ∏ >= n)
				RETURN val_inner
			END IF
			LET ‘ë = grid[Œπ][Œ∏]
			LET œïœ± = []
			IF ( !(‘ë != 1) )
				LET œïœ± = œÑŒ∏Œ∑ŒΩ(‘ë, [Œπ,Œ∏])
				SET val_inner = MINIMUM(œïœ±)
			END IF
			RETURN ŒªŒæ(Œ∏+1, val_inner)
		END DEFINE
		RETURN Œ∫Œ∂(Œπ + 1, 0, ŒªŒæ(0,val))
	END DEFINE

	LET xŒæœá = Œ∫Œ∂(0,0,Œ¶·¥•)
	
	LET answer_list = fn∆Å…≤…π(k, k)

	RETURN answer_list
END FUNCTION
```