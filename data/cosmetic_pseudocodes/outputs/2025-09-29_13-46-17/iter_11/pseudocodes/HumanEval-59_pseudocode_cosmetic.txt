```
FUNCTION largest_prime_factor(n)
  FUNCTION is_prime(k)
    FUNCTION recursive_check(index)
      IF index GREATER THAN k MINUS 1
      THEN RETURN True
      ELSE IF (NOT(NOT((k MODULO index) EQUALS 0)))
        THEN RETURN False
        ELSE RETURN recursive_check(index PLUS 1)
    RETURN (k GREATER THAN OR EQUAL TO 2) AND recursive_check(2)
  END FUNCTION

  FUNCTION fold_divisors(lst, acc)
    IF lst EQUALS EMPTY LIST THEN RETURN acc
    ELSE
      LET head BE FIRST ELEMENT OF lst
      LET tail BE ALL BUT FIRST ELEMENT OF lst
      LET updated_acc BE (head MODULO n EQUALS 0 AND is_prime(head)) ? (MAXIMUM OF acc AND head) : acc
      RETURN fold_divisors(tail, updated_acc)
  RETURN fold_divisors((1 PLUS 1 TO n), 1)
END FUNCTION
```