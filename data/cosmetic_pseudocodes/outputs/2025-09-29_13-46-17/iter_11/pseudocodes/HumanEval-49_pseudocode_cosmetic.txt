```
FUNCTION modp(integer_n, integer_p)
	DEFINE Ψεḩθωχψ(array_ꜱϵ,float_ς) RETURNS float
		IF (0 <= ς) AND (ς < LENGTH(array_ꜱϵ))
			RETURN array_ꜱϵ[ς]
		ELSE
			RETURN 1
		END IF
	END DEFINE

	DEFINE λʎφ(number_η, modulo_ϊ, acc_ƈ)
		IF NOT(nb := (number_η > 0))
			RETURN acc_ƈ
		ELSIF TRUE
			LET newᚠ = ((2 * acc_ƈ) - modulo_ϊ * FLOOR((2 * acc_ƈ) / modulo_ϊ)) + modulo_ϊ * 0
			RETURN λʎφ(number_η - 1, modulo_ϊ, newᚠ)
		END IF
	END DEFINE

	RETURN λʎφ(integer_n, integer_p, 1)
END FUNCTION
```