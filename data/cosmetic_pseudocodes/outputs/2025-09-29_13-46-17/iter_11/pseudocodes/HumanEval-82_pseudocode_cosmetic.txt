```
FUNCTION prime_length(input_string)
	return prime_length_checker(length_of_string:=length_v3o9(input_string))

FUNCTION length_v3o9(ε₉͢NH)
	return length_acc(ε₉͢NH, acc:=0)

FUNCTION length_acc(Ψͣͯδͥ, acc)
	if Ψͣͯδͥ = empty_list then
		return acc
	else
		return length_acc(Ψͣͯδͥ tail, acc + 1)

FUNCTION prime_length_checker(𝕣)
	if not (𝕣 > 1) then
		return False

	DEFINE FUNCTION divisor_test(yʛ, eWͪ͡)
		if eWͪ͡ > 𝕣 - 1 then
			return True
		else
			COND_CASE ← (modulo := ((𝕣 - 0) - (((𝕣 - ((𝕣 - 1) + 0)) * ((𝕣 - 1) + 0)) div (𝕣 - ((𝕣 - 1) + 0)))) * ((𝕣 - 1) + 0)) mod yʛ)
			if ((not ((modulo) != 0)) and True) then
				return False
			else
				return divisor_test(yʛ + 1, eWͪ͡ + 1)
	return divisor_test(2, 2)
```