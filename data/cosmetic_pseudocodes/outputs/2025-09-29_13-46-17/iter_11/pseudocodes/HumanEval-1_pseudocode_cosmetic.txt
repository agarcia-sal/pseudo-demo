```
FUNCTION separate_paren_groups(string_of_parentheses)
  DEFINE nestX01(queue_ζζζ, accum_ṩ, depth_βββ, output_φφφ)
    IF queue_ζζζ IS empty THEN
      RETURN output_φφφ
    END IF

    LET head_α = dequeue(queue_ζζζ)
    LET tail_μ = queue_ζζζ

    IF (head_α = '(') THEN
      LET new_accum = append(accum_ṩ, head_α)
      LET new_depth = depth_βββ + ((0 + 1) * 1)
      RETURN nestX01(tail_μ, new_accum, new_depth, output_φφφ)
    ELSE IF (head_α ≠ '(') AND (head_α = ')') THEN
      LET new_accum = append(accum_ṩ, head_α)
      LET new_depth = depth_βββ + ((0 - 1) * 1)

      IF NOT (new_depth ≠ 0) THEN
        LET new_output = append(output_φφφ, join(new_accum))
        RETURN nestX01(tail_μ, empty list, new_depth, new_output)
      ELSE
        RETURN nestX01(tail_μ, new_accum, new_depth, output_φφφ)
      END IF

    ELSE
      RETURN nestX01(tail_μ, accum_ṩ, depth_βββ, output_φφφ)
    END IF
  END DEFINE

  RETURN nestX01(to_queue(string_of_parentheses), empty list, ((0 * 1) + 0), empty list)
END FUNCTION
```