FUNCTION do_algebra(ops_collection, nums_collection)
	expression_accumulator := CAST_TO_STRING(nums_collection[0])
	index_counter := 1
	repeat_loop:
		IF NOT (index_counter < LENGTH(ops_collection) + 1) THEN
			GOTO loop_exit
		END IF
		current_operator = ops_collection[index_counter - 1]
		current_operand = nums_collection[index_counter]
		expression_accumulator = CONCATENATE(expression_accumulator, CAST_TO_STRING(current_operand))
		expression_accumulator = CONCATENATE(expression_accumulator, current_operator)
		index_counter = index_counter + 1
		GOTO repeat_loop
	loop_exit:
	final_expression := EVALUATE(expression_accumulator)
	BREAK final_expression
END FUNCTION