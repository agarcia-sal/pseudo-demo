FUNCTION sorted_list_sum(input_strings)
	VAR ordered_collection ← CALL sort WITH ARGUMENTS (input_strings, ascending = TRUE)
	VAR filtered_accumulator ← EMPTY LIST
	VAR indexer ← 0
	REPEAT
		IF NOT (indexer >= CALL length WITH ARGUMENTS ordered_collection)
			VAR current_candidate ← ordered_collection[indexer]
			IF (0 = (CALL length WITH ARGUMENTS current_candidate) MOD 2)
				CALL append WITH ARGUMENTS (filtered_accumulator, current_candidate)
			ELSE
				; skip adding
			ENDIF
			indexer ← indexer + 1
		ELSE
			BREAK
		ENDIF
	UNTIL FALSE
	VAR final_output ← CALL sort WITH ARGUMENTS filtered_accumulator, key = (ELEMENT → CALL length WITH ARGUMENTS ELEMENT), ascending = TRUE
	EXECUTE final_output
END FUNCTION