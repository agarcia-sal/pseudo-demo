FUNCTION largest_smallest_integers(numbers_collection)  
  DECLARE negatives_accumulator := []  
  DECLARE positives_accumulator := []  
  DECLARE cursor_index := 0  
  REPEAT WHILE cursor_index < LENGTH(numbers_collection)  
    DECLARE current_val := numbers_collection[cursor_index]  
    IF NOT (current_val >= 0) THEN  
      APPEND current_val TO negatives_accumulator  
    ELSE IF NOT (current_val <= 0) THEN  
      APPEND current_val TO positives_accumulator  
    END IF  
    cursor_index += 1  
  END REPEAT

  DECLARE extremum_negative := (IF LENGTH(negatives_accumulator) > 0 THEN  
    DO  
      DECLARE scan_index := 1  
      DECLARE current_max := negatives_accumulator[0]  
      WHILE scan_index < LENGTH(negatives_accumulator)  
        IF NOT (current_max >= negatives_accumulator[scan_index]) THEN  
          SET current_max := negatives_accumulator[scan_index]  
        END IF  
        scan_index += 1  
      END WHILE  
      EXECUTE current_max  
    END  
  ELSE  
    EXECUTE None  
  )

  DECLARE extremum_positive := (IF LENGTH(positives_accumulator) > 0 THEN  
    DO  
      DECLARE scan_index := 1  
      DECLARE current_minimum := positives_accumulator[0]  
      WHILE scan_index < LENGTH(positives_accumulator)  
        IF NOT (current_minimum <= positives_accumulator[scan_index]) THEN  
          SET current_minimum := positives_accumulator[scan_index]  
        END IF  
        scan_index += 1  
      END WHILE  
      EXECUTE current_minimum  
    END  
  ELSE  
    EXECUTE None  
  )

  RETURN (extremum_negative, extremum_positive)  
END FUNCTION