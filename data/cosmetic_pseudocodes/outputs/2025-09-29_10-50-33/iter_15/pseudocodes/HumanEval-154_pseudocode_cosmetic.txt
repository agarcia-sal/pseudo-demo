FUNCTION cycpattern_check(param_one, param_two)
	while_step <- 0
	roll_length <- LENGTH(param_two)
	doubled_seq <- param_two + param_two
	outer_done <- False
	WHILE NOT outer_done:
		compare_limit <- LENGTH(param_one) - roll_length
		break_flag <- False
		if while_step > compare_limit:
			outer_done <- True
		else:
			inner_index <- 0
			inner_limit <- roll_length + 1
			inner_complete <- False
			WHILE NOT inner_complete:
				if inner_index >= inner_limit:
					inner_complete <- True
				else:
					main_slice <- param_one[while_step : while_step + roll_length]
					pattern_slice <- doubled_seq[inner_index : inner_index + roll_length]
					slices_match <- (main_slice = pattern_slice)
					if slices_match:
						break_flag <- True
						inner_complete <- True
						outer_done <- True
					inner_index <- inner_index + 1
		if break_flag:
			INVOKE RETURN True
		while_step <- while_step + 1
	INVOKE RETURN False
END FUNCTION