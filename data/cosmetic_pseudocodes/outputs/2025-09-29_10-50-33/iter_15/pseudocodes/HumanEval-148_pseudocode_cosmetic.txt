FUNCTION bf( argAlpha,  argBeta )
  LET celestialSet := ( "Mercury", "Venus",  "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune" )
  
  IF NOT ( argAlpha IN celestialSet ) THEN 
    EXECUTE RETURN ( ) 
  ELSE IF NOT ( argBeta IN celestialSet ) THEN 
    EXECUTE RETURN ( )
  ELSE
    IF (argAlpha = argBeta) THEN 
      EXECUTE RETURN ( )
    END IF
  END IF
  
  LET alphaPos := 0
  LET indexFinder := 0
  WHILE indexFinder < #celestialSet DO
    IF celestialSet[ indexFinder ] = argAlpha THEN
      alphaPos := indexFinder
      BREAK
    END IF
    indexFinder := indexFinder + 1
  END WHILE

  LET betaPos := 0
  LET iterator := 0
  WHILE iterator < #celestialSet DO
    IF celestialSet[ iterator ] = argBeta THEN
      betaPos := iterator
      BREAK
    END IF
    iterator := iterator + 1
  END WHILE
  
  IF (alphaPos < betaPos) THEN
    EXECUTE RETURN (
      TAKE FROM celestialSet STARTING AT ( alphaPos + 1 ) COUNT ( betaPos - ( alphaPos + 1 ) )
    )
  ELSE
    EXECUTE RETURN (
      TAKE FROM celestialSet STARTING AT ( betaPos + 1 ) COUNT ( alphaPos - ( betaPos + 1 ) )
    )
  END IF
END FUNCTION