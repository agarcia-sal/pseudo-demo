FUNCTION find_max(array_of_terms)
    DEFINE recursive_sort(index, array_ref)
        IF index >= LENGTH OF array_ref - 1 THEN
            RETURN array_ref
        USE
            SET swap_flag TO FALSE
            FOR position FROM 0 TO LENGTH OF array_ref - 2 DO
                DEFINE current_item AS array_ref[position]
                DEFINE next_item AS array_ref[position + 1]
                DEFINE current_unique_count AS SIZE OF UNIQUE ELEMENTS FROM current_item
                DEFINE next_unique_count AS SIZE OF UNIQUE ELEMENTS FROM next_item
                IF (current_unique_count < next_unique_count) OR (current_unique_count = next_unique_count AND current_item > next_item) THEN
                    SWAP array_ref[position] AND array_ref[position + 1]
                    SET swap_flag TO TRUE
            IF NOT swap_flag THEN
                RETURN array_ref
            RETURN recursive_sort(index + 1, array_ref)
    SET sorted_terms TO recursive_sort(0, array_of_terms)
    RETURN sorted_terms[0]
END FUNCTION