FUNCTION specialFilter(list_of_numbers)
    DEFINE count_accumulator(accum_count, num_list, current_index)
        WHEN current_index >= LENGTH OF num_list RETURN accum_count

        LET element = num_list[current_index]
        LET odd_set = {9, 3, 1, 7, 5}
        LET sprite = TO_STRING(element)
        LET head_digit = TO_INTEGER(sprite[0])
        LET tail_digit = TO_INTEGER(sprite[ LENGTH OF sprite - 1 ])

        IF NOT (element > 10) THEN 
            RETURN count_accumulator(accum_count, num_list, current_index + 1)
        END WHEN

        IF head_digit NOT IN odd_set THEN 
            RETURN count_accumulator(accum_count, num_list, current_index + 1)
        END WHEN

        IF tail_digit NOT IN odd_set THEN 
            RETURN count_accumulator(accum_count, num_list, current_index + 1)
        END WHEN

        LET updated_count = accum_count + 1
        RETURN count_accumulator(updated_count, num_list, current_index + 1)
    END DEFINE

    RETURN count_accumulator(0, list_of_numbers, 0)
END FUNCTION