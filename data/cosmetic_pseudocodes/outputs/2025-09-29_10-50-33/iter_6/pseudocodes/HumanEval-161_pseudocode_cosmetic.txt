FUNCTION solve(string_input)
    flag_indicator := false
    position_counter := 1
    transformed_chars <- new array from characters of string_input

    DEFINE convert_chars(pos)
        WHEN pos > length(string_input) THEN RETURN
        current_char := string_input[pos]
        IF (current_char >= 'A' AND current_char <= 'Z') OR (current_char >= 'a' AND current_char <= 'z')
            transformed_chars[pos] := switch_case(current_char)
            flag_indicator := true
        END IF
        convert_chars(pos + 1)
    END DEFINE

    USE convert_chars(position_counter)

    aggregated_result := concatenate_elements(transformed_chars)

    IF NOT flag_indicator THEN
        RETURN reverse_string(aggregated_result)
    OTHERWISE
        RETURN aggregated_result
    END IF

END FUNCTION

FUNCTION switch_case(ch)
    IF ch >= 'a' AND ch <= 'z'
        RETURN ch - 32
    ELSE IF ch >= 'A' AND ch <= 'Z'
        RETURN ch + 32
    END IF
END FUNCTION

FUNCTION concatenate_elements(list_of_chars)
    result_string := ""
    indexer := 1
    LOOP
        EXIT WHEN indexer > length(list_of_chars)
        result_string := result_string + list_of_chars[indexer]
        indexer := indexer + 1
    REPEAT
    RETURN result_string
END FUNCTION

FUNCTION reverse_string(str)
    reversed_accumulator := ""
    position := length(str)
    WHILE position >= 1
        reversed_accumulator := reversed_accumulator + str[position]
        position := position - 1
    END WHILE
    RETURN reversed_accumulator
END FUNCTION