FUNCTION generate_integers(alpha, beta)
  PROCEDURE collect_evens(current_value, ceiling, accumulator)
    IF current_value > ceiling THEN RETURN accumulator OTHERWISE
    IF (current_value % 2) = 0 THEN
      accumulator := accumulator + [current_value]
    USE collect_evens (current_value + 1, ceiling, accumulator)
  END PROCEDURE

  LET min_limit BEIF (alpha < beta) THEN alpha ELSE beta
  LET max_limit BEIF (alpha > beta) THEN alpha ELSE beta
  LET floor_limit BE MAXIMUM(2, min_limit)
  LET ceil_limit BE MINIMUM(8, max_limit)

  RETURN collect_evens(floor_limit, ceil_limit, [])
END FUNCTION