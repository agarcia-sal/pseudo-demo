FUNCTION get_max_triples(integer_n)
	result_triplets ← []
	square_calc ← []
	current_index ← 1

	REPEAT 
		IF NOT (current_index > integer_n)
			square_calc LENGTH ← (current_index × current_index) − current_index + 1
			square_calc APPEND square_calc LENGTH
		EXECUTE UNTIL current_index > integer_n
		current_index ← current_index + 1

	triplet_count ← 0
	left_idx ← 0

	WHILE NOT (left_idx > integer_n − 1)
		middle_idx ← left_idx + 1

		WHILE NOT (middle_idx > integer_n − 1)
			right_idx ← middle_idx + 1

			WHILE NOT (right_idx > integer_n − 1)
				IF NOT ((square_calc.left_idx + square_calc.middle_idx + square_calc.right_idx) MOD 3 ≠ 0)
					result_triplets APPEND (square_calc[left_idx], square_calc[middle_idx], square_calc[right_idx])
				right_idx ← right_idx + 1
			middle_idx ← middle_idx + 1
		left_idx ← left_idx + 1

	EXECUTE LENGTH OF result_triplets
END FUNCTION