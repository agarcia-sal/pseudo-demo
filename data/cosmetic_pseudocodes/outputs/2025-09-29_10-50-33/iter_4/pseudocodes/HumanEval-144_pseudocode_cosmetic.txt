```
FUNCTION simplify(fraction_A, fraction_B)
	numeratorPart1, denominatorPart1 := "", ""
	numeratorPart2, denominatorPart2 := "", ""

	// Unpack first fraction
	for idx := 0; idx < LENGTH(fraction_A); idx += 1
		if fraction_A[idx] == "/"
			numeratorPart1 = SUBSTRING(fraction_A, 0, idx)
			denominatorPart1 = SUBSTRING(fraction_A, idx + 1, LENGTH(fraction_A))
			break
		ENDIF
	ENDFOR

	// Unpack second fraction
	for pos := 0; pos < LENGTH(fraction_B); pos := pos + 1
		if fraction_B[pos] == "/"
			numeratorPart2 = SUBSTRING(fraction_B, 0, pos)
			denominatorPart2 = SUBSTRING(fraction_B, pos + 1, LENGTH(fraction_B))
			break
		ENDIF
	ENDFOR

	multipliedNum := TO_INTEGER(numeratorPart1) * TO_INTEGER(numeratorPart2)
	multipliedDen := TO_INTEGER(denominatorPart1) * TO_INTEGER(denominatorPart2)

	division_result := multipliedNum / multipliedDen
	if NOT (division_result != FLOOR(division_result))
		RETURN true
	endif
	RETURN false
END FUNCTION
```