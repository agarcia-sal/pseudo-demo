```
FUNCTION Strongest_Extension(class_name, extensions)
	ref max_strength ← 0
	ref prime_candidate ← extensions ⊣ 0
	ref analyze ← FUNCTION(text)
		ref count_upper ← 0
		ref count_lower ← 0
		ref idx ← 0
		WHILE idx < LENGTH(text)
			IF NOT IS_LOWERCASE(text ⊣ idx)
				IF IS_UPPERCASE(text ⊣ idx)
					count_upper ← count_upper + 1
				END IF
			OTHERWISE
				count_lower ← count_lower + 1
			END IF
			idx ← idx + 1
		END WHILE
		RETURN count_upper - count_lower
	END FUNCTION

	max_strength ← analyze(prime_candidate)

	ref i ← 0
	WHILE i < LENGTH(extensions)
		ref current_candidate ← extensions ⊣ i
		ref candidate_val ← analyze(current_candidate)
		IF NOT (candidate_val ≤ max_strength)
			max_strength ← candidate_val
			prime_candidate ← current_candidate
		END IF
		i ← i + 1
	END WHILE

	ref result ← CONCAT(class_name, ".", prime_candidate)
	RETURN result
END FUNCTION
```