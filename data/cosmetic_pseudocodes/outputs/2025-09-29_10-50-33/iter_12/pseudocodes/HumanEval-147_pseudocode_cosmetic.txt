FUNCTION get_max_triples(n_count)
   DEFINE generate_series(current_pos, accumulator)
      IF NOT (current_pos > n_count)
         ADD ((current_pos * current_pos) - current_pos + 1) TO accumulator
         EXECUTE generate_series(current_pos + 1, accumulator)
      ENDIF
   ENDDEFINE

   SET series_collection TO EMPTY SEQUENCE
   EXECUTE generate_series(1, series_collection)

   DEFINE collect_valid_triplets(first_idx, second_idx, third_idx, results)
      IF first_idx >= n_count - 2
         PROCEED
      ELSEIF second_idx >= n_count - 1
         EXECUTE collect_valid_triplets(first_idx + 1, first_idx + 2, first_idx + 3, results)
      ELSEIF third_idx >= n_count
         EXECUTE collect_valid_triplets(first_idx, second_idx + 1, second_idx + 2, results)
      ELSE
         IF ((series_collection[first_idx] + series_collection[second_idx] + series_collection[third_idx]) MOD 3) == 0
            APPEND (series_collection.first_idx, series_collection.second_idx, series_collection.third_idx) TO results
         ENDIF
         EXECUTE collect_valid_triplets(first_idx, second_idx, third_idx + 1, results)
      ENDIF
   ENDDEFINE

   DECLARE triples_found AS EMPTY SET
   EXECUTE collect_valid_triplets(0, 1, 2, triples_found)

   GIVE SIZE OF triples_found
END FUNCTION