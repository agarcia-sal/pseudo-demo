FUNCTION solve(input_sequence) 
  DEFINE helper_reverse_case(pos, toggled, char_array)
    IF pos EQUALS LENGTH OF char_array THEN
      RETURN toggled, char_array
    ELSE
      IF (char_array[pos] >= 'A' AND char_array[pos] <= 'Z') OR (char_array[pos] >= 'a' AND char_array[pos] <= 'z') THEN
        SET toggled TO 1
        IF char_array[pos] >= 'A' AND char_array[pos] <= 'Z' THEN
          SET char_array[pos] TO TO_LOWER(char_array[pos])
        ELSE
          SET char_array[pos] TO TO_UPPER(char_array[pos])
        END IF
      END IF
      RETURN helper_reverse_case(pos + 1, toggled, char_array)
    END IF
  END DEFINE

  SET position_marker TO 0
  SET toggle_flag TO 0
  SET characters TO [] 
  FOR i IN 0 TO (LENGTH(input_sequence) - 1) DO
    APPEND SUBSTRING(input_sequence, i, 1) TO characters
  END FOR

  PROCEED WITH helper_results = helper_reverse_case(position_marker, toggle_flag, characters)
  SET toggle_flag = helper_results[0]
  SET characters = helper_results[1]

  SET assembled_string TO ""
  FOR char_element IN characters DO
    SET assembled_string TO assembled_string + char_element
  END FOR

  IF NOT(toggle_flag EQUALS 1) THEN
    EXECUTE assembled_string = REVERSE(assembled_string)
  END IF

  EXECUTE assembled_string
END FUNCTION