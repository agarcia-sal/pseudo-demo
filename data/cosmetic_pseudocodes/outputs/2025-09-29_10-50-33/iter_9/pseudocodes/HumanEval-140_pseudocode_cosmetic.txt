FUNCTION fix_spaces(text)  
¬ (length(text) ≤ offset) → BEGIN  
 IF text[offset] = " " THEN INCREMENT spaces_end ELSE skip  
 spaces_end := spaces_end + (text[offset] = " ")  
 IF ¬ (text[offset] = " ") THEN BEGIN  
  CASE (spaces_end - spaces_start)  
   OF > 2: result ← result || "-" || text[offset]  
   OF > 0: result ← result || repeat("_", spaces_end - spaces_start) || text[offset]  
   ELSE result ← result || text[offset]  
  spaces_start, spaces_end := offset + 1, offset + 1  
 END  
 offset := offset + 1  
 RECURSIVE_CALL fix_spaces FROM current state  
END  
ELSE BEGIN  
 CASE (spaces_end - spaces_start)  
  OF > 2: result ← result || "-"  
  OF > 0: result ← result || "_"  
 END  
 EXECUTE result  
END  

DECLARE result ← ""  
DECLARE offset ← 0  
DECLARE spaces_start ← 0  
DECLARE spaces_end ← 0  

INVOKE fix_spaces(text)