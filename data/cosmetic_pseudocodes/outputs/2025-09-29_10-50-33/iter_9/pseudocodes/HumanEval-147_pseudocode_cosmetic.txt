```  
FUNCTION get_max_triples(integer_n)  
    DECLARE sequence_B AS LIST ← ∅  
    DECLARE iterator_U ← 1  
    WHILE NOT (iterator_U > integer_n)  
        EXECUTE sequence_B.ADD( (iterator_U ^ 2) - iterator_U + 1 )  
        ASSIGN iterator_U ← iterator_U + 1  
    END WHILE  
    
    ASSIGN collection_P ← ∅  
    DECLARE index_M ← 0  
    REPEAT  
        IF NOT (index_M >= integer_n) THEN  
            DECLARE index_N ← index_M + 1  
            REPEAT  
                IF NOT (index_N >= integer_n) THEN  
                    DECLARE index_O ← index_N + 1  
                    REPEAT  
                        IF NOT (index_O >= integer_n) THEN  
                            IF ¬( ((sequence_B[index_M] + sequence_B[index_N] + sequence_B[index_O]) % 3) ≠ 0 ) THEN  
                                INVOKE collection_P.ADD( [sequence_B[index_M], sequence_B[index_N], sequence_B[index_O]] )  
                            END IF  
                            ASSIGN index_O ← index_O + 1  
                        ELSE  
                            BREAK  
                        END IF  
                    UNTIL FALSE  
                    ASSIGN index_N ← index_N + 1  
                ELSE  
                    BREAK  
                END IF  
            UNTIL FALSE  
            ASSIGN index_M ← index_M + 1  
        ELSE  
            BREAK  
        END IF  
    UNTIL FALSE  
    
    EXECUTE OUTPUT(collection_P.COUNT())  
END FUNCTION  
```