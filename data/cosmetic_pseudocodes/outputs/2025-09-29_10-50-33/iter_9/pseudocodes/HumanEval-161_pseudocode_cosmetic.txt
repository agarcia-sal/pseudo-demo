```
FUNCTION solve(string_input)
  DEFINE negateCaseFlag AS 0
  DEFINE positionCounter AS 0
  DEFINE transformedChars AS [char FOR char IN string_input]

  LABEL loopStart
    IF positionCounter >= LENGTH(string_input) THEN GOTO loopEnd

    DEFINE currentChar AS string_input[positionCounter]

    IF NOT (NOT ( (currentChar >= 'A' AND currentChar <= 'Z') OR (currentChar >= 'a' AND currentChar <= 'z') )) THEN
      transformedChars[positionCounter] = IF currentChar >= 'a' AND currentChar <= 'z' THEN TO_UPPER(currentChar) ELSE TO_LOWER(currentChar)
      negateCaseFlag = 1
    END IF

    positionCounter = positionCounter + 1
    GOTO loopStart

  LABEL loopEnd

  DEFINE assembledResult AS ""

  DEFINE arrIndex AS 0
  WHILE NOT arrIndex >= LENGTH(transformedChars)
    assembledResult = CONCAT(assembledResult, transformedChars[arrIndex])
    arrIndex = arrIndex + 1
  END WHILE

  IF negateCaseFlag = 0 THEN
    EXECUTE assembledResult = REVERSE(assembledResult)
  END IF

  EXECUTE RETURN assembledResult
END FUNCTION
```