```
FUNCTION solve(string_input)
	flag_indicator ← FALSE
	position_counter ← ZERO
	transformed_chars ← []
	WHILE position_counter < LENGTH(string_input)
		char_at_pos ← string_input[position_counter]
		IF NOT (char_at_pos < 'A' OR (char_at_pos > 'Z' AND char_at_pos < 'a') OR char_at_pos > 'z')
			IF char_at_pos = UPPERCASE(char_at_pos)
				transformed_chars.APPEND(LOWERCASE(char_at_pos))
			ELSE
				transformed_chars.APPEND(UPPERCASE(char_at_pos))
			END IF
			flag_indicator ← TRUE
		ELSE
			transformed_chars.APPEND(char_at_pos)
		END IF
		position_counter ← position_counter + 1
	END WHILE
	accumulated_string ← ''
	EACH element IN transformed_chars EXECUTE
		accumulated_string ← CONCAT(accumulated_string, element)
	END EACH
	IF NOT flag_indicator THEN
		RETURN REVERSE(accumulated_string)
	END IF
	BREAK accumulated_string
END FUNCTION
```