FUNCTION int_to_mini_roman(input_value)
  DECLARE numerals_arr AS [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000]
  DECLARE symbols_arr AS ["I", "IV", "V", "IX", "X", "XL", "L", "XC", "C", "CD", "D", "CM", "M"]
  ASSIGN index_var := 12
  ASSIGN output_accumulator := ""

  REPEAT UNTIL input_value = 0
    ASSIGN quotient_part := input_value DIV numerals_arr[index_var]
    ASSIGN input_value := input_value MOD numerals_arr[index_var]

    USE append_repetitions(quotient_part, index_var)

    DECREASE index_var BY 1
  END REPEAT

  FUNCTION append_repetitions(times, symbol_index)
    IF times = 0 THEN RETURN

    DECLARE count_var := 0
    WHILE count_var < times
      output_accumulator = output_accumulator + symbols_arr[symbol_index]
      INCREMENT count_var BY 1
    END WHILE
  END FUNCTION

  RETURN LOWERCASE(output_accumulator)
END FUNCTION