FUNCTION do_algebra(sequence_of_operators, sequence_of_operands)  
	local composed_expression = TO_STRING(sequence_of_operands[0])  
	local idx = 1  
	REPEAT WHILE idx < LENGTH(sequence_of_operators) + 1  
		let current_operator = sequence_of_operators[idx - 1]  
		let current_operand = sequence_of_operands[idx]  
		composed_expression = composed_expression CONCAT TO_STRING(current_operand) CONCAT current_operator  
		idx = idx + 1  
	END REPEAT  
	EXECUTE composed_expression RETURNING RESULT  
END FUNCTION