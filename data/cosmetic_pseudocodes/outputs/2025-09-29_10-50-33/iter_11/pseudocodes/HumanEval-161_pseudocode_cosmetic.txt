FUNCTION solve(string_input)  
    INITIALIZE indicator WITH 0  
    INITIALIZE pointer WITH 0  
    INITIALIZE transformed_chars AS ARRAY OF CHARACTERS FROM string_input  
  
    LABEL traversal_loop: WHILE pointer < LENGTH OF string_input DO  
        LET current_char BE string_input[pointer]  
        IF NOT (current_char < 'A' OR (current_char > 'Z' AND current_char < 'a') OR current_char > 'z') THEN  
            transformed_chars[pointer] = TOGGLE_CASE current_char  
            indicator = 1  
        END IF  
        pointer = pointer + 1  
    END WHILE traversal_loop  
  
    INITIALIZE assembled_string WITH ""  
    LET position BE 0  
    REPEAT  
        IF position >= LENGTH OF transformed_chars THEN EXIT  
        assembled_string = assembled_string + transformed_chars[position]  
        position = position + 1  
    UNTIL FALSE  
  
    IF indicator = 0 THEN EXECUTE  
        PERFORM REVERSE ON assembled_string  
        ABORT ASSEMBLED_STRING  
    END EXECUTE  
  
    ABORT assembled_string  
END FUNCTION