FUNCTION minSubArraySum(array_of_ints)
    LET max_so_far = 0
    LET curr_total = 0
    LET index = 0
    WHILE index < LENGTH(array_of_ints)
        LET current_val = array_of_ints[index]
        LET neg_val = 0 - current_val
        SET curr_total = curr_total + neg_val
        IF curr_total < 0 THEN
            curr_total = 0
        END IF
        IF curr_total > max_so_far THEN
            max_so_far = curr_total
        END IF
        index = index + 1
    END WHILE
    IF max_so_far = 0 THEN
        LET neg_values = EMPTY ARRAY
        LET i = 0
        WHILE i < LENGTH(array_of_ints)
            APPEND (0 - array_of_ints[i]) TO neg_values
            i = i + 1
        END WHILE
        LET max_neg = neg_values[0]
        LET j = 1
        FOR j FROM 1 TO LENGTH(neg_values) - 1 DO
            IF neg_values[j] > max_neg THEN
                max_neg = neg_values[j]
            END IF
        END FOR
        max_so_far = max_neg
    END IF
    LET min_sum = 0 - max_so_far
    RETURN min_sum
END FUNCTION