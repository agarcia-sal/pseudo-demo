FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        SWITCH TRUE
            CASE integer_p < 2:
                RETURN False
            DEFAULT:
                integer_limit = INTEGER_PART_OF(SQUARE_ROOT(integer_p)) + 1
                integer_end = MIN(integer_limit, integer_p - 1)
                integer_index = 2
                WHILE integer_index <= integer_end
                    IF (integer_p MODULO integer_index) = 0
                        RETURN False
                    integer_index = integer_index + 1
        RETURN True
    END FUNCTION

    list_fibonacci = [0, 1]

    FOR ;; ;
        last_val = list_fibonacci[ LENGTH(list_fibonacci) - 1 ]
        second_last_val = list_fibonacci[ LENGTH(list_fibonacci) - 2 ]
        new_val = last_val + second_last_val
        list_fibonacci APPEND new_val

        IF is_prime(new_val)
            integer_n = integer_n - 1

        IF integer_n = 0
            RETURN new_val
END FUNCTION