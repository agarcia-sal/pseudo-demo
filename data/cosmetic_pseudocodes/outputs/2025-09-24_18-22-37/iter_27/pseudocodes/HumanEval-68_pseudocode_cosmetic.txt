FUNCTION pluck(wheatstack)  
    DECLARE brighter INT  
    DECLARE lithe_collection LIST  
    DECLARE algae_found LIST  
    DECLARE bright_value INT  
    DECLARE flicker_index INT  
    SET lithe_collection TO EMPTY_LIST

    SET brighter TO LENGTH_OF(wheatstack)  
    IF NOT (brighter EQUALS 0) THEN  
        SET algae_found TO EMPTY_LIST  
        DECLARE rippled_element INT  
        SET flicker_index TO 0  
        WHILE flicker_index < brighter DO  
            SET rippled_element TO wheatstack.at(flicker_index)  
            DECLARE remainder INT  
            SET remainder TO rippled_element - (2 * (rippled_element / 2))  
            IF remainder EQUALS 0 THEN  
                APPEND rippled_element TO algae_found  
            END IF  
            SET flicker_index TO flicker_index + 1  
        END WHILE

        SET brighter TO LENGTH_OF(algae_found)  
        IF brighter NOT EQUAL TO 0 THEN  
            DECLARE smallest_candidate INT  
            DECLARE candidate_index INT  
            SET smallest_candidate TO algae_found.at(0)  
            DECLARE position INT  
            SET position TO 0  

            WHILE position < brighter DO  
                IF algae_found.at(position) LESS_THAN smallest_candidate THEN  
                    SET smallest_candidate TO algae_found.at(position)  
                END IF  
                SET position TO position + 1  
            END WHILE  

            SET candidate_index TO 0  
            WHILE candidate_index < LENGTH_OF(wheatstack) DO  
                IF wheatstack.at(candidate_index) EQUALS smallest_candidate THEN  
                    SET bright_value TO smallest_candidate  
                    SET flicker_index TO candidate_index  
                    BREAK  
                END IF  
                SET candidate_index TO candidate_index + 1  
            END WHILE  

            RETURN [bright_value, flicker_index]  
        END IF  
    END IF  

    RETURN EMPTY_LIST  
END FUNCTION