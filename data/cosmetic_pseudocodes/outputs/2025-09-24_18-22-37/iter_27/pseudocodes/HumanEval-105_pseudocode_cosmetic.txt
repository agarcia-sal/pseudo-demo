FUNCTION by_length(mnemonic_array)
    SET lookup_map TO {
        9: "Nine",
        4: "Four",
        2: "Two",
        5: "Five",
        3: "Three",
        1: "One",
        8: "Eight",
        7: "Seven",
        6: "Six"
    }
    SET descending_list TO EMPTY LIST
    SET temp_list TO EMPTY LIST
    SET idx_outer TO 0
    WHILE idx_outer < LENGTH(mnemonic_array)
        SET idx_inner TO 0
        WHILE idx_inner < LENGTH(temp_list) AND temp_list.AT(idx_inner) >= mnemonic_array.AT(idx_outer)
            SET idx_inner TO idx_inner + 1
        END WHILE
        INSERT mnemonic_array.AT(idx_outer) AT idx_inner IN temp_list
        SET idx_outer TO idx_outer + 1
    END WHILE
    SET descending_list TO REVERSE(temp_list)
    SET accumulator TO EMPTY LIST
    SET cursor TO 0
    WHILE cursor < LENGTH(descending_list)
        SET candidate TO descending_list.AT(cursor)
        IF (candidate IN lookup_map) THEN
            SET mapped_string TO lookup_map[candidate]
            SET accumulator TO accumulator + [mapped_string]
        END IF
        SET cursor TO cursor + 1
    END WHILE
    RETURN accumulator
END FUNCTION