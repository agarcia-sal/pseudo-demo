FUNCTION anti_shuffle(input_string)
    SET temp_storage TO EMPTY LIST
    SET str_array TO SPLIT input_string BY " "
    SET idx TO 0
    WHILE idx < LENGTH(str_array)
        SET current_word TO str_array.at(idx)
        SET char_array TO EMPTY LIST
        SET char_idx TO 0
        WHILE char_idx < LENGTH(current_word)
            ADD current_word.char_at(char_idx) TO char_array
            SET char_idx TO char_idx + 1
        END WHILE
        SET sorted_chars TO EMPTY LIST
        SET char_sort_idx TO 0
        WHILE char_sort_idx < LENGTH(char_array)
            SET cmp_idx TO char_sort_idx + 1
            WHILE cmp_idx < LENGTH(char_array)
                IF char_array.at(cmp_idx) < char_array.at(char_sort_idx) THEN
                    SET temp_char TO char_array.at(char_sort_idx)
                    SET char_array[char_sort_idx] TO char_array.at(cmp_idx)
                    SET char_array[cmp_idx] TO temp_char
                END IF
                SET cmp_idx TO cmp_idx + 1
            END WHILE
            SET char_sort_idx TO char_sort_idx + 1
        END WHILE
        SET rebuilt_word TO EMPTY STRING
        SET build_idx TO 0
        WHILE build_idx < LENGTH(char_array)
            SET rebuilt_word TO rebuilt_word + char_array.at(build_idx)
            SET build_idx TO build_idx + 1
        END WHILE
        ADD rebuilt_word TO temp_storage
        SET idx TO idx + 1
    END WHILE
    SET output_str TO EMPTY STRING
    SET join_idx TO 0
    WHILE join_idx < LENGTH(temp_storage)
        IF join_idx != 0 THEN
            SET output_str TO output_str + " "
        END IF
        SET output_str TO output_str + temp_storage.at(join_idx)
        SET join_idx TO join_idx + 1
    END WHILE
    RETURN output_str
END FUNCTION