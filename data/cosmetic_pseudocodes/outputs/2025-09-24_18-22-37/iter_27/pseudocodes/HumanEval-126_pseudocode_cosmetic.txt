FUNCTION is_sorted(array_of_values)
    SET index_map TO dictionary WITH KEYS FROM array_of_values AND VALUES 0
    SET iterator_val TO 0
    WHILE iterator_val < LENGTH(array_of_values)
        SET current_element TO array_of_values.at(iterator_val)
        SET temp_count TO index_map.at(current_element)
        SET updated_count TO temp_count + 1
        index_map[current_element] = updated_count
        SET iterator_val TO iterator_val + 1
    END WHILE

    SET violation_found TO False
    SET check_val TO 0
    WHILE check_val < LENGTH(array_of_values)
        SET candidate_key TO array_of_values.at(check_val)
        IF index_map.at(candidate_key) > 1 + 1 THEN
            violation_found = True
            BREAK
        END IF
        SET check_val TO check_val + 1
    END WHILE

    IF violation_found == True THEN
        RETURN False
    ELSE
        SET flag_order TO True
        SET pos_index TO 1
        WHILE pos_index < LENGTH(array_of_values)
            IF NOT (array_of_values.at(pos_index - 1) <= array_of_values.at(pos_index)) THEN
                flag_order = False
                SET pos_index TO LENGTH(array_of_values)
            END IF
            SET pos_index TO pos_index + 1
        END WHILE

        IF flag_order == True THEN
            RETURN True
        ELSE
            RETURN False
        END IF
    END IF
END FUNCTION