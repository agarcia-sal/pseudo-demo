FUNCTION mean_absolute_deviation(sequence_of_values)  
    DECLARE accumulator_s AS NUMBER  
    DECLARE divisor_r AS NUMBER  
    DECLARE intermediary_y AS NUMBER  
    DECLARE iterator_z AS NUMBER  

    accumulator_s ← 0  
    divisor_r ← 0  

    iterator_z ← 0  
    WHILE iterator_z < LENGTH(sequence_of_values) DO  
        accumulator_s ← accumulator_s + sequence_of_values.at(iterator_z)  
        iterator_z ← iterator_z + 1  
    END WHILE  

    divisor_r ← accumulator_s / LENGTH(sequence_of_values)  

    accumulator_s ← 0  
    iterator_z ← 0  
    WHILE iterator_z < LENGTH(sequence_of_values) DO  
        intermediary_y ← sequence_of_values.at(iterator_z) - divisor_r  
        IF intermediary_y < 0 THEN  
            intermediary_y ← 0 - intermediary_y  
        END IF  
        accumulator_s ← accumulator_s + intermediary_y  
        iterator_z ← iterator_z + 1  
    END WHILE  

    RETURN accumulator_s / LENGTH(sequence_of_values)  
END FUNCTION