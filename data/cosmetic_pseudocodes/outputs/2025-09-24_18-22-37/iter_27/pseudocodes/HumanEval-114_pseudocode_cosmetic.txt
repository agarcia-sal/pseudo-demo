FUNCTION minSubArraySum(array_of_ints)  
    SET accumulator TO 0  
    SET best_score TO 0  
    SET iterator_index TO 0  
    WHILE iterator_index < LENGTH(array_of_ints)  
        SET current_element TO array_of_ints.at(iterator_index)  
        SET delta TO -1 * current_element  
        SET accumulator TO accumulator + delta  
        SWITCH (accumulator < 0)  
            CASE TRUE:  
                SET accumulator TO 0  
            CASE FALSE:  
                NO OP  
        END SWITCH  
        IF best_score < accumulator THEN  
            SET best_score TO accumulator  
        END IF  
        SET iterator_index TO iterator_index + 1  
    END WHILE  
    IF best_score == 0 THEN  
        SET temp_list TO []  
        SET pos TO 0  
        WHILE pos < LENGTH(array_of_ints)  
            SET val TO array_of_ints.at(pos)  
            SET negated_val TO 0 - val  
            APPEND negated_val TO temp_list  
            SET pos TO pos + 1  
        END WHILE  
        SET best_score TO temp_list[0]  
        SET idx TO 1  
        WHILE idx < LENGTH(temp_list)  
            IF best_score < temp_list.at(idx) THEN  
                SET best_score TO temp_list.at(idx)  
            END IF  
            SET idx TO idx + 1  
        END WHILE  
    END IF  
    SET result_value TO 0 - best_score  
    RETURN result_value  
END FUNCTION