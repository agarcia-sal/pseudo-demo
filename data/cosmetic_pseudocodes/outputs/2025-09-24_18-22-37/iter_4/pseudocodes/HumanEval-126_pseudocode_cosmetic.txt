FUNCTION is_sorted(list_of_numbers)
    DECLARE frequency_map
    ASSIGN frequency_map TO empty dictionary
    DECLARE idx
    SET idx TO 0
    WHILE idx < LENGTH(list_of_numbers)
        DECLARE element
        SET element TO list_of_numbers[idx]
        IF element IN frequency_map THEN
            SET frequency_map[element] TO frequency_map[element] + 1
        ELSE
            SET frequency_map[element] TO 1
        ENDIF
        SET idx TO idx + 1
    ENDWHILE

    DECLARE key_list
    ASSIGN key_list TO list_of_numbers
    DECLARE duplicate_found
    SET duplicate_found TO False
    DECLARE k
    SET k TO 0
    WHILE k < LENGTH(key_list) AND duplicate_found = False
        IF frequency_map[key_list[k]] > 2 THEN
            SET duplicate_found TO True
        ENDIF
        SET k TO k + 1
    ENDWHILE

    IF duplicate_found THEN
        RETURN False
    ENDIF

    DECLARE index
    SET index TO 1
    DECLARE sorted_order
    SET sorted_order TO True
    WHILE index < LENGTH(list_of_numbers) AND sorted_order
        IF list_of_numbers[index - 1] > list_of_numbers[index] THEN
            SET sorted_order TO False
        ENDIF
        SET index TO index + 1
    ENDWHILE

    SWITCH sorted_order
        CASE True:
            RETURN True
        DEFAULT:
            RETURN False
    ENDSWITCH
END FUNCTION