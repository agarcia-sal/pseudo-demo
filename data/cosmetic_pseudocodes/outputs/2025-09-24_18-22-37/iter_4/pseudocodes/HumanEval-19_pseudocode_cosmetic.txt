FUNCTION sort_numbers(number_words_string)
    INITIALIZE mapping_dictionary WITH PAIRS:
        'zero' -> 0,
        'one' -> 1,
        'two' -> 2,
        'three' -> 3,
        'four' -> 4,
        'five' -> 5,
        'six' -> 6,
        'seven' -> 7,
        'eight' -> 8,
        'nine' -> 9
    DECLARE words_array AS EMPTY LIST
    DECLARE index AS 0
    SET temp_words TO SPLIT number_words_string BY ' '
    WHILE index < LENGTH OF temp_words DO
        IF temp_words[index] IS NOT EMPTY THEN
            APPEND temp_words[index] TO words_array
        END IF
        INCREMENT index BY 1
    END WHILE
    DECLARE ordering_function AS FUNCTION(a, b)
        IF mapping_dictionary[a] < mapping_dictionary[b] THEN
            RETURN -1
        ELSE IF mapping_dictionary[a] > mapping_dictionary[b] THEN
            RETURN 1
        ELSE
            RETURN 0
        END IF
    END FUNCTION
    PERFORM SORT ON words_array USING ordering_function
    SET result_string TO EMPTY STRING
    DECLARE pos AS 0
    WHILE pos < LENGTH OF words_array DO
        IF pos EQUALS 0 THEN
            SET result_string TO words_array[pos]
        ELSE
            SET result_string TO CONCATENATE result_string, ' ', words_array[pos]
        END IF
        INCREMENT pos BY 1
    END WHILE
    RETURN result_string
END FUNCTION