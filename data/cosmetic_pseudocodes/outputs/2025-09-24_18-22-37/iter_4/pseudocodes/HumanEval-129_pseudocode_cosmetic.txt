FUNCTION minPath(grid, k)
    LET size BE LENGTH OF grid
    LET minimalValue BE (size * size) + 1
    LET rowIndex BE 0
    WHILE rowIndex < size
        LET colIndex BE 0
        WHILE colIndex < size
            IF grid[rowIndex][colIndex] = 1 THEN
                LET neighbors BE EMPTY LIST
                IF rowIndex > 0 THEN
                    ADD grid[rowIndex - 1][colIndex] TO neighbors
                END IF
                IF colIndex > 0 THEN
                    ADD grid[rowIndex][colIndex - 1] TO neighbors
                END IF
                IF rowIndex < size - 1 THEN
                    ADD grid[rowIndex + 1][colIndex] TO neighbors
                END IF
                IF colIndex < size - 1 THEN
                    ADD grid[rowIndex][colIndex + 1] TO neighbors
                END IF
                LET minimalValue BE MINIMUM OF neighbors
            END IF
            SET colIndex TO colIndex + 1
        END WHILE
        SET rowIndex TO rowIndex + 1
    END WHILE
    LET resultList BE EMPTY LIST
    LET counter BE 0
    REPEAT WHILE counter < k
        SWITCH (counter MOD 2)
            CASE 0:
                ADD 1 TO resultList
                BREAK
            DEFAULT:
                ADD minimalValue TO resultList
                BREAK
        END SWITCH
        SET counter TO counter + 1
    END REPEAT
    RETURN resultList
END FUNCTION