FUNCTION encode(inputText)
    LET swapVowels = "AEIOUaeiou"
    LET translationMap = EMPTY DICTIONARY
    FOR EACH char IN swapVowels DO
        LET asciiNum = ASCII_CODE_OF(char)
        LET incrementedAscii = asciiNum + 2
        LET mappedChar = CHARACTER_FROM_ASCII(incrementedAscii)
        translationMap[char] = mappedChar
    END FOR

    LET toggledText = EMPTY STRING
    FOR INDEX FROM 0 TO LENGTH(inputText) - 1 DO
        LET currentChar = inputText[INDEX]
        IF currentChar IS UPPERCASE THEN
            LET toggledChar = LOWERCASE_OF(currentChar)
        ELSE IF currentChar IS LOWERCASE THEN
            LET toggledChar = UPPERCASE_OF(currentChar)
        ELSE 
            LET toggledChar = currentChar
        END IF
        APPEND toggledChar TO toggledText
    END FOR

    LET outputString = EMPTY STRING
    FOR EACH symbol IN toggledText DO
        IF symbol EXISTS_IN translationMap THEN
            LET replacement = translationMap[symbol]
            APPEND replacement TO outputString
        ELSE
            APPEND symbol TO outputString
        END IF
    END FOR

    RETURN outputString
END FUNCTION