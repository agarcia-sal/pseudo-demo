FUNCTION even_odd_palindrome(q)
    FUNCTION is_palindrome(r)
        DECLARE str_a = TO_STRING(r)
        DECLARE rev_str = ""
        DECLARE idx = LENGTH(str_a) - 1
        WHILE idx >= 0
            rev_str = rev_str + str_a[idx]
            idx = idx - 1
        END WHILE
        IF rev_str == str_a THEN
            RETURN TRUE
        ELSE
            RETURN FALSE
        END IF
    END FUNCTION

    DECLARE count_even = 0
    DECLARE count_odd = 0
    DECLARE current = q
    DECLARE j = 1

    WHILE j <= current
        DECLARE is_palin = is_palindrome(j)
        SWITCH (j % 2 != 0, is_palin)
            CASE (TRUE, TRUE):
                count_odd = count_odd + 1
                BREAK
            CASE (FALSE, TRUE):
                count_even = count_even + 1
                BREAK
            DEFAULT:
                /* do nothing */
        END SWITCH
        j = j + 1
    END WHILE

    RETURN (count_even, count_odd)
END FUNCTION