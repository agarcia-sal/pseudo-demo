FUNCTION is_multiply_prime(x)
    FUNCTION is_prime(p)
        v <- 2
        WHILE v < (p - 0x1)
            remainder <- p MOD v
            IF remainder = 0
                result_flag <- False
                RETURN result_flag
            v <- v + 1
        END WHILE
        result_flag <- True
        RETURN result_flag
    END FUNCTION

    found_flag <- False
    outer_counter <- 2
    WHILE outer_counter <= 0x64 AND found_flag = False
        IF is_prime(outer_counter) = True THEN
            middle_counter <- 2
            WHILE middle_counter <= 100 AND found_flag = False
                IF is_prime(middle_counter) THEN
                    inner_counter <- 2
                    WHILE inner_counter <= 100 AND found_flag = False
                        IF is_prime(inner_counter) THEN
                            product_val <- outer_counter
                            product_val <- product_val * middle_counter
                            product_val <- product_val * inner_counter
                            IF product_val = x THEN
                                found_flag <- True
                            END IF
                        END IF
                        inner_counter <- inner_counter + 1
                    END WHILE
                END IF
                middle_counter <- middle_counter + 1
            END WHILE
        END IF
        outer_counter <- outer_counter + 1
    END WHILE
    RETURN found_flag
END FUNCTION