FUNCTION prime_fib(n_counter)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(x_candidate)
        IF x_candidate < 2 THEN
            RETURN False
        ENDIF
        limit_bound ← FLOOR(SQRT(x_candidate)) + 1
        max_check ← limit_bound
        IF max_check > x_candidate - 1 THEN
            max_check ← x_candidate - 1
        ENDIF

        divisor ← 2
        WHILE divisor <= max_check AND divisor >= 2
            IF x_candidate MOD divisor = 0 THEN
                RETURN False
            ENDIF
            divisor ← divisor + 1
        ENDWHILE
        RETURN True
    END FUNCTION

    fibonacci_seq ← [0, 1]

    REPEAT INDEFINITELY
        last_idx ← LENGTH(fibonacci_seq) - 1
        second_last_idx ← last_idx - 1

        first_val ← fibonacci_seq[second_last_idx]
        second_val ← fibonacci_seq[last_idx]
        new_element ← first_val + second_val
        APPEND new_element TO fibonacci_seq

        CHECK_PRIME ← is_prime(new_element)
        IF CHECK_PRIME THEN
            n_counter ← n_counter - 1
        ENDIF

        IF n_counter = 0 THEN
            RETURN new_element
        ENDIF
    END REPEAT
END FUNCTION