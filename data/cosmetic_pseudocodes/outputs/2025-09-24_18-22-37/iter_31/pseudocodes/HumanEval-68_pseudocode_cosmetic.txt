FUNCTION pluck(list_of_nodes)
    LET result_list BE empty_list
    LET filtered_evens BE empty_list
    LET minimum_even BE 0
    LET minimum_even_pos BE 0
    LET has_elements BE LENGTH OF list_of_nodes
    IF has_elements IS 0 THEN
        RETURN result_list
    END IF

    filtered_evens = EMPTY_LIST
    FOR EACH candidate IN list_of_nodes DO
        LET remainder BE candidate MODULO 2
        IF remainder IS 0 THEN
            APPEND candidate TO filtered_evens
        END IF
    END FOR

    LET count_evens BE LENGTH OF filtered_evens
    IF count_evens IS 0 THEN
        RETURN result_list
    END IF

    minimum_even = filtered_evens[0]
    FOR INDEX i FROM 1 TO count_evens - 1 DO
        LET current_element BE filtered_evens[i]
        IF current_element < minimum_even THEN
            minimum_even = current_element
        END IF
    END FOR

    FOR INDEX j FROM 0 TO has_elements - 1 DO
        IF list_of_nodes[j] IS EQUAL TO minimum_even THEN
            minimum_even_pos = j
            BREAK
        END IF
    END FOR

    result_list = [minimum_even, minimum_even_pos]
    RETURN result_list
END FUNCTION