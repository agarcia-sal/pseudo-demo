FUNCTION minPath(matrix, limit)
  LET dimension BE LENGTH OF matrix
  LET threshold BE (dimension * dimension) + 1
  FOR row_idx FROM 0 TO dimension - 1
    FOR col_idx FROM 0 TO dimension - 1
      IF matrix.at(row_idx).at(col_idx) == 1 THEN
        LET neighbors BE EMPTY LIST
        IF row_idx != 0 THEN
          LET upper_val BE matrix.at(row_idx - 1).at(col_idx)
          APPEND upper_val TO neighbors
        END IF
        IF col_idx != 0 THEN
          LET left_val BE matrix.at(row_idx).at(col_idx - 1)
          APPEND left_val TO neighbors
        END IF
        IF row_idx != (dimension - 1) THEN
          LET lower_val BE matrix.at(row_idx + 1).at(col_idx)
          APPEND lower_val TO neighbors
        END IF
        IF col_idx != (dimension - 1) THEN
          LET right_val BE matrix.at(row_idx).at(col_idx + 1)
          APPEND right_val TO neighbors
        END IF
        LET minimum_neighbor BE neighbors[0]
        FOR idx FROM 1 TO LENGTH OF neighbors - 1
          IF neighbors.at(idx) < minimum_neighbor THEN
            SET minimum_neighbor TO neighbors.at(idx)
          END IF
        END FOR
        SET threshold TO minimum_neighbor
      END IF
    END FOR
  END FOR

  LET results BE EMPTY LIST
  LET count BE 0
  WHILE count < limit
    IF (count % 2) == 0 THEN
      APPEND 1 TO results
    ELSE
      APPEND threshold TO results
    END IF
    SET count TO count + 1
  END WHILE
  
  RETURN results
END FUNCTION