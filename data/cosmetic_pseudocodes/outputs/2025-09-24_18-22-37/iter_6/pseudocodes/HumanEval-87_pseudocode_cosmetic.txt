FUNCTION get_row(matrix_array, key_number)
  SET position_list := []
  SET outer_counter := 0
  WHILE outer_counter <= LENGTH(matrix_array) - 1
    SET inner_counter := 0
    WHILE inner_counter <= LENGTH(matrix_array[outer_counter]) - 1
      SET current_value := matrix_array[outer_counter][inner_counter]
      IF current_value == key_number THEN
        CALL position_list.APPEND((outer_counter, inner_counter))
      END IF
      SET inner_counter := inner_counter + 1
    END WHILE
    SET outer_counter := outer_counter + 1
  END WHILE

  SET temp_list := []
  SET temp_counter := 0
  WHILE temp_counter <= LENGTH(position_list) - 1
    SET temp_index := temp_counter
    WHILE temp_index < LENGTH(position_list)
      IF position_list[temp_counter][1] < position_list[temp_index][1] THEN
        SET holder := position_list[temp_counter]
        SET position_list[temp_counter] := position_list[temp_index]
        SET position_list[temp_index] := holder
      END IF
      SET temp_index := temp_index + 1
    END WHILE
    SET temp_counter := temp_counter + 1
  END WHILE

  SET reorder_counter := 0
  WHILE reorder_counter <= LENGTH(position_list) - 1
    SET reorder_index := reorder_counter
    WHILE reorder_index < LENGTH(position_list)
      IF position_list[reorder_counter][0] > position_list[reorder_index][0] THEN
        SET temp_variable := position_list[reorder_counter]
        SET position_list[reorder_counter] := position_list[reorder_index]
        SET position_list[reorder_index] := temp_variable
      END IF
      SET reorder_index := reorder_index + 1
    END WHILE
    SET reorder_counter := reorder_counter + 1
  END WHILE

  RETURN position_list
END FUNCTION