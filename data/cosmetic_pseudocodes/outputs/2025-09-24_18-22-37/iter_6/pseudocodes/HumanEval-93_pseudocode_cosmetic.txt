FUNCTION encode(inputText)
    vowelsCollection := "aeiouAEIOU"
    vowelMap := EMPTY DICTIONARY
    index := 1
    WHILE index <= LENGTH(vowelsCollection) DO
        currentChar := CHARACTER AT vowelsCollection POSITION index
        charCode := ASCII VALUE OF currentChar
        incrementedCode := charCode + 2
        mappedChar := CHARACTER WITH ASCII VALUE incrementedCode
        vowelMap[currentChar] := mappedChar
        index := index + 1
    END WHILE

    alteredText := EMPTY STRING
    pos := 1
    WHILE pos <= LENGTH(inputText) DO
        ch := CHARACTER AT inputText POSITION pos
        IF ch IS UPPERCASE LETTER THEN
            swappedChar := TO LOWERCASE(ch)
        ELSE IF ch IS LOWERCASE LETTER THEN
            swappedChar := TO UPPERCASE(ch)
        ELSE 
            swappedChar := ch
        END IF
        alteredText := alteredText + swappedChar
        pos := pos + 1
    END WHILE

    finalResult := EMPTY STRING
    cursor := 1
    WHILE cursor <= LENGTH(alteredText) DO
        symbol := CHARACTER AT alteredText POSITION cursor
        IF symbol EXISTS AS KEY IN vowelMap THEN
            finalResult := finalResult + vowelMap[symbol]
        ELSE
            finalResult := finalResult + symbol
        END IF
        cursor := cursor + 1
    END WHILE
    RETURN finalResult
END FUNCTION