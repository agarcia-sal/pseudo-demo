FUNCTION odd_count(sequence_of_texts)
 result_collector := new empty list
 index := 0
 WHILE index LESS THAN length of sequence_of_texts DO
  current_text := sequence_of_texts at position index
  odd_digits_counter := 0
  char_pos := 0
  WHILE char_pos LESS THAN length of current_text DO
   current_char := current_text at position char_pos
   numeric_value := integer conversion of current_char
   remainder := numeric_value modulo 2
   IF remainder EQUALS 1 THEN
    odd_digits_counter := odd_digits_counter plus 1
   END IF
   char_pos := char_pos plus 1
  END WHILE
  part1 := "the number of odd elements "
  part2 := string conversion of odd_digits_counter
  part3 := "n the str"
  part4 := string conversion of odd_digits_counter
  part5 := "ng "
  part6 := string conversion of odd_digits_counter
  part7 := " of the "
  part8 := string conversion of odd_digits_counter
  part9 := "nput."
  constructed_string := part1 concatenated with part2
  constructed_string := constructed_string concatenated with part3
  constructed_string := constructed_string concatenated with part4
  constructed_string := constructed_string concatenated with part5
  constructed_string := constructed_string concatenated with part6
  constructed_string := constructed_string concatenated with part7
  constructed_string := constructed_string concatenated with part8
  constructed_string := constructed_string concatenated with part9
  append constructed_string to result_collector
  index := index plus 1
 END WHILE
 RETURN result_collector
END FUNCTION