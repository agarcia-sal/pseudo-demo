FUNCTION sort_numbers(input_string)
value_dictionary := DICTIONARY MAPPING
    'zero' TO 0,
    'one' TO 1,
    'two' TO 2,
    'three' TO 3,
    'four' TO 4,
    'five' TO 5,
    'six' TO 6,
    'seven' TO 7,
    'eight' TO 8,
    'nine' TO 9

temp_words := SPLIT input_string BY ' '
filtered_words := EMPTY LIST

index_var := 0
WHILE index_var < LENGTH OF temp_words DO
    current_word := temp_words[index_var]
    IF current_word != '' THEN
        APPEND current_word TO filtered_words
    ELSE
        // do nothing
    END IF
    index_var := index_var + 1
END WHILE

word_sorted := EMPTY LIST
WHILE LENGTH OF filtered_words > 0 DO
    min_word := filtered_words[0]
    min_value := value_dictionary[min_word]
    i := 1
    WHILE i < LENGTH OF filtered_words DO
        word := filtered_words[i]
        word_value := value_dictionary[word]
        IF word_value < min_value THEN
            min_word := word
            min_value := word_value
        ELSE
            // no change
        END IF
        i := i + 1
    END WHILE
    APPEND min_word TO word_sorted
    
    new_filtered := EMPTY LIST
    j := 0
    WHILE j < LENGTH OF filtered_words DO
        IF filtered_words[j] != min_word THEN
            APPEND filtered_words[j] TO new_filtered
        ELSE
            // skip min_word
        END IF
        j := j + 1
    END WHILE
    filtered_words := new_filtered
END WHILE

result_string := ''
k := 0
WHILE k < LENGTH OF word_sorted DO
    IF k = 0 THEN
        result_string := word_sorted[k]
    ELSE
        result_string := result_string + ' ' + word_sorted[k]
    END IF
    k := k + 1
END WHILE

RETURN result_string
END FUNCTION