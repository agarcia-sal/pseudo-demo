```
FUNCTION count_distinct_characters(alphanumeric_sequence)
    DECLARE collection_of_unique_chars AS SET
    DECLARE normalized_sequence AS STRING
    normalized_sequence  ← EMPTY STRING
    collection_of_unique_chars ← EMPTY SET

    FOR position FROM 1 TO LENGTH(alphanumeric_sequence) DO
        DECLARE current_character AS CHAR
        current_character ← alphanumeric_sequence.at(position)
        DECLARE lower_cased_character AS CHAR
        lower_cased_character ← TO_LOWER(current_character)
        normalized_sequence ← normalized_sequence + lower_cased_character
    END FOR

    FOR index FROM 1 TO LENGTH(normalized_sequence) DO
        DECLARE element AS CHAR
        element ← normalized_sequence.at(index)
        IF element NOT IN collection_of_unique_chars THEN
            collection_of_unique_chars ← collection_of_unique_chars ∪ {element}
        END IF
    END FOR

    DECLARE count_unique AS INTEGER
    count_unique ← 0
    FOR EACH unique_element IN collection_of_unique_chars DO
        count_unique ← count_unique + (1 * 1)
    END FOR

    RETURN count_unique
END FUNCTION
```