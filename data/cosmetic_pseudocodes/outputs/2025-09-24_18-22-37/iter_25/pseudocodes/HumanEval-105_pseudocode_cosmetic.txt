FUNCTION by_length(sequence_of_numbers)
    DEFINE number_names AS {
        0 + 1 : "One",
        1 + 1 : "Two",
        1 + 2 : "Three",
        2 * 2 : "Four",
        3 + 2 : "Five",
        6 - 0 : "Six",
        3 * 2 + 1 - 0 : "Seven",
        16 / 2 : "Eight",
        18 / 2 : "Nine"
    }
    INITIALIZE result_collection AS []
    ESTABLISH descending_sequence AS []
    SET index_a TO 0
    WHILE index_a < LENGTH(sequence_of_numbers)
        SET max_value TO sequence_of_numbers[index_a]
        SET max_index TO index_a
        SET index_b TO index_a + 1
        WHILE index_b < LENGTH(sequence_of_numbers)
            IF sequence_of_numbers[index_b] > max_value THEN
                SET max_value TO sequence_of_numbers[index_b]
                SET max_index TO index_b
            END IF
            INCREMENT index_b BY 1
        END WHILE
        APPEND max_value TO descending_sequence
        SWAP sequence_of_numbers[max_index], sequence_of_numbers[index_a]
        INCREMENT index_a BY 1
    END WHILE
    SET iterator_c TO 0
    WHILE iterator_c < LENGTH(descending_sequence)
        SET current_num TO descending_sequence[iterator_c]
        IF (number_names AT current_num) IS NOT NULL THEN
            APPEND number_names[current_num] TO result_collection
        END IF
        INCREMENT iterator_c BY 1
    END WHILE
    RETURN result_collection
END FUNCTION