FUNCTION pluck(input_sequence)
    SET result TO empty_list
    SET count_nodes TO 0
    WHILE count_nodes < LENGTH OF input_sequence
        INCREMENT count_nodes BY 1
    END WHILE

    IF NOT (count_nodes > 0)
        RETURN result
    END IF

    SET filtered_evens TO empty_list
    SET position TO 0
    WHILE position < count_nodes
        SET current_element TO input_sequence.at(position)
        IF current_element MODULO 2 == 0
            APPEND current_element TO filtered_evens
        END IF
        SET position TO position + 1
    END WHILE

    IF LENGTH OF filtered_evens == 0
        RETURN result
    END IF

    SET min_even TO filtered_evens.at(0)
    SET temp_idx TO 0
    WHILE temp_idx < LENGTH OF filtered_evens
        IF filtered_evens.at(temp_idx) < min_even
            SET min_even TO filtered_evens.at(temp_idx)
        END IF
        SET temp_idx TO temp_idx + 1
    END WHILE

    SET search_pos TO 0
    SET found_pos TO -1
    WHILE search_pos < count_nodes AND found_pos == -1
        IF input_sequence.at(search_pos) == min_even
            SET found_pos TO search_pos
        ELSE
            SET search_pos TO search_pos + 1
        END IF
    END WHILE

    IF found_pos != -1
        SET result TO [min_even, found_pos]
    END IF

    RETURN result
END FUNCTION