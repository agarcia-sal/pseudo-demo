FUNCTION minPath(matrix, parameter)
	numeral <- LENGTH(matrix)
	threshold <- (numeral * numeral) + 1

	counter <- 0
	WHILE counter < numeral DO
		pivot <- 0
		WHILE pivot < numeral DO
			valueCheck <- (matrix AT counter).at(pivot)
			IF valueCheck = 1 THEN
				adjacentValues <- []

				IF NOT (counter = 0) THEN
					previousRowVal <- (matrix AT (counter - 1)).at(pivot)
					adjacentValues APPEND previousRowVal
				END IF

				IF NOT (pivot = 0) THEN
					leftColVal <- (matrix AT counter).at(pivot - 1)
					adjacentValues APPEND leftColVal
				END IF

				limitRow <- numeral - 1
				IF NOT (counter = limitRow) THEN
					nextRowVal <- (matrix AT (counter + 1)).at(pivot)
					adjacentValues APPEND nextRowVal
				END IF

				limitCol <- numeral - 1
				IF NOT (pivot = limitCol) THEN
					nextColVal <- (matrix AT counter).at(pivot + 1)
					adjacentValues APPEND nextColVal
				END IF

				minVal <- adjacentValues AT 0
				indexer <- 1
				WHILE indexer < LENGTH(adjacentValues) DO
					currentComparand <- adjacentValues AT indexer
					IF currentComparand < minVal THEN
						minVal <- currentComparand
					END IF
					indexer <- indexer + 1
				END WHILE

				threshold <- minVal
			END IF
			pivot <- pivot + 1
		END WHILE
		counter <- counter + 1
	END WHILE

	resultSequence <- []
	positionCounter <- 0
	REPEAT
		exitEarly <- (positionCounter = parameter)
		IF exitEarly THEN
			BREAK
		END IF

		remainderValue <- positionCounter MOD 2
		IF remainderValue = 0 THEN
			resultSequence APPEND 1
		ELSE
			resultSequence APPEND threshold
		END IF

		positionCounter <- positionCounter + 1
	UNTIL FALSE

	RETURN resultSequence
END FUNCTION