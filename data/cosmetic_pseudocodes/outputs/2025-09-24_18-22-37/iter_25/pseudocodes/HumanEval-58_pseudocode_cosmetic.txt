```
FUNCTION common(sequenceX, sequenceY)
    DECLARE intersectionAccumulator AS empty set

    DECLARE indexOuter AS 0
    WHILE indexOuter < LENGTH(sequenceX)
        DECLARE currentOuterElement AS sequenceX.at(indexOuter)

        DECLARE indexInner AS 0
        WHILE indexInner < LENGTH(sequenceY)
            DECLARE currentInnerElement AS sequenceY.at(indexInner)

            IF NOT (currentOuterElement != currentInnerElement) THEN
                intersectionAccumulator.ADD(currentOuterElement)
            ENDIF

            SET indexInner TO indexInner + 1
        ENDWHILE

        SET indexOuter TO indexOuter + 1
    ENDWHILE

    DECLARE sortedResult AS LIST(from intersectionAccumulator)
    sortedResult.SORT()

    RETURN sortedResult
END FUNCTION
```