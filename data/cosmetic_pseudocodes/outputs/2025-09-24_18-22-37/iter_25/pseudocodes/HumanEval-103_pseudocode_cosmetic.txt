FUNCTION rounded_avg(alpha, beta)
	sum_container ← 0
	count_measure ← (beta - alpha) + 1
	index_pointer ← alpha

	WHILE TRUE DO
		IF index_pointer > beta THEN
			BREAK
		END IF

		sum_container ← sum_container + index_pointer
		index_pointer ← index_pointer + 1
	END WHILE

	IF beta < alpha
		RETURN -1
	END IF

	average_calc ← sum_container / count_measure

	temp_var1 ← average_calc - FLOOR(average_calc)
	temp_var2 ← 0
	IF temp_var1 >= 0.5 THEN
		temp_var2 ← CEIL(average_calc)
	ELSE
		temp_var2 ← FLOOR(average_calc)
	END IF

	binary_string ← ""
	number_to_convert ← temp_var2
	IF number_to_convert = 0 THEN
		binary_string ← "0"
	ELSE
		buffer_list ← []
		WHILE number_to_convert ≠ 0
			temp_digit ← number_to_convert MOD 2
			buffer_list.INSERT_AT_FRONT(CONVERT_TO_STRING(temp_digit))
			number_to_convert ← (number_to_convert - temp_digit) / 2
		END WHILE

		FOR each element IN buffer_list
			binary_string ← binary_string + element
		END FOR
	END IF

	RETURN binary_string
END FUNCTION