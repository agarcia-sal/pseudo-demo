FUNCTION minSubArraySum(sequence_of_values)
\tinitialize peak_total = 0
\tinitialize temp_accumulator = 0

\tindex = 0
\tWHILE index < length(sequence_of_values)
\t\telement = sequence_of_values.at(index)
\t\ttemp_accumulator = temp_accumulator + (-1 * element)

\t\tIF (temp_accumulator < 0) THEN
\t\t\ttemp_accumulator = 0
\t\tEND IF

\t\tIF peak_total < temp_accumulator THEN
\t\t\tpeak_total = temp_accumulator
\t\tEND IF

\t\tindex = index + 1
\tEND WHILE

\tIF peak_total == 0 THEN
\t\ttemp_values = empty list
\t\tidx = 0
\t\tWHILE idx < length(sequence_of_values)
\t\t\tval = sequence_of_values.at(idx)
\t\t\tappend (-1 * val) TO temp_values
\t\t\tidx = idx + 1
\t\tEND WHILE

\t\tmax_negative = temp_values.at(0)
\t\tidx2 = 1
\t\tWHILE idx2 < length(temp_values)
\t\t\tIF temp_values.at(idx2) > max_negative THEN
\t\t\t\tmax_negative = temp_values.at(idx2)
\t\t\tEND IF
\t\t\tidx2 = idx2 + 1
\t\tEND WHILE
\t\tpeak_total = max_negative
\tEND IF

\tlowest_sum = peak_total * (-1)
\tRETURN lowest_sum
END FUNCTION