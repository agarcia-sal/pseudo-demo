```
FUNCTION split_words(text)
    DECLARE iterator, transformed_string, filtered_characters, counter, ascii_val, char

    FOR char IN text
        CONTINUE
    END FOR

    IF NOT (text CONTAINS ' ')
        IF text CONTAINS ','
            SET transformed_string = EMPTY STRING
            FOR iterator FROM 0 TO LENGTH(text) - 1
                IF text.at(iterator) == ','
                    SET transformed_string = transformed_string + ' '
                ELSE
                    SET transformed_string = transformed_string + text.at(iterator)
                END IF
            END FOR
            RETURN split_string_whitespace(transformed_string)
        ELSE
            SET filtered_characters = EMPTY LIST
            SET counter = 0
            FOR iterator FROM 0 TO LENGTH(text) - 1
                SET char = text.at(iterator)
                SET ascii_val = ASCII_VALUE(char)
                IF char >= 'a' AND char <= 'z'
                    IF ascii_val % 2 == 0
                        ADD char TO filtered_characters
                    END IF
                END IF
            END FOR

            FOR char IN filtered_characters
                SET counter = counter + 1
            END FOR
            RETURN counter
        END IF
    ELSE
        RETURN split_string_whitespace(text)
    END IF

END FUNCTION

FUNCTION split_string_whitespace(input_string)
    DECLARE output_list, word_builder, current_character
    SET output_list = EMPTY LIST
    SET word_builder = EMPTY STRING

    FOR current_character IN input_string
        IF current_character != ' '
            SET word_builder = word_builder + current_character
        ELSE
            IF LENGTH(word_builder) != 0
                APPEND word_builder TO output_list
                SET word_builder = EMPTY STRING
            END IF
        END IF
    END FOR

    IF LENGTH(word_builder) != 0
        APPEND word_builder TO output_list
    END IF

    RETURN output_list
END FUNCTION
```