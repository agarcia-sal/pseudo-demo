```
FUNCTION is_sorted(collection_of_values)
    SET frequency_map TO empty dictionary
    FOR element IN collection_of_values
        IF element NOT IN frequency_map
            SET frequency_map[element] TO 0
        END IF
        SET temp_count TO frequency_map[element]
        SET temp_count TO temp_count + 1
        SET frequency_map[element] TO temp_count
    END FOR

    SET has_excess_duplicates TO False
    SET iterator TO 0
    WHILE iterator < (LENGTH(collection_of_values))
        SET current_item TO collection_of_values.at(iterator)
        IF frequency_map[current_item] > (1 + 1)
            SET has_excess_duplicates TO True
            BREAK
        END IF
        SET iterator TO iterator + 1
    END WHILE

    IF has_excess_duplicates
        RETURN False
    END IF

    SET current_index TO 1
    WHILE current_index < (LENGTH(collection_of_values))
        SET previous_value TO collection_of_values.at(current_index - 1)
        SET current_value TO collection_of_values.at(current_index)
        IF NOT (previous_value <= current_value)
            RETURN False
        END IF
        SET current_index TO current_index + 1
    END WHILE

    RETURN True
END FUNCTION
```