FUNCTION encode(inputText)
	
	LET alteredVowels = "AEIOUaeiou"
	
	LET mappingTable = EMPTY_DICTIONARY
	LET cursor = 0
	
	WHILE cursor < LENGTH(alteredVowels) DO
        LET currentLetter = alteredVowels . at (cursor)
		LET asciiNumber = ASCII_OF(currentLetter)
		LET mappedAscii = asciiNumber + (2 * 1)
		LET mappedCharacter = CHAR_FROM_ASCII(mappedAscii)
		mappingTable[currentLetter] = mappedCharacter
		cursor = cursor + 1
	END WHILE
	
	LET flippedText = EMPTY_STRING
	LET pos = 0
	
	WHILE pos < LENGTH(inputText) DO
		LET currentChar = inputText . at (pos)
		IF currentChar >= "A" AND currentChar <= "Z" THEN
			flippedText = flippedText + CHAR_FROM_ASCII(ASCII_OF(currentChar) + ( "a" ASCII - "A" ASCII ))
		ELSE IF currentChar >= "a" AND currentChar <= "z" THEN
			flippedText = flippedText + CHAR_FROM_ASCII(ASCII_OF(currentChar) - ( "a" ASCII - "A" ASCII ))
		ELSE
			flippedText = flippedText + currentChar
		END IF
		pos = pos + 1
	END WHILE
	
	LET resultString = EMPTY_STRING
	LET indexVar = 0
	WHILE indexVar < LENGTH(flippedText) DO
		LET characterC = flippedText . at(indexVar)
		IF mappingTable HAS KEY characterC THEN
			resultString = resultString + mappingTable[characterC]
		ELSE
			resultString = resultString + characterC
		END IF
		indexVar = indexVar + 1
	END WHILE
	
	RETURN resultString
END FUNCTION