FUNCTION prod_signs(input_list)
  DECLARE idx, neg_total, sign_factor, magnitude_accum, current_val
  neg_total ← 0
  magnitude_accum ← 0
  sign_factor ← 1

  IF ( (0 = LENGTH(input_list)) ) THEN
    RETURN Null
  END IF

  idx ← 0
  WHILE idx < LENGTH(input_list) DO
    current_val ← input_list.at(idx)
    IF current_val = 0 THEN
      sign_factor ← 0
    ELSE IF current_val < 0 THEN
      neg_total ← neg_total + 1
    END IF
    idx ← idx + 1
  END WHILE

  IF NOT (sign_factor = 0) THEN
    sign_factor ← (1 * -1)
    sign_factor ← sign_factor ^ neg_total
  END IF

  idx ← 0
  WHILE idx < LENGTH(input_list) DO
    current_val ← input_list.at(idx)
    IF current_val < 0 THEN
      magnitude_accum ← magnitude_accum + (-1 * current_val)
    ELSE
      magnitude_accum ← magnitude_accum + current_val
    END IF
    idx ← idx + 1
  END WHILE

  RETURN sign_factor * magnitude_accum
END FUNCTION