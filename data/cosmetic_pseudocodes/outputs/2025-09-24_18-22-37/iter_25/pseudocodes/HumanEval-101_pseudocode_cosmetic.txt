```
FUNCTION words_string(input_string)
    SET temp_buffer TO []

    IF NOT (input_string = "")
        SET index_var TO 0
        SET length_limit TO length(input_string)

        WHILE index_var < length_limit
            SET current_char TO input_string.at(index_var)

            IF current_char != ","
                SET temp_char TO current_char
            ELSE
                SET temp_char TO " "
            END IF

            temp_buffer.append(temp_char)
            SET index_var TO index_var + 1
        END WHILE

        SET assembled_string TO ""
        SET pos_tracker TO 0
        SET total_chars TO length(temp_buffer)

        WHILE pos_tracker < total_chars
            SET assembled_string TO assembled_string + temp_buffer.at(pos_tracker)
            SET pos_tracker TO pos_tracker + 1
        END WHILE

        SET result_list TO []
        SET accumulated_word TO ""
        SET char_pos TO 0
        SET string_length TO length(assembled_string)

        WHILE char_pos < string_length
            SET current_char TO assembled_string.at(char_pos)

            IF current_char != " " AND current_char != "\t" AND current_char != "\n"
                SET accumulated_word TO accumulated_word + current_char
            ELSE
                IF accumulated_word != ""
                    result_list.append(accumulated_word)
                    SET accumulated_word TO ""
                END IF
            END IF

            SET char_pos TO char_pos + 1
        END WHILE

        IF accumulated_word != ""
            result_list.append(accumulated_word)
        END IF

        RETURN result_list
    ELSE
        RETURN []
    END IF
END FUNCTION
```