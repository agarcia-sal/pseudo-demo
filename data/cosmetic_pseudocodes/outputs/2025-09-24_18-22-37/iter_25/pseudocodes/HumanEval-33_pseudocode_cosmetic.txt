FUNCTION sort_third(list_input)
  DECLARE copied_seq
  DECLARE divisor
  DECLARE indices_collected
  DECLARE collector
  DECLARE sorted_subset
  DECLARE idx

  copied_seq ← COPY_AS_LIST(list_input)
  divisor ← 3
  indices_collected ← EMPTY_LIST
  collector ← EMPTY_LIST

  idx ← 0
  WHILE idx < LENGTH(copied_seq) DO
    IF MODULO(idx, divisor) = 0 THEN
      APPEND copied_seq AT idx TO collector
      APPEND idx TO indices_collected
    END IF
    idx ← idx + 1
  END WHILE

  sorted_subset ← collector
  FOR i FROM 0 TO LENGTH(sorted_subset) - 2 DO
    FOR j FROM i + 1 TO LENGTH(sorted_subset) - 1 DO
      IF sorted_subset[j] < sorted_subset[i] THEN
        DECLARE temp_val
        temp_val ← sorted_subset[i]
        sorted_subset[i] ← sorted_subset[j]
        sorted_subset[j] ← temp_val
      END IF
    END FOR
  END FOR

  idx ← 0
  WHILE idx < LENGTH(indices_collected) DO
    copied_seq[indices_collected[idx]] ← sorted_subset[idx]
    idx ← idx + 1
  END WHILE

  RETURN copied_seq
END FUNCTION