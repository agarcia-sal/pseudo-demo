FUNCTION is_palindrome(str_param)  
    DECLARE reversed_str AS STRING  
    SET reversed_str TO EMPTY STRING  
    DECLARE idx AS INTEGER  
    SET idx TO LENGTH(str_param) - 1  

    WHILE idx >= 0  
        SET reversed_str TO reversed_str CONCATENATED WITH str_param AT idx  
        DECREMENT idx BY 1  
    END WHILE  

    IF str_param EQUALS reversed_str  
        RETURN TRUE  
    ELSE  
        RETURN FALSE  
    END IF  
END FUNCTION  

FUNCTION make_palindrome(word)  
    DECLARE suffix_start AS INTEGER  
    SET suffix_start TO 0  
    DECLARE is_substring_palindrome AS BOOLEAN  
    DECLARE substring_val AS STRING  

    IF LENGTH(word) EQUALS 0 THEN  
        RETURN ""  
    END IF  

    DECLARE continue_loop AS BOOLEAN  
    SET continue_loop TO TRUE  
    WHILE continue_loop  
        SET substring_val TO ""  
        DECLARE pos AS INTEGER  
        SET pos TO suffix_start  

        WHILE pos < LENGTH(word)  
            SET substring_val TO substring_val CONCATENATED WITH word AT pos  
            INCREMENT pos BY 1  
        END WHILE  

        SET is_substring_palindrome TO is_palindrome(substring_val)  
        IF is_substring_palindrome THEN  
            SET continue_loop TO FALSE  
        ELSE  
            INCREMENT suffix_start BY 1  
        END IF  
    END WHILE  

    DECLARE prefix_substring AS STRING  
    SET prefix_substring TO ""  
    DECLARE index AS INTEGER  
    SET index TO 0  

    WHILE index < suffix_start  
        SET prefix_substring TO prefix_substring CONCATENATED WITH word AT index  
        INCREMENT index BY 1  
    END WHILE  

    DECLARE reversed_prefix AS STRING  
    SET reversed_prefix TO ""  
    DECLARE rev_index AS INTEGER  
    SET rev_index TO LENGTH(prefix_substring) - 1  

    WHILE rev_index >= 0  
        SET reversed_prefix TO reversed_prefix CONCATENATED WITH prefix_substring AT rev_index  
        DECREMENT rev_index BY 1  
    END WHILE  

    DECLARE result_palindrome AS STRING  
    SET result_palindrome TO word CONCATENATED WITH reversed_prefix  

    RETURN result_palindrome  
END FUNCTION