FUNCTION words_string(parameter_string)  
    DECLARE auxiliary_characters AS empty list  
    DECLARE pointer_index AS 0  
    DECLARE element_char AS null  
    DECLARE reconstructed_string AS ""  
    DECLARE result_words AS empty list  

    IF parameter_string EQUALS "" THEN  
        SET result_words TO empty list  
    ELSE  
        SET pointer_index TO 0  
        WHILE pointer_index < LENGTH(parameter_string) DO  
            SET element_char TO parameter_string.at(pointer_index)  
            IF NOT element_char NOT_EQUALS "," THEN  
                APPEND " " TO auxiliary_characters  
            ELSE  
                APPEND element_char TO auxiliary_characters  
            END IF  
            SET pointer_index TO pointer_index + 1  
        END WHILE  

        SET reconstructed_string TO ""  
        DECLARE iterator_pos AS 0  
        WHILE iterator_pos < LENGTH(auxiliary_characters) DO  
            SET reconstructed_string TO reconstructed_string + auxiliary_characters.at(iterator_pos)  
            SET iterator_pos TO iterator_pos + 1  
        END WHILE  

        SET result_words TO SPLIT reconstructed_string BY " "  
    END IF  

    RETURN result_words  
END FUNCTION