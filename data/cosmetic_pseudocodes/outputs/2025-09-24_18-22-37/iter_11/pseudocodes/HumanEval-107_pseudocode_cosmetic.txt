FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        SET str_num TO CONVERT number TO STRING
        SET rev_str TO EMPTY STRING
        SET rev_index TO LENGTH(str_num) - 1
        WHILE rev_index >= 0
            SET rev_str TO CONCATENATE rev_str AND str_num.at(rev_index)
            SET rev_index TO rev_index - 1
        END WHILE
        SET result TO (str_num == rev_str)
        RETURN result
    END FUNCTION

    SET count_even_palindrome TO 0
    SET count_odd_palindrome TO 0

    SET current_val TO 1
    WHILE current_val <= n
        SET remainder TO current_val % 2
        SET palindrome_check TO is_palindrome(current_val)
        IF palindrome_check
            SWITCH remainder
                CASE 1:
                    SET count_odd_palindrome TO count_odd_palindrome + 1
                    BREAK
                CASE 0:
                    SET count_even_palindrome TO count_even_palindrome + 1
                    BREAK
            END SWITCH
        END IF
        SET current_val TO current_val + 1
    END WHILE

    SET result_tuple TO (count_even_palindrome, count_odd_palindrome)
    RETURN result_tuple
END FUNCTION