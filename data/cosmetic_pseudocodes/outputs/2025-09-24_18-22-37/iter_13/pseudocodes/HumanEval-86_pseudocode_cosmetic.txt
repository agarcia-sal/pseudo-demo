FUNCTION anti_shuffle(original_text)  
    SET words_collection TO SPLIT original_text BY " "  
    SET reordered_words TO NEW LIST  
    SET idx TO 0  
    WHILE idx LESS THAN LENGTH OF words_collection  
        SET current_word TO words_collection.at(idx)  
        SET chars_array TO CONVERT current_word INTO ARRAY OF CHARACTERS  
        SET sorted_chars TO NEW LIST  
        REPEAT  
            SET min_char TO 127  
            SET min_index TO -1  
            SET pos TO 0  
            WHILE pos LESS THAN LENGTH OF chars_array  
                IF chars_array.at(pos) LESS THAN min_char THEN  
                    SET min_char TO chars_array.at(pos)  
                    SET min_index TO pos  
                END IF  
                SET pos TO pos + 1  
            END WHILE  
            IF min_index IS NOT EQUAL TO -1 THEN  
                ADD min_char TO sorted_chars  
                REMOVE chars_array AT min_index  
            END IF  
        UNTIL LENGTH OF chars_array EQUALS 0  
        SET assembled_word TO EMPTY STRING  
        SET letter_pos TO 0  
        WHILE letter_pos LESS THAN LENGTH OF sorted_chars  
            SET assembled_word TO assembled_word + sorted_chars.at(letter_pos)  
            SET letter_pos TO letter_pos + 1  
        END WHILE  
        ADD assembled_word TO reordered_words  
        SET idx TO idx + 1  
    END WHILE  
    SET final_output TO ""  
    SET concat_index TO 0  
    WHILE concat_index LESS THAN LENGTH OF reordered_words  
        SET final_output TO final_output + reordered_words.at(concat_index)  
        IF concat_index NOT EQUAL TO LENGTH OF reordered_words MINUS 1 THEN  
            SET final_output TO final_output + " "  
        END IF  
        SET concat_index TO concat_index + 1  
    END WHILE  
    RETURN final_output  
END FUNCTION