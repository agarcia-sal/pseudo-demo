FUNCTION pluck(collection_of_elements)
  SET count_of_elements TO LENGTH OF collection_of_elements
  IF NOT (count_of_elements GREATER THAN 0) THEN
    RETURN empty_list
  END IF

  SET filtered_evens TO EMPTY LIST
  SET position TO 0
  WHILE position LESS THAN count_of_elements DO
    SET element TO collection_of_elements.at(position)
    SET remainder TO element MOD 2
    IF remainder EQUALS 0 THEN
      APPEND element TO filtered_evens
    END IF
    SET position TO position PLUS 1
  END WHILE

  IF NOT (LENGTH OF filtered_evens GREATER THAN 0) THEN
    RETURN empty_list
  END IF

  SET minimal_value TO filtered_evens.at(0)
  SET iter_index TO 1
  WHILE iter_index LESS THAN LENGTH OF filtered_evens DO
    IF filtered_evens.at(iter_index) LESS THAN minimal_value THEN
      SET minimal_value TO filtered_evens.at(iter_index)
    END IF
    SET iter_index TO iter_index PLUS 1
  END WHILE

  SET idx TO 0
  SET found_index TO -1
  REPEAT 
    IF collection_of_elements.at(idx) EQUALS minimal_value THEN
      SET found_index TO idx
      BREAK
    END IF
    SET idx TO idx PLUS 1
  UNTIL found_index NOT EQUAL TO -1

  RETURN [minimal_value, found_index]
END FUNCTION