FUNCTION fizz_buzz(integer_n)  
    INITIALIZE container_numbers AS an empty list  
    SET iterator_j TO 0  
    WHILE iterator_j IS LESS THAN integer_n DO  
        SET remainder_eleven TO iterator_j MOD 0xB  
        SET remainder_thirteen TO iterator_j MOD 0xD  
        IF (remainder_eleven = 0) OR (remainder_thirteen = 0) THEN  
            ADD iterator_j TO container_numbers AT THE END  
        END IF  
        INCREMENT iterator_j BY 1  
    END WHILE  

    INITIALIZE assembled_str AS an empty string  
    SET index_k TO 0  
    WHILE index_k IS STRICTLY LESS THAN LENGTH OF container_numbers DO  
        SET num_element TO container_numbers.at(index_k)  
        SET str_num TO STRING(num_element)  
        SET assembled_str TO assembled_str CONCATENATED WITH str_num  
        INCREMENT index_k BY 1  
    END WHILE  

    SET total_sevens TO 0  
    SET position_m TO 0  
    REPEAT  
        SET current_char TO assembled_str.at(position_m)  
        IF current_char = '7' THEN  
            SET total_sevens TO total_sevens PLUS 1  
        END IF  
        INCREMENT position_m BY 1  
    UNTIL position_m IS GREATER THAN OR EQUAL TO LENGTH OF assembled_str  

    RETURN total_sevens  
END FUNCTION