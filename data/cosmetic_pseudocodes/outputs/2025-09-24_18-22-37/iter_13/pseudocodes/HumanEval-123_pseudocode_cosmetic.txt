FUNCTION get_odd_collatz(x)
    DECLARE result_list AS list
    DECLARE temp_num AS integer
    temp_num ← x

    IF temp_num REMAINS 0 WHEN DIVIDED BY 2 THEN
        result_list ← create empty list
    ELSE
        DECLARE singleton_list AS list
        singleton_list ← create new list with first element temp_num
        result_list ← singleton_list
    END IF

    WHILE temp_num IS GREATER THAN 1 DO
        DECLARE is_even AS boolean
        is_even ← (temp_num MOD 2) EQUALS 0

        IF is_even THEN
            temp_num ← temp_num DIV 2
        ELSE
            DECLARE multiplied AS integer
            DECLARE incremented AS integer
            multiplied ← temp_num TIMES 3
            incremented ← multiplied PLUS 1
            temp_num ← incremented
        END IF

        DECLARE is_odd AS boolean
        is_odd ← (temp_num MOD 2) EQUALS 1

        IF is_odd THEN
            DECLARE temp_int AS integer
            temp_int ← CAST temp_num TO integer
            APPEND temp_int TO result_list
        END IF
    END WHILE

    DECLARE sorted_result AS list
    sorted_result ← SORT result_list IN ascending order
    RETURN sorted_result
END FUNCTION