```
FUNCTION sort_third(list_input)
    LET temp_list BE []
    FOR idx FROM 0 TO LENGTH(list_input) - 1
        APPEND list_input[idx] TO temp_list
    END FOR

    LET collected_vals BE []
    LET pos BE 0
    WHILE pos < LENGTH(temp_list)
        IF (pos MOD 3) = 0 THEN
            APPEND temp_list[pos] TO collected_vals
        END IF
        SET pos TO pos + 1
    END WHILE

    LET sorted_collected BE SORT(collected_vals) ASCENDING

    PROCEDURE replace_vals(i, vals_index)
        IF i >= LENGTH(temp_list)
            RETURN
        END IF
        IF (i MOD 3) = 0 THEN
            SET temp_list[i] TO sorted_collected[vals_index]
            CALL replace_vals(i + 1, vals_index + 1)
        ELSE
            CALL replace_vals(i + 1, vals_index)
        END IF
    END PROCEDURE

    CALL replace_vals(0, 0)
    RETURN temp_list
END FUNCTION
```