```
FUNCTION select_words(string_s, natural_number_n)
    result_collection := []
    word_list := []
    idx := 0
    length_s := LENGTH(string_s)
    WHILE idx < length_s
        current_word := ""
        WHILE idx < length_s AND string_s[idx] != ' '
            current_word := current_word + string_s[idx]
            idx := idx + 1
        END WHILE
        IF current_word != ""
            APPEND current_word TO word_list
        END IF
        idx := idx + 1
    END WHILE

    PROCESS_WORDS(0, word_list, natural_number_n, result_collection)
    RETURN result_collection
END FUNCTION

FUNCTION PROCESS_WORDS(pos, words_arr, target_count, acc)
    IF pos >= LENGTH(words_arr)
        RETURN
    END IF

    consonants := COUNT_CONSONANTS(words_arr[pos], 0, 0)
    IF consonants == target_count
        APPEND words_arr[pos] TO acc
    END IF

    PROCESS_WORDS(pos + 1, words_arr, target_count, acc)
END FUNCTION

FUNCTION COUNT_CONSONANTS(text, idx, count)
    IF idx >= LENGTH(text)
        RETURN count
    END IF

    current_char := LOWER(text[idx])
    vowels := {"a", "e", "i", "o", "u"}
    delta := 0
    IF current_char NOT IN vowels
        delta := 1
    END IF

    RETURN COUNT_CONSONANTS(text, idx + 1, count + delta)
END FUNCTION
```