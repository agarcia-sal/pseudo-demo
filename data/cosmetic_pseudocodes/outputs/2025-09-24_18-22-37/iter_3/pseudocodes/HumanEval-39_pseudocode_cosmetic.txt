```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF integer_p <= 1 THEN RETURN False
        SET limit TO INTEGER_PART_OF(SQUARE_ROOT(integer_p)) + 1
        SET divisor TO 2
        REPEAT
            IF divisor >= limit OR divisor >= integer_p THEN
                BREAK
            ENDIF
            IF integer_p MOD divisor == 0 THEN
                RETURN False
            ENDIF
            divisor = divisor + 1
        UNTIL FALSE
        RETURN True
    END FUNCTION

    SET list_fibonacci TO [0, 1]

    FUNCTION recurse()
        SET next_val TO list_fibonacci[LENGTH(list_fibonacci) - 1] + list_fibonacci[LENGTH(list_fibonacci) - 2]
        APPEND next_val TO list_fibonacci
        IF is_prime(next_val) THEN
            integer_n = integer_n - 1
        ENDIF
        IF integer_n == 0 THEN
            RETURN next_val
        ELSE
            RETURN recurse()
        ENDIF
    END FUNCTION

    RETURN recurse()
END FUNCTION
```