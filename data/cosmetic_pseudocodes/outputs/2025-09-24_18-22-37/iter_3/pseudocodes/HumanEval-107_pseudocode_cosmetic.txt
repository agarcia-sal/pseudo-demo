```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        LET str_num BE TO_STRING(number)
        LET rev_str_num BE EMPTY_STRING
        LET idx BE LENGTH(str_num) - 1
        WHILE idx >= 0
            rev_str_num = rev_str_num + str_num[idx]
            idx = idx - 1
        END WHILE
        IF str_num = rev_str_num THEN
            RETURN TRUE
        ELSE
            RETURN FALSE
        END IF
    END FUNCTION

    LET count_evens BE 0
    LET count_odds BE 0

    LET current BE 1
    WHILE current <= n
        LET mod_result BE current - ((current / 2) * 2)
        IF mod_result != 0 THEN
            IF is_palindrome(current) THEN
                count_odds = count_odds + 1
            END IF
        ELSE
            IF is_palindrome(current) THEN
                count_evens = count_evens + 1
            END IF
        END IF
        current = current + 1
    END WHILE

    RETURN (count_evens, count_odds)
END FUNCTION
```