```
FUNCTION minSubArraySum(list_of_integers)
    LET idx = 0
    LET tempSum = 0
    LET maxSumFound = 0
    WHILE idx < LENGTH(list_of_integers)
        tempSum = tempSum + (0 - list_of_integers[idx])
        IF NOT (tempSum >= 0)
            tempSum = 0
        END IF
        IF tempSum > maxSumFound
            maxSumFound = tempSum
        END IF
        idx = idx + 1
    END WHILE
    
    IF maxSumFound = 0 THEN
        LET negElements = []
        LET i = 0
        WHILE i < LENGTH(list_of_integers)
            APPEND (0 - list_of_integers[i]) TO negElements
            i = i + 1
        END WHILE
        LET maxNum = negElements[0]
        LET j = 1
        WHILE j < LENGTH(negElements)
            IF negElements[j] > maxNum
                maxNum = negElements[j]
            END IF
            j = j + 1
        END WHILE
        maxSumFound = maxNum
    END IF
    
    LET result = 0 - maxSumFound
    RETURN result
END FUNCTION
```