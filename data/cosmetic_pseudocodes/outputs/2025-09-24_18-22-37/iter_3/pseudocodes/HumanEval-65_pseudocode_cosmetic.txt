```
FUNCTION circular_shift(integer_x, integer_shift)
    LET str_form = "" 
    LET idx = 0
    WHILE idx < LENGTH(TO_STRING(integer_x))
        str_form = str_form + CHAR_AT(TO_STRING(integer_x), idx)
        idx = idx + 1
    END WHILE

    IF NOT (integer_shift <= LENGTH(str_form))
        LET reversed_str = ""
        LET rev_idx = LENGTH(str_form) - 1
        WHILE rev_idx >= 0
            reversed_str = reversed_str + CHAR_AT(str_form, rev_idx)
            rev_idx = rev_idx - 1
        END WHILE
        RETURN reversed_str
    ELSE
        LET n = LENGTH(str_form)
        LET first_part = ""
        LET second_part = ""
        LET i = n - integer_shift
        WHILE i < n
            first_part = first_part + CHAR_AT(str_form, i)
            i = i + 1
        END WHILE
        LET j = 0
        WHILE j < n - integer_shift
            second_part = second_part + CHAR_AT(str_form, j)
            j = j + 1
        END WHILE
        RETURN first_part + second_part
    END IF
END FUNCTION
```