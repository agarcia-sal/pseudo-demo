```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        sign_multiplier ← 1
        WHILE integer_value < 0 DO
            integer_value ← -integer_value
            sign_multiplier ← -1
        END WHILE

        digits_str ← STR(integer_value)
        digits_array ← []
        index ← 0

        REPEAT
            IF index >= LENGTH(digits_str) THEN
                BREAK
            END IF
            digits_array ← digits_array + [INT(digits_str[index])]
            index ← index + 1
        UNTIL FALSE

        digits_array[0] ← digits_array[0] * sign_multiplier

        total ← 0
        pos ← 0
        REPEAT
            IF pos >= LENGTH(digits_array) THEN
                BREAK
            END IF
            total ← total + digits_array[pos]
            pos ← pos + 1
        UNTIL FALSE

        RETURN total
    END FUNCTION

    FUNCTION helper(idx, acc)
        IF idx = LENGTH(array_of_integers) THEN
            RETURN acc
        ELSE
            val ← digits_sum(array_of_integers[idx])
            IF val > 0 THEN
                RETURN helper(idx + 1, acc + 1)
            ELSE
                RETURN helper(idx + 1, acc)
            END IF
        END IF
    END FUNCTION

    RETURN helper(0, 0)
END FUNCTION
```