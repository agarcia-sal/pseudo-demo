```
FUNCTION prod_signs(array_of_integers)
    IF LENGTH(array_of_integers) = 0 THEN
        RETURN None
    ELSE
        FOUND_ZERO := False
        INDEX := 0
        WHILE INDEX < LENGTH(array_of_integers) AND NOT FOUND_ZERO DO
            IF array_of_integers[INDEX] = 0 THEN
                FOUND_ZERO := True
            END IF
            INDEX := INDEX + 1
        END WHILE
        IF FOUND_ZERO THEN
            sign_product := 0
        ELSE
            FUNCTION count_negatives(list_integers, pos)
                IF pos = LENGTH(list_integers) THEN
                    RETURN 0
                ELSE
                    rest := count_negatives(list_integers, pos + 1)
                    IF list_integers[pos] < 0 THEN
                        RETURN 1 + rest
                    ELSE
                        RETURN rest
                    END IF
                END IF
            END FUNCTION
            negative_count := count_negatives(array_of_integers, 0)
            sign_product := 1
            FOR i FROM 1 TO negative_count DO
                sign_product := sign_product * (-1)
            END FOR
        END IF
    END IF
    total_magnitude := 0
    i := 0
    WHILE i < LENGTH(array_of_integers) DO
        value := array_of_integers[i]
        IF value < 0 THEN
            total_magnitude := total_magnitude + (-value)
        ELSE
            total_magnitude := total_magnitude + value
        END IF
        i := i + 1
    END WHILE
    RETURN sign_product * total_magnitude
END FUNCTION
```