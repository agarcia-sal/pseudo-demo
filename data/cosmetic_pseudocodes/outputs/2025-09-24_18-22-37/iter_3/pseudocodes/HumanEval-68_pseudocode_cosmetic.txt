```
FUNCTION pluck(array_of_nodes)
    DEFINE FUNCTION find_even_elements(lst, pos, acc)
        IF pos EQUALS LENGTH OF lst THEN
            RETURN acc
        ELSE
            IF lst[pos] MOD 2 EQUALS 0 THEN
                RETURN find_even_elements(lst, pos + 1, acc + [lst[pos]])
            ELSE
                RETURN find_even_elements(lst, pos + 1, acc)
            END IF
        END IF
    END FUNCTION

    SET evens TO find_even_elements(array_of_nodes, 0, [])

    IF evens IS EMPTY THEN
        RETURN []
    END IF

    DEFINE FUNCTION min_value(values, idx, current_min, current_min_idx)
        IF idx EQUALS LENGTH OF values THEN
            RETURN current_min, current_min_idx
        ELSE
            IF values[idx] < current_min THEN
                RETURN min_value(values, idx + 1, values[idx], idx)
            ELSE
                RETURN min_value(values, idx + 1, current_min, current_min_idx)
            END IF
        END IF
    END FUNCTION

    SET min_even, _ TO min_value(evens, 0, evens[0], 0)

    DEFINE FUNCTION find_index(lst, val, i)
        IF i EQUALS LENGTH OF lst THEN
            RETURN -1
        ELSE IF lst[i] EQUALS val THEN
            RETURN i
        ELSE
            RETURN find_index(lst, val, i + 1)
        END IF
    END FUNCTION

    SET min_even_position TO find_index(array_of_nodes, min_even, 0)

    RETURN [min_even, min_even_position]
END FUNCTION
```