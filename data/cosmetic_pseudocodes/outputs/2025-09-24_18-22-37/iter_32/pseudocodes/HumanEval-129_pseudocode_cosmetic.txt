```
FUNCTION minPath(grid, k)
   LET lengthVar = LENGTH(grid)
   LET upperBound = (lengthVar * lengthVar) + 1
   FOR indexX = 0 TO (lengthVar - 1) 
       LET indexY = 0
       WHILE indexY <= (lengthVar - 1)
           IF grid[indexX][indexY] == 1 THEN
               LET neighbors = []
               
               IF NOT (indexX == 0) THEN
                   neighbors.ADD(grid[indexX - 1][indexY])
               END IF
               
               IF indexY != 0 THEN
                   neighbors.ADD(grid[indexX][indexY - 1])
               END IF
               
               IF (indexX != (lengthVar - 1)) THEN 
                   neighbors.ADD(grid[indexX + 1][indexY])
               END IF
               
               IF NOT (indexY == (lengthVar - 1)) THEN
                   neighbors.ADD(grid[indexX][indexY + 1])
               END IF
               
               upperBound = neighbors.MIN()
           END IF
           indexY = indexY + 1
       END WHILE
   END FOR
   
   LET results = []
   LET counter = 0
   WHILE counter < (k)
       SWITCH (counter MOD 2)
           CASE 0:
               results.ADD(1)
           CASE 1:
               results.ADD(upperBound)
       END SWITCH
       counter = counter + 1
   END WHILE
   
   RETURN results
END FUNCTION
```