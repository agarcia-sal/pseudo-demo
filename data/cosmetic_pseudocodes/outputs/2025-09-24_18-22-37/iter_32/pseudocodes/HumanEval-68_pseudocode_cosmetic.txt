```
FUNCTION pluck(array_of_nodes)
    SET result TO empty_list

    IF NOT (LENGTH(array_of_nodes) > 0)
        RETURN result
    END IF

    SET filtered_evens TO empty_list
    SET pos TO 0

    WHILE pos < LENGTH(array_of_nodes)
        SET current_element TO array_of_nodes.at(pos)
        IF (current_element % 2) = 0
            APPEND current_element TO filtered_evens
        END IF
        SET pos TO pos + 1
    END WHILE

    IF NOT (LENGTH(filtered_evens) > 0)
        RETURN result
    END IF

    SET min_even_value TO filtered_evens.at(0)
    SET idx_in_filtered TO 0
    SET scan_pos TO 1

    WHILE scan_pos < LENGTH(filtered_evens)
        IF filtered_evens.at(scan_pos) < min_even_value
            SET min_even_value TO filtered_evens.at(scan_pos)
            SET idx_in_filtered TO scan_pos
        END IF
        SET scan_pos TO scan_pos + 1
    END WHILE

    SET locate_pos TO 0
    SET found_pos TO -1

    WHILE locate_pos < LENGTH(array_of_nodes)
        IF array_of_nodes.at(locate_pos) = min_even_value
            SET found_pos TO locate_pos
            BREAK
        END IF
        SET locate_pos TO locate_pos + 1
    END WHILE

    IF found_pos >= 0
        SET result TO [min_even_value, found_pos]
    END IF

    RETURN result
END FUNCTION
```