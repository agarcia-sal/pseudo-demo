```
FUNCTION split_words(text)
    DECLARE flag1 AS BOOLEAN
    DECLARE flag2 AS BOOLEAN
    DECLARE tempText AS STRING
    DECLARE chars AS LIST OF CHARACTERS
    DECLARE tally AS INTEGER
    DECLARE ch AS CHARACTER
    DECLARE idx AS INTEGER
    DECLARE totalChars AS INTEGER
    DECLARE asciiVal AS INTEGER
    DECLARE modResult AS INTEGER
    DECLARE lowerChars AS LIST OF CHARACTERS

    flag1 ← FALSE
    flag2 ← FALSE

    idx ← 0
    WHILE idx < LENGTH(text) AND NOT flag1
        IF text[idx] = ' ' THEN
            flag1 ← TRUE
        END IF
        idx ← idx + 1
    END WHILE

    IF flag1 THEN
        RETURN SPLIT(text, WHITESPACE)
    ELSE
        idx ← 0
        WHILE idx < LENGTH(text) AND NOT flag2
            IF text[idx] = ',' THEN
                flag2 ← TRUE
            END IF
            idx ← idx + 1
        END WHILE

        IF flag2 THEN
            tempText ← ""
            totalChars ← LENGTH(text)
            idx ← 0
            WHILE idx < totalChars
                IF text[idx] = ',' THEN
                    tempText ← tempText + ' '
                ELSE
                    tempText ← tempText + text[idx]
                END IF
                idx ← idx + 1
            END WHILE
            RETURN SPLIT(tempText, WHITESPACE)
        ELSE
            chars ← []
            FOR idx IN 0 TO LENGTH(text) - 1
                ch ← text[idx]
                asciiVal ← ORDINAL(ch)
                IF ch >= 'a' AND ch <= 'z' THEN
                    modResult ← asciiVal MOD 2
                    IF modResult = 0 THEN
                        APPEND ch TO chars
                    END IF
                END IF
            END FOR
            tally ← LENGTH(chars)
            RETURN tally
        END IF
    END IF
END FUNCTION
```