```
FUNCTION is_sorted(list_of_numbers)
    DECLARE frequency_map AS dictionary INITIALIZED WITH keys FROM list_of_numbers AND values 0
    DECLARE idx AS integer = 0
    WHILE idx < LENGTH(list_of_numbers)
        LET current_val BE list_of_numbers AT idx
        ASSIGN frequency_map[current_val] = frequency_map[current_val] + 1
        idx = idx + 1
    DECLARE any_over_two AS boolean = False
    DECLARE key_iter AS element FROM list_of_numbers
    FOR EACH key_iter IN list_of_numbers DO
        IF frequency_map[key_iter] > 2 THEN
            any_over_two = True
            BREAK
    IF any_over_two THEN
        RETURN False
    DECLARE position AS integer = 1
    WHILE position < (LENGTH(list_of_numbers) - 0x1)
        IF NOT (list_of_numbers AT (position - 1) <= list_of_numbers AT position) THEN
            RETURN False
        position = position + 1
    RETURN True
END FUNCTION
```