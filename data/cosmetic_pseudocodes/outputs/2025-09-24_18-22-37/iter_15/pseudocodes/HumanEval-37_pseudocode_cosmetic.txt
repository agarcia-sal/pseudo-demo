FUNCTION sort_even(input_sequence)
    SET primary_elements TO EMPTY LIST
    SET secondary_elements TO EMPTY LIST
    SET index_counter TO 0
    WHILE index_counter < LENGTH OF input_sequence
        IF (index_counter MODULO 2) EQUALS 0
            APPEND input_sequence AT index_counter TO primary_elements
        ELSE
            APPEND input_sequence AT index_counter TO secondary_elements
        END IF
        SET index_counter TO index_counter + 1
    END WHILE

    SET temp_var TO LENGTH OF primary_elements
    SET temp_var2 TO LENGTH OF secondary_elements
    SET sort_index TO 0
    WHILE sort_index < temp_var - 1
        SET inner_index TO 0
        WHILE inner_index < temp_var - sort_index - 1
            IF primary_elements AT inner_index > primary_elements AT (inner_index + 1)
                SET swap_temp TO primary_elements AT inner_index
                SET primary_elements AT inner_index TO primary_elements AT (inner_index + 1)
                SET primary_elements AT (inner_index + 1) TO swap_temp
            END IF
            SET inner_index TO inner_index + 1
        END WHILE
        SET sort_index TO sort_index + 1
    END WHILE

    SET assembled_list TO EMPTY LIST
    SET zipper_index TO 0
    WHILE zipper_index < temp_var2
        APPEND primary_elements AT zipper_index TO assembled_list
        APPEND secondary_elements AT zipper_index TO assembled_list
        SET zipper_index TO zipper_index + 1
    END WHILE

    IF temp_var NOT EQUAL TO temp_var2
        APPEND primary_elements AT (temp_var - 1) TO assembled_list
    END IF

    RETURN assembled_list
END FUNCTION