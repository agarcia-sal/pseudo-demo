FUNCTION find_closest_elements(parameter_alpha)
    
    DECLARE variable_gamma AS None
    DECLARE variable_beta AS None
    DECLARE iterator_i AS 0

    WHILE iterator_i LESS THAN LENGTH OF parameter_alpha DO
        
        DECLARE iterator_j AS 0

        WHILE iterator_j LESS THAN LENGTH OF parameter_alpha DO

            DECLARE condition_one AS (iterator_i IS NOT EQUAL TO iterator_j)

            IF condition_one THEN

                DECLARE temp_diff AS parameter_alpha.at(iterator_i) MINUS parameter_alpha.at(iterator_j)
                DECLARE temp_abs AS (IF temp_diff LESS THAN 0 THEN 0 MINUS temp_diff ELSE temp_diff)

                IF variable_beta IS None THEN

                    variable_beta = temp_abs
                    DECLARE temp_pair AS (parameter_alpha.at(iterator_i), parameter_alpha.at(iterator_j))
                    variable_gamma = (IF temp_pair.at(0) LESS THAN OR EQUAL TO temp_pair.at(1) THEN temp_pair ELSE (temp_pair.at(1), temp_pair.at(0)))

                ELSE

                    IF temp_abs LESS THAN variable_beta THEN

                        variable_beta = temp_abs
                        DECLARE temp_pair_alt AS (parameter_alpha.at(iterator_i), parameter_alpha.at(iterator_j))
                        variable_gamma = (IF temp_pair_alt.at(0) LESS THAN OR EQUAL TO temp_pair_alt.at(1) THEN temp_pair_alt ELSE (temp_pair_alt.at(1), temp_pair_alt.at(0)))

                    END IF

                END IF

            END IF
            
            iterator_j = iterator_j + 1
        END WHILE

        iterator_i = iterator_i + 1
    END WHILE

    RETURN variable_gamma

END FUNCTION