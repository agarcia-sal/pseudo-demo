FUNCTION maximum(delta_sequence, omega_limit)
  DECLARE epsilon_result AS LIST OF INTEGERS
  IF omega_limit not equal to 0 THEN
    DECLARE theta_sorted AS LIST OF INTEGERS
    SET theta_sorted TO EMPTY LIST
    DECLARE lambda_index AS INTEGER
    SET lambda_index TO 0
    WHILE lambda_index < LENGTH(delta_sequence) DO
      APPEND delta_sequence.at(lambda_index) TO theta_sorted
      SET lambda_index TO lambda_index + 1
    END WHILE
    
    DECLARE i AS INTEGER
    SET i TO 1
    WHILE i < LENGTH(theta_sorted) DO
      DECLARE j AS INTEGER
      SET j TO 0
      WHILE j < (LENGTH(theta_sorted) - i) DO
        IF theta_sorted.at(j) GREATER THAN theta_sorted.at(j + 1) THEN
          DECLARE temp_var AS INTEGER
          SET temp_var TO theta_sorted.at(j)
          SET theta_sorted[j] TO theta_sorted.at(j + 1)
          SET theta_sorted[j + 1] TO temp_var
        END IF
        SET j TO j + 1
      END WHILE
      SET i TO i + 1
    END WHILE

    DECLARE start_pos AS INTEGER
    SET start_pos TO LENGTH(theta_sorted) - omega_limit

    DECLARE beta_counter AS INTEGER
    SET beta_counter TO 0

    WHILE beta_counter < omega_limit DO
      DECLARE gamma_element AS INTEGER
      SET gamma_element TO theta_sorted.at(start_pos + beta_counter)
      APPEND gamma_element TO epsilon_result
      SET beta_counter TO beta_counter + 1
    END WHILE

    RETURN epsilon_result
  
  ELSE
    RETURN EMPTY LIST
  END IF
END FUNCTION