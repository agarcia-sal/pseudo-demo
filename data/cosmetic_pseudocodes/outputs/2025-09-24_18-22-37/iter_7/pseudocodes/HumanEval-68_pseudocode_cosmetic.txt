FUNCTION pluck(collection_of_items)
    SET size_counter TO 0
    WHILE size_counter LESS THAN LENGTH OF collection_of_items
        INCREMENT size_counter BY 1
    END WHILE
    
    IF size_counter IS NOT EQUAL TO 0
        SWITCH true
            CASE LENGTH OF collection_of_items IS EQUAL TO 0
                RETURN empty_list
        END SWITCH
    ELSE
        RETURN empty_list
    END IF

    SET filtered_items TO empty_list
    SET position_counter TO 0
    WHILE position_counter LESS THAN LENGTH OF collection_of_items
        SET current_value TO collection_of_items[position_counter]
        IF current_value MOD 2 IS EQUAL TO 0 THEN
            APPEND current_value TO filtered_items
        END IF
        INCREMENT position_counter BY 1
    END WHILE

    SET filtered_length TO 0
    WHILE filtered_length LESS THAN LENGTH OF filtered_items
        INCREMENT filtered_length BY 1
    END WHILE
    
    IF filtered_length IS NOT EQUAL TO 0
        SWITCH true
            CASE filtered_length IS EQUAL TO 0
                RETURN empty_list
        END SWITCH
    ELSE
        RETURN empty_list
    END IF

    SET minimum_value TO filtered_items[0]
    SET index_min_value TO 0
    SET counter_i TO 1
    WHILE counter_i LESS THAN LENGTH OF filtered_items
        SET current_extracted TO filtered_items[counter_i]
        IF current_extracted IS LESS THAN minimum_value THEN
            SET minimum_value TO current_extracted
        END IF
        INCREMENT counter_i BY 1
    END WHILE

    SET original_index TO 0
    SET counter_j TO 0
    WHILE counter_j LESS THAN LENGTH OF collection_of_items
        SET current_candidate TO collection_of_items[counter_j]
        IF current_candidate IS EQUAL TO minimum_value THEN
            SET original_index TO counter_j
            BREAK
        END IF
        INCREMENT counter_j BY 1
    END WHILE

    RETURN list_containing minimum_value AND original_index
END FUNCTION