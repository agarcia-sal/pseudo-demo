FUNCTION histogram(test_string)
    SET frequency_dictionary := {}
    SET list_of_letters := []
    SET maximum_count := 0
    SET index := 0

    WHILE index < LENGTH(test_string)
        IF test_string[index] IS equal to " "
            APPEND substring(test_string, 0, index) TO list_of_letters
            SET test_string := substring(test_string, index + 1, LENGTH(test_string))
            SET index := 0
        ELSE
            SET index := index + 1
    IF test_string IS NOT equal to ""
        APPEND test_string TO list_of_letters

    SET iterator := 0
    WHILE iterator < LENGTH(list_of_letters)
        SET current_letter := list_of_letters[iterator]
        SET count_current := 0
        SET inner_index := 0
        WHILE inner_index < LENGTH(list_of_letters)
            IF list_of_letters[inner_index] IS equal to current_letter
                SET count_current := count_current + 1
            SET inner_index := inner_index + 1
        IF count_current > maximum_count AND current_letter IS NOT equal to ""
            SET maximum_count := count_current
        SET iterator := iterator + 1

    IF maximum_count > 0 THEN
        SET outer_index := 0
        WHILE outer_index < LENGTH(list_of_letters)
            SET candidate_letter := list_of_letters[outer_index]
            SET candidate_count := 0
            FOR inner_index2 FROM 0 TO LENGTH(list_of_letters) - 1
                IF list_of_letters[inner_index2] IS equal to candidate_letter
                    SET candidate_count := candidate_count + 1
            SWITCH candidate_count is equal to maximum_count
                CASE TRUE:
                    SET frequency_dictionary[candidate_letter] := maximum_count
                CASE FALSE:
                    // do nothing
            SET outer_index := outer_index + 1

    RETURN frequency_dictionary
END FUNCTION