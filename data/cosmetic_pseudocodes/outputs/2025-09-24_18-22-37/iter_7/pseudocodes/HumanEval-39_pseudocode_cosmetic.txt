FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF integer_p LESS THAN 2 THEN
            RETURN False
        END IF

        SET integer_limit TO MINIMUM OF (INTEGER PART OF SQUARE ROOT OF integer_p PLUS 1) AND (integer_p MINUS 1)
        SET integer_k TO 2
        WHILE integer_k LESS THAN OR EQUAL TO integer_limit DO
            SET integer_remainder TO integer_p MODULO integer_k
            IF integer_remainder EQUALS 0 THEN
                RETURN False
            END IF
            integer_k := integer_k PLUS 1
        END WHILE

        RETURN True
    END FUNCTION

    SET list_fibonacci TO [0, 1]

    LOOP
        SET integer_last_index TO LENGTH OF list_fibonacci MINUS 1
        SET integer_penultimate_index TO integer_last_index MINUS 1
        SET integer_next_fib TO list_fibonacci[integer_last_index] PLUS list_fibonacci[integer_penultimate_index]
        APPEND integer_next_fib TO list_fibonacci

        IF is_prime(integer_next_fib) THEN
            integer_n := integer_n MINUS 1
        END IF

        IF integer_n EQUALS 0 THEN
            RETURN integer_next_fib
        END IF
    END LOOP
END FUNCTION