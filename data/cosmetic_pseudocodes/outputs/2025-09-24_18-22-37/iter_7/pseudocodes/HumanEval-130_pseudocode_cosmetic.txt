FUNCTION tri(integer_n)
    DECLARE result_list
    IF integer_n ≠ 0 THEN
        result_list := [1, 3]
        DECLARE index_var := 2
        WHILE index_var ≤ integer_n DO
            DECLARE mod_result := index_var MOD 2
            SWITCH mod_result
                CASE 0:
                    DECLARE half_value := index_var DIV 2
                    DECLARE append_value := half_value + 1
                    BREAK
                CASE 1:
                    DECLARE first_term := result_list[index_var - 1]
                    DECLARE second_term := result_list[index_var - 2]
                    DECLARE numerator := index_var + 3
                    DECLARE third_term := numerator DIV 2
                    DECLARE append_value := first_term + second_term + third_term
                    BREAK
            END SWITCH
            APPEND append_value TO result_list
            index_var := index_var + 1
        END WHILE
        RETURN result_list
    ELSE
        RETURN [1]
    END IF
END FUNCTION