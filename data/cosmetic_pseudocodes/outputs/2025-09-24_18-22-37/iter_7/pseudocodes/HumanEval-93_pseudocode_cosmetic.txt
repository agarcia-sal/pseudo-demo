FUNCTION encode(inputText)  
    SET vowelCharacters TO "aeiouAEIOU"  
    CREATE mappingDict AS EMPTY DICTIONARY  
    SET indexVar TO 0  
    WHILE indexVar < LENGTH OF vowelCharacters DO  
        SET currentChar TO vowelCharacters[indexVar]  
        SET asciiVal TO ASCII VALUE OF currentChar  
        SET shiftedCharCode TO asciiVal + 2  
        SET mappedChar TO CHARACTER REPRESENTED BY shiftedCharCode  
        ASSIGN mappingDict[currentChar] := mappedChar  
        INCREMENT indexVar BY 1  
    END WHILE  
    SET swappedText TO EMPTY STRING  
    SET pos TO 0  
    WHILE pos < LENGTH OF inputText DO  
        SET charInText TO inputText[pos]  
        IF charInText >= 'a' AND charInText <= 'z' OR charInText >= 'A' AND charInText <= 'Z' THEN  
            IF charInText IS LOWERCASE THEN  
                SET upperChar TO charInText CONVERTED TO UPPERCASE  
                APPEND upperChar TO swappedText  
            ELSE  
                SET lowerChar TO charInText CONVERTED TO LOWERCASE  
                APPEND lowerChar TO swappedText  
            END IF  
        ELSE  
            APPEND charInText TO swappedText  
        END IF  
        INCREMENT pos BY 1  
    END WHILE  
    SET outputString TO EMPTY STRING  
    SET counter TO 0  
    WHILE counter < LENGTH OF swappedText DO  
        SET currentChar TO swappedText[counter]  
        SWITCH  
            CASE currentChar IN mappingDict KEYS:  
                SET mappedChar TO mappingDict[currentChar]  
                APPEND mappedChar TO outputString  
                BREAK  
            DEFAULT:  
                APPEND currentChar TO outputString  
                BREAK  
        END SWITCH  
        counter := counter + 1  
    END WHILE  
    RETURN outputString  
END FUNCTION