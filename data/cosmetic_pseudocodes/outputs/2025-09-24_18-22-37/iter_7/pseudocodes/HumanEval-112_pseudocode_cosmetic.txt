FUNCTION reverse_delete(string_s, string_c)
    DECLARE filtered_string
    filtered_string := EMPTY_STRING
    DECLARE index := 1
    WHILE index ≤ LENGTH(string_s) DO
        DECLARE current_char := string_s[index]
        IF current_char IS NOT IN string_c THEN
            filtered_string := filtered_string CONCATENATED WITH current_char
        END IF
        index := index + 1
    END WHILE

    DECLARE reversed_filtered
    reversed_filtered := EMPTY_STRING
    DECLARE rev_index := LENGTH(filtered_string)
    WHILE rev_index ≥ 1 DO
        reversed_filtered := reversed_filtered CONCATENATED WITH filtered_string[rev_index]
        rev_index := rev_index - 1
    END WHILE

    DECLARE is_palindrome
    IF reversed_filtered IS EQUAL TO filtered_string THEN
        is_palindrome := TRUE
    ELSE
        is_palindrome := FALSE
    END IF

    RETURN (filtered_string, is_palindrome)
END FUNCTION