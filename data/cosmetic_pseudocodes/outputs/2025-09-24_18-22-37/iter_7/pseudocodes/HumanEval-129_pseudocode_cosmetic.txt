FUNCTION minPath(grid, k)
    SET lengthVar := LENGTH(grid)
    SET boundVal := lengthVar * lengthVar + 1
    SET rowIndex := 0
    WHILE rowIndex ≤ lengthVar - 1
        SET colIndex := 0
        WHILE colIndex ≤ lengthVar - 1
            SWITCH TRUE
                CASE grid[rowIndex, colIndex] = 1:
                    SET neighbors := []
                    IF rowIndex ≠ 0 THEN
                        APPEND grid[rowIndex - 1, colIndex] TO neighbors
                    END IF
                    IF colIndex ≠ 0 THEN
                        APPEND grid[rowIndex, colIndex - 1] TO neighbors
                    END IF
                    IF rowIndex ≠ lengthVar - 1 THEN
                        APPEND grid[rowIndex + 1, colIndex] TO neighbors
                    END IF
                    IF colIndex ≠ lengthVar - 1 THEN
                        APPEND grid[rowIndex, colIndex + 1] TO neighbors
                    END IF
                    SET boundVal := neighbors[0]
                    SET idx := 1
                    WHILE idx < LENGTH(neighbors)
                        IF neighbors[idx] < boundVal THEN
                            SET boundVal := neighbors[idx]
                        END IF
                        SET idx := idx + 1
                    END WHILE
                    BREAK  -- exit the SWITCH case
                DEFAULT:
                    -- do nothing
            END SWITCH
            SET colIndex := colIndex + 1
        END WHILE
        SET rowIndex := rowIndex + 1
    END WHILE
    SET outArr := []
    SET count := 0
    WHILE count < k
        IF (count MOD 2) = 0 THEN
            APPEND 1 TO outArr
        ELSE
            APPEND boundVal TO outArr
        END IF
        SET count := count + 1
    END WHILE
    RETURN outArr
END FUNCTION