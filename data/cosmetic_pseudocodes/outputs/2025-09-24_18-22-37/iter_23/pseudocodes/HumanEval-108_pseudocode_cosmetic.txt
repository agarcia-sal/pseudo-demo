```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET negation_flag TO 1
        IF integer_value < 0 THEN
            SET integer_value TO integer_value * (-1)
            SET negation_flag TO -1
        END IF

        SET digits_string TO CONVERT integer_value TO STRING
        SET digits_list TO EMPTY LIST
        SET index TO 0
        WHILE index < LENGTH(digits_string)
            APPEND CONVERT digits_string.at(index) TO INTEGER TO digits_list
            SET index TO index + 1
        END WHILE

        SET first_digit TO digits_list.at(0)
        SET updated_first_digit TO first_digit * negation_flag
        SET digits_list.at(0) TO updated_first_digit

        SET total_sum TO 0
        SET k TO 0
        WHILE k < LENGTH(digits_list)
            SET total_sum TO total_sum + digits_list.at(k)
            SET k TO k + 1
        END WHILE
        RETURN total_sum
    END FUNCTION

    SET computed_sums TO EMPTY LIST
    SET i TO 0
    WHILE i < LENGTH(array_of_integers)
        SET value TO array_of_integers.at(i)
        SET sum_val TO digits_sum(value)
        APPEND sum_val TO computed_sums
        SET i TO i + 1
    END WHILE

    SET positive_sums TO EMPTY LIST
    SET j TO 0
    WHILE j < LENGTH(computed_sums)
        SET current_element TO computed_sums.at(j)
        IF current_element > 0 THEN
            APPEND current_element TO positive_sums
        END IF
        SET j TO j + 1
    END WHILE

    RETURN LENGTH(positive_sums)
END FUNCTION
```