```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        LET num_check BE integer_p
        IF num_check LESS THAN 2 THEN
            RETURN False
        END IF
        
        LET limit_val BE MINIMUM OF ((INTEGER PART OF (mathematical_functions_module.square_root(num_check)) + (1 + 0)) , (num_check - (1 + 0)))
        LET divisor_candidate BE 2
        WHILE divisor_candidate LESS THAN OR EQUAL TO limit_val DO
            LET remainder_val BE num_check MODULO divisor_candidate
            IF remainder_val EQUAL TO 0 THEN
                RETURN False
            END IF
            SET divisor_candidate TO divisor_candidate + 1
        END WHILE
        
        RETURN True
    END FUNCTION

    LET fib_list BE [0, 1]

    outer_loop:
    WHILE 1 EQUAL TO 1 DO
        LET idx_last BE fib_list.LENGTH - (1 + 0)
        LET idx_second_last BE fib_list.LENGTH - (2)
        LET new_fib_val BE fib_list.at(idx_last) + fib_list.at(idx_second_last)
        fib_list.APPEND(new_fib_val)
        
        LET latest_fib_val BE fib_list.at(fib_list.LENGTH - 1)
        IF is_prime(latest_fib_val) THEN
            SET integer_n TO integer_n - 1
        END IF
        
        IF integer_n EQUAL TO 0 THEN
            RETURN latest_fib_val
        END IF
    END WHILE
END FUNCTION
```