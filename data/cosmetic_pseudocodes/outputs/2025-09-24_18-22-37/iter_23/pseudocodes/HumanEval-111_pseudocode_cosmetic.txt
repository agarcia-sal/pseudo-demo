```
FUNCTION histogram(input_str)
    DECLARE counts_map AS empty dictionary
    DECLARE tokens AS LIST
    DECLARE max_freq AS INTEGER
    SET tokens TO SPLIT input_str BY " "
    SET max_freq TO 0

    DECLARE idx AS INTEGER
    SET idx TO 0
    WHILE idx < LENGTH(tokens)
        DECLARE current_token AS STRING
        SET current_token TO tokens.at(idx)
        IF current_token != ""
            DECLARE current_count AS INTEGER
            SET current_count TO 0
            DECLARE j AS INTEGER
            SET j TO 0
            WHILE j < LENGTH(tokens)
                IF tokens.at(j) = current_token
                    SET current_count TO current_count + (1)
                SET j TO j + 1
            END WHILE
            IF max_freq < current_count
                SET max_freq TO current_count
        SET idx TO idx + 1
    END WHILE

    IF max_freq > 0
        SET idx TO 0
        WHILE idx < LENGTH(tokens)
            DECLARE word AS STRING
            SET word TO tokens.at(idx)
            DECLARE count_for_word AS INTEGER
            SET count_for_word TO 0
            IF word != ""
                SET j TO 0
                WHILE j < LENGTH(tokens)
                    IF tokens.at(j) = word
                        SET count_for_word TO count_for_word + (1)
                    SET j TO j + 1
                END WHILE
                IF count_for_word = max_freq
                    SET counts_map[word] TO max_freq
            SET idx TO idx + 1
        END WHILE

    RETURN counts_map
END FUNCTION
```