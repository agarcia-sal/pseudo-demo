```
FUNCTION starts_one_ends(eta_parameter)
    DECLARE gamma_local
    IF NOT (eta_parameter NOT EQUAL TO 1) THEN
        gamma_local ← 1
        RETURN gamma_local
    END IF

    DECLARE delta_exponent
    delta_exponent ← eta_parameter
    DECLARE epsilon_offset
    epsilon_offset ← 2
    DECLARE phi_power
    phi_power ← delta_exponent MINUS epsilon_offset
    
    DECLARE iota_base
    iota_base ← 10
    DECLARE kappa_exponentiation
    kappa_exponentiation ← 1

    WHILE phi_power GREATER THAN 0 DO
        kappa_exponentiation ← kappa_exponentiation MULTIPLIED BY iota_base
        phi_power ← phi_power MINUS 1
    END WHILE

    DECLARE lambda_multiplier
    lambda_multiplier ← 18
    gamma_local ← lambda_multiplier MULTIPLIED BY kappa_exponentiation
    RETURN gamma_local
END FUNCTION
```