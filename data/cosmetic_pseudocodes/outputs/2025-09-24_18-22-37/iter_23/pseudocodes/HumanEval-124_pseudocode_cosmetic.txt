```
FUNCTION valid_date(input_str)
    DECLARE trimmed_input
    DECLARE parts
    DECLARE part_month
    DECLARE part_day
    DECLARE part_year
    DECLARE numeric_month
    DECLARE numeric_day
    DECLARE numeric_year

    trimmed_input = input_str.trim_whitespace()
    
    TRY
        parts = trimmed_input.split_by('-')
        part_month = parts.at(0)
        part_day = parts.at(1)
        part_year = parts.at(2)

        numeric_month = convert_to_integer(part_month)
        numeric_day = convert_to_integer(part_day)
        numeric_year = convert_to_integer(part_year)

        SWITCH TRUE
            CASE (numeric_month < 1) ∨ (numeric_month > 12)
                RETURN False

            CASE (numeric_month = 1) ∨ (numeric_month = 3) ∨ (numeric_month = 5) ∨ 
                 (numeric_month = 7) ∨ (numeric_month = 8) ∨ (numeric_month = 10) ∨ 
                 (numeric_month = 12):
                IF (numeric_day < 1) ∨ (numeric_day > 31)
                    RETURN False
                END IF

            CASE (numeric_month = 4) ∨ (numeric_month = 6) ∨ (numeric_month = 9) ∨ (numeric_month = 11):
                IF (numeric_day < 1) ∨ (numeric_day > 30)
                    RETURN False
                END IF

            CASE numeric_month = 2:
                DECLARE max_day_feb
                max_day_feb = 29
                IF (numeric_day < 1) ∨ (numeric_day > max_day_feb)
                    RETURN False
                END IF
        END SWITCH

    EXCEPT ANY EXCEPTION
        RETURN False
    END TRY

    RETURN True
END FUNCTION
```