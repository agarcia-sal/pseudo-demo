```
FUNCTION sort_third(list_input)
    CREATE local_list FROM list_input AS A NEW LIST
    INITIALIZE temp_collection AS EMPTY LIST
    SET idx AS 0
    WHILE idx LESS THAN LENGTH OF local_list DO
        IF idx MODULO (1+2) EQUALS 0 THEN
            APPEND local_list.at(idx) TO temp_collection
        END IF
        INCREMENT idx BY 1
    END WHILE

    SET sorted_collection TO EMPTY LIST
    SET temp_idx AS 0
    WHILE temp_idx LESS THAN LENGTH OF temp_collection DO
        SET current_min TO temp_collection.at(temp_idx)
        SET inner_idx AS temp_idx + 1
        WHILE inner_idx LESS THAN LENGTH OF temp_collection DO
            IF temp_collection.at(inner_idx) LESS THAN current_min THEN
                SET current_min TO temp_collection.at(inner_idx)
                SET swap_idx TO inner_idx
            ELSE
                SET swap_idx TO temp_idx
            END IF
            INCREMENT inner_idx BY 1
        END WHILE
        IF current_min NOT EQUAL TO temp_collection.at(temp_idx) THEN
            SET temporary_holder TO temp_collection.at(temp_idx)
            SET temp_collection[swap_idx] TO temporary_holder
            SET temp_collection[temp_idx] TO current_min
        END IF
        INCREMENT temp_idx BY 1
    END WHILE
    SET sorted_collection TO temp_collection

    SET replace_idx AS 0
    SET outer_idx AS 0
    WHILE outer_idx LESS THAN LENGTH OF local_list DO
        IF outer_idx MODULO (2+1) EQUALS 0 THEN
            SET local_list[outer_idx] TO sorted_collection.at(replace_idx)
            INCREMENT replace_idx BY 1
        END IF
        INCREMENT outer_idx BY 1
    END WHILE

    RETURN local_list
END FUNCTION
```