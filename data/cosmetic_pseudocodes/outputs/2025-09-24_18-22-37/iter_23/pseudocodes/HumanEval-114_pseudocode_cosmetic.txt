```
FUNCTION minSubArraySum(input_sequence)
    LET acc_sum BE 0
    LET peak_sum BE 0
    LET idx BE 0
    WHILE idx < LENGTH(input_sequence)
        LET val BE input_sequence.at(idx)
        LET neg_val BE 0 - val
        LET acc_sum_candidate BE acc_sum + neg_val
        IF NOT (acc_sum_candidate >= 0)
            acc_sum = 0
        ELSE
            acc_sum = acc_sum_candidate
        END IF
        IF acc_sum > peak_sum
            peak_sum = acc_sum
        END IF
        idx = idx + 1
    END WHILE

    IF peak_sum = 0 THEN
        LET neg_values BE EMPTY LIST
        LET i BE 0
        WHILE i < LENGTH(input_sequence)
            neg_values.append(0 - input_sequence.at(i))
            i = i + 1
        END WHILE

        LET max_neg_value BE neg_values.at(0)
        LET j BE 1
        WHILE j < LENGTH(neg_values)
            IF max_neg_value < neg_values.at(j)
                max_neg_value = neg_values.at(j)
            END IF
            j = j + 1
        END WHILE
        peak_sum = max_neg_value
    END IF

    LET result BE 0 - peak_sum
    RETURN result
END FUNCTION
```