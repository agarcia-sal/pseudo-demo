```
FUNCTION prime_fib(alpha)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(beta)
        IF beta LESS THAN 2 THEN
            RETURN False
        SET limit_val TO INTEGER PART OF (mathematical_functions_module.sqrt(beta)) PLUS 1
        SET upper_bound TO beta MINUS 1
        IF limit_val LESS THAN upper_bound THEN
            SET max_iter TO limit_val
        ELSE
            SET max_iter TO upper_bound
        SET index_var TO 2
        WHILE index_var LESS THAN max_iter PLUS 1
            IF beta MODULO index_var EQUALS 0 THEN
                RETURN False
            SET index_var TO index_var PLUS 1
        END WHILE
        RETURN True
    END FUNCTION

    SET fib_sequence TO LIST CONTAINING 0, 1

    LOOP FOREVER
        SET last_idx TO LENGTH OF fib_sequence MINUS 1
        SET last_value TO fib_sequence.at(last_idx)
        SET second_last_value TO fib_sequence.at(last_idx MINUS 1)
        SET next_fib TO last_value PLUS second_last_value
        APPEND next_fib TO fib_sequence
        IF is_prime(next_fib) THEN
            SET alpha TO alpha MINUS 1
        IF alpha EQUALS 0 THEN
            RETURN fib_sequence.at(LENGTH OF fib_sequence MINUS 1)
    END LOOP

END FUNCTION
```