```
FUNCTION encode(textInput)
    DEFINE vowelSet AS "aeiouAEIOU"
    DEFINE vowelMap AS EMPTY_DICTIONARY
    INDEX counter <- 0
    WHILE counter < LENGTH(vowelSet)
        CHARACTER charAtPos <- vowelSet.at(counter)
        CHARACTER nextChar <- CHAR_FROM_CODE(CHAR_CODE(charAtPos) + 2)
        vowelMap[charAtPos] <- nextChar
        counter <- counter + 1
    END WHILE

    VARIABLE swappedText <- EMPTY_STRING
    INDEX idx <- 0
    WHILE idx < LENGTH(textInput)
        CHARACTER currentChar <- textInput.at(idx)
        IF currentChar >= "a" ∧ currentChar <= "z"
            swappedText <- CONCATENATE(swappedText, TO_UPPERCASE(currentChar))
        ELSE IF currentChar >= "A" ∧ currentChar <= "Z"
            swappedText <- CONCATENATE(swappedText, TO_LOWERCASE(currentChar))
        ELSE
            swappedText <- CONCATENATE(swappedText, currentChar)
        END IF
        idx <- idx + 1
    END WHILE

    VARIABLE resultString <- EMPTY_STRING
    INDEX pos <- 0
    WHILE pos < LENGTH(swappedText)
        CHARACTER letter <- swappedText.at(pos)
        IF vowelMap CONTAINS_KEY letter
            resultString <- CONCATENATE(resultString, vowelMap[letter])
        ELSE
            resultString <- CONCATENATE(resultString, letter)
        END IF
        pos <- pos + 1
    END WHILE

    RETURN resultString
END FUNCTION
```