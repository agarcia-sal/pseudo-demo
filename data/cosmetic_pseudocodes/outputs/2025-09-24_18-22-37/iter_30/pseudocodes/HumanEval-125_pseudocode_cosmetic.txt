```
FUNCTION split_words(source)
    DECLARE has_space AS BOOLEAN
    SET has_space = false
    DECLARE has_comma AS BOOLEAN
    SET has_comma = false

    DECLARE pos AS INTEGER
    SET pos = 0
    WHILE pos < LENGTH(source)
        DECLARE current_char AS CHAR
        SET current_char = source.at(pos)
        IF current_char == ' '
            SET has_space = true
        ELSE IF current_char == ','
            SET has_comma = true
        END IF
        SET pos = pos + 1
    END WHILE

    IF has_space == true
        DECLARE result_list AS LIST
        SET result_list = SPLIT source BY WHITESPACE
        RETURN result_list
    END IF

    IF has_comma == true
        DECLARE temp_string AS STRING
        SET temp_string = ""
        DECLARE idx AS INTEGER
        SET idx = 0
        WHILE idx < LENGTH(source)
            DECLARE ch AS CHAR
            SET ch = source.at(idx)
            IF ch == ','
                SET temp_string = temp_string + ' '
            ELSE
                SET temp_string = temp_string + ch
            END IF
            SET idx = idx + 1
        END WHILE
        DECLARE tokens AS LIST
        SET tokens = SPLIT temp_string BY WHITESPACE
        RETURN tokens
    END IF

    DECLARE tally AS INTEGER
    SET tally = 0

    DECLARE i AS INTEGER
    SET i = 0
    WHILE i < LENGTH(source)
        DECLARE sample_char AS CHAR
        SET sample_char = source.at(i)
        DECLARE ascii_val AS INTEGER
        SET ascii_val = TO_ASCII(sample_char)
        DECLARE is_lowercase AS BOOLEAN
        SET is_lowercase = (sample_char >= 'a') AND (sample_char <= 'z')
        IF is_lowercase == true AND (ascii_val % 2) == 0
            SET tally = tally + 1
        END IF
        SET i = i + 1
    END WHILE

    RETURN tally
END FUNCTION
```