```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET multiplier_sign TO 1
        IF 0 > integer_value THEN
            SET integer_value TO (integer_value * (-1))
            SET multiplier_sign TO ((-1) * 1)
        END IF

        SET digits_chars TO CONVERT_TO_STRING(integer_value)
        SET digits_list TO EMPTY LIST
        FOR i FROM 0 TO LENGTH(digits_chars) - 1
            SET digit_char TO digits_chars.at(i)
            SET digit_num TO CONVERT_TO_INTEGER(digit_char)
            APPEND digit_num TO digits_list
        END FOR

        SET adjusted_first_digit TO digits_list.at(0) * multiplier_sign
        SET digits_list AT INDEX 0 TO adjusted_first_digit

        SET sum_accumulator TO 0
        FOR each num IN digits_list
            SET sum_accumulator TO sum_accumulator + num
        END FOR

        RETURN sum_accumulator
    END FUNCTION

    SET collection_sums TO EMPTY LIST
    SET index_tracker TO 0
    WHILE index_tracker < LENGTH(array_of_integers)
        SET current_integer TO array_of_integers.at(index_tracker)
        SET sum_for_current TO digits_sum(current_integer)
        APPEND sum_for_current TO collection_sums
        SET index_tracker TO index_tracker + 1
    END WHILE

    SET filtered_collection TO EMPTY LIST
    FOR each candidate IN collection_sums
        IF candidate > 0 THEN
            APPEND candidate TO filtered_collection
        END IF
    END FOR

    RETURN LENGTH(filtered_collection)
END FUNCTION
```