```
FUNCTION intersection(tupleA, tupleB)
    
    FUNCTION is_prime(param)
        SWITCH 
            CASE param == 0:
                RETURN False
            CASE param == 1:
                RETURN False
            CASE param == 2:
                RETURN True
        END SWITCH
        
        SET divisor TO 2
        WHILE divisor < param
            IF param MOD divisor == 0
                RETURN False
            END IF
            divisor ← divisor + 1
        END WHILE

        RETURN True
    END FUNCTION

    SET start_point TO 0
    IF tupleA.at(0) > tupleB.at(0)
        start_point ← tupleA.at(0)
    ELSE 
        start_point ← tupleB.at(0)
    END IF
    
    SET end_point TO 0
    IF tupleA.at(1) < tupleB.at(1)
        end_point ← tupleA.at(1)
    ELSE 
        end_point ← tupleB.at(1)
    END IF

    SET range_diff TO end_point + (0 - start_point)  // equivalent to end_point - start_point
    
    IF (range_diff > 0) ∧ (is_prime(range_diff) == True)
        RETURN "YES"
    RETURN "NO"
END FUNCTION
```