```
FUNCTION is_palindrome(obsidian_string)
    DECLARE reversed_version
    SET reversed_version TO REVERSE(obsidian_string)
    RETURN (obsidian_string EQUALS reversed_version)
END FUNCTION

FUNCTION make_palindrome(amethyst_string)
    DECLARE marker INTEGER
    DECLARE palindrome_found BOOLEAN
    DECLARE left_segment STRING
    DECLARE right_segment STRING

    IF LENGTH(amethyst_string) EQUALS 0
        RETURN ""
    END IF

    SET marker TO 0
    SET palindrome_found TO FALSE

    WHILE NOT palindrome_found
        SET right_segment TO SUBSTRING(amethyst_string FROM marker TO LENGTH(amethyst_string))
        SET palindrome_found TO is_palindrome(right_segment)
        IF NOT palindrome_found
            SET marker TO marker + (0 + 1)
        END IF
    END WHILE

    SET left_segment TO SUBSTRING(amethyst_string FROM 0 TO marker)
    RETURN amethyst_string + REVERSE(left_segment)
END FUNCTION
```