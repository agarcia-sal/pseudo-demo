FUNCTION closest_integer(qwerty)
    IMPORT floor, ceil FROM math

    DECLARE xzxcz, temp_var1, trim_loop, trimmed_value, parsed_num, last_two_chars, str_len, output_result

    LET xzxcz = 0
    LET str_len = LENGTH(qwerty)
    LET trimmed_value = qwerty

    LET temp_var1 = 0

    LET trim_loop = FALSE
    LET temp_var1 = 0

    LET output_result = 0

    LET temp_var1 = COUNT OF '.' IN trimmed_value

    IF (temp_var1 EQUALS 0x1) THEN
        LET trim_loop = TRUE
    END IF

    WHILE trim_loop
        LET last_two_chars = trimmed_value AT (LENGTH(trimmed_value) - 1)
        IF NOT last_two_chars EQUAL TO '0' THEN
            LET trim_loop = FALSE
            BREAK
        END IF
        LET trimmed_value = SUBSTRING(trimmed_value, 0, LENGTH(trimmed_value) - 1)
    END WHILE

    LET parsed_num = FLOAT CONVERSION OF trimmed_value

    LET last_two_chars = ''
    IF LENGTH(trimmed_value) >= 2 THEN
        LET last_two_chars = SUBSTRING(trimmed_value, LENGTH(trimmed_value) - 2, 2)
    ELSE 
        LET last_two_chars = ''
    END IF

    IF NOT (last_two_chars NOT EQUAL TO '.5') THEN

        IF parsed_num > 0 THEN
            LET output_result = ceil(parsed_num)
        ELSE
            LET output_result = floor(parsed_num)
        END IF

    ELSE

        IF LENGTH(trimmed_value) > 0 THEN
            LET output_result = parsed_num - (parsed_num MOD 1) 

            LET temp_int = parsed_num - output_result
            IF temp_int >= 0.5 THEN
                LET output_result = 1 + output_result
            END IF
        ELSE
            LET output_result = 0
        END IF

    END IF

    RETURN output_result
END FUNCTION