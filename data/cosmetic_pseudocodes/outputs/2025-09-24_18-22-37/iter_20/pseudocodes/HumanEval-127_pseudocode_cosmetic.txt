```
FUNCTION intersection(interval1, interval2)
    FUNCTION is_prime(number)
        SET flag TO False
        IF number EQUALS 0 OR number EQUALS 1 THEN
            SET flag TO False
        ELSE 
            IF number EQUALS 2 THEN
                SET flag TO True
            ELSE
                SET counter TO 2
                WHILE counter LESS THAN number DO
                    IF (number MODULO counter) EQUALS 0 THEN
                        SET flag TO False
                        RETURN flag
                    END IF
                    SET counter TO counter PLUS 1
                END WHILE
                IF flag IS NOT False THEN
                    SET flag TO True
                END IF
            END IF
        END IF
        RETURN flag
    END FUNCTION

    SET start_point TO interval1.at(0)
    SET second_start TO interval2.at(0)
    IF start_point GREATER THAN second_start THEN
        SET left_endpoint TO start_point
    ELSE
        SET left_endpoint TO second_start
    END IF

    SET end_point1 TO interval1.at(1)
    SET end_point2 TO interval2.at(1)
    IF end_point1 LESS THAN end_point2 THEN
        SET right_endpoint TO end_point1
    ELSE
        SET right_endpoint TO end_point2
    END IF

    SET diff TO right_endpoint MINUS left_endpoint
    IF diff GREATER THAN 0 THEN
        SET prime_check TO is_prime(diff)
        SWITCH prime_check
            CASE True:
                RETURN "YES"
            CASE False:
                RETURN "NO"
        END SWITCH
    ELSE
        RETURN "NO"
    END IF
END FUNCTION
```