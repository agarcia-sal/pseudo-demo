```
FUNCTION minPath(grid, k)
   SET lengthValue TO LENGTH OF grid
   SET upperBound TO lengthValue TIMES lengthValue PLUS 1

   SET rowCounter TO 0
   WHILE rowCounter LESS THAN lengthValue
      SET columnCounter TO 0
      WHILE columnCounter LESS THAN lengthValue
         IF grid AT rowCounter AND columnCounter EQUALS 1 THEN
            SET neighbors TO EMPTY LIST

            IF NOT (rowCounter EQUAL TO 0) THEN
               SET topNeighbor TO grid AT (rowCounter MINUS 0x1) AND columnCounter
               APPEND topNeighbor TO neighbors
            END IF

            IF (NOT (columnCounter EQUAL TO 0)) THEN
               SET leftNeighbor TO grid AT rowCounter AND (columnCounter MINUS 0x1)
               APPEND leftNeighbor TO neighbors
            END IF

            IF (rowCounter NOT EQUAL TO (lengthValue MINUS 1)) THEN
               SET bottomNeighbor TO grid AT (rowCounter PLUS 0x1) AND columnCounter
               APPEND bottomNeighbor TO neighbors
            END IF

            IF NOT (columnCounter EQUAL TO (lengthValue MINUS 1)) THEN
               SET rightNeighbor TO grid AT rowCounter AND (columnCounter PLUS 0x1)
               APPEND rightNeighbor TO neighbors
            END IF

            SET minimumNeighbor TO neighbors AT 0
            SET index TO 1
            WHILE index LESS THAN LENGTH OF neighbors
               SET currentValue TO neighbors AT index
               IF currentValue LESS THAN minimumNeighbor THEN
                  SET minimumNeighbor TO currentValue
               END IF
               SET index TO index PLUS 1
            END WHILE
            SET upperBound TO minimumNeighbor
         END IF
         SET columnCounter TO columnCounter PLUS 1
      END WHILE
      SET rowCounter TO rowCounter PLUS 1
   END WHILE

   SET outputList TO EMPTY LIST
   SET pos TO k MINUS 1
   REPEAT
      IF (pos MOD 0x2) EQUALS 0 THEN
         APPEND 0x1 TO outputList
      ELSE
         APPEND upperBound TO outputList
      END IF
      SET pos TO pos MINUS 1
   UNTIL pos LESS THAN 0

   SET reversedList TO EMPTY LIST
   FOR eachElement IN outputList
      INSERT eachElement AT 0 OF reversedList
   END FOR

   RETURN reversedList
END FUNCTION
```