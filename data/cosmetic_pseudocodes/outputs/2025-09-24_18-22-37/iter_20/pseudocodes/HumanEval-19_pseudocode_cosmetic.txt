FUNCTION sort_numbers(theta_string)  
    SET alpha_map TO NEW DICTIONARY  
    ASSIGN alpha_map['zero'] = 0  
    ASSIGN alpha_map['one'] = 1  
    ASSIGN alpha_map['two'] = (1 + 1)  
    ASSIGN alpha_map['three'] = (2 + 1)  
    ASSIGN alpha_map['four'] = 0x4  
    ASSIGN alpha_map['five'] = 0x5  
    ASSIGN alpha_map['six'] = 6  
    ASSIGN alpha_map['seven'] = 7  
    ASSIGN alpha_map['eight'] = 8  
    ASSIGN alpha_map['nine'] = 9  

    DECLARE beta_array AS EMPTY LIST  
    DECLARE gamma_idx AS 0  
    DECLARE delta_temp AS STRING  
    DECLARE epsilon_len AS INTEGER  
    SET epsilon_len = LENGTH(theta_string)

    WHILE gamma_idx < epsilon_len  
        BEGIN  
            DECLARE zeta_sb AS STRING = ""  
            DECLARE eta_cond AS BOOLEAN = FALSE  

            WHILE gamma_idx < epsilon_len  
                BEGIN  
                    SET delta_temp = CHARACTER AT theta_string AT gamma_idx  
                    IF delta_temp EQUALS " " THEN  
                        IF LENGTH(zeta_sb) NOT EQUAL TO 0 THEN  
                            ASSIGN eta_cond = TRUE  
                            BREAK  
                        ELSE  
                            INCREMENT gamma_idx BY 1  
                            CONTINUE  
                        END IF  
                    ELSE  
                        APPEND delta_temp TO zeta_sb  
                        INCREMENT gamma_idx BY 1  
                    END IF  
                END  
            END WHILE  

            IF LENGTH(zeta_sb) EQUALS 0 THEN  
                IF eta_cond IS FALSE THEN  
                    BREAK  
                END IF  
            END IF  

            IF LENGTH(zeta_sb) > 0 THEN  
                APPEND zeta_sb TO beta_array  
            END IF  
        END  
    END WHILE  

    SET kappa_len = LENGTH(beta_array)  
    DECLARE lambda_idx AS 0  

    WHILE lambda_idx < kappa_len - 1  
        BEGIN  
            DECLARE mu_idx AS (lambda_idx + 1)  
            WHILE mu_idx < kappa_len  
                BEGIN  
                    IF alpha_map[beta_array[lambda_idx]] > alpha_map[beta_array[mu_idx]] THEN  
                        DECLARE temp_swap AS STRING  
                        ASSIGN temp_swap = beta_array[lambda_idx]  
                        ASSIGN beta_array[lambda_idx] = beta_array[mu_idx]  
                        ASSIGN beta_array[mu_idx] = temp_swap  
                    END IF  
                    INCREMENT mu_idx BY 1  
                END  
            END WHILE  
            INCREMENT lambda_idx BY 1  
        END  
    END WHILE  

    DECLARE omega_string AS STRING = ""  
    DECLARE nu_pos AS 0  
    WHILE nu_pos < kappa_len  
        BEGIN  
            IF nu_pos > 0 THEN  
                ASSIGN omega_string = omega_string + " "  
            END IF  
            ASSIGN omega_string = omega_string + beta_array[nu_pos]  
            INCREMENT nu_pos BY 1  
        END  
    END WHILE  

    RETURN omega_string  
END FUNCTION