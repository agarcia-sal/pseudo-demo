```
FUNCTION rolling_max(list_of_numbers)
    LET iterator_index BE 0
    LET accumulator_max BE NULL
    LET output_sequence BE an empty list
    LET length_of_sequence BE LENGTH OF list_of_numbers

    WHILE iterator_index < length_of_sequence
        LET current_element BE list_of_numbers.at(iterator_index)

        SWITCH (accumulator_max IS NULL)
            CASE TRUE:
                accumulator_max = current_element
                BREAK
            DEFAULT:
                LET comparison_result_be_greater BE (accumulator_max >= current_element)
                IF comparison_result_be_greater == FALSE THEN
                    accumulator_max = current_element
                ENDIF
        END SWITCH

        output_sequence.APPEND(accumulator_max)
        LET iterator_index BE iterator_index + 1
    END WHILE

    RETURN output_sequence
END FUNCTION
```