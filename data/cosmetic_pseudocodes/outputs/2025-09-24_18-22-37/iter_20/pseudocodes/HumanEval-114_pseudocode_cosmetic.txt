```
FUNCTION minSubArraySum(input_sequence)
  
  DECLARE accumulator VAR = 0
  DECLARE peak VAR = 0
  DECLARE position VAR = 0
  DECLARE current_element VAR
  
  WHILE position < LENGTH(input_sequence) DO
    SET current_element TO input_sequence.at(position)
    
    DECLARE invert VAR = (0 - current_element)
    SET accumulator TO (accumulator + invert)
    
    IF NOT (accumulator >= 0) THEN
      SET accumulator TO 0
    END IF
    
    IF peak < accumulator THEN
      SET peak TO accumulator
    END IF
    
    SET position TO (position + 1)
  END WHILE
  
  IF peak = 0 THEN
    DECLARE inverted_values ARRAY
    DECLARE iterator VAR = 0
    DECLARE length VAR = LENGTH(input_sequence)
    
    WHILE iterator < length DO
      SET inverted_values[iterator] TO (0 - input_sequence.at(iterator))
      SET iterator TO (iterator + 1)
    END WHILE
    
    DECLARE maximum_inverted VAR = inverted_values.at(0)
    DECLARE idx VAR = 1
    
    WHILE idx < length DO
      IF maximum_inverted < inverted_values.at(idx) THEN
        SET maximum_inverted TO inverted_values.at(idx)
      END IF
      SET idx TO (idx + 1)
    END WHILE
    
    SET peak TO maximum_inverted
  END IF
  
  DECLARE result VAR = (0 - peak)
  
  RETURN result

END FUNCTION
```