```
FUNCTION intersperse(collection_of_values, separator_symbol)
    DECLARE outcome_container AS LIST
    DECLARE current_pointer AS INTEGER
    DECLARE limit_index AS INTEGER
    DECLARE temp_value_one AS INTEGER
    DECLARE temp_value_two AS INTEGER
    DECLARE source_length AS INTEGER

    SET source_length TO 0

    WHILE TRUE
        IF source_length >= LENGTH(collection_of_values) THEN
            BREAK
        END IF
        SET source_length TO source_length + 1
    END WHILE

    IF NOT (source_length EQUAL TO 0) THEN
        SET outcome_container TO EMPTY LIST
        SET limit_index TO source_length - 1
        SET current_pointer TO 0

        WHILE current_pointer IS LESS THAN limit_index
            SET temp_value_one TO collection_of_values.at(current_pointer)
            APPEND temp_value_one TO outcome_container

            SET temp_value_two TO separator_symbol
            APPEND temp_value_two TO outcome_container

            SET current_pointer TO current_pointer + 1
        END WHILE

        SET temp_value_one TO collection_of_values.at(limit_index)
        APPEND temp_value_one TO outcome_container

        RETURN outcome_container
    END IF

    RETURN EMPTY LIST
END FUNCTION
```