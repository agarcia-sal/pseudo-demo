FUNCTION is_multiply_prime(beta)
  
  FUNCTION is_prime(omega)
    idx ← 2
    result_flag ← True

    WHILE idx < omega DO
      rem_calc ← omega MOD idx
      cond_check ← (rem_calc = 0)
      
      IF cond_check THEN
        result_flag ← False
        BREAK
      END IF

      idx ← idx + 1
    END WHILE

    RETURN result_flag
  END FUNCTION

  x_val ← 2

  WHILE x_val ≤ 0x64 DO
    first_prime_check ← is_prime(x_val)
    IF NOT first_prime_check THEN
      x_val ← x_val + 1
      CONTINUE
    END IF

    y_val ← 2
    WHILE y_val ≤ 100 DO

      second_prime_check ← is_prime(y_val)
      IF second_prime_check = False THEN
        y_val ← y_val + 1
        CONTINUE
      END IF

      z_val ← 2
      WHILE z_val ≤ (50 * 2) DO

        third_prime_check ← is_prime(z_val)
        IF third_prime_check = False THEN
          z_val ← z_val + 1
          CONTINUE
        END IF

        product_comp ← x_val * y_val
        full_product ← product_comp * z_val
        is_equal ← (full_product = beta)

        IF is_equal THEN
          RETURN True
        END IF

        z_val ← z_val + 1
      END WHILE

      y_val ← y_val + 1
    END WHILE

    x_val ← x_val + 1
  END WHILE

  RETURN False

END FUNCTION