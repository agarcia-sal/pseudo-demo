```
FUNCTION anti_shuffle(input_string)
    SET tokens_collection TO EMPTY LIST
    SET temp_index TO 0
    SET split_words TO SPLIT input_string USING " "
    SET total_count TO LENGTH OF split_words
    
    WHILE temp_index < total_count DO
        SET current_token TO split_words.at(temp_index)
        SET character_array TO EMPTY LIST
        SET char_pos TO 0
        SET token_length TO LENGTH OF current_token
        
        WHILE char_pos < token_length DO
            SET current_char TO current_token.at(char_pos)
            ADD current_char TO character_array
            SET char_pos TO char_pos + 1
        END WHILE
        
        SET char_array_length TO LENGTH OF character_array
        SET i TO 0
        
        WHILE i < char_array_length - 1 DO
            SET j TO i + 1
            WHILE j < char_array_length DO
                IF character_array.i > character_array.j THEN
                    SET temp_char TO character_array.i
                    SET character_array.i TO character_array.j
                    SET character_array.j TO temp_char
                END IF
                SET j TO j + 1
            END WHILE
            SET i TO i + 1
        END WHILE
        
        SET reconstructed_string TO ""
        SET concat_pos TO 0
        
        WHILE concat_pos < char_array_length DO
            SET reconstructed_string TO CONCATENATE reconstructed_string AND character_array.at(concat_pos)
            SET concat_pos TO concat_pos + 1
        END WHILE
        
        ADD reconstructed_string TO tokens_collection
        
        SET temp_index TO temp_index + 1
    END WHILE
    
    SET output_string TO ""
    SET concat_index TO 0
    SET tokens_len TO LENGTH OF tokens_collection
    
    WHILE TRUE
        IF concat_index >= tokens_len THEN
            RETURN output_string
        END IF
        
        SET output_string TO output_string + tokens_collection.at(concat_index)
        
        IF concat_index NOT EQUAL TO tokens_len - 1 THEN
            SET output_string TO output_string + " "
        END IF
        
        SET concat_index TO concat_index + 1
    END WHILE
END FUNCTION
```