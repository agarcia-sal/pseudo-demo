FUNCTION filter_by_substring(list_of_strings, substring_value)

    filtered_collection ← EMPTY LIST

    current_index ← 0

    total_elements ← LENGTH OF list_of_strings

    WHILE current_index < total_elements DO

        candidate ← list_of_strings.at(current_index)

        substring_present ← FALSE

        candidate_length ← LENGTH OF candidate

        substring_length ← LENGTH OF substring_value

        position ← 0

        max_position ← candidate_length - substring_length

        WHILE position <= max_position AND substring_present IS FALSE DO

            segment ← EMPTY STRING

            offset ← 0

            WHILE offset < substring_length DO

                segment ← segment + candidate.at(position + offset)

                offset ← offset + 1

            END WHILE

            IF segment = substring_value THEN

                substring_present ← TRUE

            END IF

            position ← position + 1

        END WHILE

        IF substring_present THEN

            filtered_collection ← filtered_collection + [candidate]

        END IF

        current_index ← current_index + 1

    END WHILE

    RETURN filtered_collection

END FUNCTION