```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET factor_sign TO 1

        WHILE TRUE
            IF integer_value < 0 THEN
                SET tmp_negation TO integer_value * (-0x1)
                SET integer_value TO tmp_negation
                SET factor_sign TO -0x1
                BREAK
            ELSE
                BREAK
            END IF
        END WHILE

        SET digit_chars TO EMPTY LIST
        SET int_as_string TO ""
        SET idx_counter TO 0

        WHILE idx_counter < LENGTH(STR(integer_value))
            SET ch TO STR(integer_value).at(idx_counter)
            APPEND ch TO digit_chars
            SET idx_counter TO idx_counter + 1
        END WHILE

        SET list_of_digits TO EMPTY LIST
        SET iter_idx TO 0
        WHILE iter_idx < LENGTH(digit_chars)
            SET single_digit_str TO digit_chars.at(iter_idx)
            SET single_digit_int TO 0
            SET pow_idx TO 0
            SET max_pow TO LENGTH(single_digit_str)

            WHILE pow_idx < max_pow
                SET val_to_add TO 0
                IF single_digit_str.at(pow_idx) == '0' THEN
                    SET val_to_add TO 0
                ELSE IF single_digit_str.at(pow_idx) == '1' THEN
                    SET val_to_add TO 1
                ELSE IF single_digit_str.at(pow_idx) == '2' THEN
                    SET val_to_add TO 2
                ELSE IF single_digit_str.at(pow_idx) == '3' THEN
                    SET val_to_add TO 3
                ELSE IF single_digit_str.at(pow_idx) == '4' THEN
                    SET val_to_add TO 4
                ELSE IF single_digit_str.at(pow_idx) == '5' THEN
                    SET val_to_add TO 5
                ELSE IF single_digit_str.at(pow_idx) == '6' THEN
                    SET val_to_add TO 6
                ELSE IF single_digit_str.at(pow_idx) == '7' THEN
                    SET val_to_add TO 7
                ELSE IF single_digit_str.at(pow_idx) == '8' THEN
                    SET val_to_add TO 8
                ELSE IF single_digit_str.at(pow_idx) == '9' THEN
                    SET val_to_add TO 9
                END IF

                SET single_digit_int TO single_digit_int + val_to_add

                SET pow_idx TO pow_idx + 1
            END WHILE

            APPEND single_digit_int TO list_of_digits
            SET iter_idx TO iter_idx + 1
        END WHILE

        SET first_idx_digit TO list_of_digits.at(0)
        SET multiplied_first TO first_idx_digit * factor_sign
        SET list_of_digits[0] = multiplied_first

        SET running_sum TO 0
        SET sum_idx TO 0

        WHILE sum_idx < LENGTH(list_of_digits)
            SET running_sum TO running_sum + list_of_digits.at(sum_idx)
            SET sum_idx TO sum_idx + 1
        END WHILE

        RETURN running_sum
    END FUNCTION


    SET temp_storage TO EMPTY LIST
    SET pos_counter TO 0

    WHILE pos_counter < LENGTH(array_of_integers)
        SET element_val TO array_of_integers.at(pos_counter)
        SET computed_sum TO digits_sum(element_val)
        APPEND computed_sum TO temp_storage
        SET pos_counter TO pos_counter + 1
    END WHILE

    SET positive_filtered TO EMPTY LIST
    SET filt_idx TO 0

    WHILE filt_idx < LENGTH(temp_storage)
        SET val_check TO temp_storage.at(filt_idx)

        IF val_check > 0 THEN
            APPEND val_check TO positive_filtered
        END IF

        SET filt_idx TO filt_idx + 1
    END WHILE

    RETURN LENGTH(positive_filtered)
END FUNCTION
```