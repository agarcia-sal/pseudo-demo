```
FUNCTION even_odd_palindrome(zeta)
  
  FUNCTION is_palindrome(phi)
    LET sigma = TO_STRING(phi)
    LET tau = EMPTY_STRING
    LET lambda = LENGTH(sigma)
    LET delta = lambda - 1
    
    WHILE delta >= 0
      tau = tau + sigma.at(delta)
      delta = delta - 1
    END WHILE
    
    IF sigma = tau THEN
      RETURN TRUE
    ELSE
      RETURN FALSE
    END IF
  END FUNCTION
  
  LET alpha_counter = 0
  LET beta_counter = 0
  LET kappa = 1
  
  WHILE kappa <= zeta
    LET eta = kappa % 2
    LET omega = is_palindrome(kappa)
    
    SWITCH TRUE
      CASE (eta = 1) AND (omega = TRUE):
        beta_counter = beta_counter + 1
        BREAK
      CASE (eta = 0) AND (omega = TRUE):
        alpha_counter = alpha_counter + 1
        BREAK
    END SWITCH
    
    kappa = kappa + 1
  END WHILE
  
  RETURN (alpha_counter, beta_counter)
END FUNCTION
```