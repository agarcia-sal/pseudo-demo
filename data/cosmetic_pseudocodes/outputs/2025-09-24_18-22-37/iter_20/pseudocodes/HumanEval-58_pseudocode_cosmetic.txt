```
FUNCTION common(list1, list2)
    LET accumulated_elements BE new empty set
    LET primary_index BE 0
    WHILE primary_index < LENGTH(list1)
        LET first_candidate BE list1.at(primary_index)
        LET secondary_index BE 0
        WHILE secondary_index < LENGTH(list2)
            LET second_candidate BE list2.at(secondary_index)
            LET equality_check BE (first_candidate = second_candidate)
            IF NOT equality_check THEN
                SET secondary_index TO secondary_index + 1
                CONTINUE
            END IF
            accumulated_elements.ADD(first_candidate)
            SET secondary_index TO secondary_index + 1
        END WHILE
        SET primary_index TO primary_index + 1
    END WHILE

    LET results_list BE NEW EMPTY LIST
    FOR EACH item IN accumulated_elements
        results_list.APPEND(item)
    END FOR

    LET index_j BE 0
    WHILE index_j < LENGTH(results_list) - 1
        LET index_k BE index_j + 1
        WHILE index_k < LENGTH(results_list)
            IF results_list[index_j] > results_list[index_k] THEN
                LET temp_holder BE results_list[index_j]
                results_list[index_j] = results_list[index_k]
                results_list[index_k] = temp_holder
            END IF
            SET index_k TO index_k + 1
        END WHILE
        SET index_j TO index_j + 1
    END WHILE

    RETURN results_list
END FUNCTION
```