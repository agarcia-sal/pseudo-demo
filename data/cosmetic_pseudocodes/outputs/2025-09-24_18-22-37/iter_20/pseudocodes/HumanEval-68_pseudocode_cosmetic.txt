FUNCTION pluck(collection_of_nodes)

    DECLARE idx INTEGER
    DECLARE evens LIST
    DECLARE min_even_val INTEGER
    DECLARE min_even_idx INTEGER
    DECLARE temp_val INTEGER
    DECLARE len_nodes INTEGER
    DECLARE len_evens INTEGER
    DECLARE filtered LIST

    SET idx TO 0
    SET len_nodes TO LENGTH OF collection_of_nodes

    WHILE (idx < len_nodes)
        SET temp_val TO collection_of_nodes.at(idx)
        SET idx TO idx + 1
        CONTINUE
    END WHILE

    IF (len_nodes = 0)
        RETURN empty_list
    END IF

    SET filtered TO empty_list
    SET idx TO 0

    WHILE (idx < len_nodes)
        SET temp_val TO collection_of_nodes.at(idx)
        IF NOT ((temp_val MODULO 2) â‰  0)
            APPEND temp_val TO filtered
        END IF
        SET idx TO idx + 1
    END WHILE

    SET len_evens TO LENGTH OF filtered

    IF (len_evens = 0)
        RETURN empty_list
    END IF

    SET min_even_val TO filtered.at(0)
    SET idx TO 1

    WHILE (idx < len_evens)
        SET temp_val TO filtered.at(idx)
        IF (temp_val < min_even_val)
            SET min_even_val TO temp_val
        END IF
        SET idx TO idx + 1
    END WHILE

    SET min_even_idx TO 0
    SET idx TO 0

    WHILE (idx < len_nodes)
        IF (collection_of_nodes.at(idx) = min_even_val)
            SET min_even_idx TO idx
            BREAK
        END IF
        SET idx TO idx + 1
    END WHILE

    RETURN [min_even_val, min_even_idx]

END FUNCTION