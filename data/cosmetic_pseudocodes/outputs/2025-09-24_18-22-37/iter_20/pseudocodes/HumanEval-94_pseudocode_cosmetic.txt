FUNCTION skjkasdkd(sequence_of_numbers)
    FUNCTION isPrime(number_check)
        SET current_divisor TO 2
        SET upper_limit TO (INTEGER_PART(SQUARE_ROOT(number_check)) + 1)
        WHILE current_divisor LESS THAN upper_limit
            SET remainder TO (number_check MODULO current_divisor)
            IF remainder EQUALS 0 THEN
                RETURN False
            END IF
            SET current_divisor TO (current_divisor + 1)
        END WHILE
        RETURN True
    END FUNCTION

    SET highest_prime_candidate TO 0
    SET pointer TO 0
    WHILE pointer LESS THAN LENGTH(sequence_of_numbers)
        SET candidate_value TO sequence_of_numbers AT pointer
        IF (candidate_value GREATER THAN highest_prime_candidate) AND (isPrime(candidate_value) EQUALS True)
            SET highest_prime_candidate TO candidate_value
        END IF
        SET pointer TO (pointer + 1)
    END WHILE

    SET digit_sum TO 0
    SET stringified_prime TO STRING(highest_prime_candidate)
    SET position TO 0
    WHILE position LESS THAN LENGTH(stringified_prime)
        SET single_char TO stringified_prime AT position
        SET numeral TO INTEGER(single_char)
        SET digit_sum TO digit_sum + numeral
        SET position TO position + 1
    END WHILE

    RETURN digit_sum
END FUNCTION