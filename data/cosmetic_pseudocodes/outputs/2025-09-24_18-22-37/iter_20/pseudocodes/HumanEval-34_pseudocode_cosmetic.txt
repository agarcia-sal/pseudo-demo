```
FUNCTION unique(list_of_elements)
    DECLARE distinct_values SET
    DECLARE temp_list LIST
    DECLARE current_item ANY
    DECLARE output_list LIST

    distinct_values ← EMPTY SET

    DECLARE idx INTEGER
    idx ← 0

    WHILE idx < LENGTH(list_of_elements) DO
        current_item ← list_of_elements[idx]
        distinct_values ← distinct_values UNION SET {current_item}
        idx ← idx + 1
    END WHILE

    temp_list ← EMPTY LIST
    DECLARE element ANY

    FOR element IN distinct_values DO
        temp_list ← temp_list + [element]
    END FOR

    DECLARE sorted_list LIST
    sorted_list ← EMPTY LIST

    WHILE LENGTH(temp_list) > 0 DO
        DECLARE min_value ANY
        min_value ← temp_list[0]
        DECLARE j INTEGER
        j ← 1

        WHILE j < LENGTH(temp_list) DO
            IF NOT (temp_list[j] >= min_value) THEN
                min_value ← temp_list[j]
            END IF
            j ← j + 1
        END WHILE

        sorted_list ← sorted_list + [min_value]

        DECLARE k INTEGER
        k ← 0
        DECLARE new_list LIST
        new_list ← EMPTY LIST

        WHILE k < LENGTH(temp_list) DO
            IF temp_list[k] NOT EQUAL TO min_value THEN
                new_list ← new_list + [temp_list[k]]
            END IF
            k ← k + 1
        END WHILE

        temp_list ← new_list
    END WHILE

    output_list ← sorted_list
    RETURN output_list

END FUNCTION
```