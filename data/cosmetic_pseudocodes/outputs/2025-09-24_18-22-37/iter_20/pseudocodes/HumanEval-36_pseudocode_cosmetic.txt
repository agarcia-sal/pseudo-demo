```
FUNCTION fizz_buzz(integer_n)
  INITIALIZE accumulator_lm TO empty list

  DECLARE counter_xv AS 0
  WHILE counter_xv < integer_n DO
    DECLARE remainder_aa AS counter_xv MOD 11
    DECLARE remainder_bb AS counter_xv MOD 13
    DECLARE condition_zz AS (remainder_aa = 0) OR (remainder_bb = 0)

    SWITCH condition_zz
      CASE TRUE:
        SET accumulator_lm TO accumulator_lm + [counter_xv]
      CASE FALSE:
        NULL
    END SWITCH

    SET counter_xv TO counter_xv + 1
  END WHILE


  DECLARE combined_rt AS empty string
  DECLARE idx_kq AS 0

  WHILE idx_kq < LENGTH(accumulator_lm) DO
    DECLARE current_elem_ir AS accumulator_lm[idx_kq]
    DECLARE str_repr_nd AS TO_STRING(current_elem_ir)
    SET combined_rt TO combined_rt + str_repr_nd

    SET idx_kq TO idx_kq + 1
  END WHILE


  DECLARE sum_vx AS 0

  DECLARE pos_wt AS 0
  WHILE pos_wt < LENGTH(combined_rt) DO
    DECLARE char_gz AS combined_rt.at(pos_wt)
    DECLARE increment_val_lu AS 0

    IF char_gz = '7' THEN
      SET increment_val_lu TO 1
    ELSE
      SET increment_val_lu TO 0
    END IF

    SET sum_vx TO sum_vx + increment_val_lu
    SET pos_wt TO pos_wt + 1
  END WHILE

  RETURN sum_vx
END FUNCTION
```