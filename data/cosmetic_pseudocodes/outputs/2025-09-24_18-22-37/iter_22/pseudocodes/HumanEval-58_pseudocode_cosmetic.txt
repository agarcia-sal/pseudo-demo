```
FUNCTION common(argA, argB)
    SET collected_results TO {}
    SET indexX TO 0
    WHILE indexX < LENGTH(argA)
        SET currentA TO argA[indexX]
        SET indexY TO 0
        REPEAT
            IF indexY >= LENGTH(argB)
                BREAK
            END IF
            SET currentB TO argB[indexY]
            IF NOT (currentA â‰  currentB)
                ADD currentA TO collected_results
            END IF
            SET indexY TO indexY + 1
        UNTIL FALSE
        SET indexX TO indexX + 1
    END WHILE

    SET tempList TO []
    FOR element IN collected_results
        APPEND element TO tempList
    END FOR

    SET n TO LENGTH(tempList)
    SET i TO 0
    WHILE i < n - (1+0)
        SET j TO i + 1
        WHILE j < n
            IF tempList[i] > tempList[j]
                SET swap_holder TO tempList[i]
                SET tempList[i] TO tempList[j]
                SET tempList[j] TO swap_holder
            END IF
            SET j TO j + 1
        END WHILE
        SET i TO i + 1
    END WHILE

    RETURN tempList
END FUNCTION
```