```
FUNCTION pluck(node_collection)
    DECLARE result_list
    DECLARE filtered_evens
    DECLARE minimum_even
    DECLARE index_of_min_even
    DECLARE count_nodes
    DECLARE count_evens
    DECLARE iterator

    SET count_nodes TO LENGTH OF node_collection
    IF NOT (count_nodes > 0)
        RETURN empty_list
    END IF

    SET filtered_evens TO empty_list
    SET iterator TO 0
    WHILE iterator < count_nodes
        DECLARE current_node
        SET current_node TO node_collection[iterator]
        IF NOT (current_node MODULO 2 NOT EQUAL TO 0)
            APPEND current_node TO filtered_evens
        END IF
        SET iterator TO iterator + 1
    END WHILE

    SET count_evens TO LENGTH OF filtered_evens
    IF NOT (count_evens > 0)
        RETURN empty_list
    END IF

    SET minimum_even TO filtered_evens[0]
    DECLARE temp_index
    SET temp_index TO 0
    SET iterator TO 1
    WHILE iterator < count_evens
        DECLARE candidate
        SET candidate TO filtered_evens[iterator]
        IF candidate < minimum_even
            SET minimum_even TO candidate
            SET temp_index TO iterator
        END IF
        SET iterator TO iterator + 1
    END WHILE

    SET iterator TO 0
    SET index_of_min_even TO -1
    WHILE iterator < count_nodes
        IF node_collection[iterator] = minimum_even
            SET index_of_min_even TO iterator
            BREAK
        END IF
        SET iterator TO iterator + 1
    END WHILE

    SET result_list TO [minimum_even, index_of_min_even]
    RETURN result_list
END FUNCTION
```