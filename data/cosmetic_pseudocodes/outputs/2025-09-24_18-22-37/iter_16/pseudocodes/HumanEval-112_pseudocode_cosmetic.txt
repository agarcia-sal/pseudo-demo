```
FUNCTION reverse_delete(string_s, string_c)
    SET filtered_chars TO EMPTY STRING
    SET idx TO 0
    WHILE idx < LENGTH(string_s) DO
        SET current_char TO string_s.at(idx)
        IF NOT (string_c.at(0) = current_char OR string_c.at(1) = current_char OR string_c.at(2) = current_char OR string_c.at(3) = current_char OR string_c.at(4) = current_char OR string_c.at(5) = current_char OR string_c.at(6) = current_char OR string_c.at(7) = current_char OR string_c.at(8) = current_char OR string_c.at(9) = current_char) THEN
            SET temp_string TO filtered_chars
            SET filtered_chars TO temp_string + current_char
        END IF
        SET idx TO idx + 1
    END WHILE

    SET reversed_filtered_chars TO EMPTY STRING
    SET backward_index TO LENGTH(filtered_chars) - 1
    WHILE backward_index >= 0 DO
        SET reversed_filtered_chars TO reversed_filtered_chars + filtered_chars.at(backward_index)
        SET backward_index TO backward_index - 1
    END WHILE

    IF reversed_filtered_chars = filtered_chars THEN
        RETURN (filtered_chars, true)
    ELSE
        RETURN (filtered_chars, false)
    END IF
END FUNCTION
```