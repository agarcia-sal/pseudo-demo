```
FUNCTION prod_signs(inp_list)
    IF NOT (inp_list EXISTS AND inp_list.LENGTH > 0) THEN
        RETURN None
    END IF

    DECLARE zeroFound AS BOOLEAN = false
    DECLARE negCount AS INTEGER = 0
    DECLARE idx AS INTEGER = 0

    WHILE idx < inp_list.LENGTH DO
        IF inp_list.at(idx) EQUALS 0 THEN
            zeroFound = true
        ELSE 
            IF inp_list.at(idx) < 0 THEN
                negCount = negCount + 1
            END IF
        END IF
        idx = idx + 1
    END WHILE

    DECLARE finalSign AS INTEGER
    IF zeroFound THEN
        finalSign = 0
    ELSE
        DECLARE tempPower AS INTEGER = 1
        DECLARE powerCounter AS INTEGER = 0
        WHILE powerCounter < negCount DO
            tempPower = tempPower * (-1)
            powerCounter = powerCounter + 1
        END WHILE
        finalSign = tempPower
    END IF

    DECLARE totalMagnitude AS INTEGER = 0
    DECLARE index2 AS INTEGER = 0
    WHILE index2 < inp_list.LENGTH DO
        DECLARE absVal AS INTEGER
        IF inp_list.at(index2) < 0 THEN
            absVal = inp_list.at(index2) * (-1)
        ELSE
            absVal = inp_list.at(index2)
        END IF
        totalMagnitude = totalMagnitude + absVal
        index2 = index2 + 1
    END WHILE

    RETURN finalSign * totalMagnitude
END FUNCTION
```