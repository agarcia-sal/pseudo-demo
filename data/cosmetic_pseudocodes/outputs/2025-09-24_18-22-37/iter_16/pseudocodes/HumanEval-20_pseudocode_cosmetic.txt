```
FUNCTION find_closest_elements(locals_list)
    SET result_pair TO None
    SET smallest_gap TO None
    SET idx_outer TO 0

    WHILE idx_outer < LENGTH OF locals_list
        SET val_outer TO locals_list.at(idx_outer)
        SET idx_inner TO 0

        WHILE idx_inner < LENGTH OF locals_list
            SET val_inner TO locals_list.at(idx_inner)

            IF NOT (idx_outer = idx_inner) THEN
                IF smallest_gap IS None THEN
                    SET difference_delta TO val_outer - val_inner
                    IF difference_delta < 0 THEN
                        SET absolute_diff TO 0 - difference_delta
                    ELSE
                        SET absolute_diff TO difference_delta
                    END IF
                    SET smallest_gap TO absolute_diff
                    SET result_pair TO (val_inner, val_outer)
                    SET tmp_sorted TO result_pair
                    IF tmp_sorted.at(0) > tmp_sorted.at(1) THEN
                        SET result_pair TO (tmp_sorted.at(1), tmp_sorted.at(0))
                    END IF
                ELSE 
                    SET difference_delta TO val_outer - val_inner
                    SET current_distance TO difference_delta
                    IF current_distance < 0 THEN
                        SET current_distance TO 0 - difference_delta
                    END IF

                    IF current_distance < smallest_gap THEN
                        SET smallest_gap TO current_distance
                        SET result_pair TO (val_inner, val_outer)
                        SET tmp_sorted TO result_pair
                        IF tmp_sorted.at(0) > tmp_sorted.at(1) THEN
                            SET result_pair TO (tmp_sorted.at(1), tmp_sorted.at(0))
                        END IF
                    END IF
                END IF
            END IF

            SET idx_inner TO idx_inner + 1
        END WHILE
        
        SET idx_outer TO idx_outer + 1
    END WHILE

    RETURN result_pair
END FUNCTION
```