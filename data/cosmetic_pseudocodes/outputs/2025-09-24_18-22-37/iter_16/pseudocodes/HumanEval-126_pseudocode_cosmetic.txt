```
FUNCTION is_sorted(sequence)
    CREATE frequency_map  AS dictionary mapping each element IN sequence TO 0
    
    SET idx TO 0
    WHILE idx < LENGTH(sequence)
        LET val BE sequence.at(idx)
        LET current_count BE frequency_map.at(val)
        frequency_map[val] = current_count + 1
        idx = idx + 1
    
    LET limit_exceeded BE False
    FOR element IN sequence
        IF frequency_map[element] > 2 THEN
            limit_exceeded = True
            BREAK
    
    IF limit_exceeded THEN
        RETURN False
    
    LET position TO 1
    LET ordered TO True
    
    WHILE position < LENGTH(sequence) âˆ§ ordered
        LET previous_val BE sequence.at(position - 1)
        LET current_val BE sequence.at(position)
        IF previous_val > current_val THEN
            ordered = False
        position = position + 1
    
    IF ordered THEN RETURN True
    RETURN False
END FUNCTION
```