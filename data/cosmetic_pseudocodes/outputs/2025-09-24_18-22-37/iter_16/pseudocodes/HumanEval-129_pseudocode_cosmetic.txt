```
FUNCTION minPath(matrix, threshold)
   LET size <-- LENGTH OF matrix
   LET marker <-- (size * size) + 1

   LET rowIndex <-- 0
   WHILE rowIndex < size
       LET colIndex <-- 0
       WHILE colIndex < size
           LET value <-- matrix.at(rowIndex).at(colIndex)
           IF value == 1 THEN
               LET neighbors <-- []
               IF rowIndex != 0 THEN
                   LET upNeighbor <-- matrix.at(rowIndex - 1).at(colIndex)
                   neighbors APPEND upNeighbor
               END IF

               IF colIndex != 0 THEN
                  LET leftNeighbor <-- matrix.at(rowIndex).at(colIndex - 1)
                  neighbors APPEND leftNeighbor
               END IF

               IF rowIndex != (size - 1) THEN
                   LET downNeighbor <-- matrix.at(rowIndex + 1).at(colIndex)
                   neighbors APPEND downNeighbor
               END IF

               IF colIndex != (size - 1) THEN
                  LET rightNeighbor <-- matrix.at(rowIndex).at(colIndex + 1)
                  neighbors APPEND rightNeighbor
               END IF

               LET minimumNeighbor <-- neighbors.at(0)
               LET idx <-- 1
               WHILE idx < LENGTH OF neighbors
                   IF neighbors.at(idx) < minimumNeighbor THEN
                       minimumNeighbor <-- neighbors.at(idx)
                   END IF
                   idx <-- idx + 1
               END WHILE
               marker <-- minimumNeighbor
           END IF
           colIndex <-- colIndex + 1
       END WHILE
       rowIndex <-- rowIndex + 1
   END WHILE

   LET answers <-- []
   LET counter <-- 0
   WHILE counter < threshold
       IF (counter MOD 2) == 0 THEN
           answers APPEND 1
       ELSE
           answers APPEND marker
       END IF
       counter <-- counter + 1
   END WHILE

   RETURN answers
END FUNCTION
```