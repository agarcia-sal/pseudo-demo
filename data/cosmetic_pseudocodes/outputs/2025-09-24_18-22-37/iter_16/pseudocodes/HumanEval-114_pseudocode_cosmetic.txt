```
FUNCTION minSubArraySum(arr)
    LET acc = 0
    LET peak = 0
    LET idx = 0
    WHILE idx < arr.length DO
        LET val = arr.at(idx)
        LET neg_val = 0 - val
        LET temp_sum = acc + neg_val
        acc = temp_sum
        IF acc < 0 THEN
            acc = 0
        END IF
        IF acc > peak THEN
            peak = acc
        END IF
        idx = idx + 1
    END WHILE
    IF peak == 0 THEN
        LET neg_values = []
        LET j = 0
        WHILE j < arr.length DO
            neg_values.append(0 - arr.at(j))
            j = j + 1
        END WHILE
        LET max_neg = neg_values.at(0)
        LET k = 1
        WHILE k < neg_values.length DO
            IF neg_values.at(k) > max_neg THEN
                max_neg = neg_values.at(k)
            END IF
            k = k + 1
        END WHILE
        peak = max_neg
    END IF
    LET result = 0 - peak
    RETURN result
END FUNCTION
```