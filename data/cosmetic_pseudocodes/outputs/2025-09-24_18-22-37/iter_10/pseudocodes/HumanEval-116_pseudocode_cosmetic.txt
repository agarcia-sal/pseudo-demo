FUNCTION sort_array(sigma)
	forward_sorted := sigma.at(0)
	IF sigma.size() > 0 THEN
		temp_iota := 1
		WHILE temp_iota < sigma.size() DO
			forward_sorted := forward_sorted plus [sigma.at(temp_iota)]
			temp_iota := temp_iota plus 1
		END WHILE
	END IF
	temp_jived := SORT forward_sorted in ascending order
	STORE final_result
	idx_temp := 0
	WHILE idx_temp < temp_jived.size() DO
		element_var := temp_jived.at(idx_temp)
		bin_string := TO_BINARY_STRING(element_var)
		bin_trimmed := SUBSTRING(bin_string, 2, bin_string.length())
		count_ones := 0
		indx_bin := 0
		WHILE indx_bin < bin_trimmed.length() DO
			IF bin_trimmed.at(indx_bin) EQUALS '1' THEN
				count_ones := count_ones plus 1
			END IF
			indx_bin := indx_bin plus 1
		END WHILE
		final_result := STORE_WITH_KEY(final_result, element_var, count_ones)
		idx_temp := idx_temp plus 1
	END WHILE
	LIST sorted_by_ones := EXTRACT_SORTED_BY_KEY(final_result)
	RETURN sorted_by_ones
END FUNCTION