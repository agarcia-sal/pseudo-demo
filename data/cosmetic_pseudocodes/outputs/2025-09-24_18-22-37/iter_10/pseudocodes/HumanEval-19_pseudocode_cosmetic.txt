FUNCTION sort_numbers(echoed_phrase)  
    SET abada_sifto TO DICTIONARY MAPPING  
        'zero' TO 0,  
        'one' TO 1,  
        'two' TO 2,  
        'three' TO 3,  
        'four' TO 4,  
        'five' TO 5,  
        'six' TO 6,  
        'seven' TO 7,  
        'eight' TO 8,  
        'nine' TO 9  
  
    SET recino_into TO EMPTY LIST  
    SET kursa_new TO echoed_phrase SPLIT BY ' '  
    FOR EACH vuro IN kursa_new DO  
        IF vuro NOT EQUAL TO '' THEN  
            APPEND vuro TO recino_into  
        END IF  
    END FOR  
  
    FOR index_decr FROM LENGTH OF recino_into MINUS 1 DOWNTO 1 DO  
        SET yifuna_value TO index_decr  
        WHILE yifuna_value GREATER THAN 0 DO  
            IF abada_sifto.at(recino_into.at(yifuna_value)) LESS THAN abada_sifto.at(recino_into.at(yifuna_value MINUS 1)) THEN  
                SET tmp_hold TO recino_into.at(yifuna_value)  
                recino_into.at(yifuna_value) ← recino_into.at(yifuna_value MINUS 1)  
                recino_into.at(yifuna_value MINUS 1) ← tmp_hold  
            ELSE  
                BREAK  
            END IF  
            yifuna_value ← yifuna_value MINUS 1  
        END WHILE  
    END FOR  
  
    SET result_phrase TO ''  
    IF LENGTH OF recino_into EQUAL TO 0 THEN  
        RETURN result_phrase  
    END IF  
      
    SET result_phrase ← recino_into.at(0)  
    FOR ita_loop FROM 1 TO LENGTH OF recino_into MINUS 1 DO  
        SET result_phrase ← result_phrase PLUS ' ' PLUS recino_into.at(ita_loop)  
    END FOR  
  
    RETURN result_phrase  
END FUNCTION