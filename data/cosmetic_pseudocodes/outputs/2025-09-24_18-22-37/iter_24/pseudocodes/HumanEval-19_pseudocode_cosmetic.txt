```
FUNCTION sort_numbers(string_of_number_words)
    SET map_values TO DICTIONARY WITH
        'zero' MAPPED TO 0,
        'one' MAPPED TO 1,
        'two' MAPPED TO 2,
        'three' MAPPED TO 3,
        'four' MAPPED TO 4,
        'five' MAPPED TO 5,
        'six' MAPPED TO 6,
        'seven' MAPPED TO 7,
        'eight' MAPPED TO 8,
        'nine' MAPPED TO 9
    SET chunks TO SPLIT string_of_number_words BY " "
    SET filtered_words TO EMPTY LIST
    SET idx TO 0
    WHILE idx < LENGTH OF chunks
        SET current_word TO chunks.at(idx)
        IF NOT (current_word == "")
            APPEND current_word TO filtered_words
        END IF
        SET idx TO idx + 1
    END WHILE
    SET n TO LENGTH OF filtered_words
    SET i TO 0
    WHILE i < n - 1
        SET j TO i + 1
        WHILE j < n
            SET val_i TO map_values.at(filtered_words.at(i))
            SET val_j TO map_values.at(filtered_words.at(j))
            IF val_i > val_j
                SET temp_var TO filtered_words.at(i)
                SET filtered_words.at(i) TO filtered_words.at(j)
                SET filtered_words.at(j) TO temp_var
            END IF
            SET j TO j + 1
        END WHILE
        SET i TO i + 1
    END WHILE
    SET joined_result TO ""
    SET k TO 0
    WHILE k < n
        SET joined_result TO joined_result + filtered_words.at(k)
        IF k < n - 1
            SET joined_result TO joined_result + " "
        END IF
        SET k TO k + 1
    END WHILE
    RETURN joined_result
END FUNCTION
```