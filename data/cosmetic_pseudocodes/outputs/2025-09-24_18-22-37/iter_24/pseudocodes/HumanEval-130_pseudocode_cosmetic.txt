FUNCTION tri(integer_n)
    DECLARE result_list AS LIST
    DECLARE loop_counter AS INTEGER
    DECLARE temp_val_1 AS INTEGER
    DECLARE temp_val_2 AS INTEGER
    DECLARE temp_sum AS INTEGER
    result_list ← LIST OF [1]
    IF NOT (integer_n EQUALS 0) THEN
        result_list ← LIST OF [1, 3]
        loop_counter ← 2
        WHILE loop_counter LESS THAN OR EQUAL TO integer_n DO
            DECLARE is_even_flag AS BOOLEAN
            is_even_flag ← (loop_counter MODULO 2) EQUALS 0
            SWITCH TRUE
                CASE is_even_flag:
                    temp_val_1 ← loop_counter DIVIDED BY 2
                    temp_val_1 ← temp_val_1 PLUS 1
                    APPEND temp_val_1 TO result_list
                    BREAK
                DEFAULT:
                    temp_val_1 ← result_list AT INDEX (loop_counter MINUS 1)
                    temp_val_2 ← result_list AT INDEX (loop_counter MINUS 2)
                    temp_sum ← loop_counter PLUS 3
                    temp_sum ← temp_sum DIVIDED BY 2
                    temp_val_1 ← temp_val_1 PLUS temp_val_2 PLUS temp_sum
                    APPEND temp_val_1 TO result_list
                    BREAK
            END SWITCH
            loop_counter ← loop_counter PLUS 1
        END WHILE
    END IF
    RETURN result_list
END FUNCTION