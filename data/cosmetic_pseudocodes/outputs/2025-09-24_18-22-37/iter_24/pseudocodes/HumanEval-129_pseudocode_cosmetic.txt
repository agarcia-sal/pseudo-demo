```
FUNCTION minPath(grid, k)
    SET count TO LENGTH OF grid
    SET maxValue TO (count TIMES count) PLUS 1
    SET outerIndex TO 0
    WHILE outerIndex <= count MINUS 1
        SET innerIndex TO 0
        WHILE innerIndex <= count MINUS 1
            SWITCH (TRUE)
                CASE (grid.at(outerIndex).at(innerIndex) EQUALS 1):
                    SET neighbours TO EMPTY LIST
                    IF NOT (outerIndex EQUALS 0)
                        SET precedingRowValue TO grid.at(outerIndex MINUS 1).at(innerIndex)
                        APPEND precedingRowValue TO neighbours
                    END IF
                    IF NOT (innerIndex EQUALS 0)
                        SET precedingColValue TO grid.at(outerIndex).at(innerIndex MINUS 1)
                        APPEND precedingColValue TO neighbours
                    END IF
                    IF NOT (outerIndex EQUALS (count MINUS 1))
                        SET nextRowValue TO grid.at(outerIndex PLUS 1).at(innerIndex)
                        APPEND nextRowValue TO neighbours
                    END IF
                    IF NOT (innerIndex EQUALS (count MINUS 1))
                        SET nextColValue TO grid.at(outerIndex).at(innerIndex PLUS 1)
                        APPEND nextColValue TO neighbours
                    END IF
                    SET minNeighbour TO neighbours.at(0)
                    SET helperIndex TO 1
                    WHILE helperIndex <= (LENGTH OF neighbours MINUS 1)
                        IF neighbours.at(helperIndex) LESS THAN minNeighbour
                            SET minNeighbour TO neighbours.at(helperIndex)
                        END IF
                        SET helperIndex TO helperIndex PLUS 1
                    END WHILE
                    SET maxValue TO minNeighbour
                    BREAK
                DEFAULT:
                    BREAK
            END SWITCH
            SET innerIndex TO innerIndex PLUS 1
        END WHILE
        SET outerIndex TO outerIndex PLUS 1
    END WHILE
    SET resultSequence TO EMPTY LIST
    SET iterationCounter TO 0
    WHILE iterationCounter <= (k MINUS 1)
        SWITCH (iterationCounter MODULO 2 EQUALS 0)
            CASE TRUE:
                APPEND 1 TO resultSequence
                BREAK
            CASE FALSE:
                APPEND maxValue TO resultSequence
                BREAK
        END SWITCH
        SET iterationCounter TO iterationCounter PLUS 1
    END WHILE
    RETURN resultSequence
END FUNCTION
```