```
FUNCTION unique_digits(list_of_positive_integers)
    SET container_1 TO []
    SET index_counter TO 0
    WHILE index_counter < LENGTH(list_of_positive_integers)
        SET current_value TO list_of_positive_integers.at(index_counter)
        SET all_odd_flag TO TRUE
        SET digit_str TO STRING(current_value)
        SET char_index TO 0
        WHILE char_index < LENGTH(digit_str)
            SET current_digit_char TO digit_str.at(char_index)
            SET digit_num TO INTEGER(current_digit_char)
            SWITCH digit_num % 2
                CASE 0:
                    SET all_odd_flag TO FALSE
            END SWITCH
            IF all_odd_flag == FALSE THEN
                BREAK
            END IF
            SET char_index TO char_index + 1
        END WHILE
        IF all_odd_flag == TRUE THEN
            APPEND current_value TO container_1
        END IF
        SET index_counter TO index_counter + 1
    END WHILE
    SET sorted_flag TO FALSE
    WHILE NOT sorted_flag
        SET sorted_flag TO TRUE
        SET loop_idx TO 0
        WHILE loop_idx < LENGTH(container_1) - 1
            IF container_1.at(loop_idx) > container_1.at(loop_idx + 1) THEN
                SET temp_var TO container_1.at(loop_idx)
                SET container_1.at(loop_idx) TO container_1.at(loop_idx + 1)
                SET container_1.at(loop_idx + 1) TO temp_var
                SET sorted_flag TO FALSE
            END IF
            SET loop_idx TO loop_idx + 1
        END WHILE
    END WHILE
    RETURN container_1
END FUNCTION
```