```
FUNCTION unique(list_of_elements)
    DECLARE distinct_collection
    DECLARE intermediate_list
    DECLARE final_output

    SET distinct_collection TO EMPTY SET
    DECLARE index_counter TO 0
    WHILE index_counter < LENGTH(list_of_elements) DO
        DECLARE curr_element TO list_of_elements.at(index_counter)
        distinct_collection.ADD(curr_element)
        SET index_counter TO index_counter + 1
    END WHILE

    SET intermediate_list TO EMPTY LIST
    FOR EACH item IN distinct_collection DO
        intermediate_list.APPEND(item)
    END FOR

    DECLARE sorting_index TO 1
    DECLARE swap_flag TO TRUE
    WHILE swap_flag == TRUE DO
        SET swap_flag TO FALSE
        SET sorting_index TO 1
        WHILE sorting_index < LENGTH(intermediate_list) DO
            IF intermediate_list.at(sorting_index - 1) > intermediate_list.at(sorting_index) THEN
                DECLARE temp_var TO intermediate_list.at(sorting_index - 1)
                SET intermediate_list[sorting_index - 1] TO intermediate_list.at(sorting_index)
                SET intermediate_list[sorting_index] TO temp_var
                SET swap_flag TO TRUE
            END IF
            SET sorting_index TO sorting_index + 1
        END WHILE
    END WHILE

    SET final_output TO intermediate_list
    RETURN final_output
END FUNCTION
```