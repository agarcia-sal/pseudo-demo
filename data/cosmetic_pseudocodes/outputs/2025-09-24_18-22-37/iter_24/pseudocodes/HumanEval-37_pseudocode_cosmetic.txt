```
FUNCTION sort_even(list_of_elements) 
    SET idx_a TO 0
    SET idx_b TO 1
    SET coll_x TO EMPTY LIST
    SET coll_y TO EMPTY LIST
    WHILE idx_a LESS THAN LENGTH(list_of_elements) 
        ADD list_of_elements.at(idx_a) TO coll_x
        SET idx_a TO idx_a + 2
    END WHILE
    SET idx_c TO 1
    WHILE idx_c LESS THAN LENGTH(list_of_elements) 
        ADD list_of_elements.at(idx_c) TO coll_y
        SET idx_c TO idx_c + 2
    END WHILE
    SORT coll_x IN NON-DECREASING ORDER
    SET merged_result TO EMPTY LIST
    SET iter_z TO 0
    WHILE iter_z LESS THAN MIN(LENGTH(coll_x), LENGTH(coll_y)) 
        SET temp_pair TO (coll_x.at(iter_z), coll_y.at(iter_z))
        SET temp_i TO 0
        WHILE temp_i LESS THAN 2
            ADD temp_pair.at(temp_i) TO merged_result
            SET temp_i TO temp_i + 1
        END WHILE
        SET iter_z TO iter_z + 1
    END WHILE
    SWITCH LENGTH(coll_x) GREATER THAN LENGTH(coll_y) 
        CASE TRUE:
            ADD coll_x.at(LENGTH(coll_x) - 1) TO merged_result
        CASE FALSE:
    END SWITCH
    RETURN merged_result
END FUNCTION
```