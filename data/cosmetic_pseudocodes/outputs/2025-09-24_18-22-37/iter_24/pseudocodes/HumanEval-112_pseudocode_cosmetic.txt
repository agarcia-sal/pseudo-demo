```
FUNCTION reverse_delete(string_s, string_c)
    DECLARE temp_str
    SET temp_str TO EMPTY STRING
    DECLARE index_i
    SET index_i TO 0
    WHILE index_i < LENGTH(string_s) DO
        DECLARE current_char
        SET current_char TO string_s.at(index_i)
        IF NOT (current_char IN string_c) THEN
            SET temp_str TO CONCATENATION OF temp_str AND current_char
        END IF
        SET index_i TO index_i + 1
    END WHILE

    DECLARE reversed_temp_str
    SET reversed_temp_str TO EMPTY STRING
    DECLARE position_j
    SET position_j TO LENGTH(temp_str) - 1
    WHILE position_j >= 0 DO
        SET reversed_temp_str TO CONCATENATION OF reversed_temp_str AND temp_str.at(position_j)
        SET position_j TO position_j - 1
    END WHILE

    DECLARE is_palind_flag
    IF reversed_temp_str = temp_str THEN
        SET is_palind_flag TO TRUE
    ELSE
        SET is_palind_flag TO FALSE
    END IF
    
    RETURN TUPLE OF (temp_str, is_palind_flag)
END FUNCTION
```