```
FUNCTION f(integer_n)
    SET accumulated_results TO empty list
    SET outer_index TO 1
    WHILE outer_index <= integer_n
        SWITCH TRUE
            CASE outer_index MODULO 2 NOT EQUAL TO 0:
                SET temp_sum TO 0
                SET inner_counter TO 1
                WHILE inner_counter <= outer_index
                    SET temp_sum TO temp_sum + inner_counter
                    SET inner_counter TO inner_counter + 1
                END WHILE
                SET value_to_append TO temp_sum
                BREAK
            CASE outer_index MODULO 2 EQUAL TO 0:
                SET temp_product TO 1
                SET inner_counter TO 1
                WHILE inner_counter <= outer_index
                    SET temp_product TO temp_product * inner_counter
                    SET inner_counter TO inner_counter + 1
                END WHILE
                SET value_to_append TO temp_product
                BREAK
        END SWITCH
        APPEND value_to_append TO accumulated_results
        SET outer_index TO outer_index + 1
    END WHILE
    SET final_output TO accumulated_results
    RETURN final_output
END FUNCTION
```