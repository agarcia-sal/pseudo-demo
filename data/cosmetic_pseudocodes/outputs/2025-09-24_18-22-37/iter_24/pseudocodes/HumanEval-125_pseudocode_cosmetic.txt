```
FUNCTION split_words(arg1)
    SET temp_flag1 TO FALSE
    SET temp_flag2 TO FALSE
    SET temp_string1 TO ""
    SET temp_int1 TO 0
    SET temp_count TO 0
    SET temp_list1 TO []

    temp_flag1 ← FALSE
    i ← 0
    WHILE i < LENGTH(arg1)
        IF arg1.at(i) = ' ' THEN
            temp_flag1 ← TRUE
            i ← LENGTH(arg1)
        ELSE
            i ← i + 1
        END IF
    END WHILE

    SWITCH temp_flag1
        CASE TRUE:
            temp_list1 ← []
            idx ← 0
            WHILE idx < LENGTH(arg1)
                ch ← arg1.at(idx)
                IF ch ≠ ' ' THEN
                    temp_string1 ← temp_string1 + ch
                ELSE
                    IF temp_string1 ≠ "" THEN
                        temp_list1 ← temp_list1 + temp_string1
                        temp_string1 ← ""
                    END IF
                END IF
                idx ← idx + 1
            END WHILE
            IF temp_string1 ≠ "" THEN
                temp_list1 ← temp_list1 + temp_string1
                temp_string1 ← ""
            END IF
            RETURN temp_list1
        CASE FALSE:
            j ← 0
            WHILE j < LENGTH(arg1)
                IF arg1.at(j) = ',' THEN
                    temp_flag2 ← TRUE
                    j ← LENGTH(arg1)
                ELSE
                    j ← j + 1
                END IF
            END WHILE
            SWITCH temp_flag2
                CASE TRUE:
                    temp_string1 ← ""
                    k ← 0
                    WHILE k < LENGTH(arg1)
                        IF arg1.at(k) = ',' THEN
                            temp_string1 ← temp_string1 + ' '
                        ELSE
                            temp_string1 ← temp_string1 + arg1.at(k)
                        END IF
                        k ← k + 1
                    END WHILE

                    temp_list1 ← []
                    a ← 0
                    temp_word ← ""
                    WHILE a < LENGTH(temp_string1)
                        ch2 ← temp_string1.at(a)
                        IF ch2 ≠ ' ' THEN
                            temp_word ← temp_word + ch2
                        ELSE
                            IF temp_word ≠ "" THEN
                                temp_list1 ← temp_list1 + temp_word
                                temp_word ← ""
                            END IF
                        END IF
                        a ← a + 1
                    END WHILE
                    IF temp_word ≠ "" THEN
                        temp_list1 ← temp_list1 + temp_word
                        temp_word ← ""
                    END IF
                    RETURN temp_list1
                CASE FALSE:
                    temp_count ← 0
                    b ← 0
                    WHILE b < LENGTH(arg1)
                        ch3 ← arg1.at(b)
                        temp_check1 ← (ch3 ≥ 'a') ∧ (ch3 ≤ 'z')
                        temp_check2 ← ((ASCII(ch3) MODULO 2) = 0)
                        IF temp_check1 ∧ temp_check2 THEN
                            temp_count ← temp_count + 1
                        END IF
                        b ← b + 1
                    END WHILE
                    RETURN temp_count
            END SWITCH
    END SWITCH
END FUNCTION
```