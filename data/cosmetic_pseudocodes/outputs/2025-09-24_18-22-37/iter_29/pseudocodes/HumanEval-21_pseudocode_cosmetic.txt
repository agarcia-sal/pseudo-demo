```
FUNCTION rescale_to_unit(sequence_of_values)
      DECLARE smallest_value
      DECLARE largest_value
      DECLARE output_sequence
      DECLARE iterator_value
      DECLARE scaled_element

      smallest_value := +∞
      largest_value := -∞
      output_sequence := EMPTY LIST

      SET cursor TO 0
      WHILE cursor < LENGTH(sequence_of_values)
           iterator_value := sequence_of_values.at(cursor)
           IF iterator_value < smallest_value THEN
                smallest_value := iterator_value
           ENDIF
           IF iterator_value > largest_value THEN
                largest_value := iterator_value
           ENDIF
           cursor := cursor + 1
      ENDWHILE

      DECLARE index := 0
      WHILE index < LENGTH(sequence_of_values)
            iterator_value := sequence_of_values.at(index)
            DECLARE numerator := iterator_value - smallest_value
            DECLARE denominator := largest_value - smallest_value
            scaled_element := numerator / denominator
            output_sequence.APPEND(scaled_element)
            index := index + 1
      ENDWHILE

      RETURN output_sequence
END FUNCTION
```