```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_phi)
        IF NOT (integer_phi >= 2) 
            RETURN False
        SET integer_aux TO 2
        SET integer_bound TO (MIN((FLOOR(SQRT(integer_phi)) + 1), (integer_phi - 1)))
        WHILE integer_aux <= integer_bound
            SET integer_mod_res TO integer_phi MOD integer_aux
            IF integer_mod_res == 0 
                RETURN False
            integer_aux = integer_aux + 1
        RETURN True
    END FUNCTION

    SET list_seq TO [0, 1]

    WHILE 1 == 1
        SET integer_last_idx TO (LENGTH(list_seq) - 1)
        SET integer_second_last_idx TO (integer_last_idx - 1)
        SET integer_next_fib TO list_seq.at(integer_last_idx) + list_seq.at(integer_second_last_idx)
        APPEND integer_next_fib TO list_seq

        SET boolean_prime_check TO is_prime(list_seq.at(LENGTH(list_seq) - 1))
        IF boolean_prime_check != False
            integer_n = integer_n + 0 - 1

        IF integer_n == 0
            RETURN list_seq.at(LENGTH(list_seq) - 1)
END FUNCTION
```