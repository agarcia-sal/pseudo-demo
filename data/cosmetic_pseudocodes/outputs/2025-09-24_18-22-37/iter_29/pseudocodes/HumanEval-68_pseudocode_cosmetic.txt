```
FUNCTION pluck(collection_of_nodes)
  IF NOT (collection_of_nodes.LENGTH > 0) THEN
    RETURN empty_list
  END IF

  DECLARE filtered_even_numbers
  filtered_even_numbers := []
  DECLARE pos_counter
  pos_counter := 0
  WHILE pos_counter < collection_of_nodes.LENGTH DO
    DECLARE current_elem
    current_elem := collection_of_nodes.at(pos_counter)
    IF NOT (current_elem MOD 2 != 0) THEN
      filtered_even_numbers := filtered_even_numbers + [current_elem]
    END IF
    pos_counter := pos_counter + 1
  END WHILE

  IF filtered_even_numbers.LENGTH = 0 THEN
    RETURN empty_list
  END IF

  DECLARE min_value
  min_value := filtered_even_numbers[0]
  DECLARE traversal_index
  traversal_index := 1
  WHILE traversal_index < filtered_even_numbers.LENGTH DO
    DECLARE comparison_val
    comparison_val := filtered_even_numbers[traversal_index]
    IF comparison_val < min_value THEN
      min_value := comparison_val
    END IF
    traversal_index := traversal_index + 1
  END WHILE

  DECLARE found_index
  found_index := 0
  DECLARE search_cursor
  search_cursor := 0
  WHILE search_cursor < collection_of_nodes.LENGTH DO
    DECLARE candidate
    candidate := collection_of_nodes[search_cursor]
    IF candidate != min_value THEN
      search_cursor := search_cursor + 1
      CONTINUE
    END IF
    found_index := search_cursor
    BREAK
  END WHILE

  RETURN [min_value, found_index]
END FUNCTION
```