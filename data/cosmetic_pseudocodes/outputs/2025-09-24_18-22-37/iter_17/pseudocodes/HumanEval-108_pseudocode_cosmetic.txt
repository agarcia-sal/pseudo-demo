```
FUNCTION count_nums(input_collection)
    FUNCTION digits_sum(parameter_x)
        SET factor_sign TO 1
        IF parameter_x < 0 THEN
            SET parameter_x = parameter_x * -1
            SET factor_sign = -1
        END IF
        SET digit_chars TO TO_STRING(parameter_x)
        SET digits_array TO EMPTY LIST
        SET index_z TO 0
        WHILE index_z < LENGTH(digit_chars)
            APPEND TO digits_array (TO_INTEGER(digit_chars.at(index_z)))
            SET index_z = index_z + 1
        END WHILE
        SET first_digit TO digits_array.at(0)
        SET first_digit = first_digit * factor_sign
        SET digits_array[0] = first_digit
        SET total_sum TO 0
        SET idx_y TO 0
        WHILE idx_y < LENGTH(digits_array)
            SET total_sum = total_sum + digits_array.at(idx_y)
            SET idx_y = idx_y + 1
        END WHILE
        RETURN total_sum
    END FUNCTION

    SET results_intermediate TO EMPTY LIST
    SET iter_index TO 0
    WHILE iter_index < LENGTH(input_collection)
        SET current_val TO input_collection.at(iter_index)
        SET computed_sum TO digits_sum(current_val)
        APPEND computed_sum TO results_intermediate
        SET iter_index = iter_index + 1
    END WHILE

    SET final_values TO EMPTY LIST
    SET scan_index TO 0
    WHILE scan_index < LENGTH(results_intermediate)
        SET element_v TO results_intermediate.at(scan_index)
        IF NOT (element_v <= 0) THEN
            APPEND element_v TO final_values
        END IF
        SET scan_index = scan_index + 1
    END WHILE
    RETURN LENGTH(final_values)
END FUNCTION
```