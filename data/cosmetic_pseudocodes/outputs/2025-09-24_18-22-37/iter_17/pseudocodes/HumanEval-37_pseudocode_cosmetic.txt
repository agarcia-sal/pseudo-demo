```
FUNCTION sort_even(list_of_elements)
    SET jump_elements TO EMPTY LIST
    SET skip_elements TO EMPTY LIST
    SET idx_jumping TO 0
    SET idx_skipping TO 1
    WHILE idx_jumping < LENGTH(list_of_elements)
        APPEND list_of_elements AT idx_jumping TO jump_elements
        SET idx_jumping TO idx_jumping + 2
    END WHILE
    WHILE idx_skipping < LENGTH(list_of_elements)
        APPEND list_of_elements AT idx_skipping TO skip_elements
        SET idx_skipping TO idx_skipping + 2
    END WHILE
    CALL sort ON jump_elements
    SET merged_output TO EMPTY LIST
    SET idx_pair TO 0
    WHILE idx_pair < LENGTH(skip_elements)
        APPEND jump_elements AT idx_pair TO merged_output
        APPEND skip_elements AT idx_pair TO merged_output
        SET idx_pair TO idx_pair + 1
    END WHILE
    IF LENGTH(jump_elements) > LENGTH(skip_elements)
        APPEND jump_elements AT (LENGTH(jump_elements) - 1) TO merged_output
    END IF
    RETURN merged_output
END FUNCTION
```