```
FUNCTION is_sorted(sequence_of_ints)
    DECLARE frequency_map AS dictionary WITH KEYS FROM sequence_of_ints AND VALUES 0
    SET idx TO 0
    WHILE idx < LENGTH(sequence_of_ints)
        LET elem BE sequence_of_ints.at(idx)
        LET temp_count BE frequency_map[elem]
        LET updated_count BE temp_count + 1
        frequency_map[elem] = updated_count
        idx = idx + 1
    LET found_duplicate_more_than_two AS False
    LET j TO 0
    WHILE j < LENGTH(sequence_of_ints)
        IF frequency_map[sequence_of_ints.at(j)] > 2 THEN
            found_duplicate_more_than_two = True
            BREAK
        END IF
        j = j + 1
    IF found_duplicate_more_than_two THEN
        RETURN False
    END IF

    LET ascending_check AS True
    LET k TO 1
    WHILE k < LENGTH(sequence_of_ints)
        IF NOT (sequence_of_ints.at(k - 1) <= sequence_of_ints.at(k)) THEN
            ascending_check = False
            BREAK
        END IF
        k = k + 1
    END WHILE
    IF ascending_check THEN RETURN True ELSE RETURN False
END FUNCTION
```