```
FUNCTION histogram(alpha_sequence)
  DECLARE tally_map AS dictionary <- {}
  DECLARE tokens AS list <- SPLIT alpha_sequence BY " "
  DECLARE top_frequency AS integer <- 0
  DECLARE position AS integer <- 0

  WHILE position < LENGTH(tokens)
    DECLARE current_token AS string <- tokens[position]
    IF current_token != ""
      DECLARE current_count AS integer <- 0
      DECLARE checker AS integer <- 0
      WHILE checker < LENGTH(tokens)
        IF tokens[checker] == current_token
          current_count <- current_count + 1
        checker <- checker + 1
      IF current_count > top_frequency
        top_frequency <- current_count
    position <- position + 1

  IF top_frequency > 0
    DECLARE indexer AS integer <- 0
    WHILE indexer < LENGTH(tokens)
      DECLARE test_token AS string <- tokens[indexer]
      IF test_token != ""
        DECLARE counted AS integer <- 0
        DECLARE inner_pos AS integer <- 0
        WHILE inner_pos < LENGTH(tokens)
          IF tokens[inner_pos] == test_token
            counted <- counted + 1
          inner_pos <- inner_pos + 1
        IF counted == top_frequency
          IF NOT (test_token IN tally_map)
            tally_map[test_token] <- top_frequency
      indexer <- indexer + 1

  RETURN tally_map
END FUNCTION
```