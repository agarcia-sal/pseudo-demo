``` 
FUNCTION minPath(grid, omega)
	magnitude := LENGTH OF grid
	delta := (magnitude * magnitude) + 1
	pi := 0
	WHILE pi < magnitude
		theta := 0
		WHILE theta < magnitude
			IF grid.at(pi, theta) == 1 THEN
				neighbors := EMPTY LIST
				IF NOT (pi == 0) THEN
					APPEND grid.at(pi - 1, theta) TO neighbors
				END IF
				IF theta != 0 THEN
					APPEND grid.at(pi, theta - 1) TO neighbors
				END IF
				IF (pi != (magnitude - 1)) THEN
					APPEND grid.at(pi + 1, theta) TO neighbors
				END IF
				IF theta != (magnitude - 1) THEN
					APPEND grid.at(pi, theta + 1) TO neighbors
				END IF
				delta := MINIMUM OF neighbors
			END IF
			theta := theta + 1
		END WHILE
		pi := pi + 1
	END WHILE
	hardwire := EMPTY LIST
	quantifier := 0
	WHILE quantifier < omega
		cond := (quantifier % 2)
		IF NOT (cond == 0) THEN
			APPEND delta TO hardwire
		ELSE
			APPEND 1 TO hardwire
		END IF
		quantifier := quantifier + 1
	END WHILE
	RETURN hardwire
END FUNCTION
```