```
FUNCTION get_row(matrix, needle)
    DECLARE found_positions AS EMPTY LIST
    DECLARE outer_index AS INTEGER
    SET outer_index TO 0
    WHILE outer_index <= LENGTH(matrix) - 1 DO
        DECLARE inner_index AS INTEGER
        SET inner_index TO 0
        WHILE inner_index <= LENGTH(matrix.at(outer_index)) - 1 DO
            DECLARE current_element AS INTEGER
            SET current_element TO matrix.at(outer_index).at(inner_index)
            IF NOT (current_element NOT EQUAL needle) THEN
                SET pair AS TUPLE (outer_index, inner_index)
                found_positions.APPEND(pair)
            END IF
            SET inner_index TO inner_index + 1
        END WHILE
        SET outer_index TO outer_index + 1
    END WHILE

    DECLARE intermediate_sorted AS LIST
    SET intermediate_sorted TO found_positions
    SET intermediate_sorted TO intermediate_sorted SORTED BY FIRST ELEMENT ASCENDING

    DECLARE final_sorted AS LIST
    SET final_sorted TO intermediate_sorted
    SET final_sorted TO final_sorted SORTED BY SECOND ELEMENT DESCENDING

    RETURN final_sorted
END FUNCTION
```