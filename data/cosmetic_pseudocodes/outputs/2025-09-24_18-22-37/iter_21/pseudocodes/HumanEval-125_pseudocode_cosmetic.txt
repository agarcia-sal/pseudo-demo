FUNCTION split_words(input_string)
    DECLARE contains_space AS BOOLEAN
    DECLARE contains_comma AS BOOLEAN
    DECLARE transformed_string AS STRING
    DECLARE char_list AS LIST OF CHAR
    DECLARE even_lower_count AS INTEGER
    DECLARE current_char AS CHAR
    DECLARE ascii_val AS INTEGER
    DECLARE filtered_chars AS LIST OF CHAR

    contains_space = false
    FOR each_element IN input_string DO
        IF each_element = ' ' THEN
            contains_space = true
            BREAK
        ENDIF
    ENDFOR

    IF contains_space THEN
        RETURN input_string split by whitespace
    ENDIF

    contains_comma = false
    FOR each_element IN input_string DO
        IF each_element = ',' THEN
            contains_comma = true
            BREAK
        ENDIF
    ENDFOR

    IF contains_comma THEN
        transformed_string = empty string
        FOR each_element IN input_string DO
            IF each_element = ',' THEN
                transformed_string = transformed_string concatenated with ' '
            ELSE
                transformed_string = transformed_string concatenated with each_element
            ENDIF
        ENDFOR
        RETURN transformed_string split by whitespace
    ENDIF

    char_list = list of characters in input_string
    filtered_chars = empty list
    FOR index FROM 0 TO LENGTH of char_list - 1 DO
        current_char = char_list.at(index)
        ascii_val = ASCII code of current_char
        IF current_char >= 'a' AND current_char <= 'z' THEN
            IF (ascii_val modulo 2) = 0 THEN
                APPEND current_char TO filtered_chars
            ENDIF
        ENDIF
    ENDFOR

    even_lower_count = LENGTH of filtered_chars
    RETURN even_lower_count
END FUNCTION