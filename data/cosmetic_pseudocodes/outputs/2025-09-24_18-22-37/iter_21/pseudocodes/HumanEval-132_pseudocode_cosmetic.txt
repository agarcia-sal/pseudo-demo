FUNCTION is_nested(alpha)
    DECLARE start_indices AS empty list
    DECLARE end_indices AS empty list

    DECLARE pos AS 0
    WHILE pos < LENGTH(alpha) DO
        DECLARE current_char AS alpha.at(pos)
        SWITCH current_char
            CASE '[':
                start_indices.APPEND(pos)
            DEFAULT:
                end_indices.APPEND(pos)
        END SWITCH
        pos = pos + 1
    END WHILE

    end_indices.REVERSE()

    DECLARE tally AS 0
    DECLARE idx_end AS 0
    DECLARE end_len AS LENGTH(end_indices)

    FOR EACH open_idx IN start_indices DO
        IF idx_end < end_len THEN
            IF open_idx < end_indices.at(idx_end) THEN
                tally = tally + 1
                idx_end = idx_end + 1
            END IF
        END IF
    END FOR

    IF tally >= 2 THEN
        RETURN true
    ELSE
        RETURN false
    END IF
END FUNCTION