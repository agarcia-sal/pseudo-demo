FUNCTION sort_numbers(numeral_sequence)  
    SET digit_values TO DICTIONARY MAPPING
        'zero' TO 0
        'one' TO 1
        'two' TO 2
        'three' TO 3
        'four' TO 4
        'five' TO 5
        'six' TO 6
        'seven' TO 7
        'eight' TO 8
        'nine' TO 9
    
    SET words_list TO EMPTY LIST
    SET temp_words TO SPLIT numeral_sequence BY ' '
    SET idx TO 0
    WHILE idx < LENGTH(temp_words)
        IF temp_words.at(idx) != ''
            APPEND temp_words.at(idx) TO words_list
        END IF
        SET idx TO idx + 1
    END WHILE

    REPEAT  
        SET changed TO false
        SET pos TO 1
        WHILE pos <= LENGTH(words_list) - 1
            SET first_val TO digit_values.at(words_list.at(pos - 1))
            SET second_val TO digit_values.at(words_list.at(pos))
            IF first_val > second_val
                SET temp_word TO words_list.at(pos - 1)
                SET words_list.at(pos - 1) TO words_list.at(pos)
                SET words_list.at(pos) TO temp_word
                SET changed TO true
            END IF
            SET pos TO pos + 1
        END WHILE
    UNTIL changed == false

    SET joined_result TO ''
    SET pointer TO 0
    WHILE pointer < LENGTH(words_list)
        SET joined_result TO joined_result + words_list.at(pointer)
        IF pointer < LENGTH(words_list) - 1
            SET joined_result TO joined_result + ' '
        END IF
        SET pointer TO pointer + 1
    END WHILE

    RETURN joined_result
END FUNCTION