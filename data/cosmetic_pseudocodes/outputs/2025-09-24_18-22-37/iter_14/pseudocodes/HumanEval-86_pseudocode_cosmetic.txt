FUNCTION anti_shuffle(original_text)  
    SET temp_collection TO []  
    SET words_collection TO SPLIT original_text BY " "  
    SET index_var TO 0  
    WHILE index_var LESS THAN LENGTH(words_collection) DO  
        SET temporary_list TO []  
        SET current_element TO words_collection.at(index_var)  
        SET char_index TO 0  
        WHILE char_index LESS THAN LENGTH(current_element) DO  
            ADD current_element.at(char_index) TO temporary_list  
            SET char_index TO char_index PLUS 1  
        END WHILE  
        SET list_length TO LENGTH(temporary_list)  
        SET i_var TO 0  
        WHILE i_var LESS THAN list_length MINUS 1 DO  
            SET j_var TO i_var PLUS 1  
            WHILE j_var LESS THAN list_length DO  
                IF temporary_list.at(i_var) GREATER THAN temporary_list.at(j_var) THEN  
                    SET char_temp TO temporary_list.at(i_var)  
                    SET temporary_list.at(i_var) TO temporary_list.at(j_var)  
                    SET temporary_list.at(j_var) TO char_temp  
                END IF  
                SET j_var TO j_var PLUS 1  
            END WHILE  
            SET i_var TO i_var PLUS 1  
        END WHILE  
        SET assembled_string TO ""  
        SET char_pos TO 0  
        WHILE char_pos LESS THAN list_length DO  
            SET assembled_string TO assembled_string CONCAT temporary_list.at(char_pos)  
            SET char_pos TO char_pos PLUS 1  
        END WHILE  
        ADD assembled_string TO temp_collection  
        SET index_var TO index_var PLUS 1  
    END WHILE  
    SET output_string TO ""  
    SET pos_var TO 0  
    WHILE pos_var LESS THAN LENGTH(temp_collection) DO  
        SET output_string TO output_string CONCAT temp_collection.at(pos_var)  
        IF pos_var NOT EQUAL TO LENGTH(temp_collection) MINUS 1 THEN  
            SET output_string TO output_string CONCAT " "  
        END IF  
        SET pos_var TO pos_var PLUS 1  
    END WHILE  
    RETURN output_string  
END FUNCTION