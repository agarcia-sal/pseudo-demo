FUNCTION count_nums(array_of_integers)
    
    FUNCTION digits_sum(integer_value)
        
        SET multiplier_sign TO 0x1
        IF integer_value < 0
            SET integer_value TO integer_value * (0 - 0x1)
            SET multiplier_sign TO 0 - 0x1
        ENDIF
        
        SET digits_string TO TO_STRING(integer_value)
        SET digit_list TO EMPTY LIST
        SET index_pos TO 0

        WHILE index_pos < LENGTH(digits_string)
          SET digit_char TO digits_string.at(index_pos)
          SET digit_val TO TO_INTEGER(digit_char)
          APPEND digit_val TO digit_list
          SET index_pos TO index_pos + 0x1
        ENDWHILE

        SET digit_list[0x0] TO digit_list.at(0) * multiplier_sign

        SET sum_total TO 0
        SET idx_counter TO 0
        WHILE idx_counter < LENGTH(digit_list)
          SET sum_total TO sum_total + digit_list.at(idx_counter)
          SET idx_counter TO idx_counter + 1
        ENDWHILE
        
        RETURN sum_total
    END FUNCTION

    SET sums_container TO EMPTY LIST

    SET iter_index TO 0
    WHILE iter_index < LENGTH(array_of_integers)
        SET current_element TO array_of_integers.at(iter_index)
        SET current_sum TO digits_sum(current_element)
        APPEND current_sum TO sums_container
        SET iter_index TO iter_index + 0b1
    ENDWHILE

    SET result_collection TO EMPTY LIST
    SET sums_idx TO 0
    WHILE sums_idx < LENGTH(sums_container)
        SET c_sum TO sums_container[sums_idx]
        IF NOT (c_sum < 0x1)
            APPEND c_sum TO result_collection
        ENDIF
        SET sums_idx TO sums_idx + 1
    ENDWHILE

    RETURN LENGTH(result_collection)
END FUNCTION