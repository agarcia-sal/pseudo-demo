FUNCTION minPath(matrix, limit)
 n := LENGTH(matrix)
 threshold := ((n * n) + 1)

 row_index := 0
 WHILE row_index < n DO
  col_index := 0
  WHILE col_index < n DO
   cell := matrix.at(row_index).at(col_index)
   IF cell == 1 THEN
    neighbors := EMPTY LIST
    IF row_index <> 0 THEN
     neighbors.APPEND(matrix[(row_index - 1)].at(col_index))
    END IF
    IF col_index <> 0 THEN
     neighbors.APPEND(matrix.at(row_index).at(col_index - 1))
    END IF
    IF row_index <> (n - 1) THEN
     neighbors.APPEND(matrix[(row_index + 1)].at(col_index))
    END IF
    IF col_index <> (n - 1) THEN
     neighbors.APPEND(matrix.at(row_index).at(col_index + 1))
    END IF
    threshold := MINIMUM(neighbors)
   END IF
   col_index := col_index + 1
  END WHILE
  row_index := row_index + 1
 END WHILE
 output := EMPTY LIST
 counter := 0
 FOR counter FROM 0 TO (limit - 1) DO
  IF (counter MOD 2) == 0 THEN
   output.APPEND(1)
  ELSE
   output.APPEND(threshold)
  END IF
 END FOR
 RETURN output
END FUNCTION