```
FUNCTION is_nested(inputString)
    DECLARE leftIndices AS empty list
    DECLARE rightIndices AS empty list

    DECLARE pointer AS 0
    DECLARE strLen AS LENGTH OF inputString
    WHILE pointer < strLen
        DECLARE currentChar AS inputString.at(pointer)
        IF currentChar = '[' THEN 
            leftIndices.APPEND(pointer)
        ELSE
            rightIndices.APPEND(pointer)
        END IF
        pointer = pointer + 1
    END WHILE

    rightIndices.REVERSE()

    DECLARE leftCount AS 0
    DECLARE rightPos AS 0
    DECLARE rightLen AS LENGTH OF rightIndices

    DECLARE idxIter AS 0
    WHILE idxIter < LENGTH OF leftIndices
        DECLARE leftVal AS leftIndices.at(idxIter)

        IF rightPos < rightLen AND leftVal < rightIndices.at(rightPos) THEN
            leftCount = leftCount + 1
            rightPos = rightPos + 1
        ELSE
            ; /* no operation needed here */
        END IF

        idxIter = idxIter + 1
    END WHILE

    RETURN (leftCount >= 2)
END FUNCTION
```