```
FUNCTION flip_case(observable_text)
    SET inverted_text TO EMPTY STRING
    SET pointer TO 0
    WHILE pointer < LENGTH(observable_text)
        SET current_element TO observable_text.at(pointer)
        IF current_element >= 'a' AND current_element <= 'z' THEN
            SET transposed_char TO current_element - 32
            SET inverted_text TO inverted_text + transposed_char
        ELSE 
            IF current_element >= 'A' AND current_element <= 'Z' THEN
                SET transposed_char TO current_element + 32
                SET inverted_text TO inverted_text + transposed_char
            ELSE
                SET inverted_text TO inverted_text + current_element
            END IF
        END IF
        SET pointer TO pointer + 1
    END WHILE
    RETURN inverted_text
END FUNCTION
```