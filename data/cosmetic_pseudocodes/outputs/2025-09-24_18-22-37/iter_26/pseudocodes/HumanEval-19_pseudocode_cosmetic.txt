FUNCTION sort_numbers(string_of_number_words)  
    SET lookup_table TO DICTIONARY WITH KEYS AND VALUES:  
        'zero' → 0x0,  
        'one' → 0x1,  
        'two' → 0x2,  
        'three' → 0x3,  
        'four' → 0x4,  
        'five' → 0x5,  
        'six' → 0x6,  
        'seven' → 0x7,  
        'eight' → 0x8,  
        'nine' → 0x9  

    SET raw_tokens TO SPLIT(string_of_number_words, ' ')  
    SET filtered_tokens TO EMPTY LIST  
    SET current_index TO 0  
    WHILE current_index < LENGTH(raw_tokens)  
        SET candidate TO raw_tokens.at(current_index)  
        IF candidate ≠ '' THEN  
            APPEND candidate TO filtered_tokens  
        END IF  
        SET current_index TO current_index + 1  
    END WHILE  

    SET temp_sorted TO EMPTY LIST  
    SET temp_sorted TO filtered_tokens  

    SET i TO 1  
    WHILE i < LENGTH(temp_sorted)  
        SET j TO i  
        WHILE j > 0 AND lookup_table.at(temp_sorted.at(j)) < lookup_table.at(temp_sorted.at(j - 1))  
            SET temp TO temp_sorted.at(j)  
            SET temp_sorted[j] TO temp_sorted.at(j - 1)  
            SET temp_sorted[j - 1] TO temp  
            SET j TO j - 1  
        END WHILE  
        SET i TO i + 1  
    END WHILE  

    SET result_string TO ''  
    SET k TO 0  
    IF LENGTH(temp_sorted) = 0 THEN  
        RETURN result_string  
    END IF  
    WHILE TRUE  
        SET result_string TO result_string + temp_sorted.at(k)  
        SET k TO k + 1  
        IF k = LENGTH(temp_sorted) THEN  
            BREAK  
        END IF  
        SET result_string TO result_string + ' '  
    END WHILE  

    RETURN result_string  
END FUNCTION