```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(x)
        DECLARE str_form = TO_STRING(x)
        DECLARE rev_str = REVERSE(str_form)
        IF str_form = rev_str THEN
            RETURN TRUE
        ELSE
            RETURN FALSE
        END IF
    END FUNCTION

    DECLARE count_even = 0
    DECLARE count_odd = 0
    DECLARE index = 1

    WHILE index <= n
        DECLARE modulo_result = index MOD 2
        DECLARE palindrome_check = is_palindrome(index)

        SWITCH modulo_result
            CASE 0:
                IF palindrome_check = TRUE THEN
                    count_even = count_even + 1
                END IF
                BREAK
            CASE 1:
                IF palindrome_check = TRUE THEN
                    count_odd = count_odd + 1
                END IF
                BREAK
            DEFAULT:
                ; ; ; ; ;; ;; ;; ;;; ;; ; ;; ;; ;; ;;; ;; ;; ;; ;; ;;; ;; ;; ;; ;;; ;; ;; ;;; ;; ;;
        END SWITCH

        index = index + 1
    END WHILE

    RETURN (count_even, count_odd)
END FUNCTION
```