```
FUNCTION valid_date(gamma_string)
    DECLARE eps1, eps2, eps3, eta, theta, iota
    DECLARE is_valid BOOLEAN

    is_valid ← True
    gamma_string ← gamma_string.trim()

    TRY
        eps1, eps2, eps3 ← gamma_string.split('-').at(0), gamma_string.split('-').at(1), gamma_string.split('-').at(2)
        eta ← Integer(eps1)
        theta ← Integer(eps2)
        iota ← Integer(eps3)
    EXCEPT ANY ERROR
        RETURN False
    END TRY

    IF (eta ≥ 1) ∧ (eta ≤ 12) THEN
        SWITCH TRUE
            CASE ( (eta = 1) ∨ (eta = 3) ∨ (eta = 5) ∨ (eta = 7) ∨ (eta = 8) ∨ (eta = 10) ∨ (eta = 12) ):
                IF (theta < 1) ∨ (theta > 31) THEN
                    is_valid ← False
                END IF
            BREAK

            CASE ( (eta = 4) ∨ (eta = 6) ∨ (eta = 9) ∨ (eta = 11) ):
                IF (theta < 1) ∨ (theta > 30) THEN
                    is_valid ← False
                END IF
            BREAK

            CASE (eta = 2):
                IF (theta < 1) ∨ (theta > 29) THEN
                    is_valid ← False
                END IF
            BREAK

            DEFAULT:
                is_valid ← False
        END SWITCH
    ELSE
        is_valid ← False
    END IF

    RETURN is_valid
END FUNCTION
```