FUNCTION count_nums(faux_data)
    FUNCTION digits_sum(fake_num)
        SET multiplier_sign TO 0x1
        WHILE true
            SWITCH (fake_num < 0x0)
                CASE true:
                    SET fake_num TO fake_num * (- 0x1)
                    SET multiplier_sign TO -0x1
                    BREAK
                DEFAULT:
                    BREAK
            END SWITCH
            BREAK
        END WHILE

        SET temp_str TO TO_STRING(fake_num)
        SET digits_collection TO EMPTY LIST
        SET idx_counter TO 0
        WHILE idx_counter < LENGTH(temp_str)
            APPEND TO digits_collection INTEGER_AT(temp_str, idx_counter)
            SET idx_counter TO idx_counter + 1
        END WHILE

        SET digits_collection[0x0] TO digits_collection[0] * multiplier_sign

        SET sum_result TO 0
        SET indexer TO 0
        WHILE indexer < LENGTH(digits_collection)
            SET sum_result TO sum_result + digits_collection[indexer]
            SET indexer TO indexer + 1
        END WHILE
        RETURN sum_result
    END FUNCTION

    SET aggregated_sums TO []
    SET position_tracker TO 0
    WHILE position_tracker < LENGTH(faux_data)
        SET val_cur TO faux_data.at(position_tracker)
        APPEND digits_sum(val_cur) TO aggregated_sums
        SET position_tracker TO position_tracker + 1
    END WHILE

    SET resulting_filtered TO []
    SET iter_pos TO 0
    WHILE iter_pos < LENGTH(aggregated_sums)
        IF aggregated_sums.at(iter_pos) > 0 THEN
            APPEND aggregated_sums.at(iter_pos) TO resulting_filtered
        END IF
        SET iter_pos TO iter_pos + 1
    END WHILE

    RETURN LENGTH(resulting_filtered)
END FUNCTION