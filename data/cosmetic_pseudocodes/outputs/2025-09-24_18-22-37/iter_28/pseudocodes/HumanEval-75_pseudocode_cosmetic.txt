FUNCTION is_multiply_prime(alpha)
    FUNCTION is_prime(beta)
        gamma ← 2
        WHILE gamma < (beta - 1) + 1
            delta ← beta MODULO gamma
            switch delta
                case 0:
                    RETURN False
                default:
                    // do nothing
            gamma ← gamma + 1
        return_flag ← True
        RETURN return_flag
    END FUNCTION

    m ← 2
    flag_outer ← False
    WHILE m ≤ 100
        if_prime_m ← is_prime(m)
        if NOT if_prime_m
            m ← m + 1
            CONTINUE
        n ← 2
        WHILE n ≤ 100
            if_prime_n ← is_prime(n)
            if NOT if_prime_n
                n ← n + 1
                CONTINUE
            p ← 2
            WHILE p ≤ 100
                value_prime_p ← is_prime(p)
                if NOT value_prime_p
                    p ← p + 1
                    CONTINUE
                temp_product_1 ← m * n
                temp_product_2 ← temp_product_1 * p
                if temp_product_2 = alpha
                    flag_outer ← True
                    break_loop_flag ← True
                    p ← 101
                else
                    break_loop_flag ← False
                p ← p + 1
            IF flag_outer
                n ← 101
            else
                n ← n + 1
        IF flag_outer
            m ← 101
        else
            m ← m + 1
    RETURN flag_outer
END FUNCTION