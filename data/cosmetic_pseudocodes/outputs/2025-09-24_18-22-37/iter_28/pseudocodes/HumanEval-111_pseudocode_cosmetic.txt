FUNCTION histogram(input_sequence)
    SET occurrence_map TO new empty dictionary
    SET tokens TO SPLIT input_sequence BY " "
    SET peak_value TO 0

    SET index_var TO 0
    WHILE index_var < LENGTH(tokens)
        SET current_char TO tokens.at(index_var)
        SET char_frequency TO 0

        SET inner_index TO 0
        WHILE inner_index < LENGTH(tokens)
            IF tokens.at(inner_index) = current_char
                SET char_frequency TO char_frequency + 1
            SET inner_index TO inner_index + 1

        IF current_char != ""
            IF char_frequency > peak_value
                SET peak_value TO char_frequency

        SET index_var TO index_var + 1

    SET proceed_flag TO peak_value > 0
    SWITCH proceed_flag
        CASE true:
            SET j TO LENGTH(tokens) - 1
            WHILE j >= 0
                SET candidate_char TO tokens.at(j)
                SET candidate_count TO 0

                SET k TO 0
                WHILE k < LENGTH(tokens)
                    IF tokens.at(k) = candidate_char
                        SET candidate_count TO candidate_count + 1
                    SET k TO k + 1

                IF candidate_count = peak_value
                    SET occurrence_map[candidate_char] TO peak_value

                SET j TO j - 1
        CASE false:
            # Do nothing

    RETURN occurrence_map
END FUNCTION