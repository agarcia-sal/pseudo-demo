```
FUNCTION sort_even(list_of_elements)
    SET temp_var1 TO EMPTY LIST
    SET temp_var2 TO EMPTY LIST
    SET idx_i TO 0
    WHILE idx_i < LENGTH(list_of_elements)
        IF (idx_i MOD 2) EQUALS 0 THEN
            APPEND list_of_elements.at(idx_i) TO temp_var1
        ELSE
            APPEND list_of_elements.at(idx_i) TO temp_var2
        END IF
        SET idx_i TO idx_i + 1
    END WHILE

    SET cmp_flag TO TRUE
    WHILE cmp_flag
        SET cmp_flag TO FALSE
        SET pos_j TO 0
        WHILE pos_j < LENGTH(temp_var1) - 1
            IF temp_var1.at(pos_j) > temp_var1.at(pos_j + 1) THEN
                SET temp_swap TO temp_var1.at(pos_j)
                SET temp_var1[pos_j] TO temp_var1.at(pos_j + 1)
                SET temp_var1[pos_j + 1] TO temp_swap
                SET cmp_flag TO TRUE
            END IF
            SET pos_j TO pos_j + 1
        END WHILE
    END WHILE

    SET result_list TO EMPTY LIST
    SET it_even TO 0
    SET it_odd TO 0
    WHILE it_even < LENGTH(temp_var1) AND it_odd < LENGTH(temp_var2)
        APPEND temp_var1.at(it_even) TO result_list
        APPEND temp_var2.at(it_odd) TO result_list
        SET it_even TO it_even + 1
        SET it_odd TO it_odd + 1
    END WHILE

    SWITCH
        CASE LENGTH(temp_var1) > LENGTH(temp_var2):
            APPEND temp_var1.at(LENGTH(temp_var1) - 1) TO result_list
            BREAK
        DEFAULT:
            // Do nothing
    END SWITCH

    RETURN result_list
END FUNCTION
```