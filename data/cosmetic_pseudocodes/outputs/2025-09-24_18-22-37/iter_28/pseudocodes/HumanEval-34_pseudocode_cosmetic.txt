FUNCTION unique(apple)
    DECLARE red AS SET
    DECLARE blue AS LIST
    SET red TO EMPTY SET
    DECLARE tiger AS INTEGER
    SET tiger TO 0
    WHILE tiger < LENGTH(apple)
        SET red TO red UNION {apple.at(tiger)}
        SET tiger TO tiger + 1
    END WHILE
    DECLARE green AS LIST
    SET green TO EMPTY LIST
    FOR diamond IN red
        APPEND diamond TO green
    END FOR
    DECLARE basket AS LIST
    SET basket TO EMPTY LIST
    DECLARE alpha AS INTEGER
    SET alpha TO 0
    WHILE alpha < LENGTH(green)
        DECLARE beta AS INTEGER
        DECLARE gamma AS INTEGER
        SET beta TO alpha
        WHILE beta < LENGTH(green)
            IF green.at(alpha) > green.at(beta) THEN
                SET gamma TO green.at(alpha)
                SET green[alpha] TO green.at(beta)
                SET green[beta] TO gamma
            END IF
            SET beta TO beta + 1
        END WHILE
        SET alpha TO alpha + 1
    END WHILE
    SET basket TO green
    RETURN basket
END FUNCTION