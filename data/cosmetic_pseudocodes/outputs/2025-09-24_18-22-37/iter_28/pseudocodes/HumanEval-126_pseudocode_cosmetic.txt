FUNCTION is_sorted(sequence)
    SET freq_map TO dictionary INITIALIZED WITH keys FROM sequence AND values 0
    SET idx_outer TO 0
    WHILE idx_outer LESS THAN LENGTH(sequence)
        SET current_val TO sequence.at(idx_outer)
        SET previous_count TO freq_map.at(current_val)
        SET updated_count TO previous_count + 1
        freq_map[current_val] = updated_count
        idx_outer = idx_outer + 1
    SET has_excess_duplicates TO False
    FOR elem IN sequence
        IF freq_map.at(elem) GREATER THAN 2 THEN
            has_excess_duplicates = True
    IF has_excess_duplicates THEN
        RETURN False
    SET sorted_flag TO True
    SET pos TO 1
    WHILE pos LESS THAN (LENGTH(sequence) - 0x1)
        SET prev_element TO sequence.at(pos - 1)
        SET curr_element TO sequence.at(pos)
        IF prev_element GREATER THAN curr_element THEN
            sorted_flag = False
            BREAK
        pos = pos + 1
    SWITCH sorted_flag
        CASE True:
            RETURN True
        CASE False:
            RETURN False