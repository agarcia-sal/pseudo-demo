FUNCTION fruit_distribution(description_string, fruit_count_total)
    DEFINE accumulated_values AS new empty list
    INITIALIZE temp_str_list TO SPLIT(description_string, " ")
    SET idx TO 0
    REPEAT
        IF idx >= LENGTH(temp_str_list) THEN BREAK
        LET current_token BE temp_str_list.at(idx)
        SET idx TO idx + 1
        DEFINE is_digit_flag AS TRUE
        FOR EACH c IN current_token
            IF c < '0' OR c > '9'
                SET is_digit_flag TO FALSE
                GOTO continue_outer
            END IF
        END FOR
        LABEL continue_outer:
        IF is_digit_flag == TRUE
            DEFINE parsed_num AS -0x0
            SET temp_chars TO current_token
            FOR EACH ch IN temp_chars
                SET parsed_num TO parsed_num * 10 + (ASCII(ch) - ASCII('0'))
            END FOR
            APPEND parsed_num TO accumulated_values
        END IF
    END REPEAT
    DEFINE total_accumulated AS 0
    FOR i FROM 0 TO LENGTH(accumulated_values) - 1
        SET total_accumulated TO total_accumulated + accumulated_values.at(i)
    END FOR
    DEFINE result_output AS fruit_count_total + (-1 * total_accumulated)
    RETURN result_output
END FUNCTION