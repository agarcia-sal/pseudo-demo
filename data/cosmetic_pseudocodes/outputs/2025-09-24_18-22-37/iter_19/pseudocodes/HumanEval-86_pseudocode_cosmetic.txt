```
FUNCTION anti_shuffle(input_string)
    SET temp_words TO SPLIT(input_string) BY " "
    SET accumulated_sorted_words TO []
    SET idx_counter TO 0
    REPEAT
        IF idx_counter >= LENGTH(temp_words) THEN 
            EXIT
        END IF
        SET current_word TO temp_words.at(idx_counter)
        SET char_list TO []
        SET char_index TO 0
        WHILE char_index < LENGTH(current_word) DO
            ADD current_word.at(char_index) TO char_list
            SET char_index TO char_index + 1
        END WHILE
        SET char_list_sorted TO []
        SET min_found TO NULL
        SET remaining_chars TO char_list
        WHILE LENGTH(remaining_chars) > 0 DO
            SET min_char TO remaining_chars.at(0)
            FOR each element IN remaining_chars
                IF element < min_char THEN
                    SET min_char TO element
                END IF
            END FOR
            ADD min_char TO char_list_sorted
            REMOVE first occurrence of min_char FROM remaining_chars
        END WHILE
        SET reformed_word TO ""
        FOR each character_element IN char_list_sorted
            SET reformed_word TO reformed_word + character_element
        END FOR
        ADD reformed_word TO accumulated_sorted_words
        SET idx_counter TO idx_counter + 1
    END REPEAT
    SET output_string TO ""
    SET combined_index TO 0
    WHILE combined_index < LENGTH(accumulated_sorted_words)
        SET output_string TO output_string + accumulated_sorted_words.at(combined_index)
        IF combined_index != (LENGTH(accumulated_sorted_words) - 1) THEN
            SET output_string TO output_string + " "
        END IF
        SET combined_index TO combined_index + 1
    END WHILE
    RETURN output_string
END FUNCTION
```