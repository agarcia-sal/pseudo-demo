```
FUNCTION hex_key(string_num)
    DEFINE prime_set AS ('2', '3', '5', '7', 'B', 'D')
    LET accumulator BE 0
    LET position BE 0
    REPEAT
        IF position > (LENGTH(string_num) - 1) THEN
            EXIT LOOP
        END IF
        LET current_char BE string_num.at(position)
        SWITCH TRUE
            CASE current_char EQUALS prime_set.at(0):
            CASE current_char EQUALS prime_set.at(1):
            CASE current_char EQUALS prime_set.at(2):
            CASE current_char EQUALS prime_set.at(3):
            CASE current_char EQUALS prime_set.at(4):
            CASE current_char EQUALS prime_set.at(5):
                accumulator ← accumulator + 1
                BREAK SWITCH
        END SWITCH
        position ← position + 1
    UNTIL FALSE
    RETURN accumulator
END FUNCTION
```