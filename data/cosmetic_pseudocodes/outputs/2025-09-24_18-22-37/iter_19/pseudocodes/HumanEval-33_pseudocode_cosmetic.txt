```
FUNCTION sort_third(list_input)
    DECLARE temp_list AS LIST
    DECLARE extract_indices AS LIST
    DECLARE sorted_subset AS LIST
    DECLARE idx_counter AS INTEGER
    DECLARE idx_holder AS INTEGER

    temp_list ← COPY(list_input) AS LIST
    extract_indices ← EMPTY LIST
    idx_counter ← 0

    REPEAT WHILE idx_counter < LENGTH(temp_list)
        idx_holder ← idx_counter
        IF ((idx_holder MOD 3) == 0) THEN
            APPEND temp_list.at(idx_holder) TO extract_indices
        END IF
        idx_counter ← idx_counter + 1
    END REPEAT

    sorted_subset ← SORT_ASCENDING(extract_indices)

    idx_counter ← 0
    DECLARE replace_pos AS INTEGER
    replace_pos ← 0

    WHILE idx_counter < LENGTH(temp_list)
        IF ((idx_counter MOD 3) == 0) THEN
            temp_list.at(idx_counter) ← sorted_subset.at(replace_pos)
            replace_pos ← replace_pos + 1
        END IF
        idx_counter ← idx_counter + 1
    END WHILE

    RETURN temp_list
END FUNCTION
```