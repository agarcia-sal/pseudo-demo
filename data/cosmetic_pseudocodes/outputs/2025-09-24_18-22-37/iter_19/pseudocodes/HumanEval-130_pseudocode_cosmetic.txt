```
FUNCTION tri(parameter_h)
    DECLARE local_y AS LIST
    IF NOT(parameter_h NOT EQUAL TO 0)
        SET local_y TO [1]
        RETURN local_y
    ELSE
        SET local_y TO [1, 3]
        DECLARE variable_q AS INTEGER
        SET variable_q TO 2
        WHILE variable_q <= parameter_h
            DECLARE variable_z AS INTEGER
            DECLARE variable_w AS INTEGER
            DECLARE variable_v AS INTEGER
            DECLARE variable_u AS INTEGER
            SET variable_z TO variable_q MOD 2
            SWITCH variable_z
                CASE 0:
                    SET variable_w TO (variable_q DIV 2) + 1
                    APPEND variable_w TO local_y
                    BREAK
                CASE 1:
                    SET variable_u TO parameter_h + 3
                    SET variable_v TO variable_q + 3
                    SET variable_u TO variable_v DIV 2
                    SET variable_w TO local_y.at(variable_q - 1) + local_y.at(variable_q - 2) + variable_u
                    APPEND variable_w TO local_y
                    BREAK
            END SWITCH
            SET variable_q TO variable_q + 1
        END WHILE
        RETURN local_y
    END IF
END FUNCTION
```