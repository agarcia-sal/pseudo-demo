FUNCTION prod_signs(input_list)
	variable null_result_flag, zero_present_flag, negative_counter, temp_sign, accumulator, current_element
	accumulator ← 0
	null_result_flag ← FALSE
	zero_present_flag ← FALSE

	iterator_index ← 0
	WHILE iterator_index LESS THAN LENGTH OF input_list
		current_element ← input_list.at(iterator_index)
		IF current_element EQUALS 0
			zero_present_flag ← TRUE
		END IF
		iterator_index ← iterator_index PLUS 1
	END WHILE

	iterator_index ← 0
	WHILE iterator_index LESS THAN LENGTH OF input_list
		accumulator ← accumulator PLUS ABSOLUTE VALUE OF input_list.at(iterator_index)
		iterator_index ← iterator_index PLUS 1
	END WHILE

	IF LENGTH OF input_list EQUALS 0
		null_result_flag ← TRUE
	END IF

	IF null_result_flag IS TRUE
		RETURN None
	END IF

	SWITCH zero_present_flag
		CASE TRUE
			temp_sign ← 0
		CASE FALSE
			negative_counter ← 0
			iterator_index ← 0
			WHILE iterator_index LESS THAN LENGTH OF input_list
				current_element ← input_list.at(iterator_index)
				IF current_element LESS THAN 0
					negative_counter ← negative_counter PLUS 1
				END IF
				iterator_index ← iterator_index PLUS 1
			END WHILE
			exp_base ← -1
			exp_exponent ← negative_counter
			temp_sign ← 1
			WHILE exp_exponent GREATER THAN 0
				temp_sign ← temp_sign MULTIPLIED BY exp_base
				exp_exponent ← exp_exponent MINUS 1
			END WHILE
	END SWITCH

	RETURN temp_sign MULTIPLIED BY accumulator
END FUNCTION