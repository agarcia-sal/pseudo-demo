FUNCTION pluck(nodes_collection)  
    SET zeroItems TO 0  
    SET totalCount TO 0  
    SET resultList TO empty_list  
    SET filteredEvens TO empty_list  
    SET currentIndex TO 0  
    SET minimalEvenVal TO 0  
    SET minimalEvenPos TO 0  

    totalCount <- LENGTH OF nodes_collection  
    zeroItems <- totalCount - totalCount  

    IF zeroItems = totalCount THEN  
        RETURN resultList  
    END IF  

    SET iterCounter TO 0  
    WHILE iterCounter < totalCount DO  
        SET elementVal TO nodes_collection.at(iterCounter)  
        IF elementVal MODULO 2 = zeroItems THEN  
            filteredEvens.ADD(elementVal)  
        END IF  
        iterCounter <- iterCounter + 1  
    END WHILE  

    IF LENGTH OF filteredEvens = zeroItems THEN  
        RETURN resultList  
    END IF  

    minimalEvenVal <- filteredEvens.at(0)  
    SET posCounter TO 1  
    WHILE posCounter < LENGTH OF filteredEvens DO  
        IF filteredEvens.at(posCounter) < minimalEvenVal THEN  
            minimalEvenVal <- filteredEvens.at(posCounter)  
        END IF  
        posCounter <- posCounter + 1  
    END WHILE  

    SET searchIndex TO 0  
    WHILE searchIndex < totalCount DO  
        IF nodes_collection.at(searchIndex) = minimalEvenVal THEN  
            minimalEvenPos <- searchIndex  
            BREAK  
        END IF  
        searchIndex <- searchIndex + 1  
    END WHILE  

    resultList.ADD(minimalEvenVal)  
    resultList.ADD(minimalEvenPos)  
    RETURN resultList  
END FUNCTION