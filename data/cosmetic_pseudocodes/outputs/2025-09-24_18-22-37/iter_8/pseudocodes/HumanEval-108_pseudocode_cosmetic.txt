FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET sign_flipper TO 1
        IF integer_value < 0 THEN
            SET integer_value TO (-1) * integer_value
            SET sign_flipper TO (-1)
        END IF
        SET integer_as_string TO CONVERT integer_value TO STRING
        SET array_of_characters TO CONVERT integer_as_string TO LIST
        SET list_of_digits TO EMPTY LIST
        SET idx_counter TO 0
        WHILE idx_counter LESS THAN LENGTH OF array_of_characters
            SET current_char TO array_of_characters.at(idx_counter)
            SET current_digit TO CONVERT current_char TO INTEGER
            APPEND current_digit TO list_of_digits
            SET idx_counter TO idx_counter PLUS 1
        END WHILE
        SET first_digit TO list_of_digits.at(0)
        SET adjusted_first_digit TO first_digit MULTIPLIED BY sign_flipper
        SET list_of_digits AT INDEX 0 TO adjusted_first_digit
        SET accumulator TO 0
        SET accumulator TO accumulator PLUS list_of_digits.at(0)
        SET idx_iterator TO 1
        WHILE idx_iterator LESS THAN LENGTH OF list_of_digits
            SET accumulator TO accumulator PLUS list_of_digits.at(idx_iterator)
            SET idx_iterator TO idx_iterator PLUS 1
        END WHILE
        RETURN accumulator
    END FUNCTION

    SET temp_sums_list TO EMPTY LIST
    SET arr_idx TO 0
    WHILE arr_idx LESS THAN LENGTH OF array_of_integers
        SET element TO array_of_integers.at(arr_idx)
        SET digit_sum_result TO digits_sum(element)
        APPEND digit_sum_result TO temp_sums_list
        SET arr_idx TO arr_idx PLUS 1
    END WHILE

    SET positive_elements TO EMPTY LIST
    SET temp_idx TO 0
    WHILE temp_idx LESS THAN LENGTH OF temp_sums_list
        SET candidate TO temp_sums_list.at(temp_idx)
        IF candidate > 0 THEN
            APPEND candidate TO positive_elements
        END IF
        SET temp_idx TO temp_idx PLUS 1
    END WHILE

    RETURN LENGTH OF positive_elements
END FUNCTION