FUNCTION is_sorted(input_sequence)
  INITIALIZE frequency_map AS new dictionary MAPPED FROM input_sequence KEYS TO 0

  SET idx_counter TO 0
  WHILE idx_counter < LENGTH(input_sequence)
        SET current_key TO input_sequence.at(idx_counter)
        SET existing_count TO frequency_map.at(current_key)
        SET updated_count TO existing_count plus 1
        UPDATE frequency_map AT current_key TO updated_count
        idx_counter INCREMENT BY 1

  SET violation_found TO False
  SET iter_idx TO 0
  WHILE iter_idx < LENGTH(input_sequence)
      IF frequency_map.at(input_sequence.at(iter_idx)) GREATER THAN 2
        SET violation_found TO True
        BREAK
      iter_idx INCREMENT BY 1

  IF violation_found EQUALS True
       RETURN False

  SET prev_index TO 1
  WHILE prev_index < LENGTH(input_sequence)
      SET previous_element TO input_sequence.at(prev_index minus 1)
      SET current_element TO input_sequence.at(prev_index)
      IF previous_element GREATER THAN current_element
         RETURN False
      prev_index INCREMENT BY 1

  RETURN True
END FUNCTION