FUNCTION even_odd_palindrome(x)
    FUNCTION is_palindrome(y)
        SET str_val TO STRING REPRESENTATION OF y
        SET rev_str TO EMPTY STRING
        SET idx TO LENGTH OF str_val MINUS 1
        WHILE idx GREATER OR EQUAL TO 0
            SET rev_str TO rev_str PLUS str_val.at(idx)
            DECREMENT idx BY 1
        END WHILE
        IF str_val EQUALS rev_str
            RETURN TRUE
        ELSE
            RETURN FALSE
        END IF
    END FUNCTION

    SET count_even_pal TO 0
    SET count_odd_pal TO 0
    SET num TO 1
    WHILE TRUE
        IF num GREATER THAN x
            BREAK
        END IF

        SET remainder_mod_2 TO num MODULO 2
        SET palindrome_flag TO is_palindrome(num)
        SWITCH remainder_mod_2
            CASE 1:
                IF palindrome_flag IS TRUE
                    SET temp_to_increment TO count_odd_pal PLUS 1
                    SET count_odd_pal TO temp_to_increment
                END IF
                BREAK
            CASE 0:
                IF palindrome_flag IS TRUE
                    SET count_even_pal TO count_even_pal PLUS 1
                END IF
                BREAK
        END SWITCH
        SET num TO num PLUS 1
    END WHILE

    RETURN TUPLE(count_even_pal, count_odd_pal)
END FUNCTION