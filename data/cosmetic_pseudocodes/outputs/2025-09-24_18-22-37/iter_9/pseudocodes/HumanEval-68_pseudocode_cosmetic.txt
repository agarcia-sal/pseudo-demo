```
FUNCTION pluck(nodes_collection)
    DECLARE result_collection AS empty_list

    IF NOT (0 IS EQUAL TO LENGTH OF nodes_collection)
    THEN
        DECLARE temporary_even_collection AS empty_list
        FOR position FROM 1 TO LENGTH OF nodes_collection
            DECLARE current_node AS nodes_collection.at(position)
            DECLARE is_even_flag AS ((current_node MODULO 2) IS EQUAL TO 0)
            IF is_even_flag
                APPEND current_node TO temporary_even_collection
            END IF
        END FOR

        IF NOT (0 IS EQUAL TO LENGTH OF temporary_even_collection)
        THEN
            DECLARE current_minimum AS temporary_even_collection.at(1)
            DECLARE minimum_position AS 1
            DECLARE iterator AS 1

            WHILE iterator <= LENGTH OF temporary_even_collection
                IF temporary_even_collection.at(iterator) LESS THAN current_minimum
                    SET current_minimum TO temporary_even_collection.at(iterator)
                    SET minimum_position TO iterator
                END IF
                INCREMENT iterator BY 1
            END WHILE

            DECLARE final_index AS 1
            DECLARE search_index AS 1
            WHILE search_index <= LENGTH OF nodes_collection
                IF nodes_collection.at(search_index) IS EQUAL TO current_minimum
                    SET final_index TO search_index
                    BREAK
                END IF
                INCREMENT search_index BY 1
            END WHILE

            APPEND current_minimum TO result_collection
            APPEND final_index TO result_collection

            RETURN result_collection
        ELSE
            RETURN result_collection
        END IF
    ELSE
        RETURN result_collection
    END IF
END FUNCTION
```