FUNCTION tri(param_m)
    DECLARE result_list
    IF NOT (param_m NOT EQUAL TO 0) THEN
        RETURN [1]
    ELSE
        result_list ← [1, 3]
    END IF

    DECLARE counter_var ← 2
    WHILE counter_var - 1 < param_m
        SWITCH TRUE
            CASE (counter_var MODULO 2 EQUALS 0):
                DECLARE temp_val ← (counter_var DIVIDED BY 2) PLUS 1
                result_list.APPEND(temp_val)
                BREAK
            DEFAULT:
                DECLARE idx1 ← counter_var MINUS 1
                DECLARE idx2 ← counter_var MINUS 2
                DECLARE temp_sum ← (result_list AT idx1) PLUS (result_list AT idx2)
                DECLARE temp_div ← (counter_var PLUS 3) DIVIDED BY 2
                DECLARE combined_val ← temp_sum PLUS temp_div
                result_list.APPEND(combined_val)
                BREAK
        END SWITCH
        counter_var ← counter_var PLUS 1
    END WHILE
    RETURN result_list
END FUNCTION