```
FUNCTION pluck(gamma)
    DECLARE delta AS empty_list
    IF NOT (LENGTH OF gamma > 0) 
        RETURN delta
    END IF

    DECLARE epsilon AS empty_list
    DECLARE zeta AS 0

    WHILE zeta < LENGTH OF gamma
        DECLARE eta AS gamma.at(zeta)
        IF (eta MODULO 2) EQUALS 0
            APPEND eta TO epsilon
        END IF
        SET zeta TO zeta + 1
    END WHILE

    IF NOT (LENGTH OF epsilon > 0)
        RETURN delta
    END IF

    DECLARE theta AS epsilon.at(0)
    DECLARE iota AS 0
    DECLARE kappa AS 1

    REPEAT
        IF epsilon.at(kappa) < theta
            SET theta TO epsilon.at(kappa)
            SET iota TO kappa
        END IF
        SET kappa TO kappa + 1
    UNTIL kappa >= LENGTH OF epsilon

    DECLARE lambda AS 0
    DECLARE mu AS 0
    REPEAT
        IF gamma.at(lambda) EQUALS theta
            SET mu TO lambda
            BREAK
        END IF
        SET lambda TO lambda + 1
    UNTIL lambda >= LENGTH OF gamma

    RETURN list_containing theta, mu
END FUNCTION
```