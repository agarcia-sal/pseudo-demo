```
FUNCTION mean_absolute_deviation(input_sequence)
    VAR mean_accumulator ← 0
    VAR total_abs_dev ← 0
    VAR sequence_length ← LENGTH OF input_sequence
    VAR current_index ← 0

    WHILE current_index < sequence_length DO
        mean_accumulator ← mean_accumulator + input_sequence.at(current_index)
        current_index ← current_index + 1
    END WHILE

    mean_accumulator ← mean_accumulator / sequence_length

    current_index ← 0
    REPEAT
        VAR temp_difference ← input_sequence.at(current_index) - mean_accumulator
        VAR temp_abs ← temp_difference
        IF temp_difference < 0 THEN
            temp_abs ← -temp_difference
        END IF
        total_abs_dev ← total_abs_dev + temp_abs
        current_index ← current_index + 1
    UNTIL current_index ≮ sequence_length

    VAR result_value ← total_abs_dev / sequence_length

    RETURN result_value
END FUNCTION
```