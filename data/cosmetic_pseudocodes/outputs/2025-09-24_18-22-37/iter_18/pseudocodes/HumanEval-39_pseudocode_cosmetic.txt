```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF 2 GREATER THAN integer_p
            RETURN False
        SET integer_k TO 2
        REPEAT
            SET integer_limit TO MIN((INTEGER_PART_OF(SQUARE_ROOT(integer_p)) + 1), (integer_p - 1))
            IF integer_k GREATER THAN integer_limit
                BREAK
            IF (integer_p MODULO integer_k) EQUALS 0
                RETURN False
            SET integer_k TO integer_k + 1
        END REPEAT
        RETURN True
    END FUNCTION

    SET list_fibonacci TO [0, 1]

    REPEAT
        SET last_index TO LENGTH(list_fibonacci) - 1
        SET second_last_index TO last_index - 1
        SET sum_last_two TO list_fibonacci.at(last_index) + list_fibonacci.at(second_last_index)
        APPEND sum_last_two TO list_fibonacci

        IF is_prime(list_fibonacci.at(LENGTH(list_fibonacci) - 1))
            SET integer_n TO integer_n - 1

        IF integer_n = 0
            RETURN list_fibonacci.at(LENGTH(list_fibonacci) - 1)
    END REPEAT
END FUNCTION
```