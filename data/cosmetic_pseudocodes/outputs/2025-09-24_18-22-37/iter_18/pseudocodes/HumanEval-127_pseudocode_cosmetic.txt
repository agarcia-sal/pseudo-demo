```
FUNCTION intersection(argA, argB)
    FUNCTION is_prime(paramX)
        REPEAT
            IF paramX EQUALS 0 OR paramX EQUALS 1 THEN
                RETURN False
            END IF

            IF paramX EQUALS 2 THEN
                RETURN True
            END IF

            DECLARE varCounter INITIALIZED TO 2
            WHILE varCounter LESS THAN paramX DO
                IF paramX MODULO varCounter EQUALS 0 THEN 
                    RETURN False
                END IF
                SET varCounter TO varCounter PLUS 1
            END WHILE

            RETURN True
        UNTIL True
    END FUNCTION

    DECLARE localLeft INITIALIZED TO argA.at(0)
    DECLARE localRight INITIALIZED TO argA.at(1)
    DECLARE tmpLeft INITIALIZED TO argB.at(0)
    DECLARE tmpRight INITIALIZED TO argB.at(1)

    IF localLeft GREATER THAN tmpLeft THEN
        SET tmpLeft TO localLeft
    END IF

    IF tmpRight GREATER THAN localRight THEN
        SET tmpRight TO localRight
    END IF

    DECLARE spanLength INITIALIZED TO tmpRight MINUS tmpLeft

    SWITCH (spanLength > 0 AND is_prime(spanLength) EQUALS True)
        CASE True:
            RETURN "YES"
        DEFAULT:
            RETURN "NO"
    END SWITCH
END FUNCTION
```