```pseudocode
CLASS Solution
    FUNCTION minOrAfterOperations(nums k)
        
        FUNCTION canAchieve(target_or k)
            SET accumulator_var TO -1
            SET operation_counter TO 0

            SET idx TO 0
            WHILE idx < LENGTH(nums)
                SET val TO nums[idx]

                IF accumulator_var = -1 THEN
                    SET accumulator_var TO val
                ELSE
                    SET accumulator_var TO (accumulator_var AND val)
                END IF

                IF NOT ((accumulator_var AND target_or) != 0) THEN
                    SET accumulator_var TO -1
                ELSE
                    operation_counter = operation_counter + 1

                    IF operation_counter > k THEN
                        RETURN false
                    END IF
                END IF

                SET idx TO idx + 1
            END WHILE

            RETURN true
        END FUNCTION
        
        SET MAX_BITS TO 30
        SET UPPER_BOUND TO (2 ^ MAX_BITS) - 1
        SET final_result TO UPPER_BOUND

        SET bit_idx TO 0
        REPEAT
            IF bit_idx = MAX_BITS THEN
                BREAK
            END IF

            SET mask_bit TO 2 ^ bit_idx

            IF (final_result AND mask_bit) = 0 THEN
                SET bit_idx TO bit_idx + 1
                CONTINUE
            END IF

            SET negated_mask TO NOT mask_bit
            SET candidate_val TO final_result AND negated_mask

            SET test_val TO NOT (final_result XOR mask_bit)

            IF canAchieve(test_val k) THEN
                SET final_result TO candidate_val
            END IF

            SET bit_idx TO bit_idx + 1
        UNTIL false

        RETURN final_result

    END FUNCTION
END CLASS
```