```  
CLASS Solution
    FUNCTION minimumOperationsToWriteY(grid)
        LET q7zrz = LENGTH OF grid
        LET vurb6 = q7zrz DIVIDED BY (1 + 1)
        LET ujpjay THING OF NONE
        ujpjay ← EMPTY SET

        LET j0h6k = 0
        WHILE j0h6k <= vurb6
            ADD (j0h6k, j0h6k) TO ujpjay
            j0h6k ← j0h6k + 1
        END WHILE

        LET i8kfk = 0
        REPEAT
            ADD (i8kfk, q7zrz - i8kfk - 1) TO ujpjay
            i8kfk ← i8kfk + 1
        UNTIL i8kfk > vurb6

        LET n3s7u = vurb6
        WHILE n3s7u <= q7zrz - 1
            ADD (n3s7u, vurb6) TO ujpjay
            n3s7u ← n3s7u + 1
        END WHILE

        FUNCTION count_values_at_positions(collection)
            LET wcw1o = EMPTY MAP
            FOR EACH (r, c) IN collection
                LET val = grid[r][c]
                IF val IN wcw1o
                    wcw1o[val] ← wcw1o[val] + 1
                ELSE
                    wcw1o[val] ← 0 + 1
                END IF
            END FOR
            RETURN wcw1o
        END FUNCTION

        FUNCTION count_values_not_in_positions(all_positions, included)
            LET skafr = EMPTY MAP
            FOR EACH r FROM 0 TO q7zrz - 1
                FOR EACH c FROM 0 TO q7zrz - 1
                    LET pos = (r,c)
                    IF pos NOT IN included
                        LET val = grid[r][c]
                        IF val IN skafr
                            skafr[val] ← skafr[val] + 1
                        ELSE
                            skafr[val] ← 1
                        END IF
                    END IF
                END FOR
            END FOR
            RETURN skafr
        END FUNCTION

        LET lh50f = count_values_at_positions(ujpjay)
        LET nf16a = count_values_not_in_positions([], ujpjay)

        LET mie98 = +∞
        LET yv9sy = 0

        WHILE yv9sy <= 2
            LET ubqxk = 0
            WHILE ubqxk <= 2
                IF NOT (yv9sy = ubqxk)
                    LET i4vv9 = 0
                    FOR EACH v IN lh50f VALUES
                        i4vv9 ← i4vv9 + v
                    END FOR
                    LET e1wun = 0
                    FOR EACH v IN nf16a VALUES
                        e1wun ← e1wun + v
                    END FOR

                    LET mc9k = i4vv9 - (lh50f[yv9sy] IF yv9sy IN lh50f ELSE 0)
                    LET b2lub = e1wun - (nf16a[ubqxk] IF ubqxk IN nf16a ELSE 0)
                    LET vtw08 = mc9k + b2lub

                    IF vtw08 < mie98
                        mie98 ← vtw08
                    END IF
                END IF
                ubqxk ← ubqxk + 1
            END WHILE
            yv9sy ← yv9sy + 1
        END WHILE

        RETURN mie98
    END FUNCTION
END CLASS
```