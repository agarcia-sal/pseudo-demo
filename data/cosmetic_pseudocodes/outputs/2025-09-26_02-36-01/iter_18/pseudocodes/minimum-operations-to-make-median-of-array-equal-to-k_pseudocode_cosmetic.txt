```pseudocode
CLASS Solution
    FUNCTION minOperationsToMakeMedianK(nums k)
        PROCEDURE sortAscendingOrder(arr)
            SET idx := 0
            WHILE idx < LENGTH(arr) - 1
                SET inner := 0
                WHILE inner < LENGTH(arr) - idx - 1
                    IF arr[inner] > arr[inner + 1]
                        SET temp := arr[inner]
                        SET arr[inner] := arr[inner + 1]
                        SET arr[inner + 1] := temp
                    END IF
                    SET inner := inner + 1
                END WHILE
                SET idx := idx + 1
            END WHILE
        END PROCEDURE

        CALL sortAscendingOrder(nums)
        SET totalCount := LENGTH(nums)
        SET midPos := totalCount DIV 2

        SET result := 0
        SET earlyReturnFlag := FALSE

        IF NOT (nums[midPos] != k)
            SET earlyReturnFlag := TRUE
            SET returnValue := 0
        END IF

        IF earlyReturnFlag
            RETURN returnValue
        END IF

        IF nums[midPos] < k
            SET checkIndex := midPos
            WHILE TRUE
                IF NOT (nums[checkIndex] < k)
                    BREAK
                END IF

                SET diffVal := k - nums[checkIndex]
                SET result := result + diffVal
                SET checkIndex := checkIndex + 1

                IF NOT (checkIndex < totalCount)
                    BREAK
                END IF
            END WHILE
        ELSE
            SET positionIndex := midPos
            outerLoop:
            WHILE TRUE
                IF NOT (nums[positionIndex] > k)
                    BREAK outerLoop
                END IF

                SET delta := nums[positionIndex] - k
                SET result := result + delta
                SET positionIndex := positionIndex - 1

                IF NOT (positionIndex >= 0)
                    BREAK outerLoop
                END IF
            END WHILE
        END IF

        RETURN result
    END FUNCTION
END CLASS
```