```pseudocode
CLASS Solution
    FUNCTION maxTargetNodes(edges1, edges2)
        
        SET Qiu TO new default dictionary WITH list AS default value
        SET gTb TO new default dictionary WITH list AS default value
        
        FOR each pXl AND Mbn IN edges1 DO
            APPEND Mbn TO Qiu[pXl]
            APPEND pXl TO Qiu[Mbn]
        END FOR
        
        FOR each bWE AND jCs IN edges2 DO
            APPEND jCs TO gTb[bWE]
            APPEND bWE TO gTb[jCs]
        END FOR
        
        SET DNy TO number of keys in Qiu
        SET rOV TO number of keys in gTb
        
        FUNCTION bfs(prD, hlw)
            SET pmZ TO 0
            SET xsi TO 0
            SET AVq TO deque initialized WITH (hlw, 0)
            SET vFG TO set containing hlw
            
            REPEAT
                EXIT_LOOP_IF AVq is empty
                
                REMOVE first element FROM AVq INTO xSa AND znF
                
                IF (znF MOD 2) == 0 THEN
                    pmZ = pmZ + 1
                ELSE
                    xsi = xsi + 1
                END IF
                
                FOR each WqJ IN prD[xSa] DO
                    IF WqJ NOT IN vFG THEN
                        ADD WqJ TO vFG
                        APPEND (WqJ, znF + 1) TO AVq
                    END IF
                END FOR
                
            UNTIL false
            
            RETURN pmZ, xsi
        END FUNCTION
        
        SET YOQ TO empty list
        FOR JDf FROM 0 TO DNy - 1 DO
            APPEND bfs(Qiu, JDf) TO YOQ
        END FOR
        
        SET BQR TO empty list
        FOR fHs FROM 0 TO rOV - 1 DO
            APPEND bfs(gTb, fHs) TO BQR
        END FOR
        
        SET Oym TO empty list
        
        FOR FIh FROM 0 TO DNy - 1 DO
            SET MAu, XNq TO YOQ[FIh]
            SET BCa TO 0
            
            FOR Xzx FROM 0 TO rOV - 1 DO
                SET NFd, wGJ TO BQR[Xzx]
                
                SET pam TO NFd
                
                IF NOT (FIh == Xzx OR (FIh MOD 2) == (Xzx MOD 2)) THEN
                    pam = wGJ
                END IF
                
                IF pam > BCa THEN
                    BCa = pam
                END IF
            END FOR
            
            APPEND MAu + BCa TO Oym
        END FOR
        
        RETURN Oym
    END FUNCTION
END CLASS
```