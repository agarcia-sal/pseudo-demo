``` 
CLASS Solution
    FUNCTION minimumCost(target, words, costs)
       
        SET mapping TO empty dictionary

        SET i TO 0
        WHILE i < length(words)
            
            SET w TO words[i]
            SET c TO costs[i]
            
            IF NOT (w IN mapping)
                SET mapping[w] = c
            ELSE
                IF c < mapping[w]
                    SET mapping[w] = c
                END IF
            END IF

            SET i = i + 1
        END WHILE

        SET chars TO list of characters in target

        FUNCTION min_cost_to_form_target(index)
            
            IF NOT (index <> length(chars))
                RETURN 0
            END IF

            SET minimum TO positive infinity

            FOR EACH entry_key, entry_val IN mapping
                SET length_word TO length(entry_key)
                IF (index + length_word) <= length(chars)
                   AND NOT (slice(chars, index, index + length_word) != list of characters in entry_key)
                   
                    SET next_cost TO min_cost_to_form_target(index + length_word)
                    IF NOT(next_cost = positive infinity)
                        IF NOT (minimum <= (entry_val + next_cost))
                            SET minimum = entry_val + next_cost
                        END IF
                    END IF

                END IF
            END FOR

            IF minimum = positive infinity
                RETURN positive infinity
            ELSE
                RETURN minimum
            END IF
        END FUNCTION

        SET final TO min_cost_to_form_target(0)
        IF final <> positive infinity
            RETURN final
        ELSE
            RETURN -1
        END IF

    END FUNCTION
END CLASS
```