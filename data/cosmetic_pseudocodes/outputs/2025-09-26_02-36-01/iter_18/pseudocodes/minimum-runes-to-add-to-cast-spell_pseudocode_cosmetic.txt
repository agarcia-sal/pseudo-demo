```pseudocode
CLASS Solution
    FUNCTION minRunesToAdd(o1 s7 s9 u2)
        SET d3 TO new empty mapping from integer TO list of integers
        SET f6 TO new empty mapping from integer TO list of integers

        SET p0 TO 0
        SET g4 TO 0
        WHILE p0 LESS THAN LENGTH of o1 AND g4 LESS THAN LENGTH of s7
            SET h8 TO o1[p0]
            SET w5 TO s7[g4]
            APPEND w5 TO d3 at key h8
            APPEND h8 TO f6 at key w5
            SET p0 TO p0 + 1
            SET g4 TO g4 + 1
        END WHILE

        FUNCTION a9(z0)
            SET b7[z0] TO c8
            SET e1[z0] TO c8
            SET c8 TO c8 + 1
            APPEND z0 TO m2
            SET r3[z0] TO True

            SET v6 TO 0
            WHILE v6 LESS THAN LENGTH of d3[z0]
                SET l0 TO d3[z0][v6]
                IF b7[l0] EQUALS -1
                    CALL a9(l0)
                    IF e1[z0] GREATER THAN e1[l0] THEN
                        SET e1[z0] TO e1[l0]
                    END IF
                ELSE IF r3[l0] EQUALS True
                    IF e1[z0] GREATER THAN b7[l0] THEN
                        SET e1[z0] TO b7[l0]
                    END IF
                END IF
                SET v6 TO v6 + 1
            END WHILE

            IF e1[z0] EQUALS b7[z0]
                SET s8 TO empty list
                WHILE True
                    SET u7 TO REMOVE last element FROM m2
                    SET r3[u7] TO False
                    APPEND u7 TO s8
                    IF u7 EQUALS z0 THEN
                        BREAK
                    END IF
                END WHILE
                APPEND s8 TO n4
            END IF
        END FUNCTION

        SET b7 TO list of size o2 FILLED WITH -1 where o2 IS s7
        SET e1 TO list of size o2 FILLED WITH 0
        SET r3 TO list of size o2 FILLED WITH False
        SET m2 TO empty list
        SET c8 TO 0
        SET n4 TO empty list
        SET o2 TO n

        FOR j1 FROM 0 TO o2 - 1
            IF b7[j1] EQUALS -1 THEN
                CALL a9(j1)
            END IF
        END FOR

        SET y5 TO new empty mapping from integer TO list of integers
        SET g0 TO list of size o2 FILLED WITH -1
        SET q9 TO list of size LENGTH of n4 FILLED WITH False
        SET t6 TO 0

        FOR i7 FROM 0 TO LENGTH of n4 - 1
            FOR EACH x3 IN n4[i7]
                SET g0[x3] TO t6
                IF x3 IS IN u2
                    SET q9[i7] TO True
                END IF
            END FOR
            SET t6 TO t6 + 1
        END FOR

        SET r9 TO 0
        SET s0 TO LENGTH of n4
        WHILE r9 LESS THAN s0
            SET k8 TO 0
            WHILE k8 LESS THAN LENGTH of o1 AND k8 LESS THAN LENGTH of s7
                SET h2 TO g0[o1[k8]]
                SET p4 TO g0[s7[k8]]
                IF h2 NOT EQUALS p4 THEN
                    IF y5 CONTAINS KEY h2
                        APPEND p4 TO y5[h2]
                    ELSE
                        SET y5[h2] TO list WITH single element p4
                    END IF
                END IF
                SET k8 TO k8 + 1
            END WHILE
            SET r9 TO r9 + 1
        END WHILE

        SET w2 TO list of size s0 FILLED WITH 0

        SET j5 TO 0
        WHILE j5 LESS THAN s0
            IF y5 CONTAINS KEY j5
                FOR EACH f0 IN y5[j5]
                    SET w2[f0] TO w2[f0] + 1
                END FOR
            END IF
            SET j5 TO j5 + 1
        END WHILE

        SET m0 TO 0
        SET c1 TO 0
        WHILE c1 LESS THAN s0
            IF w2[c1] EQUALS 0 AND q9[c1] EQUALS False
                SET m0 TO m0 + 1
            END IF
            SET c1 TO c1 + 1
        END WHILE

        RETURN m0
    END FUNCTION
END CLASS
```