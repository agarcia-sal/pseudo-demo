```pseudocode
CLASS Solution
    FUNCTION getPermutationIndex(perm)
        SET lengthCounter TO LENGTH OF perm
        SET modulusValue TO 10 ^ 9 + 1

        SET factorialArray TO LIST FILLED WITH 1 OF SIZE lengthCounter
        SET tracker TO 2
        WHILE tracker <= lengthCounter - 1
            SET factorialArray[tracker] TO factorialArray[tracker - 1] * tracker
            INCREMENT tracker BY 1
        END WHILE

        SET availableNumbers TO EMPTY LIST
        SET fillIndex TO 1
        REPEAT
            APPEND fillIndex TO availableNumbers
            INCREMENT fillIndex BY 1
        UNTIL fillIndex > lengthCounter

        SET finalIndex TO 0
        SET loopPointer TO 0
        REPEAT WHILE loopPointer < lengthCounter
            SET currentElement TO perm[loopPointer]
            SET locationIndex TO 0
            WHILE locationIndex < LENGTH OF availableNumbers
                IF availableNumbers[locationIndex] = currentElement THEN
                    BREAK
                END IF
                INCREMENT locationIndex BY 1
            END WHILE

            SET multiplierValue TO factorialArray[lengthCounter - loopPointer - 1]
            SET finalIndex TO finalIndex + locationIndex * multiplierValue
            DELETE availableNumbers[locationIndex]

            INCREMENT loopPointer BY 1
        END REPEAT

        SET remainderResult TO finalIndex % modulusValue
        RETURN remainderResult
    END FUNCTION
END CLASS
```