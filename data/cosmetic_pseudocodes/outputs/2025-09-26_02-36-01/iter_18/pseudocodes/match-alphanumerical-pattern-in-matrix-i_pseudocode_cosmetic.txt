```pseudocode
CLASS Solution
    FUNCTION findPattern(board, pattern)
        
        FUNCTION verifyMatch(x, y)
            SET mapA TO empty map
            SET mapB TO empty map

            SET outer_index TO 0
            WHILE outer_index < LENGTH(pattern)
                SET inner_index TO 0
                WHILE inner_index < LENGTH(pattern[0])
                    SET elementA TO pattern[outer_index][inner_index]
                    SET elementB TO board[x + outer_index][y + inner_index]

                    IF NOT (elementA < '0' OR elementA > '9')
                        IF NOT (INTEGER(elementA) == elementB)
                            ASSIGN False TO resultFlag
                            BREAK
                        END IF
                    ELSE
                        IF elementA IN mapA
                            IF mapA[elementA] != elementB
                                ASSIGN False TO resultFlag
                                BREAK
                            END IF
                        ELSE
                            IF elementB IN mapB
                                ASSIGN False TO resultFlag
                                BREAK
                            END IF
                            SET mapA[elementA] = elementB
                            SET mapB[elementB] = elementA
                        END IF
                    END IF
                    
                    SET inner_index TO inner_index + 1
                END WHILE

                IF resultFlag == False
                    BREAK
                END IF

                SET outer_index TO outer_index + 1
            END WHILE

            RETURN IF resultFlag == False THEN False ELSE True
        END FUNCTION

        SET limitR TO LENGTH(board) - LENGTH(pattern)
        SET limitC TO LENGTH(board[0]) - LENGTH(pattern[0])

        SET idxR TO 0
        LOOP WHILE idxR <= limitR
            SET idxC TO 0
            LOOP WHILE idxC <= limitC
                SET resultFlag TO True
                IF verifyMatch(idxR, idxC)
                    RETURN [idxR, idxC]
                END IF
                SET idxC TO idxC + 1
            END LOOP
            SET idxR TO idxR + 1
        END LOOP

        RETURN [-1, -1]
    END FUNCTION
END CLASS
```