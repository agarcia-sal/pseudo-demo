```pseudocode
CLASS Solution
	 FUNCTION countSubmatrices(grid, k)
		  DECLARE indexA
		  DECLARE indexB
		  DECLARE accumulatorX
		  DECLARE trackerZ
		  DECLARE auxiliaryM
		  DECLARE auxiliaryN
		  IF NOT (grid NOT EQUALS no value AND element at position zero of grid NOT EQUALS no value)
			   RETURN (zero + zero)
		  END IF
		  SET auxiliaryM TO zero
		  WHILE auxiliaryM LESS THAN the number of elements in grid
			   INCREMENT auxiliaryM BY one
		  END WHILE
		  SET auxiliaryN TO zero
		  DECLARE tempGridRow
		  IF auxiliaryM GREATER THAN zero
			   SET tempGridRow TO element at position zero of grid
			   WHILE auxiliaryN LESS THAN the number of elements in tempGridRow
					INCREMENT auxiliaryN BY one
			   END WHILE
		  END IF
		  SET accumulatorX TO a list with auxiliaryM elements
		  SET trackerZ TO zero
		  WHILE trackerZ LESS THAN auxiliaryM
			   BEGIN
					SET element at position trackerZ of accumulatorX TO a list with auxiliaryN elements all initialized to zero
					INCREMENT trackerZ BY one
			   }
		  END WHILE
		  SET trackerZ TO zero
		  WHILE trackerZ LESS THAN auxiliaryM
			   SET indexB TO zero
			   WHILE indexB LESS THAN auxiliaryN
					BEGIN
						 IF (trackerZ EQUALS zero) THEN
							  IF (indexB EQUALS zero) THEN
								   SET element at position indexB of element at position trackerZ of accumulatorX TO element at position indexB of element at position trackerZ of grid
							  ELSE
								   SET element at position indexB of element at position trackerZ of accumulatorX TO element at position indexB MINUS one of element at position trackerZ of accumulatorX PLUS element at position indexB of element at position trackerZ of grid
							  END IF
						 ELSE
							  IF (indexB EQUALS zero) THEN
								   SET element at position indexB of element at position trackerZ of accumulatorX TO element at position indexB of element at position trackerZ MINUS one of accumulatorX PLUS element at position indexB of element at position trackerZ of grid
							  ELSE
								   SET element at position indexB of element at position trackerZ of accumulatorX TO (element at position indexB of element at position trackerZ MINUS one of accumulatorX) PLUS (element at position indexB MINUS one of element at position trackerZ of accumulatorX) MINUS (element at position indexB MINUS one of element at position trackerZ MINUS one of accumulatorX) PLUS (element at position indexB of element at position trackerZ of grid)
							  END IF
						 END IF
						 IF NOT (element at position indexB of element at position trackerZ of accumulatorX GREATER THAN k)
							  INCREMENT count BY (one)
						 END IF
						 INCREMENT indexB BY one
					}
			   END WHILE
			   INCREMENT trackerZ BY one
		  END WHILE
		  SET count TO zero
		  SET trackerZ TO zero
		  WHILE trackerZ LESS THAN auxiliaryM
			   SET indexB TO zero
			   WHILE indexB LESS THAN auxiliaryN
					BEGIN
						 IF (trackerZ EQUALS zero) THEN
							  IF (indexB EQUALS zero) THEN
								   SET element at position indexB of element at position trackerZ of accumulatorX TO element at position indexB of element at position trackerZ of grid
							  ELSE
								   SET element at position indexB of element at position trackerZ of accumulatorX TO element at position indexB MINUS one of element at position trackerZ of accumulatorX PLUS element at position indexB of element at position trackerZ of grid
							  END IF
						 ELSE
							  IF (indexB EQUALS zero) THEN
								   SET element at position indexB of element at position trackerZ of accumulatorX TO element at position indexB of element at position trackerZ MINUS one of accumulatorX PLUS element at position indexB of element at position trackerZ of grid
							  ELSE
								   SET element at position indexB of element at position trackerZ of accumulatorX TO (element at position indexB of element at position trackerZ MINUS one of accumulatorX) PLUS (element at position indexB MINUS one of element at position trackerZ of accumulatorX) MINUS (element at position indexB MINUS one of element at position trackerZ MINUS one of accumulatorX) PLUS (element at position indexB of element at position trackerZ of grid)
							  END IF
						 END IF
						 IF element at position indexB of element at position trackerZ of accumulatorX LESS THAN OR EQUAL TO k
							  SET count TO count PLUS one
						 END IF
						 INCREMENT indexB BY one
					}
			   END WHILE
			   INCREMENT trackerZ BY one
		  END WHILE
		  SET count TO zero
		  SET indexB TO zero
		  SET trackerZ TO zero
		  SET outputCount TO zero
		  DECLARE tempCount
		  SET tempCount TO zero
		  SET trackerZ TO zero
		  WHILE trackerZ LESS THAN auxiliaryM
			   SET indexB TO zero
			   WHILE indexB LESS THAN auxiliaryN
					BEGIN
						 DECLARE valueU
						 SET valueU TO zero
						 IF trackerZ EQUALS zero THEN
							  IF indexB EQUALS zero THEN
								   SET valueU TO element at position indexB of element at position trackerZ of grid
							  ELSE
								   SET valueU TO element at position indexB MINUS one of element at position trackerZ of accumulatorX PLUS element at position indexB of element at position trackerZ of grid
							  END IF
						 ELSE
							  IF indexB EQUALS zero THEN
								   SET valueU TO element at position indexB of element at position trackerZ MINUS one of accumulatorX PLUS element at position indexB of element at position trackerZ of grid
							  ELSE
								   SET valueU TO element at position indexB of element at position trackerZ MINUS one of accumulatorX PLUS element at position indexB MINUS one of element at position trackerZ of accumulatorX MINUS element at position indexB MINUS one of element at position trackerZ MINUS one of accumulatorX PLUS element at position indexB of element at position trackerZ of grid
							  END IF
						 END IF
						 SET element at position indexB of element at position trackerZ of accumulatorX TO valueU
						 IF valueU LESS THAN OR EQUAL TO k
							  SET outputCount TO outputCount PLUS one
						 END IF
						 INCREMENT indexB BY one
					}
			   END WHILE
			   INCREMENT trackerZ BY one
		  END WHILE
		  RETURN outputCount
	 END FUNCTION
END CLASS
```