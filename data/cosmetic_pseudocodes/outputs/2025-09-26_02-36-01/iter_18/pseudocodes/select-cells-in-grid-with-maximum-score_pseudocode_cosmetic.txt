```pseudocode
CLASS Solution
    FUNCTION maxScore(grid)
        FUNCTION exploreLayers(layerIndex, chosenSet, aggregateValue)
            IF NOT (layerIndex < LENGTH(grid)) THEN
                tempResult ← max_sum
                IF aggregateValue > tempResult THEN
                    max_sum ← aggregateValue
                END IF
                RETURN
            END IF

            RECURSIVE_CALL ← PROCEDURE()
                exploreLayers(layerIndex + 1, chosenSet, aggregateValue)
            END PROCEDURE
            CALL RECURSIVE_CALL()

            INDEX ← 0
            LOOP_WHILE INDEX < LENGTH(grid[layerIndex])
                element ← grid[layerIndex][INDEX]
                IF NOT element IN chosenSet THEN
                    INSERT element INTO chosenSet
                    exploreLayers(layerIndex + 1, chosenSet, aggregateValue + element)
                    DELETE element FROM chosenSet
                END IF
                INDEX ← INDEX + 1
            END LOOP_WHILE
        END FUNCTION

        i ← 0
        REPEAT
            EXIT_LOOP ← i >= LENGTH(grid)
            IF EXIT_LOOP THEN BREAK END IF
            TEMP_ROW ← grid[i]
            SORT TEMP_ROW ASCENDING
            // reverse to descending order
            LEFT ← 0
            RIGHT ← LENGTH(TEMP_ROW) - 1
            WHILE LEFT < RIGHT
                TEMP ← TEMP_ROW[LEFT]
                TEMP_ROW[LEFT] ← TEMP_ROW[RIGHT]
                TEMP_ROW[RIGHT] ← TEMP
                LEFT ← LEFT + 1
                RIGHT ← RIGHT - 1
            END WHILE
            grid[i] ← TEMP_ROW
            i ← i + 1
        UNTIL FALSE

        max_sum ← 0
        CALL exploreLayers(0, SET(), 0)
        RETURN max_sum
    END FUNCTION
END CLASS
```