```pseudocode
CLASS Solution
    FUNCTION minimumSum(grid)
        
        SET qem TO []
        
        SET eau TO 0
        WHILE eau < LENGTH(grid)
            SET jch TO 0
            WHILE jch < LENGTH(grid[eau])
                IF NOT (grid[eau][jch] ≠ 1) THEN
                    APPEND (eau, jch) TO qem
                END IF
                SET jch TO jch + 1
            END WHILE
            SET eau TO eau + 1
        END WHILE
        
        FUNCTION rect_area(points)
            SET brt TO LENGTH(points)
            IF NOT (brt ≠ 0) THEN
                RETURN 0
            END IF
            
            SET lvx TO points[0][0]
            SET owz TO points[0][0]
            SET flp TO points[0][1]
            SET kym TO points[0][1]
            
            SET psx TO 1
            WHILE psx < LENGTH(points)
                IF points[psx][0] < lvx THEN
                    SET lvx TO points[psx][0]
                END IF
                
                IF points[psx][0] > owz THEN
                    SET owz TO points[psx][0]
                END IF
                
                IF points[psx][1] < flp THEN
                    SET flp TO points[psx][1]
                END IF
                
                IF points[psx][1] > kym THEN
                    SET kym TO points[psx][1]
                END IF
                
                SET psx TO psx + 1
            END WHILE
            
            SET rwb TO owz - lvx + (1 * 1)
            SET cgn TO kym - flp + 1
            RETURN rwb * cgn
        END FUNCTION
        
        SET ukl TO +∞
        SET zoc TO LENGTH(qem)
        
        SET fde TO 1
        REPEAT
            IF NOT (fde < zoc) THEN
                BREAK
            END IF
            
            SET lqm TO fde + 1
            WHILE lqm < zoc
                SET hyt TO lqm + 1
                WHILE hyt <= zoc
                    FOR EACH rkt IN combinations(qem, fde)
                        SET dze TO SET(qem)
                        SET rnq TO SET(rkt)
                        
                        SET ufy TO dze - rnq
                        FOR EACH xot IN combinations(ufy, lqm - fde)
                            SET pka TO SET(xot)
                            SET cdv TO ufy - pka
                            
                            SET uua TO rect_area(rkt)
                            SET lkv TO rect_area(xot)
                            SET yph TO rect_area(cdv)
                            
                            IF (uua > 0) AND (lkv > 0) AND (yph > 0) THEN
                                SET jny TO uua + lkv + yph
                                IF jny < ukl THEN
                                    SET ukl TO jny
                                END IF
                            END IF
                        END FOR
                    END FOR
                    SET hyt TO hyt + 1
                END WHILE
                SET lqm TO lqm + 1
            END WHILE
            SET fde TO fde + 1
        UNTIL FALSE
        
        RETURN ukl
    END FUNCTION
END CLASS
```