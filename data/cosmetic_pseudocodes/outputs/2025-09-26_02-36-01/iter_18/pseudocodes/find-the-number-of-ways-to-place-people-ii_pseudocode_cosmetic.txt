```pseudocode
CLASS Solution
    FUNCTION numberOfPairs(points)
        DEFINE procedure sortPoints(arr)
            DEFINE procedure swapElements(a, b)
                SET temp TO arr[a]
                SET arr[a] TO arr[b]
                SET arr[b] TO temp
            END PROCEDURE

            SET m TO LENGTH OF arr
            SET idx1 TO 1
            WHILE (idx1 LESS THAN m)
                SET idx2 TO 0
                REPEAT
                    IF ( (arr[idx2].x GREATER THAN arr[idx2 PLUS 1].x) OR
                         ((arr[idx2].x EQUAL arr[idx2 PLUS 1].x) AND (arr[idx2].y LESS THAN arr[idx2 PLUS 1].y)) )
                        swapElements(idx2, idx2 PLUS 1)
                    END IF
                    SET idx2 TO idx2 PLUS 1
                UNTIL idx2 EQUALS (m MINUS idx1)
                SET idx1 TO idx1 PLUS 1
            END WHILE
        END PROCEDURE

        CALL sortPoints(points)

        SET total TO LENGTH OF points
        SET sumPairs TO 0

        DEFINE helperCheck(a, b)
            SET flag TO 1
            SET l TO a PLUS 1
            WHILE (l LESS THAN b)
                SET px TO points[l].x
                SET py TO points[l].y
                IF (points[a].x LESS THAN OR EQUAL px AND px LESS THAN OR EQUAL points[b].x AND
                    points[b].y LESS THAN OR EQUAL py AND py LESS THAN OR EQUAL points[a].y)
                    SET flag TO 0
                    BREAK
                ELSE
                    SET l TO l PLUS 1
                END IF
            END WHILE
            RETURN flag
        END FUNCTION

        SET outerIdx TO 0
        WHILE outerIdx LESS THAN total MINUS 1
            SET innerIdx TO outerIdx PLUS 1
            WHILE innerIdx LESS THAN total
                SET firstX TO points[outerIdx].x
                SET firstY TO points[outerIdx].y
                SET secondX TO points[innerIdx].x
                SET secondY TO points[innerIdx].y

                IF NOT (firstX GREATER THAN secondX OR firstY LESS THAN secondY)
                    IF helperCheck(outerIdx, innerIdx) EQUALS 1
                        SET sumPairs TO sumPairs PLUS 1
                    END IF
                END IF

                SET innerIdx TO innerIdx PLUS 1
            END WHILE
            SET outerIdx TO outerIdx PLUS 1
        END WHILE

        RETURN sumPairs
    END FUNCTION
END CLASS
```