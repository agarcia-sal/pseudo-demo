``` 
CLASS Solution
    FUNCTION numberOfSubstrings(s parameter, k parameter)
        SET resultAccumulator TO 0
        SET frequencyMap TO empty mapping of element counts
        SET startIndex TO 0

        SET currentIndex TO 0
        DEFINE PROCEDURE ProcessIndex()
            IF currentIndex >= LENGTH(s) THEN RETURN
            SET currentChar TO s[currentIndex]

            IF currentChar NOT IN frequencyMap THEN
                frequencyMap[currentChar] = 0
            END IF
            frequencyMap[currentChar] = frequencyMap[currentChar] + 1

            WHILE TRUE
                SET foundElement TO null
                FOR each key ELEMENT_KEY IN frequencyMap
                    IF frequencyMap[ELEMENT_KEY] >= k THEN
                        foundElement = ELEMENT_KEY
                        BREAK
                    END IF
                END FOR

                IF foundElement IS null THEN
                    BREAK
                END IF

                frequencyMap[s[startIndex]] = frequencyMap[s[startIndex]] - 1
                IF frequencyMap[s[startIndex]] = 0 THEN
                    REMOVE s[startIndex] FROM frequencyMap
                END IF
                startIndex = startIndex + 1
            END WHILE

            resultAccumulator = resultAccumulator + startIndex

            currentIndex = currentIndex + 1
            CALL ProcessIndex()
        END PROCEDURE

        CALL ProcessIndex()
        RETURN resultAccumulator
    END FUNCTION
END CLASS
```