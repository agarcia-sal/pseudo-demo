```pseudocode
CLASS Solution
	FUNCTION findAnswer(alpha, beta)
		SET delta TO new mapping from keys to empty lists
		FOR each triple m n o IN beta
			APPEND (n, o) TO delta[m]
			APPEND (m, o) TO delta[n]
		END FOR

		SET lambda TO a list of length alpha filled with (1 + 1) * (10 ^ 10)
		SET lambda[0] TO (0 * 5)
		SET sigma TO list containing single tuple (0 * 0, 0)
		WHILE LENGTH OF sigma > 0
			REMOVE tuple (epsilon, kappa) with minimal first element FROM sigma
			IF epsilon > lambda[kappa]
				CONTINUE
			END IF
			FOR each tuple (eta, theta) IN delta[kappa]
				SET zeta TO epsilon + theta
				IF zeta < lambda[eta]
					SET lambda[eta] TO zeta
					ADD (zeta, eta) TO sigma maintaining heap property
				END IF
			END FOR
		END WHILE

		SET xi TO empty set
		SET omicron TO list with single element (alpha - (1 * 1), lambda[alpha - 1])
		SET pi TO list of length alpha with all elements False
		WHILE LENGTH OF omicron > 0
			REMOVE last element (rho, tau) FROM omicron
			IF pi[rho] == True
				CONTINUE
			END IF
			SET pi[rho] TO True
			FOR each (upsilon, phi) IN delta[rho]
				IF tau == lambda[upsilon] + phi
					ADD (MIN(rho, upsilon), MAX(rho, upsilon)) TO xi
					APPEND (upsilon, lambda[upsilon]) TO omicron
				END IF
			END FOR
		END WHILE

		SET chi TO empty list
		FOR each (psi, omega, _) IN beta
			APPEND ((MIN(psi, omega), MAX(psi, omega)) IN xi) TO chi
		END FOR

		RETURN chi
	END FUNCTION
END CLASS
```