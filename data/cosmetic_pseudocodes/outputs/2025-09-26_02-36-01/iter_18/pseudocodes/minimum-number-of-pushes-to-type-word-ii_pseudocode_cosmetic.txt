```pseudocode
CLASS Solution
    FUNCTION minimumPushes(word)
        SET alpha_counts TO empty map
        FOR i FROM 0 TO LENGTH(word) - 1 DO
            SET ch TO word[i]
            IF ch IN alpha_counts THEN
                SET temp_val TO alpha_counts[ch]
                SET alpha_counts[ch] TO temp_val + 1
            ELSE
                SET alpha_counts[ch] TO 1
            END IF
        END FOR

        SET freq_values TO empty list
        FOR each key IN alpha_counts DO
            APPEND alpha_counts[key] TO freq_values
        END FOR

        SET freq_list TO empty list
        WHILE LENGTH(freq_values) > 0 DO
            SET max_index TO 0
            SET idx TO 1
            WHILE idx < LENGTH(freq_values) DO
                IF freq_values[idx] > freq_values[max_index] THEN
                    SET max_index TO idx
                END IF
                SET idx TO idx + 1
            END WHILE
            APPEND freq_values[max_index] TO freq_list
            REMOVE freq_values[max_index]
        END WHILE

        SET acc_pushes TO 0
        SET press_count TO 1
        SET key_count TO 0
        SET pos TO 0

        WHILE pos < LENGTH(freq_list) DO
            SET acc_pushes TO acc_pushes + freq_list[pos] * press_count
            SET key_count TO key_count + 1
            IF NOT (key_count != 8) THEN
                SET key_count TO 0
                SET press_count TO press_count + 1
            END IF
            SET pos TO pos + 1
        END WHILE

        RETURN acc_pushes
    END FUNCTION
END CLASS
```