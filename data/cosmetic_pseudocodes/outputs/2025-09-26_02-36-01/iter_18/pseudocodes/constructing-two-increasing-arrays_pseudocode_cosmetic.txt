```pseudocode
CLASS Solution
    FUNCTION minLargest(nums1 nums1 AS list OF integers nums2 nums2 AS list OF integers) RETURNS integer
        FUNCTION nxt(a a AS integer b b AS integer) RETURNS integer
            SET ret TO 0
            IF ( (a BITWISE_AND 1) XOR b ) == 1 THEN
                ret = a + 1
            ELSE
                ret = a + 2
            END IF
            RETURN ret
        END FUNCTION

        SET r TO LENGTH OF nums1
        SET s TO LENGTH OF nums2

        SET mat TO []
        SET p TO 0
        WHILE p <= r
            APPEND a list with (s + 1) zeros to mat
            SET p TO p + 1
        END WHILE

        SET u TO 1
        WHILE u <= r
            SET valX TO nums1[u]
            mat[u][0] = nxt(mat[u - 1][0], valX)
            SET u TO u + 1
        END WHILE

        SET v TO 1
        WHILE v <= s
            SET valY TO nums2[v]
            mat[0][v] = nxt(mat[0][v - 1], valY)
            SET v TO v + 1
        END WHILE

        SET iIdx TO 1
        WHILE iIdx <= r
            SET valX INNER TO nums1[iIdx]
            SET jIdx TO 1
            WHILE jIdx <= s
                SET valY INNER TO nums2[jIdx]
                SET fromLeft TO nxt(mat[iIdx - 1][jIdx], valX INNER)
                SET fromUp TO nxt(mat[iIdx][jIdx - 1], valY INNER)
                IF fromLeft < fromUp THEN
                    mat[iIdx][jIdx] = fromLeft
                ELSE
                    mat[iIdx][jIdx] = fromUp
                END IF
                SET jIdx TO jIdx + 1
            END WHILE
            SET iIdx TO iIdx + 1
        END WHILE

        RETURN mat[r][s]
    END FUNCTION
END CLASS
```