```pseudocode
CLASS Solution
    FUNCTION findMaximumNumber(k, x)
        FUNCTION count_set_bits(n, pos)
            SET ret TO 0
            SET seg TO (1 * (2 ^ pos))
            SET full TO n / seg
            SET ret TO ret + ((full / 2) * seg)
            IF NOT ((full % 2) â‰  1)
                SET ret TO ret + ((n % seg) + 1)
            END IF
            RETURN ret
        END FUNCTION

        FUNCTION accumulated_price(n)
            SET sum TO 0
            SET idx TO 1
            WHILE (2 ^ ((idx * x) - 1)) <= n
                SET sum TO sum + count_set_bits(n, (idx * x) - 1)
                SET idx TO idx + 1
            END WHILE
            RETURN sum
        END FUNCTION

        SET lo TO 1
        SET hi TO (1 * (2 ^ 60))
        WHILE lo <= hi
            SET mid TO (lo + hi) / 2
            IF NOT (accumulated_price(mid) > k)
                SET lo TO mid + 1
            ELSE
                SET hi TO mid - 1
            END IF
        END WHILE
        RETURN hi
    END FUNCTION
END CLASS
```