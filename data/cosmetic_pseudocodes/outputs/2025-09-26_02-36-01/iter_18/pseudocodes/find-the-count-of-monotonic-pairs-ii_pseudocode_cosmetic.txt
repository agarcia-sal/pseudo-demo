```pseudocode
CLASS Solution
	FUNCTION countOfPairs(nums)
		CONST THRESHOLD ← 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 + 7

		LET alpha ← LENGTH OF nums
		LET beta ← -infinity
		LET gamma ← 0

		WHILE gamma < alpha
			IF nums[gamma] > beta THEN
				beta ← nums[gamma]
			END IF
			gamma ← gamma + 1
		END WHILE

		LET matrix ← EMPTY LIST
		LET lambda ← 0
		WHILE lambda < alpha + 1
			LET second_dim ← EMPTY LIST
			LET mu ← 0
			WHILE mu < beta + 1
				LET third_dim ← EMPTY LIST
				LET nu ← 0
				WHILE nu < beta + 1
					third_dim APPEND 0
					nu ← nu + 1
				END WHILE
				second_dim APPEND third_dim
				mu ← mu + 1
			END WHILE
			matrix APPEND second_dim
			lambda ← lambda + 1
		END WHILE

		LET phi ← 0
		WHILE phi <= nums[0]
			matrix[1][phi][nums[0] - phi] ← 1
			phi ← phi + 1
		END WHILE

		LET xi ← 2
		WHILE xi <= alpha
			LET sigma ← 0
			WHILE sigma <= nums[xi - 1]
				LET tau ← 0
				WHILE tau <= nums[xi - 1]
					IF (sigma + tau) = nums[xi - 1] THEN
						LET rho ← 0
						WHILE rho <= sigma
							LET psi ← tau
							WHILE psi <= beta
								matrix[xi][sigma][tau] ← matrix[xi][sigma][tau] + matrix[xi - 1][rho][psi]
								matrix[xi][sigma][tau] ← matrix[xi][sigma][tau] MOD THRESHOLD
								psi ← psi + 1
							END WHILE
							rho ← rho + 1
						END WHILE
					END IF
					tau ← tau + 1
				END WHILE
				sigma ← sigma + 1
			END WHILE
			xi ← xi + 1
		END WHILE

		LET zeta ← 0
		LET omega ← 0
		LET tau_result ← 0

		WHILE zeta <= beta
			omega ← 0
			WHILE omega <= beta
				tau_result ← tau_result + matrix[alpha][zeta][omega]
				tau_result ← tau_result MOD THRESHOLD
				omega ← omega + 1
			END WHILE
			zeta ← zeta + 1
		END WHILE

		RETURN tau_result
	END FUNCTION
END CLASS
```