```pseudocode
CLASS Solution
    FUNCTION resultArray(nums)
        SET xqz TO new list containing nums[0]
        SET kvb TO new list containing nums[1]
        SET ylu TO new list containing nums[0]
        SET nmt TO new list containing nums[1]

        FUNCTION greaterCount(rjp, wzv)
            SET bdc TO 0
            SET aro TO LENGTH OF rjp
            WHILE bdc LESS THAN aro
                SET mid TO (bdc + aro) DIVIDED BY 2
                IF wzv GREATER OR EQUAL TO rjp[mid]
                    SET bdc TO mid + 1
                ELSE
                    SET aro TO mid
                END IF
            END WHILE
            RETURN LENGTH OF rjp MINUS bdc
        END FUNCTION

        SET dfi TO 2
        WHILE dfi LESS THAN LENGTH OF nums
            SET phx TO nums[dfi]
            SET sgu TO greaterCount(ylu, phx)
            SET zln TO greaterCount(nmt, phx)
            SET pcw TO FALSE

            IF sgu GREATER THAN zln
                APPEND phx TO xqz
                SET idx TO 0
                SET end TO LENGTH OF ylu
                WHILE idx LESS THAN end
                    SET mdx TO (idx + end) DIVIDED BY 2
                    IF phx GREATER OR EQUAL TO ylu[mdx]
                        SET idx TO mdx + 1
                    ELSE
                        SET end TO mdx
                    END IF
                END WHILE
                INSERT phx INTO ylu AT POSITION idx
            ELSE IF sgu LESS THAN zln
                APPEND phx TO kvb
                SET pqz TO 0
                SET lenl TO LENGTH OF nmt
                REPEAT
                    IF pqz >= lenl OR phx LESS THAN nmt[pqz]
                        BREAK
                    END IF
                    SET pqz TO pqz + 1
                UNTIL FALSE
                INSERT phx INTO nmt AT POSITION pqz
            ELSE
                IF LENGTH OF xqz LESS OR EQUAL TO LENGTH OF kvb
                    APPEND phx TO xqz
                    SET posi TO 0
                    SET sizey TO LENGTH OF ylu
                    WHILE posi LESS THAN sizey
                        SET medu TO (posi + sizey) DIVIDED BY 2
                        IF phx GREATER OR EQUAL TO ylu[medu]
                            SET posi TO medu + 1
                        ELSE
                            SET sizey TO medu
                        END IF
                    END WHILE
                    INSERT phx INTO ylu AT POSITION posi
                ELSE
                    APPEND phx TO kvb
                    SET insr TO 0
                    SET lnsr TO LENGTH OF nmt
                    WHILE TRUE
                        IF insr >= lnsr OR phx LESS THAN nmt[insr]
                            BREAK
                        END IF
                        SET insr TO insr + 1
                    END WHILE
                    INSERT phx INTO nmt AT POSITION insr
                END IF
            END IF

            SET dfi TO dfi + 1
        END WHILE

        SET res TO new list
        FOR EACH val IN xqz
            APPEND val TO res
        END FOR
        FOR EACH val IN kvb
            APPEND val TO res
        END FOR

        RETURN res
    END FUNCTION
END CLASS
```