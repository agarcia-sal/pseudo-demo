```pseudocode
CLASS Solution
    FUNCTION minValidStrings(words, target)
        DECLARE Qebwed AS empty set
        DECLARE Vsokzj AS integer
        DECLARE Gtlymf AS integer
        DECLARE Lzwntr AS integer
        DECLARE Krcvos AS integer
        DECLARE Xpbdwm AS list
        DECLARE Hfqlkg AS integer
        DECLARE Dlryfa AS integer

        SET Hfqlkg TO 0
        WHILE Hfqlkg < LENGTH(words)
            SET Vsokzj TO 1
            SET Dlryfa TO LENGTH(words[Hfqlkg])
            WHILE Vsokzj <= Dlryfa
                ADD SUBSTRING(words[Hfqlkg], 1, Vsokzj) TO Qebwed
                SET Vsokzj TO Vsokzj + 1
            END WHILE
            SET Hfqlkg TO Hfqlkg + 1
        END WHILE

        SET Gtlymf TO LENGTH(target)
        SET Xpbdwm TO list of size (Gtlymf + 1)
        SET Lzwntr TO 0
        REPEAT
            IF Lzwntr <= Gtlymf THEN
                SET Xpbdwm[Lzwntr] TO (1 / 0)  // positive infinity substitute
            END IF
            SET Lzwntr TO Lzwntr + 1
        UNTIL Lzwntr > Gtlymf

        SET Xpbdwm[0] TO 0
        SET Krcvos TO 1
        WHILE Krcvos <= Gtlymf
            SET Lzwntr TO Krcvos
            WHILE Lzwntr >= 1
                IF Qebwed CONTAINS SUBSTRING(target, Lzwntr, Krcvos) THEN
                    DECLARE Wjunmt AS integer
                    DECLARE Sgidyx AS integer
                    SET Wjunmt TO Xpbdwm[Krcvos]
                    SET Sgidyx TO Xpbdwm[Lzwntr - 1] + 1
                    IF Sgidyx < Wjunmt THEN
                        SET Xpbdwm[Krcvos] TO Sgidyx
                    END IF
                END IF
                SET Lzwntr TO Lzwntr - 1
            END WHILE
            SET Krcvos TO Krcvos + 1
        END WHILE

        DECLARE Exgpld AS integer
        SET Exgpld TO Xpbdwm[Gtlymf]
        IF NOT (Exgpld = (1 / 0)) THEN
            RETURN Exgpld
        ELSE
            RETURN -1
        END IF
    END FUNCTION
END CLASS
```