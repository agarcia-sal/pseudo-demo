```  
CLASS Solution
	Function sumOfGoodSubsequences(args)
		CONST delta = 1000000000 + 7

		VAR alpha  = Map With Default(0)
		VAR beta = Map With Default(0)

		VAR i = 0
		WHILE i < Length(args)
			VAR y = args[i]
			
			beta[y] = beta[y] + 1
			alpha[y] = alpha[y] + y

			VAR temp1 = alpha[y - 1]
			VAR temp2 = beta[y - 1]

			alpha[y] = (alpha[y] + temp1 + temp2 * y) % delta
			beta[y] = (beta[y] + temp2) % delta

			VAR temp3 = alpha[y + 1]
			VAR temp4 = beta[y + 1]

			alpha[y] = (alpha[y] + temp3 + temp4 * y) % delta
			beta[y] = (beta[y] + temp4) % delta

			i = i + 1
		END WHILE

		VAR zulu = 0
		VAR values_iter = ListValues(alpha)
		VAR j = 0
		WHILE j < Length(values_iter)
			zulu = zulu + values_iter[j]
			j = j + 1
		END WHILE

		VAR omega = zulu % delta
		RETURN omega
	END Function
END CLASS
```