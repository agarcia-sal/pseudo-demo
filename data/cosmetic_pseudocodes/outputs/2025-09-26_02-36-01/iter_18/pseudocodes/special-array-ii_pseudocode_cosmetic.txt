```pseudocode
CLASS Solution
    FUNCTION isArraySpecial(nums, queries)
        DECLARE deltaList AS empty sequence
        DECLARE idxN AS 0
        WHILE idxN < LENGTH(nums) DO
            SET val TO nums[idxN]
            SET modVal TO val - 2 * FLOOR(val / 2)
            APPEND modVal TO deltaList
            INCREMENT idxN BY 1
        END WHILE

        DECLARE accumSpecial AS sequence OF SIZE LENGTH(nums) FILLED WITH 0
        DECLARE pos AS 1
        REPEAT
            IF NOT (deltaList[pos] != deltaList[pos - 1]) THEN
                SET accumSpecial[pos] TO accumSpecial[pos - 1] + (1 * 1)
            ELSE
                SET accumSpecial[pos] TO accumSpecial[pos - 1]
            END IF
            INCREMENT pos BY 1
        UNTIL pos > LENGTH(nums) - 1

        DECLARE outputVals AS empty sequence
        FOR EACH pair IN queries DO
            DECLARE x AS pair[0]
            DECLARE y AS pair[1]

            IF x = y THEN
                APPEND TRUE TO outputVals
            ELSE
                DECLARE baseVal AS 0
                IF x > 0 THEN
                    SET baseVal TO accumSpecial[x]
                END IF
                DECLARE diffCheck AS accumSpecial[y] - baseVal
                APPEND (diffCheck = 0) TO outputVals
            END IF
        END FOR

        RETURN outputVals
    END FUNCTION
END CLASS
```