```pseudocode
CLASS Solution
    FUNCTION numberOfSubarrays(nums)
        ASSIGN cache TO new default dictionary mapping to list named index_map
        FOR EACH position alpha AND value beta IN enumeration(nums)
            LET gamma BE cache[beta]
            APPEND alpha TO gamma
        END FOR

        LET totalResult BE 0
        FOR EACH sequence IN values(cache)
            LET lengthSeq BE length(sequence)
            LET outerIndex BE 0
            WHILE outerIndex <= lengthSeq - 1
                LET innerIndex BE outerIndex
                REPEAT
                    LET startPos BE sequence[outerIndex]
                    LET endPos BE sequence[innerIndex]
                    LET segment BE sublist(nums, startPos, endPos)
                    IF NOT (maximum(segment) != nums[startPos])
                        totalResult = totalResult + 1
                    END IF
                    innerIndex = innerIndex + 1
                UNTIL innerIndex > lengthSeq - 1
                outerIndex = outerIndex + 1
            END WHILE
        END FOR

        RETURN totalResult
    END FUNCTION
END CLASS
```