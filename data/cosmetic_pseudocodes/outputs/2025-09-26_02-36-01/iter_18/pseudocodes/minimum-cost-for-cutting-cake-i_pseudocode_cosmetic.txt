```pseudocode
CLASS Solution  
    FUNCTION minimumCost(m n horizontalCut verticalCut)  
        
        PROCEDURE sortDescending(arr)  
            REPEAT  
                SET swapped TO false  
                FOR pos FROM 0 TO LENGTH(arr) - 2 DO  
                    IF arr[pos] LESS THAN arr[pos + 1] THEN  
                        SET temp TO arr[pos]  
                        SET arr[pos] TO arr[pos + 1]  
                        SET arr[pos + 1] TO temp  
                        SET swapped TO true  
                    END IF  
                END FOR  
            UNTIL NOT swapped  
        END PROCEDURE

        CALL sortDescending(horizontalCut)  
        CALL sortDescending(verticalCut)  
        
        SET totalResult TO 0  
        SET idxH TO 0  
        SET idxV TO 0  
        SET countH TO 1  
        SET countV TO 1  
        
        DEFINE FUNCTION conditionMet()  
            RETURN (idxV EQUALS n - 1) OR (idxH LESS THAN m - 1 AND horizontalCut[idxH] GREATER THAN verticalCut[idxV])  
        END FUNCTION

        WHILE (idxH LESS THAN m - 1) OR (idxV LESS THAN n - 1) DO  
            
            IF conditionMet() THEN  
                SET stepValue TO horizontalCut[idxH] * countV  
                SET totalResult TO totalResult + stepValue  
                SET countH TO countH + 1  
                SET idxH TO idxH + 1  
            ELSE  
                SET stepValue TO verticalCut[idxV] * countH  
                SET totalResult TO totalResult + stepValue  
                SET countV TO countV + 1  
                SET idxV TO idxV + 1  
            END IF  
        END WHILE  
        
        RETURN totalResult  
    END FUNCTION  
END CLASS  
```