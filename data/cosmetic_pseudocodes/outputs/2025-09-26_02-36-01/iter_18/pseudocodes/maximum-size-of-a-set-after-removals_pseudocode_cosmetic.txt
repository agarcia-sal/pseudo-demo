```pseudocode
CLASS Solution
    FUNCTION maximumSetSize(nums1 PARAMETER List OF integers nums2 PARAMETER List OF integers) RETURNS integer
        SET pTO TO 0
        SET rQA TO LENGTH OF nums1
        SET bXG TO rQA DIVIDED BY 2

        FUNCTION ExtractUnique(vJI PARAMETER List OF integers) RETURNS List OF integers
            SET fKW TO empty list
            FOR EACH nXH IN vJI
                SET sME TO FALSE
                FOR EACH qNU IN fKW
                    IF qNU EQUALS nXH THEN
                        SET sME TO TRUE
                        BREAK
                    END IF
                END FOR
                IF NOT sME THEN
                    APPEND nXH TO fKW
                END IF
            END FOR
            RETURN fKW
        END FUNCTION

        SET mGI TO ExtractUnique(nums1)
        SET jZV TO ExtractUnique(nums2)

        FUNCTION IntersectLists(aYP PARAMETER List OF integers, bKO PARAMETER List OF integers) RETURNS List OF integers
            SET lER TO empty list
            FOR EACH uIO IN aYP
                SET kTW TO FALSE
                FOR EACH cPX IN bKO
                    IF cPX EQUALS uIO THEN
                        SET kTW TO TRUE
                        BREAK
                    END IF
                END FOR
                IF kTW THEN
                    APPEND uIO TO lER
                END IF
            END FOR
            RETURN lER
        END FUNCTION

        SET iSD TO IntersectLists(mGI, jZV)

        FUNCTION DifferenceList(fullLRI PARAMETER List OF integers, excludeL PARAMETER List OF integers) RETURNS List OF integers
            SET vGC TO empty list
            FOR EACH oRB IN fullLRI
                SET yFV TO TRUE
                FOR EACH aNB IN excludeL
                    IF oRB EQUALS aNB THEN
                        SET yFV TO FALSE
                        BREAK
                    END IF
                END FOR
                IF yFV THEN
                    APPEND oRB TO vGC
                END IF
            END FOR
            RETURN vGC
        END FUNCTION

        SET yPU TO DifferenceList(mGI, iSD)
        SET sMC TO DifferenceList(jZV, iSD)

        FUNCTION Min(a PARAMETER integer, b PARAMETER integer) RETURNS integer
            IF a LESS THAN b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION

        FUNCTION Max(a PARAMETER integer, b PARAMETER integer) RETURNS integer
            IF a GREATER THAN b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION

        SET hWX TO Min(bXG, LENGTH OF yPU)
        SET tRI TO Min(bXG, LENGTH OF sMC)

        SET mCG TO Max(0, bXG - hWX) + Max(0, bXG - tRI)

        SET wPO TO hWX + tRI + Min(mCG, LENGTH OF iSD)

        RETURN wPO
    END FUNCTION
END CLASS
```