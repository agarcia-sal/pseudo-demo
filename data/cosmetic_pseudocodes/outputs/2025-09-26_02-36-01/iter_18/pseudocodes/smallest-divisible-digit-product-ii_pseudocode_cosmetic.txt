```pseudocode
CLASS Solution  
    FUNCTION smallestNumber(num, t)  
        SET vdwxufe, bdihsqm TO self._getPrimeCount(t)  

        IF bdihsqm = false THEN RETURN "-1" END IF  

        SET erjpkv TO self._getFactorCount(vdwxufe)  

        IF SUM(erjpkv.values()) > LENGTH(num) THEN 
            SET nxqrhp TO ""  
            FOR EACH tjoleh IN erjpkv KEYS  
                SET vxusw TO erjpkv[tjoleh]  
                SET nxqrhp TO nxqrhp + tjoleh * vxusw  
            END FOR  
            RETURN nxqrhp  
        END IF  

        SET fqlzijr TO {}  
        SET utjqpka TO 0  
        WHILE utjqpka < LENGTH(num)  
            SET fqlzijr = fqlzijr + FACTOR_COUNTS[INT(num[utjqpka])]  
            SET utjqpka TO utjqpka + 1  
        END WHILE  

        SET zxokra TO LENGTH(num)  
        SET qmxtfj TO 0  
        WHILE qmxtfj < LENGTH(num) AND num[qmxtfj] != "0"  
            SET qmxtfj TO qmxtfj + 1  
        END WHILE  

        IF qmxtfj = LENGTH(num) AND vdwxufe <= fqlzijr THEN RETURN num END IF  

        SET qnvdkh TO LENGTH(num) - 1  
        REC_LOOP: WHILE qnvdkh >= 0  
            SET oxqmp TO INT(num[qnvdkh])  
            SET fqlzijr TO fqlzijr - FACTOR_COUNTS[oxqmp]  
            SET ujyerdv TO LENGTH(num) - 1 - qnvdkh  
            IF qnvdkh <= qmxtfj THEN  
                SET yhczot TO oxqmp + 1  
                REPEAT_LOOP: WHILE yhczot <= 9  
                    SET btlzqf TO self._getFactorCount(vdwxufe - fqlzijr - FACTOR_COUNTS[yhczot])  
                    IF SUM(btlzqf.values()) <= ujyerdv THEN  
                        SET prtagb TO ujyerdv - SUM(btlzqf.values())  
                        SET ujgkor TO SUBSTRING(num, 0, qnvdkh) + STRING(yhczot) + ("1" * prtagb)  
                        FOR EACH xvfntki IN btlzqf KEYS  
                            SET ujgkor TO ujgkor + xvfntki * btlzqf[xvfntki]  
                        END FOR  
                        RETURN ujgkor  
                    END IF  
                    SET yhczot TO yhczot + 1  
                END WHILE  
            END IF  
            SET qnvdkh TO qnvdkh - 1  
        END WHILE  

        SET erjpkv TO self._getFactorCount(vdwxufe)  
        SET nfywroz TO LENGTH(num) + 1 - SUM(erjpkv.values())  
        SET rtvslg TO "1" * nfywroz  
        FOR EACH hkzup IN erjpkv KEYS  
            SET rtvslg TO rtvslg + hkzup * erjpkv[hkzup]  
        END FOR  
        RETURN rtvslg  
    END FUNCTION  

    FUNCTION _getPrimeCount(t)  
        SET kjnintq TO {}  
        FOR EACH zgpry IN [2,3,5,7]  
            WHILE t MOD zgpry = 0  
                SET t TO t / zgpry  
                IF zgpry NOT IN kjnintq THEN SET kjnintq[zgpry] TO 0 END IF  
                SET kjnintq[zgpry] TO kjnintq[zgpry] + 1  
            END WHILE  
        END FOR  
        RETURN kjnintq, (t = 1)  
    END FUNCTION  

    FUNCTION _getFactorCount(count)  
        SET gthwaly TO FLOOR_DIVIDE(count.get(2,0),3)  
        SET exjvku TO count.get(2,0) - 3*gthwaly  
        SET uafslcr TO FLOOR_DIVIDE(count.get(3,0),2)  
        SET lwbrjtu TO count.get(3,0) - 2*uafslcr  
        SET omnhztu TO FLOOR_DIVIDE(exjvku,2)  
        SET mzbavsf TO exjvku - 2*omnhztu  

        SET ycwxjmh TO 0  
        IF mzbavsf = 1 AND lwbrjtu = 1 THEN  
            SET mzbavsf TO 0  
            SET lwbrjtu TO 0  
            SET ycwxjmh TO 1  
        ELSE  
            SET ycwxjmh TO 0  
        END IF  

        IF lwbrjtu = 1 AND omnhztu = 1 THEN  
            SET mzbavsf TO 1  
            SET ycwxjmh TO 1  
            SET lwbrjtu TO 0  
            SET omnhztu TO 0  
        END IF  

        RETURN { 
            "2": mzbavsf, 
            "3": lwbrjtu, 
            "4": omnhztu, 
            "5": count.get(5,0), 
            "6": ycwxjmh, 
            "7": count.get(7,0), 
            "8": gthwaly, 
            "9": uafslcr  
        }  
    END FUNCTION  
END CLASS
```