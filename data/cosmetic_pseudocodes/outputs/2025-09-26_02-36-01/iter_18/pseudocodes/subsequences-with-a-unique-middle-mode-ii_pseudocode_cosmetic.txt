```pseudocode
CLASS Solution
    FUNCTION subsequencesWithMiddleMode(nums)
        CONST BASE = 10 POWER 9 PLUS 7
        SET total_result TO 0
        DEFINE prefixCounts AS empty map from element to integer count
        DEFINE suffixCounts AS map counting elements in nums
        
        FUNCTION combin2(x)
            RETURN (x TIMES (x MINUS 1)) DIVIDED BY 2
        END FUNCTION
        
        SET prefixSuffixSum TO 0
        SET suffixPrefixProduct TO 0
        SET prefixPrefixSum TO 0
        SET suffixSumSquares TO 0
        SET prefixSuffixProduct TO 0
        
        FOR EACH val IN suffixCounts KEYS
            SET freq TO suffixCounts[val]
            SET suffixSumSquares TO suffixSumSquares PLUS freq TIMES freq
        END FOR
        
        FOR index FROM 0 TO LENGTH(nums) MINUS 1
            SET currentElement TO nums[index]
            
            SET prefixSuffixSum TO prefixSuffixSum PLUS prefixCounts[currentElement] TIMES ( - (suffixCounts[currentElement] TIMES suffixCounts[currentElement]) PLUS ((suffixCounts[currentElement] MINUS 1) TIMES (suffixCounts[currentElement] MINUS 1)) )
            SET suffixPrefixProduct TO suffixPrefixProduct PLUS ( - (prefixCounts[currentElement] TIMES prefixCounts[currentElement]) )
            SET suffixSumSquares TO suffixSumSquares PLUS ( - (suffixCounts[currentElement] TIMES suffixCounts[currentElement]) PLUS ((suffixCounts[currentElement] MINUS 1) TIMES (suffixCounts[currentElement] MINUS 1)) )
            SET prefixSuffixProduct TO prefixSuffixProduct PLUS ( - prefixCounts[currentElement] )
            
            SET suffixCounts[currentElement] TO suffixCounts[currentElement] MINUS 1
            
            SET leftLength TO index
            SET rightLength TO LENGTH(nums) MINUS index MINUS 1
            
            SET total_result TO total_result PLUS combin2(leftLength) TIMES combin2(rightLength)
            
            SET adjustedLeft TO leftLength MINUS prefixCounts[currentElement]
            SET adjustedRight TO rightLength MINUS suffixCounts[currentElement]
            SET total_result TO total_result MINUS combin2(adjustedLeft) TIMES combin2(adjustedRight)
            
            SET prefixSuffixSumAdj TO prefixSuffixSum MINUS prefixCounts[currentElement] TIMES suffixCounts[currentElement] TIMES suffixCounts[currentElement]
            SET suffixPrefixProductAdj TO suffixPrefixProduct MINUS suffixCounts[currentElement] TIMES (prefixCounts[currentElement] TIMES prefixCounts[currentElement])
            SET prefixPrefixSumAdj TO prefixPrefixSum MINUS (prefixCounts[currentElement] TIMES prefixCounts[currentElement])
            SET suffixSumSquaresAdj TO suffixSumSquares MINUS (suffixCounts[currentElement] TIMES suffixCounts[currentElement])
            SET prefixSuffixProductAdj TO prefixSuffixProduct MINUS prefixCounts[currentElement] TIMES suffixCounts[currentElement]
            SET prefixDiff TO leftLength MINUS prefixCounts[currentElement]
            SET suffixDiff TO rightLength MINUS suffixCounts[currentElement]
            
            SET decrementVal1 TO prefixSuffixProductAdj TIMES prefixCounts[currentElement] TIMES (rightLength MINUS suffixCounts[currentElement]) PLUS prefixSuffixSumAdj TIMES ( - prefixCounts[currentElement] )
            SET decrementVal2 TO prefixSuffixProductAdj TIMES suffixCounts[currentElement] TIMES (leftLength MINUS prefixCounts[currentElement]) PLUS suffixPrefixProductAdj TIMES ( - suffixCounts[currentElement] )
            SET decrementVal3 TO (prefixPrefixSumAdj MINUS prefixDiff) TIMES suffixCounts[currentElement] TIMES (rightLength MINUS suffixCounts[currentElement]) DIVIDED BY 2
            SET decrementVal4 TO (suffixSumSquaresAdj MINUS suffixDiff) TIMES prefixCounts[currentElement] TIMES (leftLength MINUS prefixCounts[currentElement]) DIVIDED BY 2
            
            SET total_result TO total_result MINUS decrementVal1
            SET total_result TO total_result MINUS decrementVal2
            SET total_result TO total_result MINUS decrementVal3
            SET total_result TO total_result MINUS decrementVal4
            
            SET total_result TO total_result MODULO BASE
            
            SET prefixSuffixSum TO prefixSuffixSum PLUS suffixCounts[currentElement] TIMES suffixCounts[currentElement]
            SET suffixPrefixProduct TO suffixPrefixProduct PLUS suffixCounts[currentElement] TIMES ( - (prefixCounts[currentElement] TIMES prefixCounts[currentElement]) PLUS (prefixCounts[currentElement] PLUS 1) TIMES (prefixCounts[currentElement] PLUS 1) )
            SET prefixPrefixSum TO prefixPrefixSum PLUS ( - (prefixCounts[currentElement] TIMES prefixCounts[currentElement]) PLUS (prefixCounts[currentElement] PLUS 1) TIMES (prefixCounts[currentElement] PLUS 1) )
            SET prefixSuffixProduct TO prefixSuffixProduct PLUS suffixCounts[currentElement]
            
            SET prefixCounts[currentElement] TO prefixCounts[currentElement] PLUS 1
        END FOR
        
        RETURN total_result
    END FUNCTION
END CLASS
```