['Traceback (most recent call last):\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_6.py", line 64, in <module>\n    print(Solution().minCostToEqualizeArray(nums = [1000000,1000000,1000000], cost1 = 1000, cost2 = 500))\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_6.py", line 62, in minCostToEqualizeArray\n    minimalCost = findMinimumExpense(upperBound, 9223372036854775807)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_6.py", line 60, in findMinimumExpense\n    return findMinimumExpense(currTarget + 1, newResult)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_6.py", line 60, in findMinimumExpense\n    return findMinimumExpense(currTarget + 1, newResult)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_6.py", line 60, in findMinimumExpense\n    return findMinimumExpense(currTarget + 1, newResult)\n  [Previous line repeated 993 more times]\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_6.py", line 56, in findMinimumExpense\n    currentCost = computeExpense(currTarget)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_6.py", line 49, in computeExpense\n    if paired > totalDifference - maxDiff:\nRecursionError: maximum recursion depth exceeded in comparison\n', 'Traceback (most recent call last):\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_7.py", line 64, in <module>\n    print(Solution().minCostToEqualizeArray(nums = [1000000,1,1000000], cost1 = 1000, cost2 = 500))\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_7.py", line 62, in minCostToEqualizeArray\n    minimalCost = findMinimumExpense(upperBound, 9223372036854775807)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_7.py", line 60, in findMinimumExpense\n    return findMinimumExpense(currTarget + 1, newResult)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_7.py", line 60, in findMinimumExpense\n    return findMinimumExpense(currTarget + 1, newResult)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_7.py", line 60, in findMinimumExpense\n    return findMinimumExpense(currTarget + 1, newResult)\n  [Previous line repeated 993 more times]\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_7.py", line 56, in findMinimumExpense\n    currentCost = computeExpense(currTarget)\n  File "/var/folders/x3/l43tt5dd3y19dmn0cq8rhm7r0000gq/T/tmpx16y3ju1/solution_7.py", line 49, in computeExpense\n    if paired > totalDifference - maxDiff:\nRecursionError: maximum recursion depth exceeded in comparison\n']