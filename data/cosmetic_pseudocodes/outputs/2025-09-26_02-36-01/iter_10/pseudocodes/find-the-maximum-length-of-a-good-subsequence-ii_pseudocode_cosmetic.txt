CLASS Solution
	Function maximumLength(nums PARAMETER, k PARAMETER)
		DEFINE lengthsCount = LENGTH(nums)
		DEFINE dpTable = ZERO_MATRIX(lengthsCount, k + (0 + 1))
		DEFINE memoMaps = LIST_OF_DEFAULT_DICTS(k + 1, default=0)
		DEFINE tracker = ZERO_MATRIX(k + 1, 3)
		DEFINE maxAnswer = 0

		DEFINE processIndex(j, val)
			IF j > k THEN
				RETURN
			END IF

			LET valAtDp = memoMaps[j].GET(val, 0)
			SET dpTable[j][valAtIndex] = valAtDp

			IF j > 0 THEN
				IF tracker[j-1][0] ≠ nums[valAtIndex] THEN
					dpTable[valAtIndex][j] = MAX(dpTable[valAtIndex][j], tracker[j-1][1])
				ELSE
					dpTable[valAtIndex][j] = MAX(dpTable[valAtIndex][j], tracker[j-1][2])
				END IF
			END IF

			dpTable[valAtIndex][j] = dpTable[valAtIndex][j] + 1
			memoMaps[j][nums[valAtIndex]] = MAX(memoMaps[j][nums[valAtIndex]], dpTable[valAtIndex][j])

			IF tracker[j][0] ≠ val THEN
				IF dpTable[valAtIndex][j] >= tracker[j][1] THEN
					tracker[j][2] = tracker[j][1]
					tracker[j][1] = dpTable[valAtIndex][j]
					tracker[j][0] = val
				ELSE
					tracker[j][2] = MAX(tracker[j][2], dpTable[valAtIndex][j])
				END IF
			ELSE
				tracker[j][1] = MAX(tracker[j][1], dpTable[valAtIndex][j])
			END IF

			maxAnswer = MAX(maxAnswer, dpTable[valAtIndex][j])
			processIndex(j + 1, val)
		END FUNCTION

		DEFINE iterateIndices(currentIndex)
			IF currentIndex = lengthsCount THEN
				RETURN
			END IF

			LET currentVal = nums[currentIndex]
			DEFINE h = 0
			WHILE h <= k DO
				LET valAtIndex = currentIndex
				LET val = currentVal
				LET valAtDp = memoMaps[h].GET(val, 0)
				dpTable[valAtIndex][h] = valAtDp

				IF h > 0 THEN
					IF tracker[h - 1][0] ≠ nums[valAtIndex] THEN
						dpTable[valAtIndex][h] = MAX(dpTable[valAtIndex][h], tracker[h - 1][1])
					ELSE
						dpTable[valAtIndex][h] = MAX(dpTable[valAtIndex][h], tracker[h - 1][2])
					END IF
				END IF

				dpTable[valAtIndex][h] = dpTable[valAtIndex][h] + 1
				memoMaps[h][nums[valAtIndex]] = MAX(memoMaps[h][nums[valAtIndex]], dpTable[valAtIndex][h])

				IF tracker[h][0] ≠ val THEN
					IF dpTable[valAtIndex][h] >= tracker[h][1] THEN
						tracker[h][2] = tracker[h][1]
						tracker[h][1] = dpTable[valAtIndex][h]
						tracker[h][0] = val
					ELSE
						tracker[h][2] = MAX(tracker[h][2], dpTable[valAtIndex][h])
					END IF
				ELSE
					tracker[h][1] = MAX(tracker[h][1], dpTable[valAtIndex][h])
				END IF

				maxAnswer = MAX(maxAnswer, dpTable[valAtIndex][h])
				h = h + 1
			END WHILE

			iterateIndices(currentIndex + 1)
		END FUNCTION

		iterateIndices(0)
		RETURN maxAnswer
	END FUNCTION
END CLASS