CLASS Solution  
    FUNCTION minimumLevels(possible)  
      DEFINE FUNCTION multiplyByTwoSubtractOne(x) RETURN (x << 1) - 1 END FUNCTION
      SET accumulator TO 0  
      SET iterator TO 0  
      LOOP WHILE iterator < LENGTH(possible)  
        LET accumulator = accumulator + multiplyByTwoSubtractOne(possible[iterator])  
        LET iterator = iterator + 1  
      END LOOP  
      
      LET tallyA TO 0  
      LET counter TO 0  
      
      DEFINE FUNCTION subtract(a, b) RETURN a - b END FUNCTION  
      
      DEFINE FUNCTION isGreater(a, b) RETURN (a > b) END FUNCTION  
      
      REPEAT  
        IF counter >= LENGTH(possible) - 2 BREAK END IF  
        
        LET value = multiplyByTwoSubtractOne(possible[counter])  
        LET tallyA = tallyA + value  
        LET accumulator = subtract(accumulator, value)  
        
        IF isGreater(tallyA, accumulator)  
          RETURN counter + 1  
        END IF  
        
        LET counter = counter + 1  
      UNTIL FALSE  
      
      RETURN -1  
    END FUNCTION  
END CLASS