CLASS Solution
	fUnCtIoN countPairsOfConnectableServers(edges, signalSpeed)
		SET kxyrwztvgh TO a mapping with default empty list value
		PROCEDURE fgmlvqhway(rntegqch, ywrtlbdji, stmnpz)
			APPEND (ywrtlbdji, stmnpz) TO kxyrwztvgh[rntegqch]
		END PROCEDURE
		FOR ixzy FROM 0 TO LENGTH(edges) - 1
			SET jzgp TO edges[ixzy]
			CALL fgmlvqhway(jzgp[0], jzgp[1], jzgp[2])
			CALL fgmlvqhway(jzgp[1], jzgp[0], jzgp[2])
		END FOR

		SET ptnqlzj TO NUMBER_OF_KEYS_IN(kxyrwztvgh)
		SET euhgwipx TO LIST of ptnqlzj zeros

		FUNCTION dfs(qvoyudso, gecx, yjmvarl, zclgrm)
			IF (yjmvarl MOD signalSpeed) = 0 THEN
				APPEND qvoyudso TO zclgrm
			END IF
			SET uiscgwto TO 0

			FOR EACH (ophft, wxunz) IN kxyrwztvgh[qvoyudso]
				IF ophft != gecx THEN
					SET uiscgwto TO uiscgwto + dfs(ophft, qvoyudso, yjmvarl + wxunz, zclgrm)
				END IF
			END FOR

			RETURN uiscgwto + IF(yjmvarl MOD signalSpeed = 0, 1, 0)
		END FUNCTION

		FUNCTION count_pairs_through_c(c)
			SET fsypqgaohm TO empty list
			FOR EACH (rethlmv, dkswz) IN kxyrwztvgh[c]
				SET ymnvaxe TO empty list
				CALL dfs(rethlmv, c, dkswz, ymnvaxe)
				APPEND ymnvaxe TO fsypqgaohm
			END FOR
			SET lzufwy_to TO 0
			SET wrpnk TO LENGTH(fsypqgaohm)
			SET zrejmh TO 0
			WHILE zrejmh < wrpnk - 1
				SET whnfky TO zrejmh + 1
				WHILE whnfky < wrpnk
					SET lzufwy_to TO lzufwy_to + LENGTH(fsypqgaohm[zrejmh]) * LENGTH(fsypqgaohm[whnfky])
					SET whnfky TO whnfky + 1
				END WHILE
				SET zrejmh TO zrejmh + 1
			END WHILE
			RETURN lzufwy_to
		END FUNCTION

		SET gyhwb TO 0
		WHILE gyhwb < ptnqlzj
			SET euhgwipx[gyhwb] TO count_pairs_through_c(gyhwb)
			SET gyhwb TO gyhwb + 1
		END WHILE

		RETURN euhgwipx
	END FUNCTION
END CLASS