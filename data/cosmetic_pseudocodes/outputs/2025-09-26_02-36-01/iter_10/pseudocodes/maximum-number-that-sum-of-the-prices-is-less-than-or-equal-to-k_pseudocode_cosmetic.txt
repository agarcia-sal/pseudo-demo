CLASS Solution
    FUNCTION findMaximumNumber(k, x)
        FUNCTION bitCountSegment(num, idx)
            SET accumulator TO 0
            SET segmentLength TO 1 * (2 ^ idx)
            SET completeSegments TO num DIV segmentLength
            SET accumulator TO accumulator + (completeSegments DIV 2) * segmentLength
            IF (completeSegments MOD 2) = 1 THEN
                SET accumulator TO accumulator + (num MOD segmentLength) + 1
            END IF
            RETURN accumulator
        END FUNCTION

        FUNCTION totalPrice(limit)
            SET result TO 0
            SET counter TO 1
            WHILE (2 ^ (counter * x - 1)) <= limit DO
                SET result TO result + bitCountSegment(limit, counter * x - 1)
                SET counter TO counter + 1
            END WHILE
            RETURN result
        END FUNCTION

        FUNCTION binarySearch(lowerBound, upperBound)
            IF lowerBound > upperBound THEN
                RETURN upperBound
            END IF
            SET middle TO lowerBound + (upperBound - lowerBound) DIV 2
            IF totalPrice(middle) <= k THEN
                RETURN binarySearch(middle + 1, upperBound)
            ELSE
                RETURN binarySearch(lowerBound, middle - 1)
            END IF
        END FUNCTION

        RETURN binarySearch(1, 1 * (2 ^ 60))
    END FUNCTION
END CLASS