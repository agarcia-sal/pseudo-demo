CLASS Solution
    FUNCTION countDays(days, meetings)
        CALL bubbleSort(meetings)

        SET a = 1
        SET b = 0

        FUNCTION bubbleSort(array)
            SET x = LENGTH(array)
            FUNCTION swap(i, j)
                SET temp = array[i]
                SET array[i] = array[j]
                SET array[j] = temp
            END FUNCTION

            PROCEDURE sortPass(n)
                IF n <= 1 THEN RETURN
                END IF
                SET y = 0
                WHILE y < n - 1 DO
                    IF array[y][0] > array[y + 1][0] THEN
                        swap(y, y + 1)
                    END IF
                    SET y = y + 1
                END WHILE
                CALL sortPass(n - 1)
            END PROCEDURE

            CALL sortPass(x)
        END FUNCTION

        FUNCTION maxVal(m, n)
            IF m >= n THEN RETURN m ELSE RETURN n END IF
        END FUNCTION

        FUNCTION minVal(p, q)
            IF p <= q THEN RETURN p ELSE RETURN q END IF
        END FUNCTION

        FUNCTION incrementByDifference(value1, value2, accumulator)
            RETURN accumulator + (value1 - value2)
        END FUNCTION

        PROCEDURE processMeetings(idx)
            IF idx > LENGTH(meetings) THEN RETURN END IF

            SET mElement = meetings[idx]
            SET startVal = mElement[0]
            SET endVal = mElement[1]

            IF a < startVal THEN
                SET b = incrementByDifference(startVal, a, b)
            END IF

            SET a = maxVal(a, endVal + 1)

            CALL processMeetings(idx + 1)
        END PROCEDURE

        CALL processMeetings(1)

        IF a <= days THEN
            SET b = b + (days - a + 1)
        END IF

        RETURN b
    END FUNCTION
END CLASS