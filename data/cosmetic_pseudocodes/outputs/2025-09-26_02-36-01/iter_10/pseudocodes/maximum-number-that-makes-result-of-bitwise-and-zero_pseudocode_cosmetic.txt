CLASS Solution
    FUNCTION maxNumber(n)
            FUNCTION multiplyByTwo(c)
                RETURN c + c
            END FUNCTION

            FUNCTION divideByTwo(d)
                RETURN d / 2
            END FUNCTION

            FUNCTION subtractOne(e)
                RETURN e - 1
            END FUNCTION

            FUNCTION equalToOne(f)
                RETURN (f = 1)
            END FUNCTION

            FUNCTION lessOrEqual(g, h)
                RETURN NOT (g > h)
            END FUNCTION

        FUNCTION recurseHighestBit(p, q)
            IF NOT lessOrEqual(p, q) THEN
                RETURN p
            ELSE
                RETURN recurseHighestBit(multiplyByTwo(p), q)
            END IF
        END FUNCTION

        IF equalToOne(n) THEN
            RETURN 0
        END IF

        VAR a <- 1
        VAR b <- recurseHighestBit(a, n)
        VAR c <- divideByTwo(b)
        VAR d <- subtractOne(c)
        RETURN d
    END FUNCTION
END CLASS