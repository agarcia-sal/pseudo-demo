CLASS Solution  
  FUNCTION minimumTimeToInitialState(word parameter word AND integer parameter k) RETURNS integer  
    SET totalLength TO LENGTH(word)  
    SET currentCount TO 1  
    DEFINE FUNCTION doesStartWith(w, pref) RETURNS boolean  
      SET i TO 0  
      WHILE i < LENGTH(pref)  
        IF w[i] != pref[i] THEN  
          RETURN false  
        END IF  
        SET i TO i + 1  
      END WHILE  
      RETURN true  
    END FUNCTION  
    DEFINE FUNCTION extractSuffix(w, startIndex) RETURNS word  
      SET result TO empty string  
      SET j TO startIndex  
      WHILE j < LENGTH(w)  
        SET result TO result + w[j]  
        SET j TO j + 1  
      END WHILE  
      RETURN result  
    END FUNCTION  
    FUNCTION recursiveSearch(counter) RETURNS integer  
      SET suffix TO extractSuffix(word, counter * k)  
      IF doesStartWith(word, suffix) THEN  
        RETURN counter  
      ELSE  
        RETURN recursiveSearch(counter + 1)  
      END IF  
    END FUNCTION  
    RETURN recursiveSearch(currentCount)  
  END FUNCTION  
END CLASS