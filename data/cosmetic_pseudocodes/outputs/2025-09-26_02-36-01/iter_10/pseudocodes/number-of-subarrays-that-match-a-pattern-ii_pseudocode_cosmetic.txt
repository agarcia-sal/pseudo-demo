CLASS Solution
    FUNCTION countMatchingSubarrays(nums, pattern)
  
        FUNCTION compareDifference(a, b)
            IF a < b THEN
                RETURN 1
            ELSEIF a = b THEN
                RETURN 0
            ELSE
                RETURN -1
            ENDIF
        ENDFUNCTION

        PROCEDURE buildRelationSeq(arr, relSeq)
            SET idx TO 0
            WHILE idx <= LENGTH(arr) - 2
                APPEND compareDifference(arr[idx], arr[idx + 1]) TO relSeq
                SET idx TO idx + 1
            ENDWHILE
        ENDPROCEDURE

        FUNCTION isEqualSequence(seq1, start1, seq2)
            SET lengthToCheck TO LENGTH(seq2)
            SET pos TO 0
            REPEAT
                IF seq1[start1 + pos] <> seq2[pos]
                    RETURN FALSE
                ENDIF
                SET pos TO pos + 1
            UNTIL pos = lengthToCheck
            RETURN TRUE
        ENDFUNCTION

        SET lenNums TO LENGTH(nums)
        SET lenPattern TO LENGTH(pattern)
        SET totalMatch TO 0
        DECLARE relArray AS EMPTY LIST
        CALL buildRelationSeq(nums, relArray)

        SET cursor TO 0
        WHILE cursor <= lenNums - lenPattern - 1
            IF isEqualSequence(relArray, cursor, pattern) THEN
                SET totalMatch TO totalMatch + 1
            ENDIF
            SET cursor TO cursor + 1
        ENDWHILE

        RETURN totalMatch
    ENDFUNCTION
ENDCLASS