CLASS Solution
	Function numberOfAlternatingGroups(colors k)
		// Early exit when k is less than 3
		IF NOT (k >= 3) THEN
			RETURN 0
		END IF

		LET lenColors BE SIZE(colors)
		LET doubledColors BE CONCAT(colors, SLICE(colors, 0, k - 1))
		LET accum BE 0

		// Recursive helper to check alternation over range
		Function checkAlternation(pos, step)
			IF step = k THEN
				RETURN true
			END IF
			IF INDEX(doubledColors, pos + step) = INDEX(doubledColors, pos + step - 1) THEN
				RETURN false
			END IF
			RETURN checkAlternation(pos, step + 1)
		END Function

		LET idx BE 0
		WHILE idx < lenColors DO
			IF checkAlternation(idx, 1) THEN
				accum = accum + 1
			END IF
			idx = idx + 1
		END WHILE

		RETURN accum
	END Function
END CLASS