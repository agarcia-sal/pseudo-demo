CLASS Solution  
    FUNCTION compressedString(word)  
        FUNCTION toStr(num)  
            SET resStr TO ""  
            SET rem TO num  
            REPEAT  
                SET rem TO rem  
                IF rem EQUALS 0  
                    BREAK  
                END IF  
                SET resStr TO CHR((rem MOD 10) + 48) + resStr  
                SET rem TO rem DIV 10  
            UNTIL FALSE  
            IF resStr EQUALS ""  
                RETURN "0"  
            END IF  
            RETURN resStr  
        END FUNCTION  

        SET acc TO []  
        SET pos TO 0  

        FUNCTION traverse(index)  
            IF index >= LENGTH(word)  
                RETURN index  
            END IF  
            SET currentChar TO word[index]  
            SET cnt TO 0  

            FUNCTION innerLoop(j, ch, ccount)  
                IF ((j >= LENGTH(word)) OR (word[j] != ch) OR (ccount = 9)) THEN
                    RETURN j, ccount
                END IF  
                RETURN innerLoop(j + 1, ch, ccount + 1)  
            END FUNCTION  

            SET newIndex, finalCount TO innerLoop(index, currentChar, 0)  
            acc.APPEND( toStr(finalCount) + currentChar )  
            RETURN newIndex  
        END FUNCTION  

        FUNCTION loop(idx)  
            IF idx >= LENGTH(word)  
                RETURN  
            END IF  
            SET nextIdx TO traverse(idx)  
            loop(nextIdx)  
        END FUNCTION  

        loop(pos)  

        SET outputStr TO ""  
        FOR k FROM 0 TO LENGTH(acc) - 1  
            SET outputStr TO outputStr + acc[k]  
        END FOR  

        RETURN outputStr  
    END FUNCTION  
END CLASS