CLASS Solution
    FUNCTION numberOfWays WITH PARAMETER n
      DEFINE CONSTANT x = 1000000007
      DEFINE FUNCTION moduloAdd(a, b, m)
          RETURN ((a MOD m) + (b MOD m)) MOD m
      END FUNCTION

      DEFINE FUNCTION iterateCoins(cList, lengthN, accArray)
          IF cList IS EMPTY THEN
              RETURN accArray
          ELSE
              LET currentCoin BE FIRST ELEMENT OF cList
              LET tailCoins BE REST OF cList

              FUNCTION updateArray(idx, arr)
                  IF idx > lengthN THEN
                      RETURN arr
                  ELSE
                      LET newVal BE moduloAdd(arr[idx], arr[idx - currentCoin], x)
                      arr[idx] := newVal
                      RETURN updateArray(idx + 1, arr)
                  END IF
              END FUNCTION

              LET updatedArr BE updateArray(currentCoin, accArray)
              RETURN iterateCoins(tailCoins, lengthN, updatedArr)
          END IF
      END FUNCTION

      DEFINE FUNCTION accResult(maxN, dpArr, loopK, accum)
          IF loopK > 2 THEN
              RETURN accum
          ELSE
              LET productVal = loopK * 4
              IF productVal <= maxN THEN
                  LET newAccum = moduloAdd(accum, dpArr[maxN - productVal], x)
                  RETURN accResult(maxN, dpArr, loopK + 1, newAccum)
              ELSE
                  RETURN accResult(maxN, dpArr, loopK + 1, accum)
              END IF
          END IF
      END FUNCTION

      LET VwqtrbXhYOIj := ARRAY OF SIZE (n + 1) FILLED WITH 0
      VwqtrbXhYOIj[0] := 1

      LET MpcedFNLbe := iterateCoins([1, 2, 6], n, VwqtrbXhYOIj)
      
      LET RmDveYWJkH := accResult(n, MpcedFNLbe, 0, 0)

      RETURN RmDveYWJkH
    END FUNCTION
END CLASS