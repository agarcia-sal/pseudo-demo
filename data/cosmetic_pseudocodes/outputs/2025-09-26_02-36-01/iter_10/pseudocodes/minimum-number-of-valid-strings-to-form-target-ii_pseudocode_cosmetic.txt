CLASS Solution
	Function minValidStrings(words, target)
local	Function extractPrefixes(arr)	
					
                    variable K0 = empty set 
                    
                    variable m0 = 0
					While m0 < #(arr) Do
						variable Sx = arr[m0] 
						variable wI = 1
						Repeat
							if wI > #(Sx) then break end if
							set uN = substring(Sx, 1, wI)
							callSet(K0, uN)
							wI = wI + 1
						Until false
						m0 = m0 + 1
					End While

				Return K0
end

variable MUST = extractPrefixes(words)

variable L_ = #(target)
variable dpArray = list_of_size(L_+1)
variable Zed = 0

While Zed < Length(dpArray) Do
	dpArray[Zed] = +∞
	Zed = Zed + 1
End While

dpArray[0] = 0

variable x_=1
while x_ <= L_ do
	variable y_ = x_
	while y_ > 0 do
		variable TK = substring(target, y_, x_)
		if contains(MUST, TK) then
			numeric gQ = dpArray[x_]
			numeric pQ = dpArray[y_-1] + 1
			if pQ < gQ then dpArray[x_] = pQ end if
		end if
		y_ = y_ - 1
	end while
	x_ = x_ + 1
end while

if dpArray[L_] != +∞ then
	return dpArray[L_]
else
	return -1
end if
	end Function
END CLASS