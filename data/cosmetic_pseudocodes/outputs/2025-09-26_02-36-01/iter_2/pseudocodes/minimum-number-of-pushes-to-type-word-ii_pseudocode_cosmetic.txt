CLASS Solution  
    FUNCTION minimumPushes(word)  
        freq_map ← empty map  
        FOR i FROM 0 TO LENGTH(word) - 1  
            IF word[i] NOT IN freq_map THEN  
                freq_map[word[i]] ← 1  
            ELSE  
                freq_map[word[i]] ← freq_map[word[i]] PLUS 1  
            END IF  
        END FOR  

        freq_values ← LIST(freq_map VALUES)  
        SORT freq_values DESCENDING

        total_cost ← 0  
        presses_needed ← 1  
        keys_used ← 0  

        index ← 0  
        WHILE index < LENGTH(freq_values)  
            current_frequency ← freq_values[index]  
            contribution ← 0  
            temp ← presses_needed  
            LOOP TIMES current_frequency  
                contribution ← contribution PLUS temp  
            END LOOP  
            total_cost ← total_cost PLUS contribution  
            keys_used ← keys_used PLUS 1  

            IF keys_used = 8 THEN  
                presses_needed ← presses_needed PLUS 1  
                keys_used ← 0  
            END IF  

            index ← index PLUS 1  
        END WHILE  

        RETURN total_cost  
    END FUNCTION  
END CLASS