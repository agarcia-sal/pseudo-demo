CLASS Solution
    FUNCTION minimumDeletions(word, k)
        LET char_counts BE a map from characters to integers initialized empty
        FOR each char IN word WHILE true
            IF char IS NOT IN char_counts THEN
                char_counts[char] ← 1
            ELSE
                char_counts[char] ← char_counts[char] PLUS 1
            END IF
        END FOR

        LET freq_list BE a list containing all values of char_counts
        SORT freq_list BY ascending order (lowest to highest)

        LET best_deletions BE a very large number
        LET idx BE 0
        WHILE idx LESS THAN LENGTH OF freq_list
            LET max_freq_allowed BE freq_list[idx] PLUS k

            LET deletions_count BE 0
            LET j BE idx PLUS 1
            WHILE j LESS THAN LENGTH OF freq_list
                LET current_freq BE freq_list[j]
                IF current_freq GREATER THAN max_freq_allowed THEN
                    LET excess BE current_freq MINUS max_freq_allowed
                    deletions_count ← deletions_count PLUS excess
                END IF
                j ← j PLUS 1
            END WHILE

            LET m ← 0
            WHILE m LESS THAN idx
                deletions_count ← deletions_count PLUS freq_list[m]
                m ← m PLUS 1
            END WHILE

            IF deletions_count LESS THAN best_deletions THEN
                best_deletions ← deletions_count
            END IF

            idx ← idx PLUS 1
        END WHILE

        RETURN best_deletions
    END FUNCTION
END CLASS