CLASS Solution  
    FUNCTION lastNonEmptyString(s)  
        LET frequency_map BE an empty mapping from characters to integers  
        LET index_counter BE 0  
        WHILE index_counter < LENGTH(s)  
            LET current_char BE s[index_counter]  
            IF current_char NOT IN frequency_map  
                ASSIGN frequency_map[current_char] = 1  
            ELSE  
                ASSIGN frequency_map[current_char] = frequency_map[current_char] + 1  
            END IF  
            INCREMENT index_counter by 1  
        END WHILE  

        LET highest_count BE 0  
        FOR each key_key IN frequency_map KEYS  
            IF frequency_map[key_key] > highest_count  
                ASSIGN highest_count = frequency_map[key_key]  
            END IF  
        END FOR  

        LET frequent_chars SET BE empty set  
        FOR each symbol IN frequency_map KEYS  
            IF frequency_map[symbol] IS EQUAL TO highest_count  
                ADD symbol TO frequent_chars SET  
            END IF  
        END FOR  

        LET collected_chars BE empty list  
        LET rev_index BE LENGTH(s) - 1  
        WHILE rev_index >= 0  
            LET char_here BE s[rev_index]  
            IF char_here IS IN frequent_chars SET  
                APPEND char_here TO collected_chars  
                DELETE char_here FROM frequent_chars SET  
            END IF  
            DECREMENT rev_index by 1  
        END WHILE  

        LET output_string BE empty string  
        LET back_index BE LENGTH(collected_chars) - 1  
        WHILE back_index >= 0  
            CONCATENATE collected_chars[back_index] TO output_string  
            DECREMENT back_index by 1  
        END WHILE  

        RETURN output_string  
    END FUNCTION  
END CLASS