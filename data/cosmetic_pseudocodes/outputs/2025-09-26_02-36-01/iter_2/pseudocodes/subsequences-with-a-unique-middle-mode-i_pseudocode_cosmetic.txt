CLASS Solution  
    FUNCTION subsequencesWithMiddleMode(nums)  
        LET MODULO_CONST BE 1_000_000_007  
        LET lengthNums BE SIZE OF nums  
        IF lengthNums <= 4 THEN  
            RETURN 0  
        END IF  
        LET allQuintets BE GENERATE_COMBINATIONS(nums, 5)  
        LET totalMatches BE 0  
        LET index IN allQuintets BE 0  
        WHILE index < SIZE OF allQuintets DO  
            LET currentSeq BE allQuintets[index]  
            LET frequencyMap BE EMPTY_MAP  
            LET pos BE 0  
            WHILE pos < 5 DO  
                LET val BE currentSeq[pos]  
                IF val IN frequencyMap THEN  
                    frequencyMap[val] = frequencyMap[val] + 1  
                ELSE  
                    frequencyMap[val] = 1  
                END IF  
                pos = pos + 1  
            END WHILE  
            LET medianVal BE currentSeq[2]  
            LET medianCount BE frequencyMap[medianVal]  
            LET uniqueModeFlag BE TRUE  
            FOR EACH key, countVal IN frequencyMap DO  
                IF (key != medianVal) AND (countVal >= medianCount) THEN  
                    uniqueModeFlag = FALSE  
                    EXIT FOR  
                END IF  
            END FOR  
            IF uniqueModeFlag == TRUE THEN  
                totalMatches = totalMatches + 1  
            END IF  
            index = index + 1  
        END WHILE  
        RETURN totalMatches MODULO_MODULO_CONST  
    END FUNCTION  
END CLASS