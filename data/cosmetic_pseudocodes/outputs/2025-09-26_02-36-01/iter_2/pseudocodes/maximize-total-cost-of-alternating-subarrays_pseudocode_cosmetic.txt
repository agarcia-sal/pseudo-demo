CLASS Solution  
    FUNCTION maximumTotalCost(nums)  
        LET lengthVal = SIZE OF nums  
        IF lengthVal == 1 THEN  
            RETURN nums[0]  
        END IF  
        
        LET dpList BE AN ARRAY OF ZEROS LENGTH lengthVal  
        dpList[lengthVal - 1] = nums[lengthVal - 1]  
        
        LET idx = lengthVal - 2  
        WHILE idx >= 0 DO  
            LET tmpCost = nums[idx]  
            
            IF tmpCost > dpList[idx + 1] THEN  
                dpList[idx] = tmpCost  
            ELSE  
                dpList[idx] = dpList[idx + 1] + tmpCost  
            END IF  
            
            LET pos = idx + 1  
            WHILE pos < lengthVal DO  
                LET signFactor = IF ((pos - idx) % 2 == 0) THEN 1 ELSE -1 END IF  
                LET addition = nums[pos] * signFactor  
                
                tmpCost = tmpCost + addition  
                
                IF (pos + 1) < lengthVal THEN  
                    IF dpList[idx] < tmpCost + dpList[pos + 1] THEN  
                        dpList[idx] = tmpCost + dpList[pos + 1]  
                    END IF  
                ELSE  
                    IF dpList[idx] < tmpCost THEN  
                        dpList[idx] = tmpCost  
                    END IF  
                END IF  
                pos = pos + 1  
            END WHILE  
            idx = idx - 1  
        END WHILE  
        
        RETURN dpList[0]  
    END FUNCTION  
END CLASS