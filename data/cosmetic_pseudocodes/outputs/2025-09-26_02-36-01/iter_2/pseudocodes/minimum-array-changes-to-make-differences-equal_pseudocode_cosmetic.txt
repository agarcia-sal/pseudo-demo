CLASS Solution
    FUNCTION minChanges(nums k)
        LET countArray BE an array filled with zeroes, length = k PLUS 2
        LET lengthNums BE LENGTH(nums)
        LET idx BE 0
        WHILE idx LESS THAN (lengthNums DIVIDED BY 2)
            LET val1 BE nums[idx]
            LET val2 BE nums[lengthNums MINUS idx MINUS 1]
            IF val1 GREATER THAN val2 THEN
                LET tempVal BE val1
                val1 = val2
                val2 = tempVal
            END IF
            countArray[0] = countArray[0] PLUS 1
            countArray[val2 MINUS val1] = countArray[val2 MINUS val1] MINUS 1
            countArray[(val2 MINUS val1) PLUS 1] = countArray[(val2 MINUS val1) PLUS 1] PLUS 1
            LET maxVal BE val2 IF val2 GREATER THAN (k MINUS val1) ELSE (k MINUS val1)
            countArray[maxVal PLUS 1] = countArray[maxVal PLUS 1] MINUS 1
            countArray[maxVal PLUS 2] = countArray[maxVal PLUS 2] PLUS 1
            idx = idx PLUS 1
        END WHILE
        LET runningSum BE 0
        LET minimumChanges BE infinity
        LET pointer BE 0
        WHILE pointer LESS THAN LENGTH(countArray)
            runningSum = runningSum PLUS countArray[pointer]
            IF runningSum LESS THAN minimumChanges THEN
                minimumChanges = runningSum
            END IF
            pointer = pointer PLUS 1
        END WHILE
        RETURN minimumChanges
    END FUNCTION
END CLASS