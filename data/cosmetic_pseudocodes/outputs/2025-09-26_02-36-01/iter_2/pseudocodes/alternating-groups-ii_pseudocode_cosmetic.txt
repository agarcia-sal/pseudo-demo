CLASS Solution  
    FUNCTION numberOfAlternatingGroups(colors k)  
        IF k <= 2 THEN  
            RETURN 0  
        END IF  
  
        LET lengthColors BE LENGTH(colors)  
        LET wrappedColors BE EMPTY LIST  
        LET idx BE 0  
        WHILE idx < lengthColors DO  
            APPEND colors[idx] TO wrappedColors  
            INCREMENT idx BY 1  
        END WHILE  
  
        LET repeatCount BE 0  
        WHILE repeatCount < k - 1 DO  
            APPEND colors[repeatCount] TO wrappedColors  
            INCREMENT repeatCount BY 1  
        END WHILE  
  
        SET validCount TO 0  
        LET startIndex BE 0  
        WHILE startIndex < lengthColors DO  
            LET alternatingFlag BE TRUE  
            LET offset BE 1  
            WHILE offset < k AND alternatingFlag DO  
                IF wrappedColors[startIndex + offset] == wrappedColors[startIndex + offset - 1] THEN  
                    SET alternatingFlag TO FALSE  
                END IF  
                INCREMENT offset BY 1  
            END WHILE  
            IF alternatingFlag THEN  
                validCount = validCount + 1  
            END IF  
            INCREMENT startIndex BY 1  
        END WHILE  
  
        RETURN validCount  
    END FUNCTION  
END CLASS