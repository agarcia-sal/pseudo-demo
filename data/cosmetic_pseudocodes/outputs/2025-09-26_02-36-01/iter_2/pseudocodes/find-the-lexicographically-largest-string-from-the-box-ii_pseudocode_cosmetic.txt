CLASS Solution  
    FUNCTION answerString(inputWord, companionCount)  
        IF companionCount = 1 THEN  
            RETURN inputWord  
        END IF  

        SET candidate TO CALL _lastSubstring ON inputWord  
        SET limit TO LENGTH(inputWord) - companionCount + 1  
        SET endpoint TO candidate.LENGTH  

        IF endpoint > limit THEN  
            SET endpoint TO limit  
        END IF  

        RETURN candidate[1 TO endpoint]  
    END FUNCTION  

    FUNCTION _lastSubstring(text)  
        LET startIndex BE 0  
        LET compareIndex BE 1  
        LET offset BE 0  
        WHILE (compareIndex + offset) < LENGTH(text) DO  
            IF text[startIndex + offset] = text[compareIndex + offset] THEN  
                offset = offset + 1  
            ELSE  
                IF text[startIndex + offset] > text[compareIndex + offset] THEN  
                    compareIndex = compareIndex + offset + 1  
                    offset = 0  
                ELSE  
                    LET newBase = startIndex + offset + 1  
                    IF compareIndex > newBase THEN  
                        startIndex = compareIndex  
                    ELSE  
                        startIndex = newBase  
                    END IF  
                    compareIndex = startIndex + 1  
                    offset = 0  
                END IF  
            END IF  
        END WHILE  

        RETURN text[(startIndex + 1) TO LENGTH(text)]  
    END FUNCTION  
END CLASS