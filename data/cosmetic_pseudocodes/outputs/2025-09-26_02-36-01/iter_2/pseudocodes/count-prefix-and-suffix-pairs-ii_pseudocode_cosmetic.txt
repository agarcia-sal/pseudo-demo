CLASS Solution  
    FUNCTION countPrefixSuffixPairs(words)  
        DECLARE totalMatches AS INTEGER INIT 0  
        DECLARE frequencyMap AS DICTIONARY WITH DEFAULT VALUE 0  
        SET idx TO LENGTH(words) - 1  
        WHILE idx >= 0  
            LET currentWord BE words[idx]  
            FOR EACH storedWord IN frequencyMap KEYS  
                LET prefixLength BE LENGTH(currentWord)  
                LET prefixSubstr BE storedWord[0 : prefixLength]  
                LET suffixSubstr BE storedWord[LENGTH(storedWord) - prefixLength : LENGTH(storedWord)]  
                IF currentWord == prefixSubstr AND currentWord == suffixSubstr THEN  
                    LET totalMatches BE totalMatches + frequencyMap[storedWord]  
                END IF  
            END FOR  
            LET frequencyMap[currentWord] BE frequencyMap[currentWord] + 1  
            SET idx TO idx - 1  
        END WHILE  
        RETURN totalMatches  
    END FUNCTION  
END CLASS