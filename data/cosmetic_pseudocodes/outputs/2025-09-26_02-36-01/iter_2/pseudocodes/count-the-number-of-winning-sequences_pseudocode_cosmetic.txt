CLASS Solution  
    FUNCTION countWinningSequences(inputString)  
        FUNCTION calc(a, b)  
            IF a IS b THEN  
                RETURN 0  
            ENDIF  
            IF a < b THEN  
                IF a = 0 AND b = 2 THEN  
                    RETURN 1  
                ELSE  
                    RETURN -1  
                ENDIF  
            ENDIF  
            IF a = 2 AND b = 0 THEN  
                RETURN -1  
            ELSE  
                RETURN 1  
            ENDIF  
        END FUNCTION  
  
        FUNCTION dfs(idx, balance, prev)  
            IF LEN(inputString) - idx <= balance THEN  
                RETURN 0  
            ENDIF  
            IF idx >= LEN(inputString) THEN  
                IF balance < 0 THEN  
                    RETURN 1  
                ELSE  
                    RETURN 0  
                ENDIF  
            ENDIF  
  
            resVar ← 0  
            loopVar ← 0  
            WHILE loopVar <= 2 DO  
                IF loopVar = prev THEN  
                    loopVar ← loopVar + 1  
                    CONTINUE  
                ENDIF  
                partial ← dfs(idx + 1, balance + calc(d[inputString[idx]], loopVar), loopVar)  
                resVar ← (resVar + partial) MOD modValue  
                loopVar ← loopVar + 1  
            ENDWHILE  
  
            RETURN resVar  
        END FUNCTION  
  
        modValue ← 1000000000 + 7  
        d ← DICT with entries { 'F': 0, 'W': 1, 'E': 2 }  
        answer ← dfs(0, 0, -1)  
        dfs CLEARCACHE  
        RETURN answer  
    END FUNCTION  
END CLASS