CLASS Solution  
    FUNCTION minimumCost(m n horizontalCut verticalCut)  
        DECLARE result AS INTEGER = 0  
        DECLARE idxH AS INTEGER = 0  
        DECLARE idxV AS INTEGER = 0  
        DECLARE heightSegments AS INTEGER = 1  
        DECLARE widthSegments AS INTEGER = 1  
        horizontalCut = SORTED(horizontalCut, ORDER = DESCENDING)  
        verticalCut = SORTED(verticalCut, ORDER = DESCENDING)  
        WHILE (idxH < LENGTH(horizontalCut)) OR (idxV < LENGTH(verticalCut))  
            IF (idxV = LENGTH(verticalCut)) OR ((idxH < LENGTH(horizontalCut)) AND (horizontalCut[idxH] > verticalCut[idxV])) THEN  
                tempVal = horizontalCut[idxH]  
                addAmount = tempVal * widthSegments  
                result = result + addAmount  
                heightSegments = heightSegments + 1  
                idxH = idxH + 1  
            ELSE  
                tempVal = verticalCut[idxV]  
                addAmount = tempVal * heightSegments  
                result = result + addAmount  
                widthSegments = widthSegments + 1  
                idxV = idxV + 1  
            END IF  
        END WHILE  
        RETURN result  
    END FUNCTION  
END CLASS