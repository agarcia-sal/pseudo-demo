CLASS Solution
    FUNCTION maxFrequency(nums, k, numOperations)
        INITIALIZE cnt AS new dictionary with integer default
        INITIALIZE diff AS new dictionary with integer default
        SET idx TO 0
        WHILE idx < LENGTH(nums)
            LET val BE nums[idx]
            SET cnt[val] TO cnt[val] + 1
            SET diff[val] TO diff[val] + 0
            LET leftBoundary BE val MINUS k
            SET diff[leftBoundary] TO diff[leftBoundary] + 1
            LET rightBoundary BE val PLUS k PLUS 1
            SET diff[rightBoundary] TO diff[rightBoundary] - 1
            SET idx TO idx PLUS 1
        END WHILE

        LET result BE 0
        LET runningSum BE 0
        LET sortedItems BE SORTED LIST of (key, value) PAIRS from diff BY key ascending
        SET i TO 0
        WHILE i < LENGTH(sortedItems)
            LET (currentKey, delta) BE sortedItems[i]
            SET runningSum TO runningSum + delta
            LET candidate1 BE result
            LET candidate2 BE runningSum
            LET candidate3 BE cnt[currentKey] + numOperations
            SET result TO candidate1 MAXIMUM OF candidate2 MINIMUM OF candidate3
            SET i TO i + 1
        END WHILE

        RETURN result
    END FUNCTION
END CLASS