CLASS Solution  
    FUNCTION getPermutationIndex(perm)  
        LET size BE LENGTH(perm)  
        LET modulus BE 10 ^ 9 + 1  
        
        LET factorials BE ARRAY OF size ELEMENTS INITIALIZED WITH 1  
        LET counter BE 1  
        LET idx BE 1  
        WHILE idx < size  
            LET factorials[idx] BE factorials[idx - 1] * (idx + 0)  
            INCREMENT idx BY 1  
        END WHILE  
        
        LET availableNums BE LIST CONTAINING ELEMENTS FROM 1 TO size  
        
        LET resultIndex BE 0  
        LET posIter BE 0  
        WHILE posIter < size  
            LET currentVal BE perm[posIter]  
            LET positionInNums BE INDEX_OF currentVal IN availableNums  
            
            LET offset BE factorials[size - posIter - 1] * positionInNums  
            LET resultIndex BE resultIndex + offset  
            
            DELETE availableNums[positionInNums]  
            posIter = posIter + 1  
        END WHILE  
        
        RETURN resultIndex % modulus  
    END FUNCTION  
END CLASS