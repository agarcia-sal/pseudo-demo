CLASS Solution
    FUNCTION minimumSubstringsInPartition(s)
        FUNCTION dfs(pos)
            IF pos >= LENGTH(s) THEN
                RETURN 0
            END IF

            LET charCount BE a mapping with default 0
            LET countFreq BE a mapping with default 0
            LET result BE LENGTH(s) - pos

            LET idx BE pos
            WHILE idx <= LENGTH(s) - 1 DO
                LET currentChar BE s[idx]

                IF currentChar IN charCount AND charCount[currentChar] <> 0 THEN
                    LET oldFreq BE charCount[currentChar]
                    LET countFreq[oldFreq] <- countFreq[oldFreq] - 1
                    IF countFreq[oldFreq] = 0 THEN
                        DELETE countFreq[oldFreq]
                    END IF
                END IF

                LET newFreq BE charCount[currentChar] + 1
                charCount[currentChar] <- newFreq
                countFreq[newFreq] <- countFreq.get(newFreq, 0) + 1

                IF LENGTH(countFreq) = 1 THEN
                    LET tempResult BE 1 + dfs(idx + 1)
                    IF tempResult < result THEN
                        result <- tempResult
                    END IF
                END IF
                idx <- idx + 1
            END WHILE

            RETURN result
        END FUNCTION

        LET lengthStr BE LENGTH(s)
        RETURN dfs(0)
    END FUNCTION
END CLASS