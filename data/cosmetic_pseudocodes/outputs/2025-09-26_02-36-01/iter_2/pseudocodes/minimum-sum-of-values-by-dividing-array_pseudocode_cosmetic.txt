CLASS Solution
    FUNCTION minimumValueSum(nums, andValues)
        LET lengthNums BE LENGTH(nums)
        LET lengthAnds BE LENGTH(andValues)

        FUNCTION dp(index1, index2)
            LET INF BE infinity
            IF NOT (index2 >= 0) THEN
                IF NOT (index1 >= 0) THEN
                    RETURN 0
                ELSE
                    RETURN INF
                END IF
            END IF

            IF NOT (index1 >= 0) THEN
                RETURN INF
            END IF

            LET smallestSum BE INF
            LET runningAnd BE null
            LET pointer BE index1

            WHILE pointer >= 0
                IF runningAnd IS null THEN
                    SET runningAnd = nums[pointer]
                ELSE
                    SET runningAnd = runningAnd BITWISE_AND nums[pointer]
                END IF

                IF runningAnd = andValues[index2] THEN
                    LET candidateSum BE dp(pointer - 1, index2 - 1)
                    LET candidateSum BE candidateSum + nums[index1]
                    IF candidateSum < smallestSum THEN
                        SET smallestSum = candidateSum
                    END IF
                END IF

                SET pointer = pointer - 1
            END WHILE

            RETURN smallestSum
        END FUNCTION

        LET answer BE dp(lengthNums - 1, lengthAnds - 1)
        IF answer < infinity THEN
            RETURN answer
        ELSE
            RETURN -1
        END IF
    END FUNCTION
END CLASS