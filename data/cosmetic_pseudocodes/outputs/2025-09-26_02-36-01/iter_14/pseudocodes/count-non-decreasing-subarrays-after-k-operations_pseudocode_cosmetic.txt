CLASS Solution
    FUNCTION countNonDecreasingSubarrays(nums k)
      SET alpha TO LENGTH OF nums

      FUNCTION canMakeNonDecreasing(phi omega)
        SET delta TO 0
        SET epsilon TO nums[phi]
        SET zeta TO 1
        WHILE zeta < omega DO
          IF nums[phi + zeta] < epsilon THEN
            SET delta TO delta + (epsilon - nums[phi + zeta])
          END IF
          SET epsilon TO (epsilon + nums[phi + zeta] + ABS(epsilon - nums[phi + zeta])) / 2
          IF delta > k THEN
            RETURN False
          END IF
          SET zeta TO zeta + 1
        END WHILE
        RETURN True
      END FUNCTION

      SET beta TO (alpha * (alpha + 1)) / 2
      SET gamma TO 0

      FOR i FROM 0 TO alpha - 1 DO
        SET kappa TO 1
        SET lambda TO alpha - i
        REPEAT
          SET mu TO (kappa + lambda) // 2
          IF canMakeNonDecreasing(i mu) = True THEN
            SET kappa TO mu + 1
          ELSE
            SET lambda TO mu - 1
          END IF
        UNTIL kappa > lambda
        SET gamma TO gamma + (alpha - i - lambda)
      END FOR

      RETURN beta - gamma
    END FUNCTION
END CLASS