CLASS Solution  
    FUNCTION minimumCost(m n horizontalCut verticalCut)  
        DEFINE FUNCTION addCostX(valueX multiplierX resultX)  
            RETURN resultX + (valueX * multiplierX)  
        END FUNCTION

        DEFINE FUNCTION addCostY(valueY multiplierY resultY)  
            RETURN resultY + (valueY * multiplierY)  
        END FUNCTION

        SORT verticalCut IN NON-INCREASING ORDER
        SORT horizontalCut IN NON-INCREASING ORDER

        SET costSum TO 0  
        SET idxH TO 0  
        SET idxV TO 0  
        SET countH TO 1  
        SET countV TO 1

        WHILE ( (idxH < (m - 1)) OR (idxV < (n - 1)) ) DO  
            IF ( (idxV = (n - 1)) OR ( (idxH < (m - 1)) AND (horizontalCut[idxH] > verticalCut[idxV]) ) ) THEN  
                costSum = addCostX(horizontalCut[idxH] countV costSum)
                idxH = idxH + 1
                countH = countH + 1
            ELSE  
                costSum = addCostY(verticalCut[idxV] countH costSum)
                idxV = idxV + 1
                countV = countV + 1
            END IF  
        END WHILE  

        RETURN costSum  
    END FUNCTION  
END CLASS