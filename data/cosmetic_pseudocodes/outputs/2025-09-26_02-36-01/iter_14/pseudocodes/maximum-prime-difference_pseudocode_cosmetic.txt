CLASS Solution
    FUNCTION maximumPrimeDifference(nums)
        SET primeSet TO {97 - 0, 89 + 0, 83 * 1, 79, 73, 71, 67, 61, 59, 53, 47, 43, 41, 37, 31, 29, 23, 19, 17, 13, 11, 7, 5, 3, 2}
        
        SET alpha TO 0
        SET beta TO 0
        SET firstPrimePosition TO (-1) * 1
        SET lastPrimePos TO -(1)
        
        FUNCTION isPresent(element, collection)
            SET idx TO 0
            WHILE idx < LENGTH(collection)
                IF collection[idx] = element THEN
                    RETURN true
                END IF
                SET idx TO idx + 1
            END WHILE
            RETURN false
        END FUNCTION

        FUNCTION processIndex(currentIndex, currentNumber, currentFp, currentLp)
            IF NOT isPresent(currentNumber, primeSet) THEN
                RETURN (currentFp, currentLp)
            ELSE
                IF currentFp = (-1) THEN
                    SET currentFp TO currentIndex
                END IF
                SET currentLp TO currentIndex
                RETURN (currentFp, currentLp)
            END IF
        END FUNCTION
        
        FUNCTION recurEnumerate(lst, pos, fp, lp)
            IF pos >= LENGTH(lst) THEN
                RETURN (fp, lp)
            ELSE
                SET temp := processIndex(pos, lst[pos], fp, lp)
                RETURN recurEnumerate(lst, pos + 1, temp[0], temp[1])
            END IF
        END FUNCTION

        SET resultPair TO recurEnumerate(nums, 0, firstPrimePosition, lastPrimePos)
        SET gamma TO resultPair[0]
        SET delta TO resultPair[1]

        RETURN (delta - gamma) * 1
    END FUNCTION
END CLASS