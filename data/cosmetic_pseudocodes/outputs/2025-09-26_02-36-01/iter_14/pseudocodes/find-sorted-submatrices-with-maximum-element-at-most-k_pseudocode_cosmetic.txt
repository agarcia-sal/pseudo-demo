```
CLASS Solution
    FUNCTION countSubmatrices(grid, k)
      SET Alpha TO LENGTH OF grid
      SET Beta TO LENGTH OF element at zero index of grid
      SET Gamma TO 0

      FUNCTION validate_submatrix(matrix)
          SET I TO 0
          WHILE I LESS THAN LENGTH OF matrix DO
              SET J TO 0
              REPEAT
                  IF element at J of element at I of matrix GREATER THAN k THEN
                      RETURN False
                  END IF
                  SET J TO J + 1
              UNTIL J GREATER OR EQUAL TO LENGTH OF element at I of matrix
              SET I TO I + 1
          END WHILE
          RETURN True
      END FUNCTION

      FUNCTION check_sorted_submatrix(matrix)
          SET P TO 0
          REPEAT
              SET Q TO 1
              WHILE Q LESS THAN LENGTH OF element at P of matrix DO
                  IF NOT (element at Q of element at P of matrix LESS OR EQUAL TO element at (Q - 1) of element at P of matrix) THEN
                      RETURN False
                  END IF
                  SET Q TO Q + 1
              END WHILE
              SET P TO P + 1
          UNTIL P GREATER OR EQUAL TO LENGTH OF matrix
          RETURN True
      END FUNCTION

      SET A TO 0
      WHILE A LESS OR EQUAL TO (Alpha - 1) DO
          SET B TO 0
          REPEAT
              SET C TO A
              WHILE C LESS OR EQUAL TO (Alpha - 1) DO
                  SET D TO B
                  REPEAT
                      SET submatrix TO empty list
                      FOR each element at E in the slice of grid from A to C inclusive DO
                          SET temp_list TO empty list
                          FOR each element at F in the slice of E from B to D inclusive DO
                              APPEND F TO temp_list
                          END FOR
                          APPEND temp_list TO submatrix
                      END FOR
                      IF validate_submatrix(submatrix) AND check_sorted_submatrix(submatrix) THEN
                          SET Gamma TO Gamma + 1
                      END IF
                      SET D TO D + 1
                  UNTIL D GREATER THAN (Beta - 1)
                  SET C TO C + 1
              END WHILE
              SET B TO B + 1
          UNTIL B GREATER THAN (Beta - 1)
          SET A TO A + 1
      END WHILE

      SET result TO Gamma
      RETURN result
    END FUNCTION
END CLASS
```