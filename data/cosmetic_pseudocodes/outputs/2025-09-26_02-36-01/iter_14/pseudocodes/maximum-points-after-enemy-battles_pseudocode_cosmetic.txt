CLASS Solution
    FUNCTION maximumPoints(enemyEnergies currentEnergy)
        PROCEDURE swapSortAsc(arr)
            SET idxA TO 0
            WHILE idxA < LENGTH(arr) - 1
                SET idxB TO 0
                WHILE idxB < LENGTH(arr) - idxA - 1
                    IF NOT (arr[idxB] <= arr[idxB + 1])
                        SET tempVal TO arr[idxB + 1]
                        SET arr[idxB + 1] TO arr[idxB]
                        SET arr[idxB] TO tempVal
                    END IF
                    SET idxB TO idxB + 1
                END WHILE
                SET idxA TO idxA + 1
            END WHILE
        END PROCEDURE

        CALL swapSortAsc(enemyEnergies)

        IF currentEnergy >= enemyEnergies[0]
        ELSE
            RETURN 0
        END IF

        SET totalPointsAccumulated TO 0

        PROCEDURE loopBackwards(index)
            IF index < 0 THEN RETURN END IF
            SET pointsGained TO currentEnergy DIV enemyEnergies[0]
            SET remainderEnergy TO currentEnergy - pointsGained * enemyEnergies[0]
            SET currentEnergy TO remainderEnergy + enemyEnergies[index]
            SET totalPointsAccumulated TO totalPointsAccumulated + pointsGained
            CALL loopBackwards(index - 1)
        END PROCEDURE

        CALL loopBackwards(LENGTH(enemyEnergies) - 1)

        RETURN totalPointsAccumulated
    END FUNCTION
END CLASS