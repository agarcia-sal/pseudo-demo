```  
CLASS Solution  
  FUNCTION maxSubstringLength(s)  
    SET omega_freq TO empty map  
    FOR delta_x FROM 0 TO LENGTH(s) - 1  
      INCREMENT omega_freq[s[delta_x]] BY 1 DEFAULTING TO 0  
    END FOR  
    SET alpha_max TO -1  
    SET beta_i TO 0  
    WHILE beta_i <= LENGTH(s) - 1 DO  
      SET chi_freq TO empty map  
      DEFINE FUNCTION post_condition(omega_map, chi_map)  
        FOR each psi_key IN keys of chi_map  
          IF NOT ( (chi_map[psi_key] >= omega_map[psi_key]) ) THEN  
            RETURN false  
          END IF  
        END FOR  
        RETURN true  
      END FUNCTION  
      SET sigma_j TO beta_i  
      REPEAT  
        INCREMENT chi_freq[s[sigma_j]] BY 1 DEFAULTING TO 0  
        SET tau_flag TO true  
        FOR each eta_char IN keys of chi_freq DO  
          IF (chi_freq[eta_char] < omega_freq[eta_char]) THEN  
            SET tau_flag TO false  
            BREAK  
          END IF  
        END FOR  
        IF (tau_flag = true AND LENGTH(keys of chi_freq) < LENGTH(keys of omega_freq)) THEN  
          IF (alpha_max < (sigma_j - beta_i + 1)) THEN  
            SET alpha_max TO (sigma_j - beta_i + 1)  
          END IF  
        END IF  
        SET sigma_j TO sigma_j + 1  
      UNTIL sigma_j > LENGTH(s) - 1  
      SET beta_i TO beta_i + 1  
    END WHILE  
    RETURN alpha_max  
  END FUNCTION  
END CLASS  
```