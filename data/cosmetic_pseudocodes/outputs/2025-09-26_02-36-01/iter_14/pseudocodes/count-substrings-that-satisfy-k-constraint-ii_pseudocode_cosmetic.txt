```pseudocode
CLASS Solution
    FUNCTION countKConstraintSubstrings(s parameter k parameter queries parameter) RETURNS LIST OF INTEGER
        SET vtxqop TO LENGTH OF s
        SET hmanq TO A LIST WITH (vtxqop + 1) OCCURRENCES OF 0
        SET jmdnro TO A LIST WITH (vtxqop + 1) OCCURRENCES OF 0

        SET ykyilr TO 0
        WHILE ykyilr < vtxqop
            SET hmanq[ykyilr + 1] TO hmanq[ykyilr] + (IF s[ykyilr] = '0' THEN 1 ELSE 0)
            SET jmdnro[ykyilr + 1] TO jmdnro[ykyilr] + (IF s[ykyilr] = '1' THEN 1 ELSE 0)
            SET ykyilr TO ykyilr + 1
        END WHILE

        FUNCTION count_valid_substrings(l parameter r parameter) RETURNS INTEGER
            SET wuasni TO 0
            SET ncaavp TO l
            REPEAT
                IF ncaavp > r THEN
                    BREAK
                END IF
                SET rjsxlq TO ncaavp
                SET cgbyhb TO r + 1
                WHILE cgbyhb > rjsxlq
                    SET jmnrsp TO (rjsxlq + cgbyhb) DIV 2
                    SET tnuwbg TO hmanq[jmnrsp + 1] - hmanq[ncaavp]
                    SET yvhmad TO jmdnro[jmnrsp + 1] - jmdnro[ncaavp]
                    IF NOT (tnuwbg > k AND yvhmad > k) THEN
                        SET rjsxlq TO jmnrsp + 1
                    ELSE
                        SET cgbyhb TO jmnrsp
                    END IF
                END WHILE
                SET vpthxf TO rjsxlq - 1
                IF vpthxf >= ncaavp THEN
                    SET wuasni TO wuasni + (vpthxf - ncaavp + 1)
                END IF
                SET ncaavp TO ncaavp + 1
            UNTIL FALSE
            RETURN wuasni
        END FUNCTION

        SET ucrtxj TO EMPTY LIST
        FOR EACH l, r IN queries
            APPEND count_valid_substrings(l, r) TO ucrtxj
        END FOR

        RETURN ucrtxj
    END FUNCTION
END CLASS
```