```
CLASS Solution
    FUNCTION findKthSmallest(coins k)
        FUNCTION count_smaller_or_equal(v)
            SET accumulator TO 0
            SET limit TO (2 POWER OF (LENGTH OF coins)) MINUS 1
            SET index1 TO 1
            WHILE index1 <= limit
                SET aggregate_lcm TO 1
                SET subset_count TO 0
                SET index2 TO 0
                REPEAT
                    IF (index1 BITWISE AND (1 LEFT SHIFT index2)) != 0 THEN
                        SET gcd_value TO GREATEST COMMON DIVISOR OF aggregate_lcm AND coins[index2]
                        SET aggregate_lcm TO (aggregate_lcm MULTIPLIED BY coins[index2]) DIVIDED BY gcd_value
                        SET subset_count TO subset_count + 1
                    END IF
                    SET index2 TO index2 + 1
                UNTIL index2 > (LENGTH OF coins MINUS 1)

                IF ((subset_count MOD 2) != 0) THEN
                    SET accumulator TO accumulator + (v DIVIDED BY aggregate_lcm)
                ELSE
                    SET accumulator TO accumulator - (v DIVIDED BY aggregate_lcm)
                END IF
                SET index1 TO index1 + 1
            END WHILE
            RETURN accumulator
        END FUNCTION

        SET low TO 1
        SET high TO k MULTIPLIED BY (coins[0])
        WHILE low < high
            SET midpoint TO (low + high) DIVIDED BY 2
            IF count_smaller_or_equal(midpoint) < k THEN
                SET low TO midpoint + 1
            ELSE
                SET high TO midpoint
            END IF
        END WHILE
        RETURN low
    END FUNCTION
END CLASS
```