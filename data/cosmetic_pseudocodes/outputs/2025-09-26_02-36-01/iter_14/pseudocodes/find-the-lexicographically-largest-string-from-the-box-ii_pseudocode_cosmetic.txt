CLASS Solution
	FUNCTION answerString(omega, delta)  
		IF NOT (delta NOT EQUALS 1)  
			RETURN omega  
		ELSE
			SET lambda TO _lastSubstring(omega)  
			SET beta TO LENGTH(omega) - delta + 1  
			RETURN SUBSTRING(lambda, 1, (IF LENGTH(lambda) < beta THEN LENGTH(lambda) ELSE beta))  
		END IF
	END FUNCTION

	FUNCTION _lastSubstring(tau)  
		PROCEDURE increment_by_one(VAR x)
			SET x TO x + 1
		END PROCEDURE

		SET upsilon TO 0  
		SET phi TO 1  
		SET psi TO 0  
		REPEAT  
			IF upsilon + psi >= LENGTH(tau) THEN
				EXIT  
			END IF

			IF tau[upsilon + psi] = tau[phi + psi] THEN
				increment_by_one(psi)  
			ELSE IF tau[upsilon + psi] > tau[phi + psi] THEN  
				SET phi TO phi + psi + 1  
				SET psi TO 0  
			ELSE  
				PROCEDURE max_value(a, b)
					IF a > b THEN
						RETURN a
					ELSE
						RETURN b
					END IF
				END PROCEDURE

				SET upsilon TO max_value(upsilon + psi + 1, phi)  
				SET phi TO upsilon + 1  
				SET psi TO 0  
			END IF  
		UNTIL FALSE  
		RETURN SUBSTRING(tau, upsilon + 1, LENGTH(tau))
	END FUNCTION
END CLASS