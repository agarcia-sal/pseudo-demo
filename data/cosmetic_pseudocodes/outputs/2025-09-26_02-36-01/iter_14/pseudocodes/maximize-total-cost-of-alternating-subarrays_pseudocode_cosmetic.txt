```
CLASS Solution
    FUNCTION maximumTotalCost(nums)
        SET count TO LENGTH OF nums
        IF NOT (count IS GREATER THAN 1)
            RETURN nums AT INDEX 0
        END IF

        SET cache TO A NEW LIST FILLED WITH 0 OF SIZE count

        SET cache AT INDEX (count - 1) TO nums AT INDEX (count - 1)

        SET index TO count - 2
        WHILE index GREATER OR EQUAL TO 0
            SET acc TO nums AT INDEX index

            IF acc GREATER THAN (cache AT INDEX (index + 1))
                SET cache AT INDEX index TO acc
            ELSE
                SET cache AT INDEX index TO (cache AT INDEX (index + 1)) + acc
            END IF

            SET inner TO index + 1
            WHILE inner LESS OR EQUAL TO (count - 1)
                SET sign TO (-1) RAISED TO THE POWER OF (inner - index)
                SET acc TO acc + (nums AT INDEX inner) * sign

                IF (inner + 1) LESS THAN count
                    IF (cache AT INDEX index) LESS THAN acc + (cache AT INDEX (inner + 1))
                        SET cache AT INDEX index TO acc + (cache AT INDEX (inner + 1))
                    END IF
                ELSE
                    IF (cache AT INDEX index) LESS THAN acc
                        SET cache AT INDEX index TO acc
                    END IF
                END IF

                INCREMENT inner BY 1
            END WHILE

            DECREMENT index BY 1
        END WHILE

        RETURN cache AT INDEX 0
    END FUNCTION
END CLASS
```