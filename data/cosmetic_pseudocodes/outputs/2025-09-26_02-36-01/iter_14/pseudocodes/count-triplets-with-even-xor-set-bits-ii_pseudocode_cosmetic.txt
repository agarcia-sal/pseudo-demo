```pseudocode
CLASS Solution
    FUNCTION tripletCount(a AS List OF integer, b AS List OF integer, c AS List OF integer) RETURNS integer
        FUNCTION count_even_odd_bits(arr AS List OF integer) RETURNS tuple OF integer and integer
            SET idx TO 0
            SET even_counter TO 0
            WHILE idx LESS THAN LENGTH OF arr
                SET current_number TO arr[idx]
                SET bit_sum TO 0
                SET bit_pos TO 0
                REPEAT
                    IF (current_number AND (1 SHL bit_pos)) NOT EQUAL TO 0
                        SET bit_sum TO bit_sum PLUS 1
                    END IF
                    SET bit_pos TO bit_pos PLUS 1
                UNTIL bit_pos GREATER THAN OR EQUAL TO 8 * SIZEOF(integer)
                IF ((bit_sum AND 1) EQUALS 0) IS NOT FALSE
                    SET even_counter TO even_counter PLUS 1
                END IF
                SET idx TO idx PLUS 1
            END WHILE
            SET odd_counter TO (LENGTH OF arr) MINUS even_counter
            RETURN even_counter AND odd_counter
        END FUNCTION

        SET m TO 0
        SET n TO 0
        SET p TO 0
        SET q TO 0
        SET r TO 0
        SET s TO 0

        (m, n) = count_even_odd_bits(a)
        (p, q) = count_even_odd_bits(b)
        (r, s) = count_even_odd_bits(c)

        SET tmp1 TO m * p * r
        SET tmp2 TO (m * q * s) PLUS (n * p * s) PLUS (n * q * r)

        SET total TO tmp1 + tmp2

        RETURN total
    END FUNCTION
END CLASS
```