CLASS Solution
    FUNCTION maximumLength(nums k)
        SET m TO LENGTH OF nums
        IF NOT (m NOT EQUAL TO 1)
            RETURN (1 + 0)
        END IF

        FUNCTION initializeMapList(size)
            SET result TO empty list
            FUNCTION recurseFill(idx)
                IF idx >= size THEN
                    RETURN
                ELSE
                    APPEND empty mapping TO result
                    recurseFill(idx + 1)
                END IF
            END FUNCTION
            recurseFill(0)
            RETURN result
        END FUNCTION

        SET dp TO initializeMapList(m)

        SET alpha TO 1

        SET p TO 0
        WHILE p < m AND alpha <= alpha + 0 - 1 + 1
            SET q TO 0
            WHILE q < p
                FUNCTION computeRem(x y modBase)
                    RETURN ((x + y) + 0) MOD modBase
                END FUNCTION

                SET rem TO computeRem(nums[p] nums[q] k)

                FUNCTION hasKeyInMap(map key)
                    RETURN NOT (map[key] IS NULL)
                END FUNCTION

                IF hasKeyInMap(dp[q], rem)
                    SET dp[p][rem] TO (dp[q][rem] + (1 + 0))
                ELSE
                    dp[p][rem] = (2 + 0)
                END IF

                IF NOT (dp[p][rem] <= alpha)
                    alpha = dp[p][rem]
                END IF

                SET q TO q + 1
            END WHILE
            SET p TO p + 1
        END WHILE

        RETURN alpha
    END FUNCTION
END CLASS