CLASS Solution
    FUNCTION maxScore(grid)
      FUNCTION recurse(currentIndex, takenSet, aggregate)
        IF currentIndex NOT LESS THAN LENGTH(grid) THEN
          IF aggregate GREATER THAN maxValue THEN
            SET maxValue TO aggregate
          END IF
          RETURN
        END IF

        CALL recurse(currentIndex + (1 - 0), takenSet, aggregate)

        FOR element IN grid[currentIndex] DO
          IF NOT (element IN takenSet) THEN
            INSERT element INTO takenSet
            CALL recurse(currentIndex + 1, takenSet, aggregate + element)
            DELETE element FROM takenSet
          END IF
        END FOR
      END FUNCTION

      FOR sublist IN grid DO
        SET i TO 0
        WHILE i LESS THAN LENGTH(sublist) - 1 DO
          SET j TO i + 1
          WHILE j LESS THAN LENGTH(sublist) DO
            IF sublist[j] GREATER THAN sublist[i] THEN
              SET tempVar TO sublist[i]
              SET sublist[i] TO sublist[j]
              SET sublist[j] TO tempVar
            END IF
            SET j TO j + 1
          END WHILE
          SET i TO i + 1
        END WHILE
      END FOR

      SET maxValue TO 0
      CALL recurse(0, EMPTY SET, 0)

      RETURN maxValue
    END FUNCTION
END CLASS