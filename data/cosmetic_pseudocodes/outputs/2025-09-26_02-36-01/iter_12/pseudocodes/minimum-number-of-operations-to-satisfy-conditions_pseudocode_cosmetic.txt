CLASS Solution
    FUNCTION minimumOperations(grid)
        SET rowCount TO 0
        SET colCount TO 0
        SET opCount TO 0

        PROCEDURE incrementOps()
            SET opCount TO opCount PLUS 1
        END PROCEDURE

        PROCEDURE valuesLength()
            RETURN LENGTH OF grid
        END PROCEDURE

        PROCEDURE innerLength()
            RETURN LENGTH OF grid[0]
        END PROCEDURE

        colCount = innerLength()
        rowCount = valuesLength()

        SET outerIdx TO 0
        WHILE outerIdx LESS THAN colCount
            SET innerIdx TO 0
            WHILE innerIdx LESS THAN rowCount MINUS 1
                SET currVal TO grid[innerIdx][outerIdx]
                SET nextVal TO grid[innerIdx PLUS 1][outerIdx]
                IF (currVal NOT EQUAL nextVal)
                    CALL incrementOps()
                    SET grid[innerIdx PLUS 1][outerIdx] TO currVal
                END IF
                SET innerIdx TO innerIdx PLUS 1
            END WHILE

            SET innerIdx TO 0
            WHILE innerIdx LESS THAN rowCount
                IF (outerIdx LESS THAN colCount MINUS 1) AND (grid[innerIdx][outerIdx] EQUALS grid[innerIdx][outerIdx PLUS 1])
                    CALL incrementOps()
                    PROCEDURE findReplacement(value)
                        SET candidate TO 0
                        WHILE candidate LESS THAN 10
                            IF candidate NOT EQUAL value
                                RETURN candidate
                            END IF
                            SET candidate TO candidate PLUS 1
                        END WHILE
                        RETURN 0
                    END PROCEDURE
                    SET grid[innerIdx][outerIdx PLUS 1] TO findReplacement(grid[innerIdx][outerIdx])
                END IF
                SET innerIdx TO innerIdx PLUS 1
            END WHILE

            SET outerIdx TO outerIdx PLUS 1
        END WHILE

        RETURN opCount
    END FUNCTION
END CLASS