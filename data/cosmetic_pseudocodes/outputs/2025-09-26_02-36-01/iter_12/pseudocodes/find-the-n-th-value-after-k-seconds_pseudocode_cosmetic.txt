class Solution
    function valueAfterKSeconds(n k)
        constant MOD_VALUE := (10 * 100 * 1000 * 1000) + 7

        procedure modulus(x y)
            result := x % y
            return result
        end procedure

        procedure initializeArray(size outArr)
            index := 0
            repeat
                exit when index >= size
                outArr[index] := 1
                index := index + 1
            forever
        end procedure

        procedure updateArray(arr size)
            position := 1
            while position < size
                temp := arr[position]
                prevVal := arr[position - 1]
                sumVal := temp + prevVal
                arr[position] := modulus(sumVal, MOD_VALUE)
                position := position + 1
            end while
        end procedure

        buffer := array of integer with length n
        initializeArray(n, buffer)

        counterOuter := 0
        outerLoop:
            if counterOuter >= k then goto endOuter
            updateArray(buffer n)
            counterOuter := counterOuter + 1
            goto outerLoop
        endOuter:

        resultValue := buffer[n - 1]
        return resultValue
    end function
end class