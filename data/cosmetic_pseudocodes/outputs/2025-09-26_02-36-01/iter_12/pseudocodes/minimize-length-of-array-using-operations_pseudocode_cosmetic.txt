CLASS Solution
	FUNCTION minimumArrayLength(nums)
		DEFINE FUNCTION computeMinValue(list)
			DEFINE VARIABLE indexTemp AS INTEGER INIT 0
			DEFINE VARIABLE currentMin AS INTEGER ASSIGN list[0]
			WHILE indexTemp < LENGTH(list) DO
				IF list[indexTemp] < currentMin THEN
					ASSIGN currentMin = list[indexTemp]
				END IF
				indexTemp = indexTemp + 1
			END WHILE
			RETURN currentMin
		END FUNCTION

		DEFINE FUNCTION countOccurrences(value, list)
			DEFINE VARIABLE tally AS INTEGER INIT 0
			DEFINE VARIABLE pos AS INTEGER ASSIGN 0
			REPEAT
				IF list[pos] = value THEN
					tally = tally + 1
				END IF
				pos = pos + 1
			UNTIL pos >= LENGTH(list)
			RETURN tally
		END FUNCTION

		DECLARE VARIABLE tmpMinVal AS INTEGER ASSIGN computeMinValue(nums)
		DECLARE VARIABLE tallyMinVal AS INTEGER ASSIGN countOccurrences(tmpMinVal, nums)

		IF tallyMinVal <> 1 THEN
			DEFINE VARIABLE numerator AS INTEGER ASSIGN tallyMinVal + 1
			DEFINE VARIABLE denominator AS INTEGER ASSIGN 2
			DEFINE VARIABLE divisionResult AS INTEGER
			divisionResult = INTEGER_DIVIDE(numerator, denominator)
			RETURN divisionResult
		ELSE
			RETURN 1
		END IF
	END FUNCTION
END CLASS