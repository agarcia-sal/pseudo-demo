CLASS Solution
    FUNCTION numberOfRightTriangles(grid)
        DEFINE FUNCTION computeLength(sequence)
            SET length_counter TO 0
            WHILE TRUE
                IF sequence[length_counter] IS UNDEFINED THEN
                    BREAK
                END IF
                SET length_counter TO length_counter PLUS 1
            END WHILE
            RETURN length_counter
        END FUNCTION

        DEFINE FUNCTION isOne(value)
            RETURN (value EQUALS 1)
        END FUNCTION

        SET alpha TO 0
        SET beta TO computeLength(grid)
        SET gamma TO computeLength(grid[0])
        SET omega TO 0

        DEFINE FUNCTION add(a, b)
            RETURN a PLUS b
        END FUNCTION

        DEFINE FUNCTION multiply(a, b)
            RETURN a TIMES b
        END FUNCTION

        SET x_index TO 0
        WHILE x_index LESS THAN beta
            SET y_index TO 0
            WHILE y_index LESS THAN gamma
                IF isOne(grid[x_index][y_index]) THEN
                    SET delta TO 0
                    SET epsilon TO 0

                    DEFINE FUNCTION accumulateRowCount(idx, exclusion)
                        IF idx NOT EQUAL exclusion THEN
                            RETURN grid[x_index][idx]
                        ELSE
                            RETURN 0
                        END IF
                    END FUNCTION

                    DEFINE FUNCTION accumulateColCount(idx, exclusion)
                        IF idx NOT EQUAL exclusion THEN
                            RETURN grid[idx][y_index]
                        ELSE
                            RETURN 0
                        END IF
                    END FUNCTION

                    SET z_index TO 0
                    SET row_sum TO 0
                    WHILE TRUE
                        IF z_index GREATER THAN OR EQUAL TO gamma THEN
                            BREAK
                        END IF
                        SET row_sum TO add(row_sum, accumulateRowCount(z_index, y_index))
                        SET z_index TO z_index PLUS 1
                    END WHILE

                    SET w_index TO 0
                    SET col_sum TO 0
                    WHILE TRUE
                        IF w_index GREATER THAN OR EQUAL TO beta THEN
                            BREAK
                        END IF
                        SET col_sum TO add(col_sum, accumulateColCount(w_index, x_index))
                        SET w_index TO w_index PLUS 1
                    END WHILE

                    SET omega TO omega PLUS multiply(row_sum, col_sum)
                END IF
                SET y_index TO y_index PLUS 1
            END WHILE
            SET x_index TO x_index PLUS 1
        END WHILE

        RETURN omega
    END FUNCTION
END CLASS