CLASS Solution

    FUNCTION maxScore(points, m)
        FUNCTION canAchieve(target, limit)
            
            FUNCTION ceilDiv(a, b)
                RETURN (a + b - 1) DIV b
            END FUNCTION

            PROCEDURE incBy(ref var, amt)
                var <- var + amt
            END PROCEDURE

            VAR totalSteps := 0
            VAR prevReq := 0

            VAR idx := 0
            VAR lenPts := LENGTH points

            WHILE idx < lenPts
                VAR currPt := points[idx]

                VAR needed := ceilDiv(target + currPt - 1, currPt)
                IF needed - prevReq < 0 THEN
                    needed <- 0
                ELSE
                    VAR diff := needed - prevReq
                    needed <- diff
                END IF

                IF needed > 0 THEN
                    incBy(totalSteps, (needed * 2) - 1)
                    prevReq <- needed - 1
                ELSE
                    IF idx + 1 < lenPts THEN
                        incBy(totalSteps, 1)
                        prevReq <- 0
                    END IF
                END IF

                IF totalSteps > limit THEN
                    RETURN False
                END IF

                idx <- idx + 1
            END WHILE

            RETURN True
        END FUNCTION

        VAR leftBound := 0
        VAR rightBound := (((m + 1) DIV 2) * points[0]) + 1

        VAR answer := 0

        VAR iteration := leftBound
        WHILE leftBound < rightBound
            VAR midVal := (leftBound + rightBound + 1) DIV 2
            IF canAchieve(midVal, m) = True THEN
                leftBound <- midVal
                answer <- leftBound
            ELSE
                rightBound <- midVal - 1
            END IF
        END WHILE

        RETURN answer
    END FUNCTION
END CLASS