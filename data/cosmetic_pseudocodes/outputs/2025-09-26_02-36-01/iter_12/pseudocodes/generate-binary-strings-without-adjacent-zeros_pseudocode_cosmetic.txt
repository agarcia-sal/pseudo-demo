CLASS Solution
    FUNCTION validStrings n
        DECLARE resultCollection AS list INITIALIZED TO empty

        FUNCTION recursion tracker
            IF LENGTH(tracker) NOT LESS n THEN
                CALL addToCollection(resultCollection, tracker)
                RETURN
            END IF

            DECLARE lastChar AS CHARACTER
            SET lastChar = retrieveLastChar(tracker)

            IF isOne(lastChar) THEN
                CALL recursion(tracker CONCATENATE zeroChar)
                CALL recursion(tracker CONCATENATE oneChar)
            ELSE IF isZero(lastChar) THEN
                CALL recursion(tracker CONCATENATE oneChar)
            END IF
        END FUNCTION

        FUNCTION addToCollection COL, VAL
            COL APPEND VAL
        END FUNCTION

        FUNCTION retrieveLastChar STR
            DECLARE lengthTracker AS INTEGER
            SET lengthTracker = LENGTH(STR)
            RETURN STR AT (lengthTracker MINUS 1)
        END FUNCTION

        FUNCTION isZero CHR
            RETURN CHR EQUALS zeroChar
        END FUNCTION

        FUNCTION isOne CHR
            RETURN CHR EQUALS oneChar
        END FUNCTION

        CONSTANT zeroChar
        SET zeroChar = CONCATENATE('0', '') 

        CONSTANT oneChar
        SET oneChar = CONCATENATE('1', '') 

        IF n EQUALS 1 THEN
            DECLARE baseOptions AS list
            SET baseOptions = CONCATENATE_LISTS(LIST(zeroChar), LIST(oneChar))
            RETURN baseOptions
        END IF

        CALL recursion(zeroChar)
        CALL recursion(oneChar)

        RETURN resultCollection
    END FUNCTION
END CLASS