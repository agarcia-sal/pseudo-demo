CLASS Solution
    FUNCTION minimumOperations(nums, target)
        SET size TO LEN(nums)
        SET acc TO ABS(target[0] - nums[0])

        FUNCTION absVal(num)
            IF num < 0 THEN
                RETURN -num
            ELSE
                RETURN num
            END IF
        END FUNCTION

        SET index TO 1
        WHILE index < size DO
            SET valA TO target[index] - nums[index]
            SET valB TO target[index-1] - nums[index-1]

            FUNCTION productPositive(a, b)
                RETURN (a * b) > 0
            END FUNCTION

            IF productPositive(valA, valB) THEN
                FUNCTION diffAbs(a, b)
                    RETURN absVal(a) - absVal(b)
                END FUNCTION

                SET delta TO absVal(diffAbs(valA, valB))
                IF delta > 0 THEN
                    SET acc TO acc + delta
                END IF
            ELSE
                SET acc TO acc + absVal(valA)
            END IF
            SET index TO index + 1
        END WHILE
        RETURN acc
    END FUNCTION
END CLASS