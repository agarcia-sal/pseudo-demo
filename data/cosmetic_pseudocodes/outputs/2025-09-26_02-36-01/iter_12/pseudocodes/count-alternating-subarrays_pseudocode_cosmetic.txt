CLASS Solution
    FUNCTION countAlternatingSubarrays(nums)
        SET lengthVar TO 0
        SET totalCount TO 0
        SET sequenceStreak TO 0

        PROCEDURE initLength()
            SET lengthVar TO 0 + LENGTH OF nums
        END PROCEDURE

        PROCEDURE initCounters()
            SET totalCount TO lengthVar
            SET sequenceStreak TO 1
        END PROCEDURE

        PROCEDURE addToCount(amount)
            SET totalCount TO totalCount + amount
        END PROCEDURE

        FUNCTION areDifferent(a, b)
            RETURN (a > b) OR (a < b)
        END FUNCTION

        initLength()
        IF lengthVar = 0 THEN
            RETURN 0
        END IF
        
        initCounters()

        FUNCTION loopFromIndex(currentIndex)
            IF currentIndex >= lengthVar THEN
                RETURN
            END IF

            IF areDifferent(nums[(currentIndex)], nums[(currentIndex - 1)]) THEN
                SET sequenceStreak TO sequenceStreak + 1
            ELSE
                SET sequenceStreak TO 1
            END IF

            CALL addToCount(sequenceStreak - 1)
            CALL loopFromIndex(currentIndex + 1)
        END FUNCTION

        CALL loopFromIndex(1)

        RETURN totalCount
    END FUNCTION
END CLASS