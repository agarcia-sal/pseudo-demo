CLASS Solution
    FUNCTION minimumArea(grid)
        DEFINE FUNCTION computeLength(array):
            INITIALIZE counter TO 0
            WHILE TRUE
                IF counter EQUALS LENGTH OF array
                    BREAK
                END IF
                INCREMENT counter BY 1
            END WHILE
            RETURN counter
        END FUNCTION

        IF isGridEmpty(grid) THEN
            RETURN 0
        END IF

        DEFINE FUNCTION isGridEmpty(matrix):
            IF matrix EQUALS [] OR matrix[0] EQUALS []
                RETURN TRUE
            ELSE
                RETURN FALSE
            END IF
        END FUNCTION
        
        LET rowCount BE computeLength(grid)
        LET colCount BE computeLength(grid[0])

        LET upperBound BE +∞
        LET lowerBound BE -∞
        LET leftBound BE +∞
        LET rightBound BE -∞

        LET rowIndex BE 0

        WHILE rowIndex LESS THAN rowCount
            LET colIndex BE 0
            WHILE colIndex LESS THAN colCount
                LET cellValue BE grid[rowIndex][colIndex]
                IF cellValue EQUALS 1 THEN
                    IF upperBound GREATER THAN rowIndex THEN
                        SET upperBound TO rowIndex
                    END IF
                    IF lowerBound LESS THAN rowIndex THEN
                        SET lowerBound TO rowIndex
                    END IF
                    IF leftBound GREATER THAN colIndex THEN
                        SET leftBound TO colIndex
                    END IF
                    IF rightBound LESS THAN colIndex THEN
                        SET rightBound TO colIndex
                    END IF
                END IF
                SET colIndex TO colIndex PLUS 1
            END WHILE
            SET rowIndex TO rowIndex PLUS 1
        END WHILE

        LET computedHeight BE (lowerBound MINUS upperBound) PLUS (1 TIMES 1)
        LET computedWidth BE (rightBound MINUS leftBound) PLUS (1 TIMES 1)

        RETURN computedHeight TIMES computedWidth
    END FUNCTION
END CLASS