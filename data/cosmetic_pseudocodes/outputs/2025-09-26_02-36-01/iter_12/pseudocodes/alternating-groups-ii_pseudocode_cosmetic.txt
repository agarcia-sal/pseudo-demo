CLASS Solution
    FUNCTION numberOfAlternatingGroups(colors k)
        DECLARE lengthColors = 0
        DECLARE extendedArray = NULL
        DECLARE totalCount = 0
        DECLARE indexA = 0
        DECLARE isValidGroup = false
        DECLARE indexB = 0

        PROCEDURE calculateLength(inputList)
            DECLARE counter = 0
            DECLARE pos = 0
            WHILE TRUE
                IF pos >= LENGTH(inputList) THEN
                    EXIT WHILE
                END IF
                counter = counter + 1
                pos = pos + 1
            END WHILE
            RETURN counter
        END PROCEDURE
        
        PROCEDURE concatenateLists(lst1, lst2)
            DECLARE combined = EMPTY LIST
            DECLARE iter = 0
            WHILE iter < LENGTH(lst1)
                APPEND combined, lst1[iter]
                iter = iter + 1
            END WHILE
            DECLARE iter2 = 0
            WHILE iter2 < LENGTH(lst2)
                APPEND combined, lst2[iter2]
                iter2 = iter2 + 1
            END WHILE
            RETURN combined
        END PROCEDURE

        PROCEDURE sublist(lst, startIndex, endIndex)
            DECLARE sub = EMPTY LIST
            DECLARE pos = startIndex
            WHILE pos < endIndex
                APPEND sub, lst[pos]
                pos = pos + 1
            END WHILE
            RETURN sub
        END PROCEDURE

        IF NOT (k >= 3)
            RETURN 0
        END IF
        
        lengthColors = calculateLength(colors)
        extendedArray = concatenateLists(colors, sublist(colors, 0, k - 1))
        totalCount = 0
        indexA = 0

        WHILE indexA < lengthColors
            isValidGroup = true
            indexB = 1
            WHILE TRUE
                IF indexB >= k THEN
                    EXIT WHILE
                END IF
                IF extendedArray[indexA + indexB] = extendedArray[indexA + indexB - 1]
                    isValidGroup = false
                    EXIT WHILE
                END IF
                indexB = indexB + 1
            END WHILE
            IF isValidGroup = true
                totalCount = totalCount + 1
            END IF
            indexA = indexA + 1
        END WHILE

        RETURN totalCount
    END FUNCTION
END CLASS