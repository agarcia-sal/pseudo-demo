CLASS Solution
    FUNCTION queryResults(limit parameter, queries parameter)
        DEFINE FUNCTION addToSet(s, e)
            IF NOT containsInSet(s, e) THEN
                insertIntoSet(s, e)
            END IF
        END FUNCTION

        DEFINE FUNCTION containsInSet(s, e)
            FOR each item IN s
                IF item == e THEN
                    RETURN true
                END IF
            END FOR
            RETURN false
        END FUNCTION

        DEFINE FUNCTION insertIntoSet(s, e)
            s[s.length] = e
        END FUNCTION

        DEFINE FUNCTION removeFromSet(s, e)
            VAR idx = 0
            VAR found = false
            WHILE idx < s.length AND NOT found
                IF s[idx] == e THEN
                    found = true
                ELSE
                    idx = idx + 1
                END IF
            END WHILE
            IF found THEN
                FOR var j = idx TO s.length - 2
                    s[j] = s[j + 1]
                END FOR
                s.length = s.length - 1
            END IF
        END FUNCTION

        DEFINE FUNCTION containsKey(dict, key)
            FOR var k IN dict
                IF k == key THEN
                    RETURN true
                END IF
            END FOR
            RETURN false
        END FUNCTION

        VAR freqById := new dictionary
        VAR distinctColors := new list
        VAR output := new list
        VAR qIdx := 0

        WHILE qIdx < limit parameter
            VAR queryQ := queries parameter[qIdx]
            VAR keyVal := queryQ[0]
            VAR newCol := queryQ[1]

            IF containsKey(freqById, keyVal) THEN
                VAR prevCol := freqById[keyVal]
                IF containsInSet(distinctColors, prevCol) THEN
                    removeFromSet(distinctColors, prevCol)
                END IF
            END IF

            freqById[keyVal] = newCol
            addToSet(distinctColors, newCol)

            output[output.length] = distinctColors.length
            qIdx = qIdx + 1
        END WHILE

        RETURN output
    END FUNCTION
END CLASS