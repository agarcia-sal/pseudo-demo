CLASS Solution
    FUNCTION maximumValueSum(nums k edges)
        SET accumulator TO 0
        SET counter_odd_gains TO 0
        SET minimal_gain_value TO +âˆž

        DEFINE FUNCTION absVal(x)
            IF x < 0 THEN RETURN (-1) * x ELSE RETURN x
        END FUNCTION

        DEFINE FUNCTION maxVal(x y)
            IF x > y THEN RETURN x ELSE RETURN y
        END FUNCTION

        DEFINE FUNCTION minVal(x y)
            IF x < y THEN RETURN x ELSE RETURN y
        END FUNCTION

        DEFINE FUNCTION xorOp(a b)
            RETURN a XOR b
        END FUNCTION

        FUNCTION loopAt(index)
            IF index >= LENGTH(nums) THEN
                RETURN
            ELSE
                SET number TO nums[index]
                SET computed_xor TO xorOp(number k)
                SET difference TO computed_xor - number

                IF difference > 0 THEN
                    SET counter_odd_gains TO counter_odd_gains + 1
                END IF

                SET accumulator TO accumulator + maxVal(number computed_xor)
                SET minimal_gain_value TO minVal(minimal_gain_value absVal(difference))
                CALL loopAt(index + 1)
            END IF
        END FUNCTION

        CALL loopAt(0)

        IF (counter_odd_gains MOD 2) != 0 THEN
            SET accumulator TO accumulator - minimal_gain_value
        END IF

        RETURN accumulator
    END FUNCTION
END CLASS