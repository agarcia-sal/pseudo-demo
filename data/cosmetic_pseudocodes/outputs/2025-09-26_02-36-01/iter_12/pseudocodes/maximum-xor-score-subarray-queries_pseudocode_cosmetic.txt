CLASS Solution
    FUNCTION maximumSubarrayXor(nums PARAMETER, queries PARAMETER)
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET length TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET a TO 0
        SET i TO 0
        SET n TO LENGTH(nums)
        FUNCTION xor_compute(x, y)
            RETURN x XOR y
        END FUNCTION
        FUNCTION maximum(x, y, z)
            IF x >= y THEN
                IF x >= z THEN
                    RETURN x
                ELSE
                    RETURN z
                END IF
            ELSE
                IF y >= z THEN
                    RETURN y
                ELSE
                    RETURN z
                END IF
            END IF
        END FUNCTION
        FUNCTION fill_matrix(size)
            SET mat TO new list
            SET counter_outer TO 0
            WHILE counter_outer < size DO
                SET row TO new list
                SET counter_inner TO 0
                WHILE counter_inner < size DO
                    row APPEND 0
                    SET counter_inner TO counter_inner + 1
                END WHILE
                mat APPEND row
                SET counter_outer TO counter_outer + 1
            END WHILE
            RETURN mat
        END FUNCTION
        SET f TO fill_matrix(n)
        SET g TO fill_matrix(n)
        FUNCTION loop_i(index)
            IF index < 0 THEN
                RETURN
            ELSE
                SET f[index][index] TO nums[index]
                SET g[index][index] TO nums[index]
                FUNCTION loop_j(jindex)
                    IF jindex > n - 1 THEN
                        RETURN
                    ELSE
                        SET f[index][jindex] TO xor_compute(f[index][jindex - 1], f[index + 1][jindex])
                        SET g[index][jindex] TO maximum(g[index][jindex], g[index][jindex - 1], g[index + 1][jindex])
                        CALL loop_j(jindex + 1)
                    END IF
                END FUNCTION
                CALL loop_j(index + 1)
                CALL loop_i(index - 1)
            END IF
        END FUNCTION
        CALL loop_i(n - 1)
        SET result TO new list
        FUNCTION collect_query(idx)
            IF idx >= LENGTH(queries) THEN
                RETURN
            ELSE
                SET l TO queries[idx][0]
                SET r TO queries[idx][1]
                result APPEND g[l][r]
                CALL collect_query(idx + 1)
            END IF
        END FUNCTION
        CALL collect_query(0)
        RETURN result
    END FUNCTION
END CLASS