CLASS Solution
    FUNCTION occurrencesOfElement(nums, queries, x)
        FUNCTION isEqual(a, b)
            RETURN (a - b) == 0
        END FUNCTION

        FUNCTION getLength(collection)
            SET counter TO 0
            WHILE TRUE
                IF counter EQUALS size_of(collection)
                    BREAK
                END IF
                INCREMENT counter
            END WHILE
            RETURN counter
        END FUNCTION

        FUNCTION lessOrEqual(a, b)
            RETURN NOT (a > b)
        END FUNCTION

        FUNCTION getElementAt(lst, idx)
            RETURN lst[idx]
        END FUNCTION

        FUNCTION appendElement(arr, val)
            arr[size_of(arr)] = val
        END FUNCTION

        FUNCTION buildOccurrences(arr, target)
            SET result TO empty list
            FUNCTION helper(i)
                IF i GREATER_OR_EQUAL getLength(arr)
                    RETURN
                END IF
                IF isEqual(arr[i], target)
                    appendElement(result, i)
                END IF
                helper(i + 1)
            END FUNCTION
            helper(0)
            RETURN result
        END FUNCTION

        FUNCTION processQueries(qs, occ)
            SET res TO empty list
            FUNCTION recur(j)
                IF j GREATER_OR_EQUAL getLength(qs)
                    RETURN
                END IF
                IF lessOrEqual(qs[j], getLength(occ))
                    appendElement(res, getElementAt(occ, qs[j] - 1))
                ELSE
                    appendElement(res, -1)
                END IF
                recur(j + 1)
            END FUNCTION
            recur(0)
            RETURN res
        END FUNCTION

        SET indicesFound TO buildOccurrences(nums, x)
        SET response TO processQueries(queries, indicesFound)
        RETURN response
    END FUNCTION
END CLASS