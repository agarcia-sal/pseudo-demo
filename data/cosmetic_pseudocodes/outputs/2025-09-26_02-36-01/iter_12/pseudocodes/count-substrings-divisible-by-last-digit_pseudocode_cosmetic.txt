CLASS Solution
	FUNCTION countSubstrings(s)
		SET length_s TO 0
		WHILE TRUE
			IF length_s >= LENGTH(s)
				BREAK
			END IF
			SET length_s TO length_s + 1
		END WHILE

		SET count_result TO 0

		DEFINE FUNCTION helperOuter(idx_outer)
			IF idx_outer >= length_s THEN
				RETURN
			END IF

			SET accumulator_val TO 0

			DECLARE FUNCTION helperInner(idx_inner)
				IF idx_inner >= length_s THEN
					RETURN
				END IF

				SET char_at_inner TO s[idx_inner]

				DEFINE FUNCTION charToInt(c)
					RETURN c - '0'
				END FUNCTION

				SET digit_val TO charToInt(char_at_inner)

				SET accumulator_val TO (accumulator_val * 10) + digit_val

				IF digit_val <> 0 AND ((accumulator_val MOD digit_val) = 0) THEN
					SET count_result TO count_result + 1
				END IF

				CALL helperInner(idx_inner + 1)
			END FUNCTION

			CALL helperInner(idx_outer)
			CALL helperOuter(idx_outer + 1)
		END FUNCTION

		CALL helperOuter(0)

		RETURN count_result
	END FUNCTION
END CLASS