CLASS Solution
    FUNCTION maximumHappinessSum(happiness, k)
        CALL reorderDescending(happiness)
        SET total TO 0
        SET reduction TO 0
        SET position TO 0
        WHILE position < k
            SET tempVal TO deriveAdjustedValue(happiness, position, reduction)
            SET total TO aggregateValues(total, tempVal)
            SET reduction TO incrementValue(reduction)
            SET position TO advancePosition(position)
        END WHILE
        RETURN total
    END FUNCTION

    FUNCTION reorderDescending(collection)
        DEFINE n AS length(collection)
        SET swapped TO TRUE
        WHILE swapped
            SET swapped TO FALSE
            SET idx TO 1
            WHILE idx < n
                IF compareValues(collection[idx - 1], collection[idx]) < 0
                    DEFINE aux AS collection[idx - 1]
                    SET collection[idx - 1] TO collection[idx]
                    SET collection[idx] TO aux
                    SET swapped TO TRUE
                END IF
                SET idx TO idx + 1
            END WHILE
            SET n TO n - 1
        END WHILE
    END FUNCTION

    FUNCTION deriveAdjustedValue(array, idx, dec)
        SET rawVal TO array[idx] - dec
        IF rawVal >= 0 THEN 
            RETURN rawVal
        ELSE 
            RETURN 0
        END IF
    END FUNCTION

    FUNCTION aggregateValues(accum, addition)
        RETURN accum + addition
    END FUNCTION

    FUNCTION incrementValue(value)
        RETURN value + 1
    END FUNCTION

    FUNCTION advancePosition(pos)
        RETURN pos + 1
    END FUNCTION
END CLASS