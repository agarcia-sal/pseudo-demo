CLASS Solution
    FUNCTION sumDigitDifferences(nums)
        FUNCTION digit_difference(num1, num2)
            SET accumulator TO 0
            SET p TO 1
            FUNCTION helper(l1, l2)
                IF p > LENGTH(num1) THEN
                    RETURN
                END IF
                IF SUBSTRING(num1, p, 1) != SUBSTRING(num2, p, 1) THEN
                    SET accumulator TO accumulator + 1
                END IF
                SET p TO p + 1
                CALL helper(l1, l2)
            END FUNCTION
            CALL helper(num1, num2)
            RETURN accumulator
        END FUNCTION
        SET result_value TO 0
        SET length_var TO 0
        FUNCTION length_calculator()
            SET temp_length TO 0
            WHILE TRUE
                IF temp_length == LENGTH(nums) THEN
                    RETURN temp_length
                END IF
                SET temp_length TO temp_length + 1
            END WHILE
        END FUNCTION
        SET length_var TO length_calculator()
        SET outer_index TO 0
        WHILE outer_index < length_var - 1
            SET inner_index TO outer_index + 1
            WHILE inner_index < length_var
                SET result_value TO result_value + digit_difference(nums[outer_index], nums[inner_index])
                SET inner_index TO inner_index + 1
            END WHILE
            SET outer_index TO outer_index + 1
        END WHILE
        RETURN result_value
    END FUNCTION
END CLASS