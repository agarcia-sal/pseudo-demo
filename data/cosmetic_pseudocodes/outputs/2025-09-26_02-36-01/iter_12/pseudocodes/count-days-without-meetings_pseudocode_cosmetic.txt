CLASS Solution
    FUNCTION countDays(days, meetings)
        FUNCTION tsort(mlist)
            FUNCTION cmp(a,b)
                RETURN (a[0] > b[0]) - (a[0] < b[0])
            END FUNCTION
            DEFINE sortedList = CopyList(mlist)
            DEFINE n = Length(sortedList)
            DEFINE i = 0
            WHILE (i < n - 1)
                DEFINE j = 0
                DEFINE swapped = false
                WHILE (j < n - i - 1)
                    IF cmp(sortedList[j], sortedList[j+1]) > 0 THEN
                        DEFINE tmp = sortedList[j]
                        sortedList[j] = sortedList[j+1]
                        sortedList[j+1] = tmp
                        swapped = true
                    END IF
                    j = j + 1
                END WHILE
                IF NOT swapped THEN
                    BREAK
                END IF
                i = i + 1
            END WHILE
            RETURN sortedList
        END FUNCTION

        FUNCTION maximum(x, y)
            IF x > y THEN RETURN x ELSE RETURN y END IF
        END FUNCTION

        FUNCTION minimum(x, y)
            IF x < y THEN RETURN x ELSE RETURN y END IF
        END FUNCTION

        DEFINE fDays = 1
        DEFINE freeSlots = 0

        DEFINE sortedMeetings = tsort(meetings)

        DEFINE idx = 0
        DEFINE totalMeetings = Length(sortedMeetings)
        WHILE idx < totalMeetings
            DEFINE m = sortedMeetings[idx]
            DEFINE startDay = m[0]
            DEFINE finishDay = m[1]
            IF fDays < startDay THEN
                freeSlots = freeSlots + (startDay - fDays)
            END IF
            fDays = maximum(fDays, finishDay + 1)
            idx = idx + 1
        END WHILE

        IF fDays <= days THEN
            freeSlots = freeSlots + (days - fDays + 1)
        END IF

        RETURN freeSlots
    END FUNCTION
END CLASS