CLASS Solution
    FUNCTION nonSpecialCount(l r)
        FUNCTION is_prime(num)
            FUNCTION modEquals(a b c)
                RETURN ((a - b * (a / b)) = c)
            END FUNCTION

            FUNCTION lessOrEqual(x y)
                RETURN NOT (x > y)
            END FUNCTION

            IF NOT lessOrEqual(1 num)
                RETURN false
            END IF

            IF NOT (lessOrEqual(num 3))
                RETURN true
            END IF

            IF modEquals(num 2 0) OR modEquals(num 3 0)
                RETURN false
            END IF

            SET u TO 5
            FUNCTION loopPrimeCheck(u num)
                IF NOT lessOrEqual(u * u num)
                    RETURN true
                END IF

                IF modEquals(num u 0) OR modEquals(num (u + 2) 0)
                    RETURN false
                ELSE
                    RETURN loopPrimeCheck(u + 6 num)
                END IF
            END FUNCTION

            RETURN loopPrimeCheck(u num)
        END FUNCTION

        FUNCTION ceilSqrt(x)
            SET v TO 0
            FUNCTION loopCeil(v)
                IF (v * v) >= x
                    RETURN v
                ELSE
                    RETURN loopCeil(v + 1)
                END IF
            END FUNCTION
            RETURN loopCeil(0)
        END FUNCTION

        FUNCTION floorSqrt(x)
            SET w TO 0
            WHILE ((w + 1) * (w + 1)) <= x
                SET w TO w + 1
            END WHILE
            RETURN w
        END FUNCTION

        SET primeStart TO ceilSqrt(l)
        SET primeEnd TO floorSqrt(r)

        SET countSpecial TO 0
        SET q TO primeStart
        FUNCTION countLoop(q primeEnd countSpecial)
            IF q > primeEnd
                RETURN countSpecial
            ELSE
                IF is_prime(q)
                    RETURN countLoop(q + 1 primeEnd countSpecial + 1)
                ELSE
                    RETURN countLoop(q + 1 primeEnd countSpecial)
                END IF
            END IF
        END FUNCTION
        SET countSpecial TO countLoop(q primeEnd countSpecial)

        SET rangeTotal TO (r - l) + (1 * 1)

        RETURN rangeTotal - countSpecial
    END FUNCTION
END CLASS