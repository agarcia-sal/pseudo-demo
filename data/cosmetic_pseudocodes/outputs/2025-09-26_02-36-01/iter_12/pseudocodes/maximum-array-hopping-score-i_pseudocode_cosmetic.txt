CLASS Solution
    FUNCTION maxScore(nums)
        FUNCTION replicateZeroList(length)
            SET accumulator TO empty list
            FUNCTION fill(index)
                IF index EQUALS length THEN
                    RETURN
                ELSE
                    ADD 0 TO accumulator
                    CALL fill(index PLUS 1)
                END IF
            END FUNCTION
            CALL fill(0)
            RETURN accumulator
        END FUNCTION

        SET count TO 0
        SET totalLen TO 0
        WHILE count LESS THAN LENGTH OF nums
            SET totalLen TO totalLen PLUS 1
            SET count TO count PLUS 1
        END WHILE

        SET dpList TO replicateZeroList(totalLen)
        SET position TO 1
        SET dpList[position] TO 0

        SET outerIdx TO 2
        outer_loop:
        WHILE TRUE
            IF outerIdx GREATER THAN totalLen THEN
                GOTO end_outer
            END IF

            SET innerIdx TO 1

            inner_loop:
            WHILE TRUE
                IF innerIdx GREATER OR EQUAL outerIdx THEN
                    GOTO end_inner
                END IF

                SET candidateScore TO dpList[innerIdx] PLUS (outerIdx MINUS innerIdx) MULTIPLIED BY nums[outerIdx]

                IF NOT (dpList[outerIdx] GREATER OR EQUAL candidateScore) THEN
                    SET dpList[outerIdx] TO candidateScore
                END IF

                SET innerIdx TO innerIdx PLUS 1
                CONTINUE inner_loop
            end_inner:

            SET outerIdx TO outerIdx PLUS 1
            CONTINUE outer_loop
        end_outer:

        SET outputIdx TO totalLen MINUS 1
        RETURN dpList[outputIdx]
    END FUNCTION
END CLASS