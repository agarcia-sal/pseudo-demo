CLASS Solution
    FUNCTION countWinningSequences(s)
        FUNCTION computeDelta(a, b)
            IF a LESS THAN b THEN
                IF (a NOT EQUAL zero) OR (b NOT EQUAL two) THEN
                    RETURN -1
                ELSE
                    RETURN 1
                END IF
            ELSEIF a GREATER THAN b THEN
                IF a EQUAL two AND b EQUAL zero THEN
                    RETURN -1
                ELSE
                    RETURN 1
                END IF
            ELSE
                RETURN 0
            END IF
        END FUNCTION

        FUNCTION walk(index, balance, prev)
            IF balance GREATER THAN LENGTH OF s MINUS index THEN
                RETURN 0
            END IF

            IF index GREATER THAN OR EQUAL LENGTH OF s THEN
                IF balance LESS THAN zero THEN
                    RETURN 1
                ELSE
                    RETURN 0
                END IF
            END IF

            SET accumulator TO 0

            FUNCTION loopOverValues(counter)
                IF counter GREATER THAN 2 THEN
                    RETURN
                END IF

                IF counter NOT EQUAL prev THEN
                    SET accumulator TO (accumulator PLUS walk(index PLUS 1, balance PLUS computeDelta(d[s[index]], counter), counter)) MOD mod
                END IF

                CALL loopOverValues(counter PLUS 1)
            END FUNCTION

            CALL loopOverValues(0)

            RETURN accumulator
        END FUNCTION

        SET mod TO 1_000_000_007
        SET d TO MAP: F->0, W->1, E->2
        SET result TO walk(0, 0, -1)
        CALL dfs cache clear method
        RETURN result
    END FUNCTION
END CLASS