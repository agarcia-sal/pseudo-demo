CLASS Solution
    FUNCTION maximumPoints(enemyEnergies currentEnergy)
        PROCEDURE sortArrayAsc(arr)
            count <- LENGTH OF arr
            index1 <- 0
            WHILE index1 < count - 1
                index2 <- index1 + 1
                WHILE index2 < count
                    IF NOT (arr[index1] <= arr[index2])
                        tempHolder <- arr[index1]
                        arr[index1] <- arr[index2]
                        arr[index2] <- tempHolder
                    END IF
                    index2 <- index2 + 1
                END WHILE
                index1 <- index1 + 1
            END WHILE
        END PROCEDURE

        sortArrayAsc(enemyEnergies)

        PROCEDURE isLess(a b)
            RETURN (a < b)
        END PROCEDURE

        IF isLess(currentEnergy enemyEnergies[0])
            RETURN 0
        END IF

        resultCount <- 0
        idx <- LENGTH OF enemyEnergies - 1

        PROCEDURE integerDivide(dividend divisor)
            dividendCopy <- dividend
            quotientHolder <- 0
            WHILE dividendCopy >= divisor
                dividendCopy <- dividendCopy - divisor
                quotientHolder <- quotientHolder + 1
            END WHILE
            RETURN quotientHolder
        END PROCEDURE

        PROCEDURE moduloOperation(dividend divisor)
            tempValue <- dividend
            WHILE tempValue >= divisor
                tempValue <- tempValue - divisor
            END WHILE
            RETURN tempValue
        END PROCEDURE

        WHILE idx >= 0
            times <- integerDivide(currentEnergy enemyEnergies[0])
            resultCount <- resultCount + times
            remainderVal <- moduloOperation(currentEnergy enemyEnergies[0])
            currentEnergy <- remainderVal + enemyEnergies[idx]
            idx <- idx - 1
        END WHILE

        RETURN resultCount
    END FUNCTION
END CLASS