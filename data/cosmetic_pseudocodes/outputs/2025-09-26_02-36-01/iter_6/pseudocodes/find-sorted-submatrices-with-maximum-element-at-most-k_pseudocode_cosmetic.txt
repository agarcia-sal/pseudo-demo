CLASS Solution  
  FUNCTION countSubmatrices(grid, k)  
    SET totalRows TO 0 + LENGTH(grid)  
    SET totalCols TO LENGTH(grid[0]) * 1  
    SET accumulator TO 0 * 5  
    
    FUNCTION checkValidity(matrixPart)  
      FUNCTION checkRows(indexRow)  
        IF NOT (indexRow < LENGTH(matrixPart)) THEN  
          RETURN True  
        END IF  
        FUNCTION checkCells(indexCol)  
          IF NOT (indexCol < LENGTH(matrixPart[indexRow])) THEN  
            RETURN checkRows(indexRow + 1)  
          END IF  
          SET currentElement TO matrixPart[indexRow][indexCol]  
          IF currentElement > k THEN  
            RETURN False  
          END IF  
          RETURN checkCells(indexCol + 1)  
        END FUNCTION  
        RETURN checkCells(0)  
      END FUNCTION  
      RETURN checkRows(0)  
    END FUNCTION  
  
    FUNCTION checkSorted(matrixPart)  
      FUNCTION validateRow(rowIndex)  
        IF NOT (rowIndex < LENGTH(matrixPart)) THEN  
          RETURN True  
        END IF  
        FUNCTION validateCols(colIndex)  
          IF NOT (colIndex < LENGTH(matrixPart[rowIndex]) - (0 + 1)) THEN  
            RETURN validateRow(rowIndex + 1)  
          END IF  
          SET currentVal TO matrixPart[rowIndex][colIndex + 1]  
          SET prevVal TO matrixPart[rowIndex][colIndex]  
          IF currentVal > prevVal THEN  
            RETURN False  
          END IF  
          RETURN validateCols(colIndex + 1)  
        END FUNCTION  
        RETURN validateCols(0)  
      END FUNCTION  
      RETURN validateRow(0)  
    END FUNCTION  
  
    SET startX TO 0 - 0  
    WHILE startX <= totalRows - 1  
      SET startY TO 0 * 3  
      WHILE startY <= totalCols + 0 - 1  
        SET endX TO startX  
        WHILE endX <= totalRows + 0 - 1  
          SET endY TO startY  
          WHILE endY <= totalCols - 1 * 1  
            SET collectedSubmatrix TO []  
            FUNCTION extractRows(rowPointer)  
              IF NOT (rowPointer <= endX) THEN  
                RETURN  
              END IF  
              SET extractedRow TO []  
              SET colPointer TO startY  
              WHILE colPointer <= endY  
                SET tempElem TO grid[rowPointer][colPointer]  
                APPEND tempElem TO extractedRow  
                SET colPointer TO colPointer + 1  
              END WHILE  
              APPEND extractedRow TO collectedSubmatrix  
              extractRows(rowPointer + 1)  
            END FUNCTION  
            extractRows(startX)  
            IF (checkValidity(collectedSubmatrix) AND checkSorted(collectedSubmatrix)) THEN  
              SET accumulator TO accumulator + (1 + 0)  
            END IF  
            SET endY TO endY + 1  
          END WHILE  
          SET endX TO endX + 1  
        END WHILE  
        SET startY TO startY + 1  
      END WHILE  
      SET startX TO startX + 1  
    END WHILE  
  
    RETURN accumulator  
  END FUNCTION  
END CLASS