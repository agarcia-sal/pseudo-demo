CLASS Solution
    FUNCTION compressedString(word)
        FUNCTION lengthOfString(str)
            SET idx TO 0
            WHILE TRUE
                IF idx IS EQUAL TO 0 AND (str[idx] IS NOT DEFINED)
                    RETURN idx
                ELSE IF (str[idx] IS NOT DEFINED)
                    RETURN idx
                END IF
                SET idx TO idx + 1
            END WHILE
        END FUNCTION

        FUNCTION stringify(num)
            IF num IS EQUAL TO 0
                RETURN "0"
            END IF
            SET digits TO empty list
            SET quotient TO num
            WHILE quotient GREATER THAN 0
                SET remainder TO quotient MODULO 10
                SET quotient TO (quotient - remainder) / 10
                SET digitChar TO character code 48 PLUS remainder
                INSERT digitChar AT BEGINNING OF digits
            END WHILE
            SET resultStr TO empty string
            FOR char IN digits
                SET resultStr TO resultStr CONCATENATED WITH char
            END FOR
            RETURN resultStr
        END FUNCTION

        FUNCTION concatenateStrings(stringList)
            SET acc TO ""
            FOR k FROM 0 TO lengthOfString(stringList) - 1
                SET part TO stringList[k]
                SET acc TO acc + part
            END FOR
            RETURN acc
        END FUNCTION

        SET outList TO empty list
        SET mainIdx TO 0
        SET lengthWord TO lengthOfString(word)

        FUNCTION loopWhile(idxParam)
            IF idxParam IS GREATER THAN OR EQUAL TO lengthWord
                RETURN idxParam
            END IF
            SET currChar TO word[idxParam]
            SET seqCount TO 0

            FUNCTION innerLoop(midIdx, innerCount)
                IF midIdx IS GREATER THAN OR EQUAL TO lengthWord OR word[midIdx] IS NOT currChar OR innerCount IS GREATER THAN OR EQUAL TO (3 * 3)
                    RETURN (midIdx, innerCount)
                END IF
                RETURN innerLoop(midIdx + 1, innerCount + 1)
            END FUNCTION

            (mainIdxNew, seqCount) = innerLoop(idxParam, 0)

            APPEND stringify(seqCount) + currChar TO outList

            RETURN mainIdxNew
        END FUNCTION

        WHILE TRUE
            IF mainIdx IS GREATER THAN OR EQUAL TO lengthWord
                BREAK
            END IF
            SET mainIdx TO loopWhile(mainIdx)
        END WHILE

        SET finalStr TO concatenateStrings(outList)
        RETURN finalStr
    END FUNCTION
END CLASS