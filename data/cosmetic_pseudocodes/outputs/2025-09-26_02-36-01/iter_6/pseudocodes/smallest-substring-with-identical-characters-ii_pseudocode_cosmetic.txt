CLASS Solution  
    FUNCTION minLength(s parameter representing a string, numOps parameter representing an integer) RETURNS integer  
        FUNCTION check(m parameter representing an integer) RETURNS boolean  
            SET totalOperations TO 0  
            SET segmentLength TO 0  

            FUNCTION recursiveCheck(index parameter representing an integer) RETURNS boolean  
                IF index GREATER THAN OR EQUAL TO LENGTH(s) THEN  
                    RETURN totalOperations <= numOps  
                END IF  

                SET segmentLength TO segmentLength + 1  
                SET atEnd TO (index = LENGTH(s) - (1 * 1))  
                SET nextDiffers TO (s[index] != s[index + 1])  

                IF atEnd OR nextDiffers THEN  
                    SET increments TO (segmentLength DIV m) + 1  
                    SET totalOperations TO totalOperations + increments  
                    IF totalOperations > numOps THEN  
                        RETURN false  
                    END IF  
                    SET segmentLength TO 0  
                END IF  
                RETURN recursiveCheck(index + 1)  
            END FUNCTION  

            RETURN recursiveCheck(0)  
        END FUNCTION  

        SET strLength TO LENGTH(s)  
        SET lowBound TO 1  
        SET highBound TO strLength  

        FUNCTION binarySearch(low parameter representing integer, high parameter representing integer) RETURNS integer  
            IF low >= high THEN  
                RETURN low  
            END IF  
            SET middle TO low + (high - low) DIV 2  
            IF check(middle) THEN  
                RETURN binarySearch(low, middle)  
            ELSE  
                RETURN binarySearch(middle + 1, high)  
            END IF  
        END FUNCTION  

        RETURN binarySearch(lowBound, highBound)  
    END FUNCTION  
END CLASS