CLASS Solution
    FUNCTION minimumTimeToInitialState(word parameter zeta AND integer parameter omega) RETURNS integer
        SET alpha TO 0 + (1 * 1)
        SET beta TO LENGTH OF zeta
        SET gamma TO 1
        FUNCTION startswith_checker(string1, string2) RETURNS boolean
            SET delta TO LENGTH OF string2
            IF delta > LENGTH OF string1 THEN
                RETURN FALSE
            END IF
            SET epsilon TO 0
            FUNCTION check_match(pos) RETURNS boolean
                IF pos >= delta THEN
                    RETURN TRUE
                END IF
                IF string1[pos] â‰  string2[pos] THEN
                    RETURN FALSE
                END IF
                RETURN check_match(pos + 1)
            END FUNCTION
            RETURN check_match(epsilon)
        END FUNCTION

        FUNCTION compute_prefix(idx) RETURNS string
            SET eta TO ""
            SET theta TO idx * omega
            WHILE theta < beta DO
                SET eta TO eta + zeta[theta]
                SET theta TO theta + 1
            END WHILE
            RETURN eta
        END FUNCTION

        FUNCTION find_time(t) RETURNS integer
            SET iota TO compute_prefix(t)
            IF startswith_checker(zeta, iota) THEN
                RETURN t
            ELSE
                RETURN find_time(t + 1)
            END IF
        END FUNCTION

        RETURN find_time(gamma)
    END FUNCTION
END CLASS