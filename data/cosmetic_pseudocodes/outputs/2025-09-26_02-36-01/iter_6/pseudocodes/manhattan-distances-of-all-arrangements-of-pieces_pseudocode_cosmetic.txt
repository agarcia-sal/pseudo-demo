CLASS Solution
    FUNCTION distanceSum WITH PARAMETERS alpha beta gamma
        DEFINE MODULUS <- (10 * 100000000) + 7

        FUNCTION cubicSubtract(x)
            RETURN ((x * x * x) - x)
        END FUNCTION

        DEFINE horizontalFactor <- cubicSubtract(beta) * (alpha * alpha)
        DEFINE verticalFactor   <- cubicSubtract(alpha) * (beta * beta)
        
        FUNCTION chooseTwo(x)
            RETURN ((x * (x - 1)) / 2)
        END FUNCTION

        DEFINE combinationsArg <- (alpha * beta) - 2
        DEFINE patternCount <- 
            FUNCTION factorialDivide(p)
                // Computes p choose (gamma - 2) via recursion with helper
                FUNCTION recurChoose(n, r)
                    IF r = 0 THEN RETURN 1
                    IF r > n THEN RETURN 0
                    RETURN recurChoose(n - 1, r - 1) * n / r
                END FUNCTION
                RETURN recurChoose(p, gamma - 2)
            END FUNCTION (combinationsArg)

        DEFINE partial1 <- horizontalFactor / 6
        DEFINE partial2 <- verticalFactor / 6

        DEFINE combinedSum <- partial1 + partial2
        DEFINE totalSum <- combinedSum * patternCount

        RETURN totalSum MOD MODULUS
    END FUNCTION
END CLASS