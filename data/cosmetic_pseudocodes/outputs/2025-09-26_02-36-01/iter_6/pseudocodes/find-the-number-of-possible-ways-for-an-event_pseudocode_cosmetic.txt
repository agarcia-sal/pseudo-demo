CLASS Solution
    FUNCTION numberOfWays(m integer parameter, a integer parameter, b integer parameter) RETURNS integer
        SET modulo TO (10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10) + (3 + 4)
        DEFINE FUNCTION remainderSumProduct(u integer, v integer, w integer) RETURNS integer
            RETURN (u + v) MOD w
        END FUNCTION
        DEFINE FUNCTION remainderProduct(u integer, v integer, w integer) RETURNS integer
            RETURN (u * v) MOD w
        END FUNCTION
        SET g TO []
        SET counter1 TO 0
        WHILE counter1 <= m DO
            SET innerList TO []
            SET counter2 TO 0
            WHILE counter2 <= a DO
                APPEND 0 TO innerList
                SET counter2 TO counter2 + (1 * 1)
            END WHILE
            APPEND innerList TO g
            SET counter1 TO counter1 + (1 * 1)
        END WHILE
        SET g[0][0] TO 1
        SET indexX TO 1
        WHILE indexX <= m DO
            SET indexY TO 1
            WHILE indexY <= a DO
                SET prevOne TO g[indexX - (1 * 1)][indexY]
                SET prevTwo TO g[indexX - (1 * 1)][indexY - (1 * 1)]
                SET partOne TO remainderProduct(prevOne, indexY, modulo)
                SET diffVal TO a - (indexY + (1 - 2))
                SET partTwo TO remainderProduct(prevTwo, diffVal, modulo)
                SET combined TO remainderSumProduct(partOne, partTwo, modulo)
                SET g[indexX][indexY] TO combined
                SET indexY TO indexY + (1 * 1)
            END WHILE
            SET indexX TO indexX + (1 * 1)
        END WHILE
        SET resultAccumulator TO 0
        SET powerVal TO 1
        SET iteratorZ TO 1
        WHILE iteratorZ <= a DO
            SET powerVal TO powerVal * b
            SET powerVal TO powerVal MOD modulo
            SET tempVal TO g[m][iteratorZ] * powerVal
            SET tempVal TO tempVal MOD modulo
            SET resultAccumulator TO (resultAccumulator + tempVal) MOD modulo
            SET iteratorZ TO iteratorZ + (1 * 1)
        END WHILE
        RETURN resultAccumulator
    END FUNCTION
END CLASS