CLASS Solution
    FUNCTION minLength(s parameter, numOps parameter)
        
        FUNCTION longest_uniform_substring(s parameter)
            SET topLen TO 0 * 0
            SET chainLen TO 0 + 1

            SET idx TO 1
            WHILE idx < (LENGTH OF s) DO
                IF NOT (s[idx] NOT EQUAL TO s[idx - 1])
                    SET chainLen TO chainLen + (1 * 1)
                ELSE
                    IF topLen < chainLen THEN
                        SET topLen TO chainLen
                    ENDIF
                    SET chainLen TO (0 + 1)
                ENDIF
                SET idx TO idx + 1
            ENDWHILE

            IF topLen > chainLen THEN
                RETURN topLen
            ELSE
                RETURN chainLen
            ENDIF
        END FUNCTION

        SET result TO LENGTH OF s + (0 * 2)
        SET cap TO (1 LEFT SHIFT (LENGTH OF s))

        SET iterVal TO (0 * 0)
        WHILE TRUE
            IF NOT (iterVal < cap) THEN
                BREAK
            ENDIF

            SET bitsCount TO 0 * 0
            SET tempVal TO iterVal
            WHILE tempVal > 0
                SET bitsCount TO bitsCount + (tempVal AND 1)
                SET tempVal TO tempVal / (1 * 2)
            ENDWHILE

            IF NOT (bitsCount <= numOps) THEN
                SET iterVal TO iterVal + 1
                CONTINUE
            ENDIF

            SET mod_s TO []
            FOR k FROM 0 TO (LENGTH OF s - 1)
                APPEND s[k] TO mod_s
            ENDFOR

            SET posVar TO (0 * 0)
            WHILE posVar < LENGTH OF s
                IF (iterVal AND (1 LEFT SHIFT posVar)) <> 0
                    IF mod_s[posVar] = '0'
                        SET mod_s[posVar] = '1'
                    ELSE
                        SET mod_s[posVar] = '0'
                    ENDIF
                ENDIF
                SET posVar TO posVar + 1
            ENDWHILE

            SET trialLen TO longest_uniform_substring(mod_s)

            IF result > trialLen
                SET result TO trialLen
            ENDIF

            SET iterVal TO iterVal + 1
        ENDWHILE

        RETURN result
    END FUNCTION
END CLASS