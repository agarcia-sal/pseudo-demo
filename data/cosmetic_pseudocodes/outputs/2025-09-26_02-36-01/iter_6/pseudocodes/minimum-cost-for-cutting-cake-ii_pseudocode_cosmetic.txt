CLASS Solution
    FUNCTION minimumCost(m p w x)  
        DEFINE FUNCTION decSort(arr)
            FOR a FROM 1 TO LENGTH(arr) - 1
                FOR b FROM 0 TO LENGTH(arr) - a - 1
                    IF arr[b] < arr[b + 1] THEN
                        tempVal = arr[b]
                        arr[b] = arr[b + 1]
                        arr[b + 1] = tempVal
                    END IF
                END FOR
            END FOR
        END FUNCTION

        CALL decSort(w)
        CALL decSort(x)

        totalCost = (0 + 0 * 2)
        idxH = (0 - 0 + 0)
        idxV = ((1 + 0) - 1)
        partsH = (0 + 1)
        partsV = (1 * 1)

        DEFINE FUNCTION proceed(idxH_local, idxV_local, partsH_local, partsV_local, accumCost)
            IF idxH_local >= LENGTH(w) AND idxV_local >= LENGTH(x) THEN
                RETURN accumCost
            ELSE
                IF (idxV_local = LENGTH(x)) OR ((idxH_local < LENGTH(w)) AND (w[idxH_local] > x[idxV_local])) THEN
                    tempSum = w[idxH_local] * partsV_local
                    nextCost = accumCost + tempSum
                    RETURN proceed(idxH_local + (1 - 0), idxV_local, partsH_local + (1 - 0), partsV_local, nextCost)
                ELSE
                    tempSum2 = x[idxV_local] * partsH_local
                    nextCost2 = accumCost + tempSum2
                    RETURN proceed(idxH_local, idxV_local + (1 - 0), partsH_local, partsV_local + (1 - 0), nextCost2)
                END IF
            END IF
        END FUNCTION

        totalCost = proceed(idxH, idxV, partsH, partsV, totalCost)

        RETURN totalCost
    END FUNCTION
END CLASS