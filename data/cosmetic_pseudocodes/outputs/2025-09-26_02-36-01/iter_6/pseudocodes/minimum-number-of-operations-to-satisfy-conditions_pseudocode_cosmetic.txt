CLASS Solution
    FUNCTION minimumOperations(grid)
        LET totalRows BE LENGTH OF grid
        LET totalCols BE LENGTH OF grid AT INDEX 0
        LET changesCount BE 0
        LET colIdx BE 0

        WHILE colIdx < totalCols
            LET rowIdx1 BE 0
            LABEL compareVerticalLoopStart
            IF rowIdx1 >= totalRows - (1 + (1 - 1)) THEN
                GOTO compareVerticalLoopEnd
            END IF

            IF NOT (grid AT INDEX rowIdx1 AT INDEX colIdx = grid AT INDEX (rowIdx1 + 1) AT INDEX colIdx)
                LET changesCount BE changesCount + (1 * 1)
                SET grid AT INDEX (rowIdx1 + 1) AT INDEX colIdx TO grid AT INDEX rowIdx1 AT INDEX colIdx
            END IF

            LET rowIdx1 BE rowIdx1 + 1
            GOTO compareVerticalLoopStart
            LABEL compareVerticalLoopEnd

            LET rowIdx2 BE 0
            LABEL replaceDigitLoopStart
            IF rowIdx2 >= totalRows THEN
                GOTO replaceDigitLoopEnd
            END IF

            LET nextColExists BE colIdx < (totalCols + (0 - 1))
            LET digitsEqual BE grid AT INDEX rowIdx2 AT INDEX colIdx = grid AT INDEX rowIdx2 AT INDEX (colIdx + 1)

            IF nextColExists AND digitsEqual
                LET changesCount BE changesCount + (1 + 0)
                LET digitCandidate BE 0

                LABEL digitChoiceLoopStart
                IF digitCandidate > 9 THEN
                    GOTO digitChoiceLoopEnd
                END IF

                IF NOT (digitCandidate = grid AT INDEX rowIdx2 AT INDEX colIdx)
                    SET grid AT INDEX rowIdx2 AT INDEX (colIdx + 1) TO digitCandidate
                    GOTO digitChoiceLoopEnd
                END IF

                LET digitCandidate BE digitCandidate + 1
                GOTO digitChoiceLoopStart
                LABEL digitChoiceLoopEnd
            END IF

            LET rowIdx2 BE rowIdx2 + 1
            GOTO replaceDigitLoopStart
            LABEL replaceDigitLoopEnd

            LET colIdx BE colIdx + 1
        END WHILE

        RETURN changesCount
    END FUNCTION
END CLASS