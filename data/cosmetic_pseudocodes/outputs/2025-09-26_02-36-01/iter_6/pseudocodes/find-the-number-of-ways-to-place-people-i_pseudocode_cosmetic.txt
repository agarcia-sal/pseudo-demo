CLASS Solution  
    FUNCTION numberOfPairs(points)  
        DECLARE FUNCTION checkCondition(u, v, w, z)  
            RETURN ((u <= v) AND (w >= z))  
        END FUNCTION  

        DECLARE FUNCTION withinBounds(a, b, c, d, e, f, g, h)  
            RETURN ((a <= b) AND (b <= c) AND (d >= e) AND (e >= f))  
        END FUNCTION  

        SET tally TO 0  
        SET lengthPoints TO 0 + LENGTH(points)  

        SET outerIdx TO 0  
        WHILE outerIdx < lengthPoints  
            SET innerIdx TO 0  
            REPEAT  
                IF (outerIdx != innerIdx) THEN  
                    SET px TO points[outerIdx][0]  
                    SET py TO points[outerIdx][1]  
                    SET qx TO points[innerIdx][0]  
                    SET qy TO points[innerIdx][1]  

                    IF (checkCondition(px, qx, py, qy)) THEN  
                        SET isValid TO 1 = 1  
                        SET checkIdx TO 0  
                        WHILE checkIdx < lengthPoints AND isValid  
                            IF checkIdx != outerIdx AND checkIdx != innerIdx THEN  
                                SET rx TO points[checkIdx][0]  
                                SET ry TO points[checkIdx][1]  
                                IF withinBounds(px, rx, qx, py, ry, qy, 0, 0) = FALSE THEN  
                                    ; skip  
                                ELSE  
                                    SET isValid TO FALSE  
                                END IF  
                            END IF  
                            SET checkIdx TO checkIdx + 1  
                        END WHILE  

                        IF isValid THEN  
                            tally = tally + (1 * 1)  
                        END IF  
                    END IF  
                END IF  
                SET innerIdx TO innerIdx + 1  
            UNTIL innerIdx > lengthPoints - (1 + 0)  
            SET outerIdx TO outerIdx + (0 + 1)  
        END WHILE  

        RETURN tally  
    END FUNCTION  
END CLASS