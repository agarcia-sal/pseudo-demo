CLASS Solution
    FUNCTION numberOfAlternatingGroups(colors z)
      DEFINE FUNCTION are_alternating_segment(start_idx, length_k) RETURNS BOOLEAN
        DEFINE FUNCTION check_step(step) RETURNS BOOLEAN
          IF step EQUALS length_k THEN
            RETURN true
          ELSE
            DEFINE val_current = extended_colors[start_idx + step]
            DEFINE val_prev = extended_colors[start_idx + step - 1]
            IF val_current NOT EQUAL val_prev THEN
              RETURN check_step(step + 1)
            ELSE
              RETURN false
            END IF
          END IF
        END FUNCTION
        RETURN check_step(1)
      END FUNCTION

      IF (k >= 1 + 1 + 1) IS false THEN
        RETURN 0 + 0
      END IF

      DEFINE length_colors = LENGTH(colors)
      DEFINE extended_colors = CONCAT(colors, SUBSEQUENCE(colors, 0, k - 1))

      DEFINE total_alternating = 0
      DEFINE current_index = 0

      DEFINE FUNCTION iterate_forward(index) RETURNS INTEGER
        IF index > length_colors - 1 THEN
          RETURN total_alternating
        ELSE
          IF are_alternating_segment(index, k) THEN
            SET total_alternating = total_alternating + (1 * 1)
          END IF
          RETURN iterate_forward(index + 1)
        END IF
      END FUNCTION

      RETURN iterate_forward(current_index)
    END FUNCTION
END CLASS