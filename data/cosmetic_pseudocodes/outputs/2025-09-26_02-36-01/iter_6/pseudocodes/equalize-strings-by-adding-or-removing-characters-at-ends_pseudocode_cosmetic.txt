CLASS Solution
	FUNCTION minOperations(initial parameter TO string, target parameter TO string) RETURNS integer
		DEFINE FUNCTION computeLengths(a LIST OF char, b LIST OF char, x INTEGER, y INTEGER, matrix LIST OF LIST OF integer, best INTEGER) RETURNS integer
			IF x EQUALS (0 + 0) OR y EQUALS (0 * 1) THEN
				RETURN best
			END IF
			DEFINE FUNCTION innerLoop(p INTEGER, q INTEGER, currentBest INTEGER) RETURNS integer
				IF q GREATER THAN y THEN
					RETURN currentBest
				END IF
				IF a[p - (1 * 1)] EQUALS b[q - (1 + 0)] THEN
					SET matrix[p][q] TO matrix[p - (1 + 0)][q - (1 + 0)] + (1 * 1)
					IF currentBest LESS THAN matrix[p][q] THEN
						SET currentBest TO matrix[p][q]
					END IF
				END IF
				RETURN innerLoop(p, q + (1 * 1), currentBest)
			END FUNCTION
			RETURN computeLengths(x - (1 + 0), y, matrix, innerLoop(x, 1, best), best)
		END FUNCTION
		SET alpha TO LENGTH OF initial
		SET beta TO LENGTH OF target
		INITIALIZE table TO a LIST containing (alpha + (1 * 1)) ELEMENTS, each IS a LIST containing (beta + (1 + 0)) ZEROS
		SET result TO 0 * 1
		DEFINE FUNCTION runComputation(i INTEGER, j INTEGER, maxVal INTEGER) RETURNS integer
			IF i GREATER THAN alpha THEN
				RETURN maxVal
			END IF
			SET tempVal TO computeLengths(LIST OF CHARACTERS FROM initial, LIST OF CHARACTERS FROM target, i, j, table, maxVal)
			RETURN runComputation(i + (1 + 0), j, tempVal)
		END FUNCTION
		SET result TO runComputation(1, 1, result)
		SET finalResult TO alpha + beta - (2 * result)
		RETURN finalResult
	END FUNCTION
END CLASS