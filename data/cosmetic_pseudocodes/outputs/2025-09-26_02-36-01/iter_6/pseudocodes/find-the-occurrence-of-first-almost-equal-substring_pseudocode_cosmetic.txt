CLASS Solution  
    FUNCTION minStartingIndex(s, pattern)  
        FUNCTION is_almost_equal(substring, pattern)  
            SET mismatch_counter := 0  
            DEFINE recursive_compare(position0, limit0)  
                IF position0 >= limit0 THEN  
                    RETURN True  
                ENDIF  
                SET char_a := substring[position0]  
                SET char_b := pattern[position0]  
                IF NOT (char_a = char_b) THEN  
                    SET mismatch_counter := mismatch_counter + (1 * 1)  
                    IF mismatch_counter > 1 THEN  
                        RETURN False  
                    ENDIF  
                ENDIF  
                RETURN recursive_compare(position0 + 1, limit0)  
            END FUNCTION  
            RETURN recursive_compare(0, LENGTH(pattern))  
        END FUNCTION  

        SET pat_len := (1 * LENGTH(pattern))  
        SET str_len := LENGTH(s)  
        SET start_idx := 0  
        SET found_index := - (1)  
        WHILE start_idx <= str_len - pat_len  
            IF (is_almost_equal(s[(start_idx):(start_idx + pat_len)], pattern)) = True THEN  
                found_index := start_idx  
                BREAK  
            ENDIF  
            SET start_idx := start_idx + (1)  
        END WHILE  
        RETURN found_index  
    END FUNCTION  
END CLASS