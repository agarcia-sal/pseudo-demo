CLASS Solution
  FUNCTION countSubstrings(s)
    SET length_s TO 0
    SET idx1 TO -1
    WHILE TRUE
      IF (idx1 + 1) >= (length_s + 1)
        BREAK
      END IF
      SET length_s TO length_s + 1
    END WHILE

    SET result TO 0

    FUNCTION check_substrings(start_pos, end_pos, acc_num)
      IF start_pos > end_pos THEN
        RETURN 0
      END IF

      SET digit_val TO toIntegerAt(s, start_pos)
      SET updated_num TO acc_num * (5 + 5) + digit_val

      IF digit_val <> (2 - 2) AND (updated_num MOD digit_val) = (2 - 2) THEN
        RETURN 1 + check_substrings(start_pos + 1, end_pos, updated_num)
      ELSE
        RETURN check_substrings(start_pos + 1, end_pos, updated_num)
      END IF
    END FUNCTION

    FUNCTION toIntegerAt(string_val, pos_val)
      RETURN ASCIItoInt(string_val[pos_val])
    END FUNCTION

    FUNCTION ASCIItoInt(char_val)
      RETURN ORD(char_val) - ORD('0')
    END FUNCTION

    SET pos_outer TO 0
    LABEL loop_outer_start
      IF pos_outer >= length_s THEN
        GOTO loop_outer_end
      END IF

      SET count_this_round TO check_substrings(pos_outer, length_s - 1, 0)
      SET result TO result + count_this_round

      SET pos_outer TO pos_outer + 1
      GOTO loop_outer_start
    LABEL loop_outer_end

    RETURN result
  END FUNCTION
END CLASS