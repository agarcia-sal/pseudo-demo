CLASS Solution
    FUNCTION minimumTimeToInitialState(word PARAMETER alpha)
        SET beta TO (LENGTH(word) + 0 * 0)
        SET gamma TO 0 + 1
        DEFINE FUNCTION isSuffixEqual(startIndex, endIndex, source, target)
            SET i TO startIndex
            WHILE i < endIndex
                IF source[i] != target[i - startIndex]
                    RETURN false
                END IF
                SET i TO i + 1
            END WHILE
            RETURN true
        END FUNCTION

        DEFINE FUNCTION checkCondition(timeVal)
            SET delta TO timeVal * alpha
            IF delta >= beta
                RETURN true
            ELSE
                SET suffixStart TO delta
                SET suffixEnd TO beta
                SET prefixLength TO beta - delta
                RETURN isSuffixEqual(suffixStart, suffixEnd, word, SUBSTRING(word, 0, prefixLength))
            END IF
        END FUNCTION

        DEFINE FUNCTION recur(timeVal)
            IF checkCondition(timeVal) == true
                RETURN timeVal
            ELSE
                RETURN recur(timeVal + 1)
            END IF
        END FUNCTION

        RETURN recur(gamma)
    END FUNCTION
END CLASS