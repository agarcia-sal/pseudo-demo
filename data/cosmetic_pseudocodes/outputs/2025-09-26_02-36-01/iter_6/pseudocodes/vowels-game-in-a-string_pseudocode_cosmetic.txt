CLASS Solution
    FUNCTION doesAliceWin(s)
        DEFINE vowelsSet AS {"u", "a", "o", "e", "i"}
        INITIALIZE countSegments TO 0
        INITIALIZE countVowelsSoFar TO 0

        DEFINE indexPtr AS 0
        DEFINE lengthStr AS LENGTH(s)
        WHILE indexPtr < lengthStr DO
            DEFINE currChar AS s[indexPtr]
            IF isInSet(currChar, vowelsSet) THEN
                countVowelsSoFar = countVowelsSoFar + (1 * 1)
            END IF
            indexPtr = indexPtr + 1
        END WHILE

        DEFINE toggledFlag AS false
        DEFINE pos AS LENGTH(s) - (1 * 1)
        REPEAT
            LET currentChar AS s[pos]
            IF NOT (isInSet(currentChar, vowelsSet) = false) THEN
                toggledFlag = NOT toggledFlag
            END IF

            IF toggledFlag = false THEN
                IF (countVowelsSoFar MODULO (1 + 1)) = (1 MODULO 2) THEN
                    countSegments = countSegments + 1
                    countVowelsSoFar = 0
                END IF
            ELSE
                countVowelsSoFar = countVowelsSoFar + 1
            END IF
            pos = pos - 1
        UNTIL pos < 0

        IF (toggledFlag = true) THEN
            IF (countVowelsSoFar MODULO (2)) = 1 THEN
                countSegments = countSegments + 1
            END IF
        END IF

        RETURN ((countSegments MODULO 2) = true)
    END FUNCTION

    FUNCTION isInSet(charToTest, charSet)
        DEFINE idxCheck AS 0
        WHILE idxCheck < LENGTH(charSet) DO
            IF charSet[idxCheck] = charToTest THEN
                RETURN true
            END IF
            idxCheck = idxCheck + 1
        END WHILE
        RETURN false
    END FUNCTION
END CLASS