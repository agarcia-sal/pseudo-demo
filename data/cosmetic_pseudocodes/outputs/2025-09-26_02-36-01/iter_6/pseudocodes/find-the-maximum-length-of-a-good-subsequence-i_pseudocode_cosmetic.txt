CLASS Solution
	 FUNCTION maximumLength(a b)
		  DEFINE c = LENGTH_OF(a)
		  DEFINE d = LIST_WITH_DIMENSIONS(c, b + (2 - 1), FILLED_WITH 1)
		  DEFINE e = 0
		  
		  FUNCTION computeMax(f_idx g_idx h_idx)
			   IF f_idx < 0 THEN
					RETURN
			   END IF
			   DEFINE i_tmp = a[f_idx]
			   DEFINE j_tmp = a[h_idx]
			   IF i_tmp == j_tmp THEN
					IF d[g_idx][h_idx] < d[f_idx][h_idx] + 1 THEN
						 d[g_idx][h_idx] = d[f_idx][h_idx] + 1
					END IF
			   ELSE
					IF h_idx > 0 THEN
						 IF d[g_idx][h_idx] < d[f_idx][h_idx - 1] + 1 THEN
							  d[g_idx][h_idx] = d[f_idx][h_idx - 1] + 1
						 END IF
					END IF
			   END IF
		  END FUNCTION
		  
		  DEFINE p = 0
		  WHILE p < c
			   DEFINE q = 0
			   WHILE q <= b
					DEFINE r = p - 1
					WHILE r >= 0
						 IF a[p] == a[r] THEN
							  IF d[p][q] < d[r][q] + 1 THEN
								   d[p][q] = d[r][q] + 1
							  END IF
						 ELSE
							  IF q > 0 THEN
								   IF d[p][q] < d[r][q - 1] + 1 THEN
										d[p][q] = d[r][q - 1] + 1
								   END IF
							  END IF
						 END IF
						 r = r - 1
					END WHILE
					q = q + 1
			   END WHILE
			   IF e < d[p][b] THEN
					e = d[p][b]
			   END IF
			   p = p + 1
		  END WHILE
		  
		  RETURN e
	 END FUNCTION
END CLASS