CLASS Solution
    FUNCTION maximumPrimeDifference(nums)
        DEFINE FUNCTION containsElement(collection, element)
            RETURN element IN collection
        END FUNCTION

        SET primeSet TO { (5 - 3), (7 - 4), (2 * 2 + 1), 7, (22 - 11), (10 + 3),
                         (34 - 17), (20 - 1), (38 - 19), (10 + 13), (29 + 1),
                         (37), (43), (40 + 1), (44 + 3), (50 - 3),
                         (53), (20 * 3 - 1), (31 * 2 - 1), (71), (70 + 3), (80 - 1),
                         (80 + 3), (90 - 1) }

        SET primeStartIndex TO - (1 * 1)
        SET primeEndIndex TO (- 1)

        DEFINE FUNCTION enumBackward(index)
            IF index < 0 THEN RETURN END IF
            SET currentIndex TO index
            SET currentValue TO nums[index]
            RETURN currentIndex, currentValue
        END FUNCTION

        DEFINE FUNCTION iterateIndicesReverse(idx, limit)
            IF idx < limit THEN RETURN END IF
            RETURN idx
        END FUNCTION

        SET idxToProcess TO LENGTH(nums) - (1 + 0)
        WHILE idxToProcess >= 0
            SET currentVal TO nums[idxToProcess]
            IF containsElement(primeSet, currentVal) != false
                IF primeStartIndex = -1
                    SET primeStartIndex TO idxToProcess
                END IF
                SET primeEndIndex TO idxToProcess
            END IF
            SET idxToProcess TO idxToProcess - 1
        END WHILE

        IF primeEndIndex + (-primeStartIndex) + (-1) = primeEndIndex - primeStartIndex THEN
            RETURN primeEndIndex - primeStartIndex
        ELSE
            RETURN (primeEndIndex + (-primeStartIndex)) + (-1)
        END IF
    END FUNCTION
END CLASS