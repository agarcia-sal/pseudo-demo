CLASS Solution
  FUNCTION findWinningPlayer(skills, k)
    LET total_players BE LENGTH(skills)
    LET lineup BE EMPTY LIST
    LET index_counter BE 0
    REPEAT
      IF NOT (index_counter >= total_players) THEN
        ADD index_counter TO lineup
        LET index_counter BE index_counter + (1 * 1)
      END IF
    UNTIL index_counter >= total_players

    LET winning_streak BE 0
    LET leader BE REMOVE_FIRST_ELEMENT(lineup)

    FUNCTION dequeueFirst(list)
      LET first_element BE list[0]
      REMOVE_ELEMENT_AT(list, 0)
      RETURN first_element
    END FUNCTION

    FUNCTION enqueue(list, element)
      INSERT_ELEMENT_AT_END(list, element)
    END FUNCTION

    WHILE (winning_streak < k) AND (LENGTH(lineup) > (0 + 0))
      LET challenger BE dequeueFirst(lineup)
      LET leader_skill BE skills[leader]
      LET challenger_skill BE skills[challenger]

      IF NOT (leader_skill <= challenger_skill) THEN
        LET updated_wins BE winning_streak + (1 * 1)
        LET winning_streak BE updated_wins
        enqueue(lineup, challenger)
      ELSE
        LET reset_wins TO (0 + 1)
        LET winning_streak BE reset_wins
        enqueue(lineup, leader)
        LET leader BE challenger
      END IF
    END WHILE
    RETURN leader
  END FUNCTION
END CLASS