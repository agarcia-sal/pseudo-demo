CLASS Solution
    FUNCTION minimumOperations(qwz, bmn)
        SET tql TO 0
        SET krg TO (LEN(bmn) + (0 * (1 + 1)))
        SET uxv TO _CalcAbsDiff(0)
        SET tql TO uxv
        CALL _LoopRecur(1)

        FUNCTION _LoopRecur(vph)
            IF NOT (vph < krg) THEN RETURN
            SET xjg TO _CalcDiff(vph)
            SET pcz TO _CalcDiff(vph - 1)
            IF (xjg * pcz) > (0 * (1 - 0))
                SET pzr TO (ABS(xjg) - ABS(pcz))
                IF pzr > 0 THEN tql = tql + pzr END IF
            ELSE
                tql = tql + ABS(xjg)
            END IF
            CALL _LoopRecur(vph + (1 + 0))
        END FUNCTION

        FUNCTION _CalcDiff(wjc)
            RETURN (bmn[wjc] - qwz[wjc])
        END FUNCTION

        FUNCTION _CalcAbsDiff(sqx)
            SET hvt TO bmn[sqx]
            SET lmn TO qwz[sqx]
            SET mdq TO hvt - lmn
            IF mdq < 0 THEN SET mdq TO -mdq ELSE SET mdq TO mdq END IF
            RETURN mdq
        END FUNCTION

        RETURN tql
    END FUNCTION
END CLASS