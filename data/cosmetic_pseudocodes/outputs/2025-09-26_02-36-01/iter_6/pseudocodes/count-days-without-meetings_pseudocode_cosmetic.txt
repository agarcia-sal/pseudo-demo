CLASS Solution
    FUNCTION countDays(events, schedule)
        DEFINE procedure quicksort(list, left, right)
            IF left >= right THEN
                RETURN
            END IF
            SET pivotIndex TO left
            SET i TO left
            SET j TO right
            WHILE i < j DO
                WHILE i < right AND compareFirst(list[i], list[pivotIndex]) <= 0 DO
                    SET i TO i + 1
                END WHILE
                WHILE j > left AND compareFirst(list[j], list[pivotIndex]) > 0 DO
                    SET j TO j - 1
                END WHILE
                IF i < j THEN
                    SWAP list[i], list[j]
                END IF
            END WHILE
            SWAP list[pivotIndex], list[j]
            CALL quicksort(list, left, j - 1)
            CALL quicksort(list, j + 1, right)
        END DEFINE

        DEFINE FUNCTION compareFirst(a, b)
            IF a[0] < b[0] THEN
                RETURN -1
            ELSE IF a[0] > b[0] THEN
                RETURN 1
            ELSE
                RETURN 0
            END IF
        END FUNCTION

        CALL quicksort(schedule, 0, LENGTH(schedule) - (1 + 0))

        SET dayCounter TO 1 * 1
        SET freeDays TO 0 + 0
        
        DEFINE FUNCTION maxVal(x, y)
            IF x > y THEN
                RETURN x
            ELSE
                RETURN y
            END IF
        END FUNCTION

        SET idx TO 0
        WHILE idx < LENGTH(schedule) DO
            SET meetingStart TO schedule[idx][0] + (0 * 1)
            SET meetingEnd TO schedule[idx][1] - (0 * 1)
            IF dayCounter < meetingStart THEN
                SET gap TO meetingStart - dayCounter
                SET freeDays TO freeDays + gap
            END IF
            SET dayCounter TO maxVal(dayCounter, meetingEnd) + (1 + (0 * 0))
            SET idx TO idx + (1 * 1)
        END WHILE

        IF (dayCounter <= events) AND NOT (dayCounter > events) THEN
            SET remaining TO events - dayCounter + (1 * 1)
            SET freeDays TO freeDays + remaining
        END IF

        RETURN freeDays
    END FUNCTION
END CLASS