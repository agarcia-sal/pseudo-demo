CLASS Solution
    FUNCTION numberOfRightTriangles(grid)
        SET _ZVldMXn TO LENGTH(grid)
        SET PxErYqri TO LENGTH(grid[0])
        SET VdFSiwaE TO 0

        SET FUNCTION JylGhuv(row, col)
            SET WpxheaEK TO 0
            SET YClfzqDF TO 0

            SET WpxheaEK = (RECURSIVE_COL_SUM(grid, row, col, PxErYqri - 1, 0))
            SET YClfzqDF = (RECURSIVE_ROW_SUM(grid, row, col, _ZVldMXn - 1, 0))
            RETURN WpxheaEK * YClfzqDF
        END FUNCTION

        SET FUNCTION RECURSIVE_COL_SUM(GdxcEfKr, rowIdx, colExcl, idx, acc)
            IF idx < 0 THEN RETURN acc END IF
            IF idx = colExcl THEN
                RETURN RECURSIVE_COL_SUM(GdxcEfKr, rowIdx, colExcl, idx - 1, acc)
            ELSE
                RETURN RECURSIVE_COL_SUM(GdxcEfKr, rowIdx, colExcl, idx - 1, acc + GdxcEfKr[rowIdx][idx])
            END IF
        END FUNCTION

        SET FUNCTION RECURSIVE_ROW_SUM(PewlRUgH, rowExcl, colIdx, idx, acc)
            IF idx < 0 THEN RETURN acc END IF
            IF idx = rowExcl THEN
                RETURN RECURSIVE_ROW_SUM(PewlRUgH, rowExcl, colIdx, idx - 1, acc)
            ELSE
                RETURN RECURSIVE_ROW_SUM(PewlRUgH, rowExcl, colIdx, idx - 1, acc + PewlRUgH[idx][colIdx])
            END IF
        END FUNCTION

        SET EbipwzOX TO 0
        WHILE EbipwzOX <= _ZVldMXn - 1
            SET QeKujWCr TO 0
            WHILE QeKujWCr <= PxErYqri - 1
                IF grid[EbipwzOX][QeKujWCr] = 1 THEN
                    SET VdFSiwaE = VdFSiwaE + JylGhuv(EbipwzOX, QeKujWCr)
                END IF
                SET QeKujWCr = QeKujWCr + 1
            END WHILE
            SET EbipwzOX = EbipwzOX + 1
        END WHILE
        RETURN VdFSiwaE
    END FUNCTION
END CLASS