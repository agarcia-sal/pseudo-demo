class Solution
    function maxUpgrades(count list of integer upgrade list of integer sell list of integer money list of integer) returns list of integer
        define function integer divide(a integer, b integer)
            if b equals 0 then return 0 end if
            set quotient to 0
            set remainder to a
            while remainder greater or equal to b
                set remainder to remainder minus b
                set quotient to quotient plus 1
            end while
            return quotient
        end function

        define function integer minimum(a integer, b integer)
            if a less than b then return a else return b end if
        end function

        define function integer maximum(a integer, b integer)
            if a greater than b then return a else return b end if
        end function

        set result_list to empty list

        define function processIndex(i integer)
            if i equals length of count then return end if
            set x to count[i]
            set y to upgrade[i]
            set z to sell[i]
            set w to money[i]
            set best_upgrade to 0

            define function trySell(j integer)
                if j greater than x then return end if
                set servers_left to x minus j
                set money_gained to j multiplied by z
                set total_cash to w plus money_gained
                set possible to divide(total_cash, y)
                set possible to minimum(possible, servers_left)
                set best_upgrade to maximum(best_upgrade, possible)
                trySell(j plus 1)
            end function

            trySell(0)
            append best_upgrade to result_list
            processIndex(i plus 1)
        end function

        processIndex(0)
        return result_list
    end function
end class