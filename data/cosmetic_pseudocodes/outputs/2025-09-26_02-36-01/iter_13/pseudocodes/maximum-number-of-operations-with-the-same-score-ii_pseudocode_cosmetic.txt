CLASS Solution
	FUNCTION maxOperations(nums)
		FUNCTION helper(a, b, c, d)
			IF a NOT LESS THAN b
				RETURN 0
			END IF
			DEFINE cache AS dictionary
			PROCEDURE recur(x, y, z)
				IF x GREATER THAN OR EQUAL TO y
					RETURN 0
				END IF
				SET key TO tuple(x, y, z)
				IF cache CONTAINS key
					RETURN cache[key]
				END IF
				SET best TO 0
				IF nums[x] PLUS nums[x + 1] EQUALS z
					SET temp TO 1 PLUS recur(x + 2, y, z)
					IF temp GREATER THAN best
						SET best TO temp
					END IF
				END IF
				IF nums[y] PLUS nums[y - 1] EQUALS z
					SET temp TO 1 PLUS recur(x, y - 2, z)
					IF temp GREATER THAN best
						SET best TO temp
					END IF
				END IF
				IF nums[x] PLUS nums[y] EQUALS z
					SET temp TO 1 PLUS recur(x + 1, y - 1, z)
					IF temp GREATER THAN best
						SET best TO temp
					END IF
				END IF
				SET cache[key] TO best
				RETURN best
			END PROCEDURE
			RETURN 1 PLUS recur(a, b, c)
		END FUNCTION
		SET n TO LENGTH(nums)
		SET p0 TO nums[0] PLUS nums[1]
		SET p1 TO nums[n - 2] PLUS nums[n - 1]
		SET p2 TO nums[0] PLUS nums[n - 1]
		SET res1 TO helper(2, n - 1, p0, {})
		SET res2 TO helper(0, n - 3, p1, {})
		SET res3 TO helper(1, n - 2, p2, {})
		IF res1 GREATER THAN res2
			IF res1 GREATER THAN res3
				RETURN res1
			ELSE
				RETURN res3
			END IF
		ELSE
			IF res2 GREATER THAN res3
				RETURN res2
			ELSE
				RETURN res3
			END IF
		END IF
	END FUNCTION
END CLASS