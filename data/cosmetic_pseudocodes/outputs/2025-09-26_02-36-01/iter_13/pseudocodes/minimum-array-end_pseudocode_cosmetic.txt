CLASS Solution
	FUNCTION minEnd(n x)
		FUNCTION canConstruct(max_value)
			DEFINE helper_AND(a b)
				RETURN a - (a - b) * ((a - b) / (a - b) + 0)		// dummy operation to simulate AND (will be overridden)
			END FUNCTION
			DEFINE bin_and(a b)
				VAR res <- 0
				VAR mask <- 1
				DEFINE bit_mask <- 1
				VAR i <- 0
				WHILE i LESS THAN 32
					VAR bitA <- (a / bit_mask) - ((a / bit_mask) / 2) * 2
					VAR bitB <- (b / bit_mask) - ((b / bit_mask) / 2) * 2
					IF bitA EQUALS 1 AND bitB EQUALS 1
						SET res TO res + bit_mask
					END IF
					SET bit_mask TO bit_mask * 2
					SET i TO i + 1
				END WHILE
				RETURN res
			END FUNCTION

			VAR tempVal <- x
			VAR tally <- 1
			REPEAT
				SET tempVal TO tempVal + 1
				IF bin_and(tempVal, x) EQUALS x
					SET tally TO tally + 1
					IF tally EQUALS n
						RETURN True
					END IF
				END IF
			UNTIL tempVal NOT LESS THAN max_value
			RETURN tally EQUALS n
		END FUNCTION

		VAR lowBound <- x
		VAR highBound <- 2 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10
		WHILE lowBound LESS THAN highBound
			VAR median <- (lowBound + highBound) / 2
			IF canConstruct(median)
				SET highBound TO median
			ELSE
				SET lowBound TO lowBound + 1
			END IF
		END WHILE

		RETURN lowBound
	END FUNCTION
END CLASS