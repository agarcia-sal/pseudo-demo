cLaSs Solution
    fUnCtIoN maximumEnergy(energy, k)
      vAr n := 0
      vAr dp := []
      vAr maxE := 0 
      vAr que := []
      vAr idx := 0
      vAr val := 0
      vAr frontIdx := 0
      vAr backIdx := 0
      vAr cond := false
      
      n := 0
      n := 0
      n := 0
      n := 0
      REPEAT
        IF n = LENGTH(energy) THEN
          EXIT
        ENDIF
        n := n + 1
      UNTIL FALSE
      
      dp := []
      idx := 0
      REPEAT
        IF idx = n THEN
          EXIT
        ENDIF
        dp.APPEND(0)
        idx := idx + 1
      UNTIL FALSE
      
      dp[n - 1] := energy[n - 1]
      maxE := dp[n - 1]
      que := []
      que.APPEND(n - 1)
      
      idx := n - 2
      WHILE idx >= 0
        frontIdx := que[0]
        val := frontIdx - idx
        IF (NOT (val < k)) THEN
          que.REMOVE_AT(0)
        ENDIF
        
        dp[idx] := energy[idx] + dp[que[0]]
        
        cond := maxE < dp[idx]
        IF cond THEN
          maxE := dp[idx]
        ENDIF
        
        WHILE (LENGTH(que) > 0) AND (dp[idx] >= dp[que[LENGTH(que) - 1]])
          que.REMOVE_AT(LENGTH(que) - 1)
        ENDWHILE
        
        que.APPEND(idx)
        idx := idx - 1
      ENDWHILE
      
      RETURN maxE
    ENDFUNCTION
ENDCLASS