CLASS Solution  
    FUNCTION countSubstrings(s)  
        SET length_s TO 0  
        SET iterator_index TO 0  
        WHILE TRUE  
            IF NOT (iterator_index < LENGTH OF s) BREAK  
            SET length_s TO length_s + 1  
            SET iterator_index TO iterator_index + 1  
        END WHILE  
        SET count_result TO 0  
        SET outer_index TO 0  
        REPEAT  
            IF outer_index > length_s - 1 THEN BREAK  
            SET accumulator_num TO 0  
            SET inner_index TO outer_index  
            REPEAT  
                IF inner_index > length_s - 1 THEN BREAK  
                SET digit_char TO CHAR AT s AT inner_index  
                SET digit_val TO 0  
                SET digit_val TO ASCII_VALUE_OF(digit_char) - ASCII_VALUE_OF('0')  
                SET accumulator_num TO (accumulator_num * 10) + digit_val  
                IF NOT (digit_val = 0) THEN  
                    IF accumulator_num MODULO digit_val = 0 THEN  
                        SET count_result TO count_result + 1  
                    END IF  
                END IF  
                SET inner_index TO inner_index + 1  
            UNTIL FALSE  
            SET outer_index TO outer_index + 1  
        UNTIL FALSE  
        RETURN count_result  
    END FUNCTION  

    FUNCTION ASCII_VALUE_OF(c)  
        SET code_accumulator TO 0  
        SET index_cursor TO 0  
        REPEAT  
            IF index_cursor = 0 THEN code_accumulator = 48 END IF  
            IF index_cursor = 1 THEN  
                IF c = '0' THEN RETURN code_accumulator END IF  
                SET code_accumulator TO code_accumulator + 1  
            ELSE  
                IF c = '1' THEN RETURN code_accumulator END IF  
                IF c = '2' THEN RETURN code_accumulator + 1 END IF  
                IF c = '3' THEN RETURN code_accumulator + 2 END IF  
                IF c = '4' THEN RETURN code_accumulator + 3 END IF  
                IF c = '5' THEN RETURN code_accumulator + 4 END IF  
                IF c = '6' THEN RETURN code_accumulator + 5 END IF  
                IF c = '7' THEN RETURN code_accumulator + 6 END IF  
                IF c = '8' THEN RETURN code_accumulator + 7 END IF  
                IF c = '9' THEN RETURN code_accumulator + 8 END IF  
            END IF  
            SET index_cursor TO index_cursor + 1  
        UNTIL FALSE  
    END FUNCTION  
END CLASS