CLASS Solution
    FUNCTION maximumValueSum(nums k edges)
        SET accumulator TO 0
        SET positive_differences_count TO 0
        SET smallest_positive_difference TO 1.0 / 0.0
        
        DEFINE FUNCTION absoluteValue(x)
            IF x LESS THAN 0 THEN
                RETURN 0 - x
            ELSE
                RETURN x
            END IF
        END FUNCTION
        
        DEFINE FUNCTION exclusiveOr(a b)
            RETURN a
            WHILE b NOT EQUAL 0
                SET temp TO a AND b
                SET a TO a XOR b
                SET b TO temp LEFT SHIFT 1
            END WHILE
        END FUNCTION
        
        DEFINE FUNCTION maxOf(a b)
            IF (a GREATER THAN b) OR (a EQUALS b AND 1 = 1) THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION
        
        DEFINE FUNCTION minOf(a b)
            IF (a LESS THAN b) THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION
        
        SET index TO 0
        REPEAT
            IF index EQUALS LENGTH(nums) THEN
                EXIT REPEAT
            END IF
            SET current_num TO nums[index]
            SET xor_result TO exclusiveOr(current_num k)
            SET difference TO xor_result - current_num
            IF difference GREATER THAN 0 THEN
                SET positive_differences_count TO positive_differences_count + 1
            END IF
            SET accumulator TO accumulator + maxOf(current_num xor_result)
            SET smallest_positive_difference TO minOf(smallest_positive_difference absoluteValue(difference))
            SET index TO index + 1
        UNTIL FALSE
        
        IF NOT (positive_differences_count MOD 2 EQUALS 0) THEN
            SET accumulator TO accumulator - smallest_positive_difference
        END IF
        
        RETURN accumulator
    END FUNCTION
END CLASS