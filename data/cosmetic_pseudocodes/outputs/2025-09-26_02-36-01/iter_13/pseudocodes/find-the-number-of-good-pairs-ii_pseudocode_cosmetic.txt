CLASS Solution
    FUNCTION numberOfPairs(nums1, nums2, k)
        FUNCTION makeCounter(list)
            SET tallyDict TO empty map
            SET idx TO 0
            WHILE idx < length of list
                SET val TO list[idx]
                IF val IN tallyDict THEN
                    SET tallyDict[val] TO tallyDict[val] + 1
                ELSE
                    SET tallyDict[val] TO 1
                END IF
                SET idx TO idx + 1
            END WHILE
            RETURN tallyDict
        END FUNCTION

        SET countNumsTwo TO makeCounter(nums2)
        SET aggregatePairs TO 0
        SET i TO 0

        REPEAT
            IF i >= length of nums1 THEN
                BREAK
            END IF
            SET firstElement TO nums1[i]

            FUNCTION iterateCountItems(map, keysList, pos, accum)
                IF pos >= length of keysList THEN
                    RETURN accum
                END IF
                SET currKey TO keysList[pos]
                SET currValue TO map[currKey]
                SET productCalc TO currKey * k
                IF firstElement MOD productCalc = 0 THEN
                    SET newAccum TO accum + currValue
                ELSE
                    SET newAccum TO accum
                END IF
                RETURN iterateCountItems(map, keysList, pos + 1, newAccum)
            END FUNCTION

            SET keysList TO array of keys in countNumsTwo
            SET aggregatePairs TO iterateCountItems(countNumsTwo, keysList, 0, aggregatePairs)

            SET i TO i + 1
        UNTIL false

        RETURN aggregatePairs
    END FUNCTION
END CLASS