class Solution

    function minStartingIndex(s pattern)
        function is_almost_equal(substring pattern)
            var diff_accumulator = 0
            var pos = 0

            loop:
                if pos >= length(substring) or pos >= length(pattern) then
                    break loop
                end if

                var char_sub = substring[pos]
                var char_pat = pattern[pos]

                if not (char_sub = char_pat) then
                    diff_accumulator = diff_accumulator + 1

                    if diff_accumulator > 1 then
                        return false
                    end if
                end if

                pos = pos + 1
                goto loop
            end loop

            return true
        end function

        var plen = length(pattern)
        var l_s = length(s)
        var result = -1

        var start_idx = 0

        repeat_until loop:
            if not (start_idx < l_s - plen + 1) then
                exit loop
            end if

            var current_sub = sublist(s start_idx start_idx + plen)

            if is_almost_equal(current_sub pattern) then
                result = start_idx
                exit loop
            end if

            start_idx = start_idx + 1
        end repeat_until

        return result
    end function

end class