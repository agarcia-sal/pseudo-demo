cLASS Solution
   FUNCTion nonSpecialCount(l, r)
      FUNCtion is_prime(n)
         LET f = 5
         LET result = true
         IF NOT (n > 1) THEN
            result = false
         ELSE
            IF (n <= 3) THEN
               result = true
            ELSE
               IF ((n % 2) = 0) OR ((n % 3) = 0) THEN
                  result = false
               ELSE
                  REPEAT
                     IF ((n % f) = 0) OR ((n % (f + 2)) = 0) THEN
                        result = false
                        BREAK
                     END IF
                     f = f + 6
                  UNTIL (f * f) > n
               END IF
            END IF
         END IF
         RETURN result
      ENDFUNCTION

      LET a = 0
      LET b = 0
      LET c = 0
      LET d = 0
      LET e = 0
      LET f = 0

      LET floor_sqrt_l = 0
      LET ceil_sqrt_l = 0
      LET floor_sqrt_r = 0
      LET ceil_sqrt_r = 0

      LET calculate_sqrt = FUNCTION(x)
         LET v = 0
         WHILE v*v <= x
            v = v + 1
         END WHILE
         RETURN v - 1
      ENDFUNCTION

      LET ceil_sqrt_l = function()
         LET tmp = 0
         LET y = calculate_sqrt(l)
         IF y * y = l THEN
            tmp = y
         ELSE
            tmp = y + 1
         END IF
         RETURN tmp
      END

      LET floor_sqrt_r = calculate_sqrt(r)

      LET start_prime = ceil_sqrt_l
      LET end_prime = floor_sqrt_r

      LET special_count = 0
      LET idx = start_prime

      WHILE idx <= end_prime
         IF is_prime(idx) THEN
            special_count = special_count + 1
         END IF
         idx = idx + 1
      END WHILE

      LET total_count = (r - l) + 1

      LET answer = total_count - special_count

      RETURN answer
   ENDFUNCTION
END cLASS