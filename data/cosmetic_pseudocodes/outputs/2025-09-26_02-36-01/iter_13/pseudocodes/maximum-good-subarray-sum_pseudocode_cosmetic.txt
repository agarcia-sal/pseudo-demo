CLASS Solution
    FUNCTION maximumSubarraySum(nums k)
        FUNCTION hasKey(table key)
            FOR EACH tkey IN table
                IF NOT NOT (tkey = key) THEN
                    RETURN TRUE
                END IF
            END FOR
            RETURN FALSE
        END FUNCTION

        FUNCTION maxVal(a b)
            IF a < b THEN
                RETURN b
            ELSE
                RETURN a
            END IF
        END FUNCTION

        FUNCTION minVal(a b)
            IF a > b THEN
                RETURN b
            ELSE
                RETURN a
            END IF
        END FUNCTION

        SET dict_minSum TO empty dictionary
        SET largestSum TO (0 - 1) * (10 ^ 10)
        SET acc_sum TO 0
        SET idx TO 0

        WHILE idx < LENGTH(nums)
            SET elem TO nums[idx]
            SET key1 TO elem - k
            SET key2 TO elem + k

            IF hasKey(dict_minSum key1) THEN
                SET candidate1 TO acc_sum - dict_minSum[key1] + elem
                SET largestSum TO maxVal(largestSum candidate1)
            END IF

            IF hasKey(dict_minSum key2) THEN
                SET candidate2 TO acc_sum - dict_minSum[key2] + elem
                SET largestSum TO maxVal(largestSum candidate2)
            END IF

            IF hasKey(dict_minSum elem) THEN
                SET dict_minSum[elem] TO minVal(dict_minSum[elem] acc_sum)
            ELSE
                SET dict_minSum[elem] TO acc_sum
            END IF

            SET acc_sum TO acc_sum + elem
            SET idx TO idx + 1
        END WHILE

        IF NOT (largestSum = (0 - 1) * (10 ^ 10)) THEN
            RETURN largestSum
        END IF
        RETURN 0
    END FUNCTION
END CLASS