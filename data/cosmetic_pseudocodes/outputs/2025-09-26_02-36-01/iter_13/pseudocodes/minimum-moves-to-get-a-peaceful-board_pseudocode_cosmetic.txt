CLASS Solution
    FUNCTION minMoves(rooks)
        SET p TO 0
        SET q TO 0
        SET r TO LENGTH(rooks)
        FUNCTION absVal(x)
            IF x < 0 THEN RETURN -x ELSE RETURN x
        END FUNCTION
        FUNCTION sortByFirst(arr, low, high)
            IF low >= high THEN RETURN
            SET mid TO (low + high) DIV 2
            CALL sortByFirst(arr, low, mid)
            CALL sortByFirst(arr, mid + 1, high)
            SET left TO low
            SET right TO mid + 1
            SET temp TO EMPTY LIST
            WHILE left <= mid AND right <= high DO
                IF arr[left][0] <= arr[right][0] THEN
                    APPEND arr[left] TO temp
                    SET left TO left + 1
                ELSE
                    APPEND arr[right] TO temp
                    SET right TO right + 1
                ENDIF
            ENDWHILE
            WHILE left <= mid DO
                APPEND arr[left] TO temp
                SET left TO left + 1
            ENDWHILE
            WHILE right <= high DO
                APPEND arr[right] TO temp
                SET right TO right + 1
            ENDWHILE
            FOR i FROM low TO high DO
                SET arr[i] TO temp[i - low]
            ENDFOR
        END FUNCTION
        FUNCTION sortBySecond(arr, low, high)
            IF low >= high THEN RETURN
            SET mid TO (low + high) DIV 2
            CALL sortBySecond(arr, low, mid)
            CALL sortBySecond(arr, mid + 1, high)
            SET left TO low
            SET right TO mid + 1
            SET temp TO EMPTY LIST
            WHILE left <= mid AND right <= high DO
                IF arr[left][1] <= arr[right][1] THEN
                    APPEND arr[left] TO temp
                    SET left TO left + 1
                ELSE
                    APPEND arr[right] TO temp
                    SET right TO right + 1
                ENDIF
            ENDWHILE
            WHILE left <= mid DO
                APPEND arr[left] TO temp
                SET left TO left + 1
            ENDWHILE
            WHILE right <= high DO
                APPEND arr[right] TO temp
                SET right TO right + 1
            ENDWHILE
            FOR i FROM low TO high DO
                SET arr[i] TO temp[i - low]
            ENDFOR
        END FUNCTION
        SET s TO COPY(rooks)
        CALL sortByFirst(s, 0, r - 1)
        SET t TO COPY(rooks)
        CALL sortBySecond(t, 0, r - 1)
        SET u TO 0
        SET v TO 0
        SET w TO 0
        WHILE w < r
            SET diffRow TO s[w][0] - w
            IF diffRow < 0 THEN
                SET diffRow TO -diffRow
            ENDIF
            SET u TO u + diffRow
            SET w TO w + 1
        ENDWHILE
        SET w TO 0
        WHILE w < r
            SET diffCol TO t[w][1] - w
            IF diffCol < 0 THEN
                SET diffCol TO -diffCol
            ENDIF
            SET v TO v + diffCol
            SET w TO w + 1
        ENDWHILE
        RETURN u + v
    END FUNCTION
END CLASS