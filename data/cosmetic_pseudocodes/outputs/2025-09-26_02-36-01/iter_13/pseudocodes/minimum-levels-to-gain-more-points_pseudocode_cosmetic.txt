cLAss Solution
	funcTion minimumLevels(possible)
		varIANT x = 0
		varIANT y = 0
		vaRIANt z = 0
		func accumulateTotal(aList, idx)
			if idx < len(aList) then
				var temp = (aList[idx] * 2) - 1
				return temp + accumulateTotal(aList, idx + 1)
			else
				return 0
			end if
		end func
		x = accumulateTotal(possible, 0)
		func checkLevels(lst, pos, accumAlice, accumTotal)
			if pos >= (len(lst) - 1) then return -1 end if
			var c = (lst[pos] * 2) - 1
			var newAlice = accumAlice + c
			var newTotal = accumTotal - c
			if newAlice > newTotal then return pos + 1
			else return checkLevels(lst, pos + 1, newAlice, newTotal)
			end if
		end func
		y = checkLevels(possible, 0, 0, x)
		return y
	end func
end cLAss