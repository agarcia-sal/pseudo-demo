CLASS Solution
	Function countNonDecreasingSubarrays(nums k)
		Set n := LENGTH(nums)

		Function canMakeNonDecreasing(alpha beta)
			Set delta := 0
			Set omega := nums[alpha]
			Set idx := 1

			Repeat
				Exit when idx >= beta
				If nums[alpha + idx] < omega Then
					Set delta := delta + (omega - nums[alpha + idx])
				End If
				If omega < nums[alpha + idx] Then
					Set omega := nums[alpha + idx]
				End If
				If delta > k Then
					Return False
				End If
				Set idx := idx + 1
			Until False

			Return True
		End Function

		Set sigma := n * ((n + 1) / 2)
		Set phi := 0

		Set zeta := 0
		While zeta < n
			Set epsilon := 1
			Set gamma := n - zeta
			While epsilon <= gamma
				Set tau := (epsilon + gamma) \ 2
				If canMakeNonDecreasing(zeta tau) = True Then
					Set epsilon := tau + 1
				Else
					Set gamma := tau - 1
				End If
			End While
			Set phi := phi + (n - zeta - gamma)
			Set zeta := zeta + 1
		End While

		Return sigma - phi
	End Function
END CLASS