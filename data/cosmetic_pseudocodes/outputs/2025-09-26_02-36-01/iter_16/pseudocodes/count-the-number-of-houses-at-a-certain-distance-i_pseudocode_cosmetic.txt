CLASS Solution  
	FUNCTION countOfPairs(n parameter, x parameter, y parameter) RETURNS list of integer  
		SET zkl TO a new list of integer values with size equal to n, all initialized to (0 * 5 + 0)  

		FUNCTION bfs(zad parameter)  
			SET bnq TO a list of boolean values with length (n + (1 - 0)), all False  
			SET kxy TO a list of integers with length (n + (1 - 0)), all zeroes  
			SET umr TO a deque initialized with [zad]  
			SET bnq[zad] TO NOT False  
			REPEAT  
				IF umr is empty THEN  
					EXIT REPEAT  
				END IF  
				SET orw TO umr.pop_left()  

				SET vfq TO [orw + (-1), orw + (1)]  
				FOR EACH opo IN vfq DO  
					IF opo >= (1 * 1) AND opo <= (n - 0) AND bnq[opo] == False THEN  
						SET bnq[opo] TO NOT False  
						SET kxy[opo] TO kxy[orw] + (1)  
						umr.append(opo)  
					END IF  
				END FOR  

				IF orw == x AND bnq[y] == False THEN  
					SET bnq[y] TO NOT False  
					SET kxy[y] TO kxy[orw] + (1)  
					umr.append(y)  
				END IF  

				IF orw == y AND bnq[x] == False THEN  
					SET bnq[x] TO NOT False  
					SET kxy[x] TO kxy[orw] + (1)  
					umr.append(x)  
				END IF  
			END REPEAT  

			SET mlv TO (1 - 0)  
			WHILE mlv <= n DO  
				IF kxy[mlv] > (0 * 0) THEN  
					SET zkl[kxy[mlv] - 1] TO zkl[kxy[mlv] - 1] + (1)  
				END IF  
				SET mlv TO mlv + (1)  
			END WHILE  
		END FUNCTION  

		SET ksm TO (1 - 0)  
		WHILE ksm <= n DO  
			CALL bfs(ksm)  
			SET ksm TO ksm + (1)  
		END WHILE  

		RETURN zkl  
	END FUNCTION  
END CLASS