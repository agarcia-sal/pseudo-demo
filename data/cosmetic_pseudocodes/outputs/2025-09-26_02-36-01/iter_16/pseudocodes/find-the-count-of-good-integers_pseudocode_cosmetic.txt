CLASS Solution
	 FUNCTION countGoodIntegers(n integer, k integer) RETURNS integer
		 DECLARE auroxcwqgh AS LIST := []
		 DECLARE opmlrgzvn AS INTEGER := 0
		 DECLARE bpeaokytz AS SET := {}
		 DECLARE wqztcedi AS INTEGER := 10 ^ ((n - 1) \ 2)
		 DECLARE vuhmxers AS INTEGER
		 DECLARE ypkrtnezf AS STRING
		 DECLARE tqjwdcof AS STRING
		 DECLARE rqbiavztp AS DICTIONARY
		 DECLARE lnazgwfys AS INTEGER
		 DECLARE pasefqdbv AS INTEGER

		 DECLARE mcuopkhzn AS INTEGER := 0
		 WHILE mcuopkhzn < n + 1
			 auroxcwqgh.APPEND(1)
			 DECLARE hztfnapx AS INTEGER := 1
			 DECLARE vdfoueqj AS INTEGER := 2
			 DECLARE kxsozwav AS INTEGER := 1
			 WHILE vdfoueqj <= mcuopkhzn
				 SET hztfnapx = hztfnapx * kxsozwav
				 SET vdfoueqj = vdfoueqj + 1
				 SET kxsozwav = kxsozwav + 1
			 END WHILE
			 SET auroxcwqgh[mcuopkhzn] = hztfnapx
			 SET mcuopkhzn = mcuopkhzn + 1
		 END WHILE

		 WHILE opmlrgzvn < 0
			 SET opmlrgzvn = 0
		 END WHILE

		 SET opmlrgzvn = 0

		 DECLARE dwpskhfcry AS INTEGER := wqztcedi
		 WHILE dwpskhfcry <= wqztcedi * 10 - 1
			 SET ypkrtnezf = STR(dwpskhfcry)
			 DECLARE mfvgxolrb AS INTEGER := n MOD 2
			 DECLARE revypktzd AS STRING := ""
			 DECLARE kuxtpymzs AS INTEGER := LENGTH(ypkrtnezf) - 1
			 WHILE kuxtpymzs >= 0
				 SET revypktzd = revypktzd + ypkrtnezf[kuxtpymzs]
				 SET kuxtpymzs = kuxtpymzs - 1
			 END WHILE
			 SET tqjwdcof = ypkrtnezf + revypktzd[mfvgxolrb : LENGTH(revypktzd)]

			 IF (INT(tqjwdcof) MOD k) <> 0 THEN
				 SET dwpskhfcry = dwpskhfcry + 1
				 CONTINUE
			 END IF

			 DECLARE tjiydpmwz AS LIST := []
			 DECLARE frktuguja AS INTEGER := 0
			 WHILE frktuguja < LENGTH(tqjwdcof)
				 tjiydpmwz.APPEND(tqjwdcof[frktuguja])
				 SET frktuguja = frktuguja + 1
			 END WHILE

			 SET tjiydpmwz = SORT(tjiydpmwz)

			 DECLARE yndcarpmg AS STRING := ""
			 DECLARE wvnyugptak AS INTEGER := 0
			 WHILE wvnyugptak < LENGTH(tjiydpmwz)
				 SET yndcarpmg = yndcarpmg + tjiydpmwz[wvnyugptak]
				 SET wvnyugptak = wvnyugptak + 1
			 END WHILE

			 IF yndcarpmg IN bpeaokytz THEN
				 SET dwpskhfcry = dwpskhfcry + 1
				 CONTINUE
			 END IF

			 bpeaokytz.ADD(yndcarpmg)

			 SET rqbiavztp = DICTIONARY()
			 DECLARE onvjdxawf AS INTEGER := 0
			 WHILE onvjdxawf < LENGTH(yndcarpmg)
				 IF NOT (yndcarpmg[onvjdxawf] IN rqbiavztp) THEN
					 rqbiavztp[yndcarpmg[onvjdxawf]] = 0
				 END IF
				 rqbiavztp[yndcarpmg[onvjdxawf]] = rqbiavztp[yndcarpmg[onvjdxawf]] + 1
				 SET onvjdxawf = onvjdxawf + 1
			 END WHILE

			 IF ('0' IN rqbiavztp) AND (rqbiavztp['0'] > 0) THEN
				 SET lnazgwfys = n - rqbiavztp['0']
				 SET pasefqdbv = auroxcwqgh[n - 1]
				 SET res = lnazgwfys * pasefqdbv
			 ELSE
				 SET res = auroxcwqgh[n]
			 END IF

			 DECLARE cenyplxdr AS LIST := []
			 FOR EACH val IN rqbiavztp.VALUES()
				 cenyplxdr.APPEND(val)
			 END FOR

			 DECLARE ergcvutnza AS INTEGER := 0
			 WHILE ergcvutnza < LENGTH(cenyplxdr)
				 SET res = res \ auroxcwqgh[cenyplxdr[ergcvutnza]]
				 SET ergcvutnza = ergcvutnza + 1
			 END WHILE

			 SET opmlrgzvn = opmlrgzvn + res
			 SET dwpskhfcry = dwpskhfcry + 1
		 END WHILE

		 RETURN opmlrgzvn
	 END FUNCTION
END CLASS