CLASS Solution  
    FUNCTION countOfPairs(n, x, y)  
          IF NOT (y GREATER THAN OR EQUAL TO x) THEN  
              SET zeta TO x  
              SET x TO y  
              SET y TO zeta  
          END IF  
          
          FUNCTION bfs(omega)  
                SET alpha TO array OF size (n + 1) FILLED WITH False  
                SET beta TO array OF size (n + 1) FILLED WITH 0  
                SET gamma TO queue WITH omega ENQUEUED  
                SET alpha[omega] TO True  
                
                WHILE NOT (gamma IS EMPTY) DO  
                    SET delta TO gamma DEQUEUE FRONT  
                    FOR EACH epsilon IN [delta - 1, delta + 1] DO  
                        IF ((epsilon GREATER THAN OR EQUAL TO 1) AND (epsilon LESS THAN OR EQUAL TO n)) AND (alpha[epsilon] EQUALS False) THEN  
                            SET alpha[epsilon] TO True  
                            SET beta[epsilon] TO beta[delta] PLUS 1  
                            gamma ENQUEUE epsilon  
                        END IF  
                    END FOR  
                    
                    IF delta EQUALS x AND alpha[y] EQUALS False THEN  
                        SET alpha[y] TO True  
                        SET beta[y] TO beta[delta] PLUS 1  
                        gamma ENQUEUE y  
                    ELSE IF delta EQUALS y AND alpha[x] EQUALS False THEN  
                        SET alpha[x] TO True  
                        SET beta[x] TO beta[delta] PLUS 1  
                        gamma ENQUEUE x  
                    END IF  
                END WHILE  
                
                RETURN beta SLICE from 1 TO LENGTH(beta)  
          END FUNCTION  
          
          SET eta TO array OF size n FILLED WITH 0  
          SET theta TO 1  
          WHILE theta LESS THAN OR EQUAL TO n DO  
                SET iota TO bfs(theta)  
                FOR EACH kappa IN iota DO  
                      IF kappa GREATER THAN 0 THEN  
                          SET lambda TO kappa MINUS 1  
                          SET eta[lambda] TO eta[lambda] PLUS 1  
                      END IF  
                END FOR  
                SET theta TO theta PLUS 1  
          END WHILE  
          
          RETURN eta  
    END FUNCTION  
END CLASS