CLASS Solution
    FUNCTION maximumTotalCost(nums)
                
                SET _0_len TO LENGTH OF nums
        IF 1 = _0_len
            RETURN nums[1]
        ELSE
            
            SET _1_dp TO LIST WITH _0_len ITEMS FILLED WITH 0
            
            SET _1_dp[_0_len - 1] TO nums[_0_len - 1]
            
            SET _i__idx TO _0_len - 2
            WHILE _i__idx >= 0
                            
                SET _val_acc TO nums[_i__idx]
                IF _val_acc > _1_dp[_i__idx + 1]
                    SET _1_dp[_i__idx] TO _val_acc
                ELSE
                    SET _1_dp[_i__idx] TO _1_dp[_i__idx + 1] + _val_acc
                END IF
                
                SET _j__idx TO _i__idx + 1
                REPEAT
                    SET _pow_exponent TO _j__idx - _i__idx
                    SET _sign_val TO 1
                    IF (_pow_exponent MOD 2) = 1 
                        SET _sign_val TO -1
                    END IF
                    
                    SET _val_acc TO _val_acc + nums[_j__idx] * _sign_val
                    
                    IF (_j__idx + 1) < _0_len
                        IF _1_dp[_i__idx] < _val_acc + _1_dp[_j__idx + 1]
                            SET _1_dp[_i__idx] TO _val_acc + _1_dp[_j__idx + 1]
                        END IF
                    ELSE
                        IF _1_dp[_i__idx] < _val_acc
                            SET _1_dp[_i__idx] TO _val_acc
                        END IF
                    END IF
                    
                    SET _j__idx TO _j__idx + 1
                UNTIL _j__idx >= _0_len
                
                SET _i__idx TO _i__idx - 1
            END WHILE
            
            RETURN _1_dp[0]
        END IF
    END FUNCTION
END CLASS