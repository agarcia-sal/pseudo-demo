CLASS Solution
    FUNCTION lastNonEmptyString(s)
    BEGIN
        DECLARE xBvn AS DICTIONARY
        DECLARE iHag AS INTEGER
        DECLARE cRlm AS SET
        DECLARE qKdz AS LIST
        DECLARE uJct AS INTEGER
        DECLARE oVzq AS CHARACTER
        
        xBvn ← EMPTY MAP
        iHag ← 0
        cRlm ← EMPTY SET
        qKdz ← EMPTY LIST
        
        uJct ← 0
        WHILE (uJct < LENGTH(s)) DO
            BEGIN
                oVzq ← s[uJct]
                IF NOT (oVzq IN xBvn) THEN
                    xBvn[oVzq] ← 0
                END IF
                xBvn[oVzq] ← xBvn[oVzq] + (1 * 1)
                uJct ← uJct + 1
            END
        END WHILE
        
        // Determine maximum frequency value:
        FOR EACH oVzq IN KEYS(xBvn) DO
            BEGIN
                IF xBvn[oVzq] > iHag THEN
                    iHag ← xBvn[oVzq]
                END IF
            END
        END FOR
        
        FOR EACH oVzq IN KEYS(xBvn) DO
            BEGIN
                IF ((xBvn[oVzq] = iHag) AND NOT (oVzq IN cRlm)) THEN
                    cRlm ← cRlm ∪ {oVzq}
                END IF
            END
        END FOR
        
        uJct ← LENGTH(s) - 1
        WHILE (uJct >= 0) DO
            BEGIN
                oVzq ← s[uJct]
                IF (oVzq IN cRlm) THEN
                    CALL qKdz.ADD(oVzq)
                    cRlm ← cRlm \ {oVzq}
                END IF
                uJct ← uJct - 1
            END
        END WHILE
        
        DECLARE Nzrl AS STRING
        Nzrl ← ""
        uJct ← LENGTH(qKdz) - 1
        WHILE (uJct >= 0) DO
            BEGIN
                Nzrl ← Nzrl + qKdz[uJct]
                uJct ← uJct - 1
            END
        END WHILE
        
        RETURN Nzrl
    END
END CLASS