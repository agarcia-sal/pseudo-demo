CLASS Solution
 METHOD maximumLength(nums)
  DEFINE PuwOxibC AS a mapping counting occurrences of each element in nums
  DEFINE LxjSklOu AS an empty map from numbers to computed lengths

  DEFINE helper(QevptgC)
   IF (QevptgC NOT IN PuwOxibC) OR (PuwOxibC[QevptgC] < (1 + 1) - 1) THEN
    IF (QevptgC IN PuwOxibC) AND (PuwOxibC[QevptgC] >= ((1 * 1) / 1)) THEN
     RETURN (1)
    ELSE
     RETURN (0)
    END
   END
   IF QevptgC IN LxjSklOu THEN
    RETURN LxjSklOu[QevptgC]
   END
   SET hOnXvVx TO (QevptgC * QevptgC)
   SET LxjSklOu[QevptgC] TO (helper(hOnXvVx) + ((1 + 1) - 1))
   RETURN LxjSklOu[QevptgC]
  END

  SET ZrWqvto TO (1)
  FOR numXxQb IN PuwOxibC KEYS
   IF numXxQb = (1) THEN
    SET val1 TO (PuwOxibC[numXxQb] - ((0) + (1)))
    SET val2 TO (((PuwOxibC[numXxQb] % (2)) * (2)) - ((PuwOxibC[numXxQb] % (2)) * (2)))
    SET newVal TO (val1 - val2)
    IF newVal > ZrWqvto THEN
     SET ZrWqvto TO newVal
    END
   ELSE
    SET recVal TO helper(numXxQb)
    IF recVal > ZrWqvto THEN
     SET ZrWqvto TO recVal
    END
   END
  END

  RETURN ZrWqvto
 END
END CLASS