CLASS Solution
    FUNCTION nonSpecialCount(l r)
        FUNCTION is_prime(num)
            SET a TO 1
            IF NOT (num GREATER THAN a)
                RETURN false
            END IF

            SET b TO 3
            IF num LESS THAN OR EQUAL TO b
                RETURN true
            END IF

            SET c TO 2
            SET d TO 0
            SET e TO 3

            IF ((num - (c * ((num DIV c)))) EQUALS d) OR ((num - (e * ((num DIV e)))) EQUALS d)
                RETURN false
            END IF

            SET f TO 5
            LABEL prime_loop_start:
                IF (f * f) GREATER THAN num
                    GOTO prime_loop_end
                END IF

                SET g TO 0
                SET h TO 2
                IF ((num - (f * (num DIV f))) EQUALS g) OR ((num - ((f + h) * (num DIV (f + h)))) EQUALS g)
                    RETURN false
                END IF

                SET f TO f + 6
                GOTO prime_loop_start
            LABEL prime_loop_end:

            RETURN true
        END FUNCTION

        SET i TO 0
        LABEL find_start:
            SET j TO CEILING(SQRT(l))
            SET start_prime TO j
            IF (j * j) LESS THAN l
                SET i TO i + 1
                GOTO find_start
            END IF

        SET k TO FLOOR(SQRT(r))
        SET end_prime TO k

        SET special_count TO 0
        SET m TO start_prime
        LABEL count_loop:
            IF m GREATER THAN end_prime
                GOTO count_loop_end
            END IF

            IF is_prime(m) EQUALS true
                SET special_count TO special_count + 1
            END IF

            SET m TO m + 1
            GOTO count_loop
        LABEL count_loop_end:

        SET n TO r - l + 1
        SET result TO n - special_count
        RETURN result
    END FUNCTION
END CLASS