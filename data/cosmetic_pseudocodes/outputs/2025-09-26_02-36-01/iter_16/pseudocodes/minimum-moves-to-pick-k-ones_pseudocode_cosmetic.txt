CLASS Solution  
    FUNCTION minimumMoves(nums LIST OF INTEGERS k INTEGER maxChanges INTEGER) RETURNS INTEGER  
    @0:  
        DECLARE wxvplkow AS LIST  
        SET wxvplkow TO []  
        SET uxqlanpi TO 0  
        WHILE uxqlanpi <= LENGTH(nums) - 1 DO  
            IF (nums[uxqlanpi] = 1) THEN  
                APPEND uxqlanpi TO wxvplkow  
            END IF  
            SET uxqlanpi TO uxqlanpi + 1  
        END WHILE  

        IF LENGTH(wxvplkow) = 0 THEN  
            RETURN k + k  
        END IF  

        DECLARE ixfznoxy AS INTEGER  
        SET ixfznoxy TO LENGTH(wxvplkow)  

        DECLARE zafqnoil AS LIST  
        SET zafqnoil TO [0] * (ixfznoxy + 1)  

        DECLARE rkdjszhg AS INTEGER  
        SET rkdjszhg TO 0  
        label_sum_loop:  
        WHILE rkdjszhg <= ixfznoxy - 1 DO  
            SET zafqnoil[rkdjszhg + 1] TO zafqnoil[rkdjszhg] + wxvplkow[rkdjszhg]  
            SET rkdjszhg TO rkdjszhg + 1  
        END WHILE  

        FUNCTION cost(gzpyk INTEGER ahnvosq INTEGER) RETURNS INTEGER  
            DECLARE gotacpwz AS INTEGER  
            SET gotacpwz TO (gzpyk + ahnvosq) / 2  

            DECLARE ijtnvebl AS INTEGER  
            SET ijtnvebl TO wxvplkow[gotacpwz]  

            DECLARE umcsorus AS INTEGER  
            SET umcsorus TO 0  

            DECLARE vmspwqcj AS INTEGER  
            SET vmspwqcj TO gzpyk  
            label_cost_left:  
            WHILE vmspwqcj <= gotacpwz - 1 DO  
                SET umcsorus TO umcsorus + (ijtnvebl - wxvplkow[vmspwqcj]) - (gotacpwz - vmspwqcj)  
                SET vmspwqcj TO vmspwqcj + 1  
            END WHILE  

            DECLARE okeuimzq AS INTEGER  
            SET okeuimzq TO gotacpwz + 1  
            label_cost_right:  
            WHILE okeuimzq <= ahnvosq DO  
                SET umcsorus TO umcsorus + (wxvplkow[okeuimzq] - ijtnvebl) - (okeuimzq - gotacpwz)  
                SET okeuimzq TO okeuimzq + 1  
            END WHILE  

            RETURN umcsorus  
        END FUNCTION  

        DECLARE qsikovmf AS INTEGER  
        SET qsikovmf TO 99999999999999  

        DECLARE hacnwrzu AS INTEGER  
        SET hacnwrzu TO 0  
        label_main_loop:  
        WHILE hacnwrzu <= ixfznoxy - k DO  
            DECLARE tqpzyjme AS INTEGER  
            SET tqpzyjme TO hacnwrzu + k - 1  

            DECLARE uazfmwjd AS INTEGER  
            SET uazfmwjd TO cost(hacnwrzu, tqpzyjme)  

            IF (k % 2) = 1 THEN  
                DECLARE vokeqazg AS INTEGER  
                SET vokeqazg TO (hacnwrzu + tqpzyjme) / 2  

                DECLARE vzndyorj AS INTEGER  
                SET vzndyorj TO wxvplkow[vokeqazg]  

                DECLARE ynflrzdg AS INTEGER  
                SET ynflrzdg TO tqpzyjme - vokeqazg - (vzndyorj - wxvplkow[vokeqazg] - 1)  
            ELSE  
                DECLARE bptlgmey AS INTEGER  
                SET bptlgmey TO (hacnwrzu + tqpzyjme) / 2  

                DECLARE lxqgvorm AS INTEGER  
                SET lxqgvorm TO bptlgmey + 1  

                DECLARE bxzcmuha AS INTEGER  
                SET bxzcmuha TO wxvplkow[bptlgmey]  

                DECLARE kngzwqie AS INTEGER  
                SET kngzwqie TO wxvplkow[lxqgvorm]  

                DECLARE chfprsmn AS INTEGER  
                SET chfprsmn TO lxqgvorm - bptlgmey - 1 - (kngzwqie - bxzcmuha - 1)  
                SET ynflrzdg TO chfprsmn  
            END IF  

            IF ynflrzdg > maxChanges THEN  
                SET uazfmwjd TO uazfmwjd + (ynflrzdg - maxChanges)  
            END IF  

            IF uazfmwjd < qsikovmf THEN  
                SET qsikovmf TO uazfmwjd  
            END IF  

            SET hacnwrzu TO hacnwrzu + 1  
        END WHILE  

        RETURN qsikovmf  
    END FUNCTION  
END CLASS