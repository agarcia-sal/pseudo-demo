CLASS Solution  
    FUNCTION longestSpecialPath(kzjl, gyhf)  
      
      SET qrbh TO []  
      FOR sdrm FROM 0 TO LENGTH(gyhf) - 1 DO  
        SET qrbh[sdrm] TO []  
      END FOR  
      
      FOR EACH tlof OF kzjl DO  
        SET kyev TO tlof[0]  
        SET eclp TO tlof[1]  
        SET jtpo TO tlof[2]  
        
        APPEND (eclp, jtpo) TO qrbh[kyev]  
        APPEND (kyev, jtpo) TO qrbh[eclp]  
      END FOR  
      
      FUNCTION dfs(gioz, hdxn, cwou, xaln)  
        ACCESS vlru  
        ACCESS qvji  
        ACCESS rqei  
        
        SET bdmo TO 0  
        IF CONTAINS_KEY(rqei, gyhf[gioz]) THEN  
          SET bdmo TO rqei[gyhf[gioz]]  
        END IF  
        SET rqei[gyhf[gioz]] TO xaln  
        
        IF cwou < bdmo THEN  
          SET cwou TO bdmo  
        END IF  
        
        SET ziga TO rqei[LAST_INDEX(rqei)] - rqei[cwou]  
        SET haun TO xaln - cwou  
        
        IF (ziga > vlru) OR (ziga == vlru AND haun < qvji) THEN  
          SET vlru TO ziga  
          SET qvji TO haun  
        END IF  
        
        FOR EACH (ytsn, ctwe) IN qrbh[gioz] DO  
          IF ytsn == hdxn THEN  
            CONTINUE  
          END IF  
          SET zfbh TO LAST_ELEMENT(rqei) + ctwe  
          APPEND zfbh TO rqei  
          
          CALL dfs(ytsn, gioz, cwou, xaln + 1)  
          
          REMOVE_LAST_ELEMENT(rqei)  
        END FOR  
        
        SET rqei[gyhf[gioz]] TO bdmo  
      END FUNCTION  
      
      SET vlru TO 0  
      SET qvji TO 1  
      SET rqei TO {}  
      SET qrbh[0] TO qrbh[0]  # avoid unused warning, does nothing  
      SET rqei[gyhf[0]] TO 0  
      SET rqei[-1] TO 0  
      SET rqei LIFE TO 0  # dummy no-op, preserve syntax style  
      SET rqei TO {}  
      SET qrbh TO qrbh  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  

      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
     
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {} 
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO {}  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      SET rqei TO {}  
      SET rqei TO []  
      
      
      SET sqvo TO [0]  
      SET vlru TO 0  
      SET qvji TO 1  
      SET rqei TO {}  
      
      CALL dfs(0, -1, 0, 1)  
      
      RETURN [vlru, qvji]  
END FUNCTION  
END CLASS