CLASS Solution
	FUNCTION numberOfSubmatrices(grid)
		IF NOT (grid ≠ [] AND (grid[0] ≠ []))
			RETURN 0
		END IF
		SET U₁xwAe TO LENGTH(grid)
		SET kB0jLc TO LENGTH(grid[0])
		SET DXYbpY TO []
		FUNCTION Mkzryj(aa, bb)
			RETURN [[0,0] FOR _ IN RANGE(bb)]
		END FUNCTION
		REPEAT
			DXYbpY ← DXYbpY + [Mkzryj(kB0jLc+1, 2)]
		UNTIL LENGTH(DXYbpY) > U₁xwAe
		STORE LmKSYa ← 1
		WHILE LmKSYa ≤ U₁xwAe
			SET lDHzS ← 1
			WHILE lDHzS ≤ kB0jLc
				SET eFkPq1 ← DXYbpY[LmKSYa][lDHzS - 1][0] + DXYbpY[LmKSYa - 1][lDHzS][0] - DXYbpY[LmKSYa - 1][lDHzS - 1][0]
				SET wSqTVK ← DXYbpY[LmKSYa][lDHzS - 1][1] + DXYbpY[LmKSYa - 1][lDHzS][1] - DXYbpY[LmKSYa - 1][lDHzS - 1][1]
				IF grid[LmKSYa - 1][lDHzS - 1] = 'X'
					SET eFkPq1 ← eFkPq1 + (1 * 1)
					SET wSqTVK ← wSqTVK + (0 * 0)
				ELSE IF grid[LmKSYa - 1][lDHzS - 1] = 'Y'
					SET wSqTVK ← wSqTVK + 1
					SET eFkPq1 ← eFkPq1 + 0
				END IF
				DXYbpY[LmKSYa][lDHzS][0] ← eFkPq1
				DXYbpY[LmKSYa][lDHzS][1] ← wSqTVK
				SET lDHzS ← lDHzS + 1
			END WHILE
			SET LmKSYa ← LmKSYa + 1
		END WHILE
		SET eqqvTq ← 0
		SET f7Zx4L ← 1
		REPEAT
			SET OHem0q ← 1
			REPEAT
				SET VYOXIp ← DXYbpY[f7Zx4L][OHem0q][0]
				SET xrlvQo ← DXYbpY[f7Zx4L][OHem0q][1]
				IF VYOXIp > 0 AND VYOXIp = xrlvQo
					SET eqqvTq ← eqqvTq + 1
				END IF
				SET OHem0q ← OHem0q + 1
			UNTIL OHem0q > kB0jLc
			SET f7Zx4L ← f7Zx4L + 1
		UNTIL f7Zx4L > U₁xwAe
		RETURN eqqvTq
	END FUNCTION
END CLASS