CLASS Solution
    FUNCTION maxHammingDistances(nums LIST OF INTEGER m INTEGER) RETURNS LIST OF INTEGER
        SET alpha TO EMPTY_LIST
        SET beta TO 0
        WHILE beta < LENGTH(nums)
            SET gamma TO ""
            SET delta TO 0
            REPEAT
                IF (LENGTH(BINARY_REPRESENTATION(nums[beta])) + delta) < m THEN
                    SET gamma TO "0" + gamma
                    SET delta TO delta + 1
                ELSE
                    EXIT
                END IF
            UNTIL FALSE
            SET epsilon TO BINARY_REPRESENTATION(nums[beta])
            SET zeta TO gamma + epsilon
            APPEND zeta TO alpha
            SET beta TO beta + 1
        END WHILE

        SET eta TO EMPTY_LIST

        FUNCTION hamming_distance(bin1 STRING bin2 STRING) RETURNS INTEGER
            SET theta TO 0
            SET i TO 0
            WHILE i < LENGTH(bin1)
                IF NOT (bin1[i] = bin2[i]) THEN
                    SET theta TO theta + 1
                END IF
                SET i TO i + 1
            END WHILE
            RETURN theta
        END FUNCTION

        SET i1 TO 0
        WHILE i1 < LENGTH(nums)
            SET max_dist_i TO 0
            SET i2 TO 0
            WHILE i2 < LENGTH(nums)
                IF NOT (i1 = i2) THEN
                    SET dist_i TO hamming_distance(alpha[i1], alpha[i2])
                    IF dist_i > max_dist_i THEN
                        SET max_dist_i TO dist_i
                    END IF
                END IF
                SET i2 TO i2 + 1
            END WHILE
            APPEND max_dist_i TO eta
            SET i1 TO i1 + 1
        END WHILE

        RETURN eta
    END FUNCTION
END CLASS