CLASS Solution 
    FUNCTION minimumSubstringsInPartition(s) 
        FUNCTION dfs(p) 
            IF NOT (p < LENGTH(s)) THEN 
                RETURN 0 
            END IF 
            SET mapX TO empty map defaulting 0 
            SET mapY TO empty map defaulting 0 
            SET res TO LENGTH(s) - p 
            SET q TO p 
            WHILE q < LENGTH(s) 
                SET ch TO s[q] 
                IF mapX CONTAINS ch AND mapX[ch] != 0 THEN 
                    SET cntPrev TO mapX[ch] 
                    SET mapY[cntPrev] TO mapY[cntPrev] - 1 
                    IF mapY[cntPrev] == 0 THEN 
                        DELETE mapY[cntPrev] 
                    END IF 
                END IF 
                SET currCount TO (mapX[ch] + 1) 
                SET mapX[ch] TO currCount 
                SET mapY[currCount] TO (mapY[currCount] + 1) 
                IF LENGTH(KEYS(mapY)) == 1 THEN 
                    SET candidate TO 1 + dfs(q + 1) 
                    IF candidate < res THEN 
                        SET res TO candidate 
                    END IF 
                END IF 
                SET q TO q + 1 
            END WHILE 
            RETURN res 
        END FUNCTION 
        SET lenS TO LENGTH(s) 
        RETURN dfs(0) 
    END FUNCTION 
END CLASS