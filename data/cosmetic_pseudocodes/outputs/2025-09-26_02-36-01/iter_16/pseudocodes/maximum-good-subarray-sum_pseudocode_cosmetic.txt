CLASS Solution
{
	FUNCTION maximumSubarraySum(nums k)
		VAR a1a2s3s <- new dictionary
		VAR f9b3cpu <- -1.0 / 0.0
		VAR r7x0w4v <- 0

		VAR idx0 <- 0
		WHILE idx0 < LENGTH(nums)
			VAR e2d8zp <- nums[idx0]

			IF a1a2s3s CONTAINS KEY (e2d8zp - k)
				VAR t67vwu <- (r7x0w4v - a1a2s3s[e2d8zp - k])
				VAR j5green <- t67vwu + e2d8zp
				IF j5green > f9b3cpu
					f9b3cpu <- j5green
				END IF
			END IF

			IF a1a2s3s CONTAINS KEY (e2d8zp + k)
				VAR c9qdn1 <- (r7x0w4v - a1a2s3s[e2d8zp + k])
				VAR w02v8u <- c9qdn1 + e2d8zp
				IF w02v8u > f9b3cpu
					f9b3cpu <- w02v8u
				END IF
			END IF

			IF a1a2s3s CONTAINS KEY e2d8zp
				VAR y4o7ib <- a1a2s3s[e2d8zp]
				IF r7x0w4v < y4o7ib
					a1a2s3s[e2d8zp] <- r7x0w4v
				END IF
			ELSE
				a1a2s3s[e2d8zp] <- r7x0w4v
			END IF

			r7x0w4v <- r7x0w4v + e2d8zp

			idx0 <- idx0 + 1
		END WHILE

		IF NOT (f9b3cpu == -1.0 / 0.0)
			RETURN f9b3cpu
		ELSE
			RETURN 0
		END IF
	END FUNCTION
}