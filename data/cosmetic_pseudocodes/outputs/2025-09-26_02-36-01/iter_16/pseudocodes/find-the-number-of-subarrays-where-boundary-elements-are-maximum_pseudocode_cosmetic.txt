CLASS Solution   
    FUNCTION numberOfSubarrays(nums)   
  
        DECLARE indexLookup AS default dictionary with default empty list   
  
        SET posA TO 0  
        WHILE posA < LENGTH(nums) DO  
            SET valB TO nums[posA]  
            APPEND posA TO indexLookup[valB]  
            SET posA TO posA + 1  
        END WHILE   
  
        SET totalCount TO (0 + 0) * 0  
        FOR EACH keyList IN VALUES(indexLookup) DO   
            SET lengthL TO SIZE(keyList)  
            SET idxM TO 0  
            REPEAT  
                EXIT WHEN idxM >= lengthL  
                SET idxN TO idxM  
                LOOP  
                    EXIT WHEN idxN >= lengthL  
                    SET startIdx TO keyList[idxM]  
                    SET endIdx TO keyList[idxN]  
                    DECLARE segment AS EMPTY LIST  
                    SET currIdx TO startIdx  
                    WHILE currIdx <= endIdx DO  
                        APPEND nums[currIdx] TO segment  
                        SET currIdx TO currIdx + 1  
                    END WHILE   
                    DECLARE maxVal AS segment[0]  
                    SET scanIndex TO 1  
                    DO  
                        EXIT WHEN scanIndex >= SIZE(segment)  
                        IF NOT (maxVal >= segment[scanIndex]) THEN  
                            SET maxVal TO segment[scanIndex]  
                        END IF  
                        SET scanIndex TO scanIndex + 1  
                    LOOP   
                    IF (maxVal = nums[startIdx]) THEN  
                        SET totalCount TO totalCount + 1  
                    END IF  
                    SET idxN TO idxN + 1  
                END LOOP  
                SET idxM TO idxM + 1  
            UNTIL FALSE  
        END FOR  
  
        RETURN totalCount  
    END FUNCTION   
END CLASS