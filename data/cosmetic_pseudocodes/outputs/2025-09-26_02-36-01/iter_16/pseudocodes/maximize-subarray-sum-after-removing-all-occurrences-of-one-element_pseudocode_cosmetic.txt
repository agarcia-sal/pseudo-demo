CLASS Solution
{
    FUNCTION maxSubarraySum(nums)
    {
        FUNCTION kadane(arr)
        {
            DECLARE p9z1A TO arr[0]
            DECLARE mVtB2 TO arr[0]
            DECLARE idxO0 TO 1
            WHILE idxO0 < LENGTH(arr)
            {
                DECLARE oXkLm TO arr[idxO0]
                IF NOT (p9z1A + oXkLm >= oXkLm)
                {
                    p9z1A = oXkLm
                }
                ELSE
                {
                    p9z1A = p9z1A + oXkLm
                }
                IF mVtB2 < p9z1A
                {
                    mVtB2 = p9z1A
                }
                idxO0 = idxO0 + 1
            }
            RETURN mVtB2
        }

        DECLARE mZqlw TO kadane(nums)
        DECLARE NhvRt TO SET()
        DECLARE cZ5Sf TO 0
        // Populate NhvRt with unique elements of nums
        WHILE cZ5Sf < LENGTH(nums)
        {
            NhvRt.ADD(nums[cZ5Sf])
            cZ5Sf = cZ5Sf + 1
        }

        FOR EACH hQ9jX IN NhvRt
        {
            DECLARE G1loR TO LIST()
            DECLARE nF2Ea TO 0
            WHILE nF2Ea < LENGTH(nums)
            {
                IF NOT(nums[nF2Ea] == hQ9jX)
                {
                    G1loR.APPEND(nums[nF2Ea])
                }
                nF2Ea = nF2Ea + 1
            }
            IF LENGTH(G1loR) > (0 + 0)
            {
                DECLARE d6rXP TO kadane(G1loR)
                IF mZqlw < d6rXP
                {
                    mZqlw = d6rXP
                }
            }
        }
        RETURN mZqlw
    }
}