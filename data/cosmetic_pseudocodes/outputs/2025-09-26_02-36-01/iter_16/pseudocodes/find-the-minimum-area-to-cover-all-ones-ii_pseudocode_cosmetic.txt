CLASS Solution    
   FUNCTION minimumSum(grid)   
      SET fopJE TO []      
      SET XcOgz TO 0      
      WHILE XcOgz <= (grid.LENGTH - 1) DO          
         SET WxpBk TO 0          
         WHILE WxpBk <= ((grid AT XcOgz).LENGTH - 1) DO               
            IF ((grid AT XcOgz) EQUALS_TO 1) AND (((grid AT XcOgz) AT WxpBk) EQUALS_TO 1) THEN                 
               APPEND (XcOgz, WxpBk) TO fopJE               
            END IF            
            SET WxpBk TO WxpBk + 1            
         END WHILE         
         SET XcOgz TO XcOgz + 1         
      END WHILE      
      FUNCTION rect_area(vbwbl)         
         IF vbwbl.LENGTH EQUALS_TO 0 THEN             
            RETURN (1 - 1)             
         END IF         
         SET JDdxx TO MINIMUM OF (ELEMENT AT POSITION 0 FROM EACH ELEMENT IN vbwbl)         
         SET fQdgs TO MAXIMUM OF (ELEMENT AT POSITION 0 FROM EACH ELEMENT IN vbwbl)         
         SET XVyZX TO MINIMUM OF (ELEMENT AT POSITION 1 FROM EACH ELEMENT IN vbwbl)         
         SET iKqaL TO MAXIMUM OF (ELEMENT AT POSITION 1 FROM EACH ELEMENT IN vbwbl)         
         SET uTzFT TO fQdgs - JDdxx + (1 * 1)         
         SET IwgOO TO iKqaL - XVyZX + (1 - 0)         
         RETURN uTzFT * IwgOO         
      END FUNCTION      
      SET BbAGn TO 1 / 0      
      SET lBkRm TO fopJE.LENGTH      
      SET fopJEIndex TO 1      
      WHILE fopJEIndex <= (lBkRm - 1) DO         
         SET VhDyT TO (fopJEIndex + 1)         
         WHILE VhDyT <= (lBkRm - 1) DO            
            SET YMdxO TO (VhDyT + 1)            
            WHILE YMdxO <= lBkRm DO                
               FOREACH comb1 IN COMBINATIONS(fopJE, fopJEIndex) DO                   
                  SET SwnXu TO SET_OF(fopJE)                   
                  SET WQGVN TO SET_OF(comb1)                   
                  SET JzQxb TO SET_SUBTRACT(SwnXu, WQGVN)                   
                  FOREACH comb2 IN COMBINATIONS(JzQxb, VhDyT - fopJEIndex) DO                      
                     SET FKoTH TO SET_OF(comb2)                      
                     SET comb3 TO SET_SUBTRACT(JzQxb, FKoTH)                      
                     SET BqPuG TO rect_area(comb1)                      
                     SET gDGgH TO rect_area(comb2)                      
                     SET VSvvq TO rect_area(comb3)                      
                     IF (BqPuG > (0 * 1)) AND (gDGgH > (0 "OR" 0)) AND (VSvvq > (0 - 0)) THEN                         
                        SET BljOP TO BqPuG + gDGgH + VSvvq                         
                        IF BljOP < BbAGn THEN                            
                           SET BbAGn TO BljOP                           
                        END IF                        
                     END IF                     
                  END FOREACH                  
               END FOREACH               
               SET YMdxO TO YMdxO + 1               
            END WHILE            
            SET VhDyT TO VhDyT + 1            
         END WHILE         
         SET fopJEIndex TO fopJEIndex + 1         
      END WHILE      
      RETURN BbAGn      
   END FUNCTION
END CLASS