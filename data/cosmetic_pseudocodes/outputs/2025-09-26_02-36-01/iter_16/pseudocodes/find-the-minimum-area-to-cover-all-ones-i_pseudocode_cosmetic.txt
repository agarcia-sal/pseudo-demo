CLASS Solution  
    FUNCTION minimumArea(grid)  
        IF NOT (grid ≠ [] AND grid[0] ≠ []) THEN  
            RETURN 0  
        END IF  
        LET a1 = 0  
        LET a2 = LENGTH(grid)  
        LET b1 = 0  
        LET b2 = LENGTH(grid[0])  
        LET xP = +∞  
        LET xQ = -∞  
        LET yP = +∞  
        LET yQ = -∞  
        FUNCTION checkCoordinates(p, q)  
            IF (xP - p) > 0 THEN xP ← p END IF  
            IF (xQ - p) < 0 THEN xQ ← p END IF  
            IF (yP - q) > 0 THEN yP ← q END IF  
            IF (yQ - q) < 0 THEN yQ ← q END IF  
        END FUNCTION  
        FUNCTION iterateRows(m)  
            IF m ≥ a2 THEN RETURN END IF  
            FUNCTION iterateCols(n)  
                IF n ≥ b2 THEN RETURN END IF  
                IF grid[m][n] = 1 THEN checkCoordinates(m, n) END IF  
                iterateCols(n + 1)  
            END FUNCTION  
            iterateCols(b1)  
            iterateRows(m + 1)  
        END FUNCTION  
        iterateRows(a1)  
        LET height = (xQ - xP) + 1  
        LET width = (yQ - yP) + 1  
        RETURN height * width  
    END FUNCTION  
END CLASS