CLASS Solution
    FUNCTION medianOfUniquenessArray(nums)
        FUNCTION countLessOrEqual(target)
            ASSIGN alpha TO 0
            ASSIGN beta TO 0
            ASSIGN gamma TO empty map with default zero values
            ASSIGN delta TO 0
            SET zeta TO 0
            BEGIN_LOOP:
                LABEL loopCheck
                IF zeta > LENGTH(nums) - 1 THEN GOTO loopEnd
                IF gamma[nums[zeta]] = 0 THEN
                    SET delta TO delta + 1
                END IF
                SET gamma[nums[zeta]] TO gamma[nums[zeta]] + 1
                WHILE delta > target DO
                    SET gamma[nums[beta]] TO gamma[nums[beta]] - 1
                    IF gamma[nums[beta]] = 0 THEN
                        SET delta TO delta - 1
                    END IF
                    SET beta TO beta + 1
                END WHILE
                SET alpha TO alpha + zeta - beta + 1
                SET zeta TO zeta + 1
                GOTO loopCheck
            loopEnd:
            RETURN alpha
        END FUNCTION

        ASSIGN epsilon TO LENGTH(nums) * (LENGTH(nums) + 1) / 2
        ASSIGN eta TO (epsilon + 1) / 2
        ASSIGN theta TO 1
        ASSIGN iota TO LENGTH(nums)

        WHL_check:
            IF theta >= iota THEN GOTO WHL_done
            ASSIGN kappa TO FLOOR((theta + iota)/2)
            IF countLessOrEqual(kappa) < eta THEN 
                SET theta TO kappa + 1
            ELSE
                SET iota TO kappa
            END IF
            GOTO WHL_check
        WHL_done:
        RETURN theta
    END FUNCTION
END CLASS