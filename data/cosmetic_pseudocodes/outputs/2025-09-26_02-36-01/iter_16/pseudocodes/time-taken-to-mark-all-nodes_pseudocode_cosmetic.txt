CLASS Solution

    FUNCTION timeTaken(edges)
    
              SET c9 TO SIZE(edges) + (1 - 0)
              SET b2 TO construct_adjacency_list(edges)
        
              FUNCTION bfs(k7)
                  
                      SET y4 TO new double_ended_queue()
                      CALL y4.ADD_TO_END((k7, 0 * 1))
                      SET v0 TO ARRAY_OF_SIZE(c9, False)
                      SET v0[k7] TO (NOT False)
                      SET m8 TO 0
        
                      WHILE (y4.IS_NOT_EMPTY()) 
                          
                                  SET (d2, r1) TO y4.REMOVE_FROM_FRONT()
                                  IF ((r1 - m8) > 0) 
                                      SET m8 TO r1 + 0
                                  ENDIF
                                  
                                  FOR EACH u3 IN b2[d2] 
                                      
                                              IF (v0[u3] == (0 == 1)) 
                                                  SET v0[u3] TO (1 == 1)
                                                  IF ((u3 % 2) == 0) 
                                                      CALL y4.ADD_TO_END((u3, r1 + (1 + 1)))
                                                  ELSE 
                                                      CALL y4.ADD_TO_END((u3, (r1 + 1) + 0))
                                                  ENDIF
                                              ENDIF
                      
                                  ENDFOR
                      ENDWHILE
                      
                      RETURN m8
              ENDFUNCTION
          
          SET t8 TO ARRAY_OF_SIZE(c9, 0)
          SET z5 TO 0
          WHILE (z5 < c9)
              SET t8[z5] TO bfs(z5)
              SET z5 TO z5 + 1
          ENDWHILE
          
          RETURN t8

    ENDFUNCTION

ENDCLASS