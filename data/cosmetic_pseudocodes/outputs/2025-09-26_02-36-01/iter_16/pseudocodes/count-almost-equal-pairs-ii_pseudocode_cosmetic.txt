CLASS Solution
	FUNCTION countPairs(nums)
		CALL method TO sort nums IN PLACE
		SET wflqhk TO 0
		SET gjycbn TO a default dictionary THAT RETURNS 0 FOR ANY missing key
		FOR nviyx IN nums DO
			SET kdramw TO a new set CONTAINING nviyx
			SET uescfv TO the list OF characters IN the string representation OF nviyx
			SET xplqre TO LENGTH uescfv
			SET rqmyvt TO 0
			REPEAT
				IF NOT (rqmyvt < xplqre) THEN BREAK
				SET qwgebm TO 0
				WHILE qwgebm < rqmyvt DO
					SET temp_a TO uescfv[qwgebm]
					SET uescfv[qwgebm] TO uescfv[rqmyvt]
					SET uescfv[rqmyvt] TO temp_a
					SET zinenb TO INTEGER JOINED STRING OF uescfv
					CALL kdramw.ADD(zinenb)
					SET rawmjo TO qwgebm + (1 * 1)
					WHILE rawmjo <= (xplqre - (1 + 0)) DO
						SET rbrtwv TO qwgebm + 1
						WHILE rbrtwv < rawmjo DO
							SET temp_b TO uescfv[rbrtwv]
							SET uescfv[rbrtwv] TO uescfv[rawmjo]
							SET uescfv[rawmjo] TO temp_b
							SET dbjaev TO INTEGER JOINED STRING OF uescfv
							CALL kdramw.ADD(dbjaev)
							SET uescfv[rbrtwv] TO temp_b
							SET uescfv[rawmjo] TO uescfv[rbrtwv]
							SET rbrtwv TO rbrtwv + 1
						END WHILE
						SET rawmjo TO rawmjo + 1
					END WHILE
					SET uescfv[rqmyvt] TO uescfv[qwgebm]
					SET uescfv[qwgebm] TO temp_a
					SET qwgebm TO qwgebm + 1
				END WHILE
				SET rqmyvt TO rqmyvt + 1
			UNTIL FALSE
			SET ans_temp TO 0
			FOR hksgdv IN kdramw DO
				IF hksgdv IN gjycbn THEN
					SET ans_temp TO ans_temp + gjycbn[hksgdv]
				END IF
			END FOR
			SET wflqhk TO wflqhk + ans_temp
			SET gjycbn[nviyx] TO gjycbn[nviyx] + 1
		END FOR
		RETURN wflqhk
	END FUNCTION
END CLASS