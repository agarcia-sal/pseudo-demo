CLASS Solution
	FUNCTION maxPointsInsideSquare(points s)
		SET c84qr TO LENGTH OF s
		SET k0zdb TO 0
		SET u30ej TO 0
		WHILE u30ej LESS THAN c84qr DO
			SET h6vnp TO s[u30ej][0]
			SET o51rn TO s[u30ej][1]
			SET wz9sq TO (IF (h6vnp >= 0) THEN h6vnp ELSE -h6vnp)
			SET c1ld3 TO (IF (o51rn >= 0) THEN o51rn ELSE -o51rn)
			SET g4vkp TO (IF wz9sq >= c1ld3 THEN wz9sq ELSE c1ld3)
			INITIALIZE vjdms AS empty map
			SET y7nzo TO TRUE
			SET lf2py TO 0
			REPEAT
				SET zxqbr TO s[lf2py][0]
				SET r8lya TO s[lf2py][1]
				SET qx2fw TO (IF zxqbr >= 0 THEN zxqbr ELSE -zxqbr)
				SET b3fnp TO (IF r8lya >= 0 THEN r8lya ELSE -r8lya)
				IF (qx2fw <= g4vkp) AND (b3fnp <= g4vkp) THEN
					SET qne1z TO s[lf2py]
					SET tag TO qne1z
					SET in_map TO FALSE
					IF vjdms CONTAINS KEY tag THEN
						SET in_map TO TRUE
					END IF
					IF in_map THEN
						SET y7nzo TO FALSE
						EXIT LOOP
					END IF
					SET vjdms[tag] TO TRUE
				END IF
				SET lf2py TO lf2py + 1
			UNTIL lf2py >= c84qr
			IF y7nzo THEN
				SET k0zdb TO (IF k0zdb >= LENGTH OF vjdms THEN k0zdb ELSE LENGTH OF vjdms)
			END IF
			SET u30ej TO u30ej + 1
		END WHILE
		RETURN k0zdb
	END FUNCTION
END CLASS