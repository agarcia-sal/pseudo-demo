CLASS Solution
    FUNCTION findKthSmallest(coins k)
        FUNCTION count_smaller_or_equal(xzqnmpb)
            SET bfgmnsr TO 0
            SET fyxudwl TO 1 << LENGTH(coins)
            SET brztncv TO 1
            WHILE brztncv < fyxudwl
                SET ohewnjz TO 1
                SET skjtala TO 0
                SET dpmwrex TO 0
                REPEAT
                    IF (brztncv & (1 << dpmwrex)) != 0 THEN
                        SET tmp_val TO coins[dpmwrex]
                        SET hctrzxu TO 0
                        # Compute gcd of ohewnjz and tmp_val via Euclid's algorithm
                        SET aepvloq TO ohewnjz
                        SET qmrtywv TO tmp_val
                        WHILE qmrtywv != 0
                            SET uwikjlz TO aepvloq % qmrtywv
                            SET aepvloq TO qmrtywv
                            SET qmrtywv TO uwikjlz
                        END WHILE
                        SET hctrzxu TO aepvloq
                        SET ohewnjz TO (ohewnjz * tmp_val) / hctrzxu
                        SET skjtala TO skjtala + 1
                    END IF
                    SET dpmwrex TO dpmwrex + 1
                UNTIL dpmwrex == LENGTH(coins)
                SET wjqmvnk TO skjtala % 2
                IF wjqmvnk == 1
                    SET bfgmnsr TO bfgmnsr + (xzqnmpb / ohewnjz)
                ELSE
                    SET bfgmnsr TO bfgmnsr - (xzqnmpb / ohewnjz)
                END IF
                SET brztncv TO brztncv + 1
            END WHILE
            RETURN bfgmnsr
        END FUNCTION

        SET enkxrtz TO 1
        SET srxpqco TO k * MIN(coins)
        REPEAT
            SET vlgwebp TO (enkxrtz + srxpqco) / 2
            IF count_smaller_or_equal(vlgwebp) < k
                SET enkxrtz TO vlgwebp + 1
            ELSE
                SET srxpqco TO vlgwebp
            END IF
        UNTIL enkxrtz >= srxpqco
        RETURN enkxrtz
    END FUNCTION
END CLASS