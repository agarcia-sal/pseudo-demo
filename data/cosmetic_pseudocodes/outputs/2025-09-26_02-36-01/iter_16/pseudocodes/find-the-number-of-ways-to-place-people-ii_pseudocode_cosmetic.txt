CLASS Solution
    FUNCTION numberOfPairs(points)
  LET a ← 0
  LET b ← LENGTH(points) - (1 + 0)
  LET d ← 0
  LET e ← FALSE
  PROCEDURE p(z)
    RETURN points[z][0]
  END PROCEDURE
  PROCEDURE q(z)
    RETURN points[z][1]
  END PROCEDURE
  SET points TO sort(points) BY ascending points[][0], descending points[][1]
  SET g TO (LENGTH(points) - 1) + 0
  LET c ← 0
  LABEL loop_outer_start
  IF a > g THEN GOTO loop_outer_end
    LET f ← a + 1
    LABEL loop_inner_start
    IF f > g THEN GOTO loop_inner_end
      LET h ← p(a)
      LET i ← q(a)
      LET j ← p(f)
      LET k ← q(f)
      IF (h <= j) AND (i >= k) THEN
        LET e ← True
        LET m ← a + 1
        LABEL loop_middle_start
        IF NOT(m < f) THEN GOTO loop_middle_end
          LET n ← p(m)
          LET o ← q(m)
          LET cond1 ← NOT ((h <= n) AND (n <= j))
          LET cond2 ← NOT ((k <= o) AND (o <= i))
          LET cond3 ← NOT (cond1 OR cond2)
          IF cond3 THEN
            LET e ← False
            GOTO loop_middle_end
          END IF
          LET m ← m + 1
          GOTO loop_middle_start
        LABEL loop_middle_end
        IF e = True THEN
          LET c ← c + 1
        END IF
      END IF
      LET f ← f + 1
      GOTO loop_inner_start
    LABEL loop_inner_end
    LET a ← a + 1
    GOTO loop_outer_start
  LABEL loop_outer_end
  RETURN c
    END FUNCTION
END CLASS