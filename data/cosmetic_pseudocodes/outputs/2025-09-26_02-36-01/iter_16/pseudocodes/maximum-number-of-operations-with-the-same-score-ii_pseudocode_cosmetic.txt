CLASS Solution
	FUNCTION maxOperations(nums)
		HELPER FUNCTION dfs(x, y, z, cache)
			WHILE x LESS THAN y
				IF (x, y, z) IN cache THEN
					RETURN cache[(x, y, z)]
				END IF
				
				SET a TO 0
				
				IF ((nums[x] + nums[x + 1]) = z) THEN
					SET b TO dfs(x + 2, y, z, cache)
					SET a TO IF a GREATER b + 1 THEN a ELSE b + 1 END IF
				END IF
				
				IF ((nums[y] + nums[y - 1]) = z) THEN
					SET c TO dfs(x, y - 2, z, cache)
					SET a TO IF a GREATER c + 1 THEN a ELSE c + 1 END IF
				END IF
				
				IF ((nums[x] + nums[y]) = z) THEN
					SET d TO dfs(x + 1, y - 1, z, cache)
					SET a TO IF a GREATER d + 1 THEN a ELSE d + 1 END IF
				END IF
				
				STORE a AS cache[(x, y, z)]
				RETURN a
			END WHILE
			RETURN 0
		END HELPER FUNCTION
		
		RETURN MAX(
			1 + dfs(2, LENGTH(nums) - 1, nums[0] + nums[1], {}),
			1 + dfs(0, LENGTH(nums) - 3, nums[LENGTH(nums) - 2] + nums[LENGTH(nums) - 1], {}),
			1 + dfs(1, LENGTH(nums) - 2, nums[0] + nums[LENGTH(nums) - 1], {})
		)
	END FUNCTION
END CLASS