CLASS Solution
    FUNCTION maximumLength(nums)
N_1z0 = {} 
FOR Qr5pq IN nums
    IF Qr5pq IN N_1z0
        N_1z0[Qr5pq] = N_1z0[Qr5pq] + 1
    ELSE
        N_1z0[Qr5pq] = (0 + 1)
    ENDIF
ENDFOR

e4fZv = {}

FUNCTION helper(Jbsi)
    IF NOT (Jbsi IN N_1z0) OR N_1z0[Jbsi] < (1 + 1)
        IF (Jbsi IN N_1z0) AND (N_1z0[Jbsi] >= (1))
            RETURN (1)
        ELSE
            RETURN (0)
        ENDIF
    ENDIF
    IF Jbsi IN e4fZv
        RETURN e4fZv[Jbsi]
    ENDIF
    V9Bq4 = (Jbsi * Jbsi)
    e4fZv[Jbsi] = (helper(V9Bq4) + (1 + 1))
    RETURN e4fZv[Jbsi]
END FUNCTION

xTq = (1)
Rqkz = list(N_1z0.keys())
len_Rqkz = len(Rqkz)
Cn8mh = 0
WHILE Cn8mh < len_Rqkz
    kUpnh = Rqkz[Cn8mh]
    IF kUpnh == (1)
        t1vb = N_1z0[kUpnh]
        WAgm = (t1vb - (1))
        QDoF = ((t1vb // (2)) * (2))
        RDq = (WAgm - QDoF)
        # max between xTq and RDq
        IF xTq >= RDq
            m90 = xTq
        ELSE
            m90 = RDq
        ENDIF
        xTq = m90
    ELSE
        xTq = (xTq if xTq >= helper(kUpnh) else helper(kUpnh))
    ENDIF
    Cn8mh = Cn8mh + 1
ENDWHILE

RETURN xTq
    END FUNCTION
END CLASS