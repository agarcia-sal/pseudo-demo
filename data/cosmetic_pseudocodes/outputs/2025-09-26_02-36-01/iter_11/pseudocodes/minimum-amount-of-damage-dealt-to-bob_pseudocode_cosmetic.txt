CLASS Enemy  
    FUNCTION __init__(self, damage, timeTakenDown)  
        SET self.damage TO damage  
        SET self.timeTakenDown TO timeTakenDown  
    END FUNCTION  
END CLASS  

CLASS Solution  
    FUNCTION minDamage(self, power, damage, health)  
        FUNCTION compute_time(x, y)  
            SET a TO (x + y - 1)  
            SET b TO power  
            SET c TO 0  
            WHILE c * b < a  
                SET c TO c + 1  
            END WHILE  
            RETURN c  
        END FUNCTION  

        FUNCTION desc_compare(e1, e2)  
            SET val1 TO e1.damage * e2.timeTakenDown  
            SET val2 TO e2.damage * e1.timeTakenDown  
            RETURN val1 > val2  
        END FUNCTION  

        SET zq TO 0  
        SET vl TO 0  
        FOR dx FROM 0 TO (LENGTH OF damage) - 1  
            SET vl TO vl + damage[dx]  
        END FOR  

        SET emq TO []  
        SET qz TO 0  
        WHILE qz < LENGTH OF damage  
            SET mka TO damage[qz]  
            SET yhr TO health[qz]  
            SET wje TO compute_time(yhr, power)  
            SET addig TO NEW Enemy(mka, wje)  
            APPEND addig TO emq  
            SET qz TO qz + 1  
        END WHILE  

        FUNCTION bubble_sort_desc(arr)  
            SET swapped TO true  
            WHILE swapped  
                SET swapped TO false  
                SET i TO 0  
                WHILE i < LENGTH OF arr - 1  
                    IF desc_compare(arr[i + 1], arr[i]) THEN  
                        SET temp TO arr[i]  
                        SET arr[i] TO arr[i + 1]  
                        SET arr[i + 1] TO temp  
                        SET swapped TO true  
                    END IF  
                    SET i TO i + 1  
                END WHILE  
            END WHILE  
        END FUNCTION  

        CALL bubble_sort_desc(emq)  

        SET vn TO 0  
        SET rfl TO 0  
        REPEAT  
            IF vn >= LENGTH OF emq THEN  
                BREAK  
            END IF  
            SET rfl TO rfl + vl * emq[vn].timeTakenDown  
            SET vl TO vl - emq[vn].damage  
            SET vn TO vn + 1  
        UNTIL FALSE  

        RETURN rfl  
    END FUNCTION  
END CLASS