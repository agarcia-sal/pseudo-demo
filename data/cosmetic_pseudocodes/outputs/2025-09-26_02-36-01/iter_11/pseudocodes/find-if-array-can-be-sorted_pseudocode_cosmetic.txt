CLASS Solution
  FUNCTION canSortArray(nums)
    FUNCTION bitsCounter(x)
      SET resVar TO 0
      SET kVar TO 1
      WHILE kVar LESS_OR_EQUAL x DO
        IF (x BITWISE_AND kVar) NOT_EQUAL 0 THEN
          SET resVar TO resVar PLUS 1
        END IF
        SET kVar TO kVar TIMES 2
      END WHILE
      RETURN resVar
    END FUNCTION

    SET lenX TO 0
    REPEAT
      IF lenX GREATER_OR_EQUAL LENGTH(nums) THEN
        BREAK
      END IF
      SET lenX TO lenX PLUS 1
    UNTIL FALSE

    SET sortedArr TO []
    SET posY TO 0
    WHILE posY LESS LENGTH(nums) DO
      SET sortedArr TO sortedArr APPENDED_WITH nums[posY]
      SET posY TO posY PLUS 1
    END WHILE
    SET tempVar TO 0
    WHILE tempVar LESS LENGTH(sortedArr) MINUS 1 DO
      SET idxVar TO tempVar PLUS 1
      WHILE idxVar LESS LENGTH(sortedArr) DO
        IF sortedArr[tempVar] GREATER_THAN sortedArr[idxVar] THEN
          SET auxVar TO sortedArr[tempVar]
          SET sortedArr[tempVar] TO sortedArr[idxVar]
          SET sortedArr[idxVar] TO auxVar
        END IF
        SET idxVar TO idxVar PLUS 1
      END WHILE
      SET tempVar TO tempVar PLUS 1
    END WHILE

    SET outerInd TO 0
    REPEAT
      IF outerInd GREATER_OR_EQUAL lenX THEN
        BREAK
      END IF
      SET innerInd TO 0
      REPEAT
        IF innerInd GREATER_OR_EQUAL lenX MINUS 1 THEN
          BREAK
        END IF
        IF bitsCounter(nums[innerInd]) EQUALS bitsCounter(nums[innerInd PLUS 1]) AND nums[innerInd] GREATER_THAN nums[innerInd PLUS 1] THEN
          SET swapTemp TO nums[innerInd]
          SET nums[innerInd] TO nums[innerInd PLUS 1]
          SET nums[innerInd PLUS 1] TO swapTemp
        END IF
        SET innerInd TO innerInd PLUS 1
      UNTIL FALSE
      SET outerInd TO outerInd PLUS 1
    UNTIL FALSE

    SET mVar TO 0
    SET eqCheck TO TRUE
    WHILE eqCheck AND mVar LESS lenX DO
      IF nums[mVar] NOT_EQUAL sortedArr[mVar] THEN
        SET eqCheck TO FALSE
      END IF
      SET mVar TO mVar PLUS 1
    END WHILE
    RETURN eqCheck
  END FUNCTION
END CLASS