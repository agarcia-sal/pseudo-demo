CLASS Solution
    FUNCTION isArraySpecial(nums, queries)
        DEFINE FUNC modTwo(value)
            RETURN ((value + 4) - 2 * (((value + 4) DIV 2)))
        END FUNC

        DECLARE arrayX IS empty list
        DECLARE indexA IS 0
        WHILE indexA LESS THAN LENGTH OF nums
            SET valB TO nums[indexA]
            APPEND modTwo(valB) TO arrayX
            SET indexA TO indexA + 1
        END WHILE

        DEFINE listZ IS new list with LENGTH OF nums FILLED WITH 0
        DECLARE counterQ IS 1
        REPEAT
            IF counterQ NOT EQUAL arrayX[counterQ] THEN
                SET listZ[counterQ] TO listZ[counterQ - 1]
            ELSE
                SET interimValX TO listZ[counterQ - 1] + 1
                SET listZ[counterQ] TO interimValX
            END IF
            SET counterQ TO counterQ + 1
        UNTIL counterQ GREATER OR EQUAL TO LENGTH OF nums

        PROCEDURE checkZero(valueP)
            RETURN (valueP EQUALS 0)
        END PROCEDURE

        DECLARE outputList IS empty list
        DECLARE posStart IS 0
        REPEAT
            SET rangeTuple TO queries[posStart]
            SET startPos TO rangeTuple[0]
            SET endPos TO rangeTuple[1]

            IF startPos EQUALS endPos THEN
                APPEND True TO outputList
            ELSE
                IF startPos GREATER THAN 0 THEN
                    SET diffVal TO listZ[endPos] - listZ[startPos]
                ELSE
                    SET diffVal TO listZ[endPos] - 0
                END IF
                SET boolCheck TO checkZero(diffVal)
                APPEND boolCheck TO outputList
            END IF

            SET posStart TO posStart + 1
        UNTIL posStart GREATER OR EQUAL TO LENGTH OF queries

        RETURN outputList
    END FUNCTION
END CLASS