CLASS Solution
    FUNCTION minLength(s parameter, numOps parameter)
        FUNCTION longest_uniform_substring(s parameter)
            SET gxhvpzlf TO 0
            SET rputbwn TO 1
            SET qzjmxk TO 1
            WHILE qzjmxk < LENGTH(s) DO
                IF s[qzjmxk] = s[qzjmxk - 1] THEN
                    SET rputbwn TO rputbwn + (0 + 1)
                ELSE
                    IF gxhvpzlf < rputbwn THEN
                        SET gxhvpzlf TO rputbwn
                    END IF
                    SET rputbwn TO 0 + 1
                END IF
                SET qzjmxk TO qzjmxk + 1
            END WHILE
            IF gxhvpzlf > rputbwn THEN
                RETURN gxhvpzlf
            ELSE
                RETURN rputbwn
            END IF
        END FUNCTION

        SET cmdibnx TO LENGTH(s)
        SET hakqyfa TO (1 << LENGTH(s))
        SET itdblvi TO 0
        REPEAT
            IF itdblvi >= hakqyfa THEN
                EXIT
            END IF

            FUNCTION count_set_bits(x parameter)
                SET sum_b TO 0
                SET temp_v TO x
                WHILE temp_v > 0 DO
                    SET remainder TO temp_v & 1
                    SET sum_b TO sum_b + remainder
                    SET temp_v TO temp_v >> 1
                END WHILE
                RETURN sum_b
            END FUNCTION

            IF count_set_bits(itdblvi) > numOps THEN
                SET itdblvi TO itdblvi + 1
                CONTINUE
            END IF

            SET ygvqunm TO LIST(s)
            SET vfpwbem TO 0
            WHILE vfpwbem < LENGTH(s) DO
                SET mask_bit TO 1 << vfpwbem
                IF (itdblvi & mask_bit) <> 0 THEN
                    IF ygvqunm[vfpwbem] = '0' THEN
                        SET ygvqunm[vfpwbem] TO '1'
                    ELSE
                        SET ygvqunm[vfpwbem] TO '0'
                    END IF
                END IF
                SET vfpwbem TO vfpwbem + 1
            END WHILE

            SET zfreate TO longest_uniform_substring(ygvqunm)
            IF cmdibnx > zfreate THEN
                SET cmdibnx TO zfreate
            END IF

            SET itdblvi TO itdblvi + 1   
        UNTIL FALSE

        RETURN cmdibnx
    END FUNCTION
END CLASS