CLASS Solution
    FUNCTION minimumCost(m n horizontalCut verticalCut)
        FUNCTION sortDesc(arr)
            IF LENGTH(arr) <= 1 THEN RETURN arr
            SET pivot = arr[0]
            SET left = []
            SET right = []
            FOR idx FROM 1 TO LENGTH(arr) - 1
                IF arr[idx] > pivot THEN
                    APPEND arr[idx] TO left
                ELSE
                    APPEND arr[idx] TO right
                END IF
            END FOR
            RETURN CONCATENATE(sortDesc(left), [pivot], sortDesc(right))
        END FUNCTION

        SET g42 = sortDesc(horizontalCut)
        SET r17 = sortDesc(verticalCut)
        SET w90 = 0
        SET k58 = 0
        SET z11 = 0
        SET d63 = 1
        SET n84 = 1

        REPEAT
            IF k58 >= LENGTH(r17) OR (z11 < LENGTH(g42) AND g42[z11] > r17[k58])
                SET w90 = w90 + (g42[z11] * n84)
                SET d63 = d63 + 1
                SET z11 = z11 + 1
            ELSE
                SET w90 = w90 + (r17[k58] * d63)
                SET n84 = n84 + 1
                SET k58 = k58 + 1
            END IF
        UNTIL NOT (z11 < LENGTH(g42) OR k58 < LENGTH(r17))

        RETURN w90
    END FUNCTION
END CLASS