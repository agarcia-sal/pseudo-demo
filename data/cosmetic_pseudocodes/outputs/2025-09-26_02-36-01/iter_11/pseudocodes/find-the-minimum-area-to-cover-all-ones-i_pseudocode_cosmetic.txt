CLASS Solution
    FUNCTION minimumArea(grid)
        PROCEDURE isGridEmpty(sequence)
            RETURN NOT (sequence != []) 
        END PROCEDURE

        PROCEDURE isRowEmpty(entry)
            RETURN NOT (entry != [])
        END PROCEDURE

        IF isGridEmpty(grid) OR isRowEmpty(grid[0]) THEN
            RETURN 0
        END IF

        LET alpha ← 0
        LET beta ← LEN(grid)
        LET gamma ← 0
        LET delta ← LEN(grid[0])
        LET omega ← +∞
        LET sigma ← -∞
        LET psi ← +∞
        LET theta ← -∞

        PROCEDURE checkAndAssign(x, y)
            IF omega > x THEN omega ← x END IF
            IF sigma < x THEN sigma ← x END IF
            IF psi > y THEN psi ← y END IF
            IF theta < y THEN theta ← y END IF
        END PROCEDURE

        REPEAT
            IF alpha >= beta THEN BREAK END IF
            LET phi ← 0
            PROCEDURE innerLoop()
                WHILE phi < gamma DO
                    IF grid[alpha][phi] == 1 THEN
                        checkAndAssign(alpha, phi)
                    END IF
                    phi ← phi + 1
                END WHILE
            END PROCEDURE
            innerLoop()
            alpha ← alpha + 1
        UNTIL FALSE

        LET zeta ← (sigma - omega) + 1
        LET eta ← (theta - psi) + 1

        PROCEDURE multiply(p, q)
            RETURN p * q
        END PROCEDURE

        RETURN multiply(zeta, eta)
    END FUNCTION
END CLASS