CLASS Solution
    FUNCTION minOperations(inputList)
        SET totalCount TO LENGTH OF inputList
        IF totalCount = 0 THEN
            RETURN 0
        ELSE
            DEFINE FUNCTION findMax(a, b)
                IF a >= b THEN
                    RETURN a
                ELSE
                    RETURN b
                END IF
            END FUNCTION

            SET tracker TO a new list of size totalCount filled with 1

            DEFINE FUNCTION outerLoop(index)
                IF index >= totalCount THEN
                    RETURN
                ELSE
                    DEFINE FUNCTION innerLoop(innerIndex)
                        IF innerIndex >= index THEN
                            RETURN
                        ELSE
                            IF inputList[index] <= inputList[innerIndex] THEN
                                SET candidate TO tracker[innerIndex] + 1
                                SET tracker[index] TO findMax(tracker[index], candidate)
                            END IF
                            innerLoop(innerIndex + 1)
                        END IF
                    END FUNCTION
                    innerLoop(0)
                    outerLoop(index + 1)
                END IF
            END FUNCTION

            outerLoop(1)

            DEFINE FUNCTION findMaxInList(lst)
                SET maxSoFar TO lst[0]
                SET pos TO 1
                WHILE pos < totalCount DO
                    IF lst[pos] > maxSoFar THEN
                        SET maxSoFar TO lst[pos]
                    END IF
                    SET pos TO pos + 1
                END WHILE
                RETURN maxSoFar
            END FUNCTION

            RETURN findMaxInList(tracker)
        END IF
    END FUNCTION
END CLASS