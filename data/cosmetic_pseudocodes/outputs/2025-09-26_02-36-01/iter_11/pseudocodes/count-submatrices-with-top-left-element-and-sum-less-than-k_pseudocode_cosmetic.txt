CLASS Solution
    FUNCTION countSubmatrices(grid, k)
        PROCEDURE accumulate(row, col, acc)
            acc1 ← 0
            IF row NOT EQUALS 0
                acc1 ← acc1 + acc[row-1][col]
            END IF
            acc2 ← 0
            IF col NOT EQUALS 0
                acc2 ← acc2 + acc[row][col-1]
            END IF
            acc3 ← 0
            IF row NOT EQUALS 0 AND col NOT EQUALS 0
                acc3 ← acc3 + acc[row-1][col-1]
            END IF
            RETURN acc1 + acc2 - acc3 + grid[row][col]
        END PROCEDURE

        altCount ← 0
        IF grid EQUALS no value OR grid[0] EQUALS no value THEN
            RETURN 0
        END IF
        rows ← 0
        WHILE rows LESS THAN LENGTH OF grid
            rows ← rows + 1
        END WHILE
        cols ← 0
        WHILE cols LESS THAN LENGTH OF grid[0]
            cols ← cols + 1
        END WHILE

        prefix ← []
        idx1 ← 0
        REPEAT
            IF idx1 GREATER OR EQUAL TO rows THEN
                BREAK
            END IF
            innerList ← []
            idx2 ← 0
            REPEAT
                IF idx2 GREATER OR EQUAL TO cols THEN
                    BREAK
                END IF
                innerList ← innerList + [0]
                idx2 ← idx2 + 1
            UNTIL FALSE
            prefix ← prefix + [innerList]
            idx1 ← idx1 + 1
        UNTIL FALSE

        indexRow ← 0
        WHILE indexRow LESS THAN rows
            indexColumn ← 0
            WHILE indexColumn LESS THAN cols
                value ← accumulate(indexRow, indexColumn, prefix)
                prefix[indexRow][indexColumn] ← value
                IF value LESS THAN OR EQUAL TO k THEN
                    altCount ← altCount + 1
                END IF
                indexColumn ← indexColumn + 1
            END WHILE
            indexRow ← indexRow + 1
        END WHILE

        RETURN altCount
    END FUNCTION
END CLASS