CLASS Solution
    FUNCTION minLength(s parameter representing a string, numOps parameter representing an integer) RETURNS integer

        FUNCTION check(m parameter representing an integer) RETURNS boolean
            SET quantity TO 0
            SET counter TO 0
            DEFINE FUNCTION incrementAndEvaluate()
                SET quantity TO quantity + (counter \ m) + 1
                IF quantity > numOps THEN
                    RETURN false
                END IF
                SET counter TO 0
                RETURN true
            END FUNCTION

            SET index TO 0
            WHILE index <= LENGTH(s) - 1
                SET counter TO counter + 1
                IF (index = LENGTH(s) - 1) OR (s[index] != s[index + 1]) THEN
                    IF NOT incrementAndEvaluate() THEN
                        RETURN false
                    END IF
                END IF
                SET index TO index + 1
            END WHILE

            RETURN quantity <= numOps
        END FUNCTION

        SET strLen TO LENGTH(s)
        SET low TO 1
        SET high TO strLen

        DEFINE FUNCTION midPoint(x, y) RETURNS integer
            RETURN x + ((y - x) \ 2)
        END FUNCTION

        LABEL binarySearchStart:
            IF low >= high THEN
                RETURN low
            END IF
            SET middle TO midPoint(low, high)
            IF check(middle) THEN
                SET high TO middle
            ELSE
                SET low TO middle + 1
            END IF
            GOTO binarySearchStart

    END FUNCTION
END CLASS