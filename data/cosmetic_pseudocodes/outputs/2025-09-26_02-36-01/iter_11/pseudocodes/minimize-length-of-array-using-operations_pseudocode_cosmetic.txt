CLASS Solution
    FUNCTION minimumArrayLength(nums)
        FUNCTION countOccurrences(arr, target)
            SET total_matches TO 0
            SET idx TO 0
            WHILE idx < LENGTH(arr)
                IF arr[idx] == target THEN
                    SET total_matches TO total_matches + 1
                END IF
                SET idx TO idx + 1
            END WHILE
            RETURN total_matches
        END FUNCTION

        FUNCTION findMinimum(arr)
            SET pos TO 0
            SET smallest TO arr[pos]
            REPEAT
                SET shall_continue TO FALSE
                IF pos + 1 < LENGTH(arr) THEN
                    IF NOT (arr[pos + 1] < smallest) THEN
                        SET pos TO pos + 1
                        SET shall_continue TO TRUE
                    ELSE
                        SET smallest TO arr[pos + 1]
                        SET pos TO pos + 1
                        SET shall_continue TO TRUE
                    END IF
                END IF
            UNTIL NOT shall_continue
            RETURN smallest
        END FUNCTION

        SET epsilon TO 1 + 0
        SET omega TO 0
        SET alpha TO LENGTH(nums) - epsilon
        SET smallest_element TO findMinimum(nums)
        SET frequency TO countOccurrences(nums, smallest_element)
        SET omega TO frequency

        IF omega == epsilon THEN
            RETURN epsilon
        END IF

        FUNCTION halfRoundedUp(x)
            SET a TO x + 1
            SET b TO 2
            RETURN INTEGER_DIVIDE(a, b)
        END FUNCTION

        RETURN halfRoundedUp(omega)
    END FUNCTION
END CLASS