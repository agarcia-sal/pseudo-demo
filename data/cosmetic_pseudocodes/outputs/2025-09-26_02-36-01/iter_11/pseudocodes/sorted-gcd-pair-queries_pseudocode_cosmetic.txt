CLASS Solution
    FUNCTION gcdValues(nums, queries)
        SET alpha TO the largest item inside nums
        SET beta TO a fresh mapping counting items from nums
        SET gamma TO a zero-filled array sized alpha plus 1
        SET kappa TO alpha
        WHILE kappa >= 1 DO
            SET delta TO 0
            SET lambda TO kappa
            REPEAT
                SET delta TO delta plus beta[lambda]
                SET gamma[kappa] TO gamma[kappa] minus gamma[lambda]
                SET lambda TO lambda plus kappa
            UNTIL lambda > alpha
            SET gamma[kappa] TO gamma[kappa] plus delta times (delta minus 1) divided by 2
            SET kappa TO kappa minus 1
        END WHILE
        SET epsilon TO an array same length as gamma
        SET zeta TO 0
        FOR eta FROM 0 TO LENGTH OF gamma MINUS 1 DO
            SET zeta TO zeta plus gamma[eta]
            SET epsilon[eta] TO zeta
        END FOR
        SET omega TO empty list
        FOR each xi IN queries DO
            DEFINE FUNCTION bisectRight(arr, value)
                SET low TO 0
                SET high TO LENGTH OF arr
                WHILE low < high DO
                    SET mid TO (low plus high) divided by 2
                    IF arr[mid] <= value THEN
                        SET low TO mid plus 1
                    ELSE
                        SET high TO mid
                    END IF
                END WHILE
                RETURN low
            END FUNCTION
            APPEND bisectRight(epsilon, xi) TO omega
        END FOR
        RETURN omega
    END FUNCTION
END CLASS