CLASS Solution
    FUNCTION minimumOperations(nums, target)
        LET q = LENGTH(nums)
        LET a = target[0] - nums[0]
        IF a < 0 THEN
            SET a = -a
        ENDIF
        LET r = 1
        FUNCTION helper(idx, acc)
            IF idx >= q THEN
                RETURN acc
            ENDIF
            LET p = target[idx] - nums[idx]
            LET s = target[idx - 1] - nums[idx - 1]
            LET result = acc
            LET sign_p = 0
            LET sign_s = 0
            IF p > 0 THEN
                SET sign_p = 1
            ELSEIF p < 0 THEN
                SET sign_p = -1
            ENDIF
            IF s > 0 THEN
                SET sign_s = 1
            ELSEIF s < 0 THEN
                SET sign_s = -1
            ENDIF
            IF sign_p * sign_s > 0 THEN
                LET diff = 0
                IF p < 0 THEN
                    SET diff = (-p) - ABS(s)
                ELSE
                    SET diff = p - ABS(s)
                ENDIF
                IF diff < 0 THEN
                    SET diff = -diff
                ENDIF
                IF diff > 0 THEN
                    SET result = result + diff
                ENDIF
            ELSE
                LET abs_p = p
                IF abs_p < 0 THEN
                    SET abs_p = -abs_p
                ENDIF
                SET result = result + abs_p
            ENDIF
            RETURN helper(idx + 1, result)
        END FUNCTION
        RETURN helper(1, a)
    END FUNCTION
END CLASS