CLASS Solution
    FUNCTION getSmallestString(s parameter of type string k parameter of type integer) RETURNS string
        FUNCTION cyclic_distance(c1 parameter of type character c2 parameter of type character) RETURNS integer
            FUNCTION abs_val(x parameter of type integer) RETURNS integer
                IF x LESS THAN zero THEN RETURN -x ELSE RETURN x ENDIF
            END FUNCTION

            SET diff TO abs_val(ASCII value of c1 MINUS ASCII value of c2)
            SET alt_dist TO 26 MINUS diff
            IF alt_dist LESS THAN diff THEN RETURN alt_dist ELSE RETURN diff ENDIF
        END FUNCTION

        SET uqfh TO 0
        SET vpkmrs TO an empty list of characters
        SET nqhdm TO LENGTH of s

        FOR rmto FROM 0 TO nqhdm MINUS 1 DO
            APPEND s AT INDEX rmto TO vpkmrs
        END FOR

        LABEL outer_loop_start:
        WHILE k GREATER THAN 0 AND uqfh LESS THAN nqhdm DO
            IF vpkmrs AT INDEX uqfh EQUALS character 'a' THEN 
                SET uqfh TO uqfh PLUS 1
                GOTO outer_loop_start
            ENDIF

            SET vksxlq TO cyclic_distance(vpkmrs AT INDEX uqfh, 'a')

            IF vksxlq LESS THAN OR EQUAL TO k THEN
                SET vpkmrs AT INDEX uqfh TO 'a'
                SET k TO k MINUS vksxlq
            ELSE
                SET ascii_val TO ASCII value of vpkmrs AT INDEX uqfh MINUS k
                SET vpkmrs AT INDEX uqfh TO character represented by ascii_val
                SET k TO 0
            ENDIF

            SET uqfh TO uqfh PLUS 1
        END WHILE

        SET outstr TO ""
        SET idx_out TO 0
        REPEAT
            IF idx_out EQUALS nqhdm THEN BREAK ENDIF
            SET outstr TO outstr CONCATENATED WITH vpkmrs AT INDEX idx_out
            SET idx_out TO idx_out PLUS 1
        UNTIL FALSE

        RETURN outstr
    END FUNCTION
END CLASS