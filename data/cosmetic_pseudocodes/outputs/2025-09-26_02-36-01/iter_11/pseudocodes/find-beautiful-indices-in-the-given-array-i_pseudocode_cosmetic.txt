CLASS Solution
    FUNCTION beautifulIndices(s parameter, a parameter, b parameter, k parameter)
        DECLARE wzx AS LIST ← []
        DECLARE vgm AS INTEGER ← LENGTH(s)
        DECLARE nar AS INTEGER ← LENGTH(a)

        DECLARE PROCEDURE vnw(zco INTEGER)
            vzx = vzx + [zco]
        END PROCEDURE

        DECLARE uaj AS INTEGER ← 0
        REPEAT
            IF (SUBSTRING(s, uaj, uaj + nar - 1) = a) THEN
                CALL vnw(uaj)
            END IF
            uaj = uaj + 1
        UNTIL NOT (uaj <= vgm - nar)

        DECLARE xrb AS LIST ← []
        DECLARE pql AS INTEGER ← LENGTH(b)

        DECLARE PROCEDURE juo(tzy INTEGER)
            xrb = xrb + [tzy]
        END PROCEDURE

        DECLARE thu AS INTEGER ← 0
        REPEAT
            IF (SUBSTRING(s, thu, thu + pql - 1) = b) THEN
                CALL juo(thu)
            END IF
            thu = thu + 1
        UNTIL NOT (thu <= vgm - pql)

        DECLARE ekq AS LIST ← []

        DECLARE PROCEDURE rab(lpc INTEGER)
            ekq = ekq + [lpc]
        END PROCEDURE

        DECLARE hzn AS INTEGER ← 0
        WHILE hzn < LENGTH(wzx) DO
            DECLARE mqy AS INTEGER ← 0
            DECLARE ola AS BOOLEAN ← FALSE
            WHILE (NOT ola) AND (mqy < LENGTH(xrb)) DO
                DECLARE tbf INTEGER ← wzx[hzn]
                DECLARE spl INTEGER ← xrb[mqy]
                IF ((tbf >= spl) AND ((tbf - spl) <= k)) OR ((spl > tbf) AND ((spl - tbf) <= k)) THEN
                    CALL rab(tbf)
                    ola = TRUE
                END IF
                mqy = mqy + 1
            END WHILE
            hzn = hzn + 1
        END WHILE

        RETURN ekq
    END FUNCTION
END CLASS