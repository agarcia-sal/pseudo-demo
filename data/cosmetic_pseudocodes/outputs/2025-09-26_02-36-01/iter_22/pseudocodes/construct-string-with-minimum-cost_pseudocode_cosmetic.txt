CLASS Solution
	FUNCTION minimumCost(target, words, costs)
		SET dict_map TO empty dictionary
		SET idx1 TO 0
		WHILE idx1 LESS THAN length of words
			SET w TO element at idx1 in words
			SET c TO element at idx1 in costs
			IF w NOT IN dict_map
				SET dict_map[w] TO c
			ELSE
				IF c LESS THAN dict_map[w]
					SET dict_map[w] TO c
				END IF
			END IF
			INCREMENT idx1 BY 1
		END WHILE

		SET chars_seq TO list of characters in target

		FUNCTION min_cost_to_form_target(pos)
			IF pos EQUALS length of chars_seq
				RETURN 0
			END IF

			SET res_min TO infinity

			SET iter_pairs TO dict_map items as list
			SET itr_idx TO 0
			WHILE itr_idx LESS THAN length of iter_pairs
				SET key_word TO element 0 of element itr_idx in iter_pairs
				SET val_cost TO element 1 of element itr_idx in iter_pairs
				SET key_len TO length of key_word
				SET cond1 TO (pos + key_len) LESS THAN OR EQUAL TO length of chars_seq
				IF cond1
					SET seq_slice TO slice of chars_seq from pos to (pos + key_len)
					SET word_chars TO list of characters in key_word
					SET cond2 TO seq_slice EQUALS word_chars
					IF cond2
						SET next_cost TO min_cost_to_form_target(pos + key_len)
						IF next_cost NOT EQUAL infinity
							SET temp_sum TO val_cost + next_cost
							IF temp_sum LESS THAN res_min
								SET res_min TO temp_sum
							END IF
						END IF
					END IF
				END IF
				INCREMENT itr_idx BY 1
			END WHILE

			IF res_min NOT EQUAL infinity
				RETURN res_min
			ELSE
				RETURN infinity
			END IF
		END FUNCTION

		SET final_val TO min_cost_to_form_target(0)

		IF final_val NOT EQUAL infinity
			RETURN final_val
		ELSE
			RETURN -1
		END IF
	END FUNCTION
END CLASS