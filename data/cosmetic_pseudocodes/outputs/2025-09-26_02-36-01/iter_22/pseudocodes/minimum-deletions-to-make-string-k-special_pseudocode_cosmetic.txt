CLASS Solution
    FUNCTION minimumDeletions(word, k)
        PROCEDURE tallyCharacters(text, tally)
            SET i TO 0
            WHILE i < LENGTH(text) DO
                IF tally CONTAINS KEY text[i] THEN
                    SET current TO tally[text[i]]
                    SET tally[text[i]] TO current + 1
                ELSE
                    SET tally[text[i]] TO 1
                END IF
                SET i TO i + 1
            END WHILE
        END PROCEDURE

        SET charCount TO EMPTY MAP
        CALL tallyCharacters(word, charCount)
        
        PROCEDURE extractValues(mapObj, arrRef)
            SET arrRef TO EMPTY LIST
            FOR EACH key IN mapObj KEYS
                APPEND mapObj[key] TO arrRef
            END FOR
        END PROCEDURE
        
        SET frequencies TO EMPTY LIST
        CALL extractValues(charCount, frequencies)

        PROCEDURE sortAscending(listRef)
            SET n TO LENGTH(listRef)
            SET x TO 0
            WHILE x < n - 1 DO
                SET y TO 0
                WHILE y < n - x - 1 DO
                    IF listRef[y] > listRef[y + 1] THEN
                        SET tempSwap TO listRef[y]
                        SET listRef[y] TO listRef[y + 1]
                        SET listRef[y + 1] TO tempSwap
                    END IF
                    SET y TO y + 1
                END WHILE
                SET x TO x + 1
            END WHILE
        END PROCEDURE

        CALL sortAscending(frequencies)

        SET minDelete TO 1 / 0
        SET j TO 0
        WHILE j <= LENGTH(frequencies) - 1 DO
            SET allowMax TO (frequencies[j] + k)
            SET countDel TO 0

            PROCEDURE sumDeletionAfter(startIndex, compareVal, sourceList, accRef)
                SET p TO startIndex
                REPEAT
                    IF p >= LENGTH(sourceList) THEN
                        RETURN
                    END IF
                    IF sourceList[p] > compareVal THEN
                        SET accRef TO accRef + (sourceList[p] - compareVal)
                    END IF
                    SET p TO p + 1
                UNTIL FALSE
            END PROCEDURE

            CALL sumDeletionAfter(j + 1, allowMax, frequencies, countDel)

            SET q TO 0
            WHILE q < j DO
                SET countDel TO countDel + frequencies[q]
                SET q TO q + 1
            END WHILE

            IF countDel < minDelete THEN
                SET minDelete TO countDel
            END IF

            SET j TO j + 1
        END WHILE

        RETURN minDelete
    END FUNCTION
END CLASS