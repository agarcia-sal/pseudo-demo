CLASS Solution
    FUNCTION minMoves(rooks)
        SET count TO LENGTH(rooks)
        SET rows_arr TO EMPTY LIST
        SET cols_arr TO EMPTY LIST
        FOR i FROM 0 TO count MINUS 1
            ADD rooks[i][0] TO rows_arr
            ADD rooks[i][1] TO cols_arr
        END FOR

        PROCEDURE sortList(lst)
            SET changed TO TRUE
            WHILE changed
                SET changed TO FALSE
                FOR k FROM 0 TO LENGTH(lst) MINUS 2
                    IF lst[k] > lst[k + 1] THEN
                        SET temp TO lst[k]
                        SET lst[k] TO lst[k + 1]
                        SET lst[k + 1] TO temp
                        SET changed TO TRUE
                    END IF
                END FOR
            END WHILE
        END PROCEDURE

        CALL sortList(rows_arr)
        CALL sortList(cols_arr)

        SET total_row_moves TO 0
        SET idx1 TO 0
        WHILE idx1 < count
            SET val1 TO rows_arr[idx1]
            IF val1 < idx1 THEN
                SET diff1 TO idx1 MINUS val1
            ELSE
                SET diff1 TO val1 MINUS idx1
            END IF
            SET total_row_moves TO total_row_moves + diff1
            SET idx1 TO idx1 + 1
        END WHILE

        SET total_col_moves TO 0
        SET idx2 TO 0
        WHILE idx2 < count
            SET val2 TO cols_arr[idx2]
            IF val2 < idx2 THEN
                SET diff2 TO idx2 MINUS val2
            ELSE
                SET diff2 TO val2 MINUS idx2
            END IF
            SET total_col_moves TO total_col_moves + diff2
            SET idx2 TO idx2 + 1
        END WHILE

        RETURN total_row_moves + total_col_moves
    END FUNCTION
END CLASS