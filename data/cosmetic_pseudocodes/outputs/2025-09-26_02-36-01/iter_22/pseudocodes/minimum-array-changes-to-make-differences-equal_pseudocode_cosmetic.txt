CLASS Solution
    FUNCTION minChanges(nums k)
        SET LambdaList TO empty list
        SET countA TO 0
        SET totalLen TO LENGTH OF nums
        SET halfLen TO (totalLen / 2) - 1
        SET arrD TO array of zeros with length (k + 2)
        SET idxP TO 0
        WHILE idxP <= halfLen
            SET valL TO nums[idxP]
            SET valR TO nums[totalLen - idxP - 1]
            IF valL > valR THEN
                SET valA TO valR
                SET valB TO valL
            ELSE
                SET valA TO valL
                SET valB TO valR
            END IF
            INC arrD[0] BY 1
            DEC arrD[valB - valA] BY 1
            INC arrD[valB - valA + 1] BY 1
            SET maxVal TO valB
            SET tempSum TO k - valA + 1
            DEC arrD[maxVal + tempSum] BY 1
            INC arrD[maxVal + tempSum + 1] BY 1
            SET idxP TO idxP + 1
        END WHILE
        SET accum TO 0
        SET resultMin TO a very large number
        FOR idx FROM 0 TO LENGTH OF arrD - 1
            SET accum TO accum + arrD[idx]
            IF accum < resultMin THEN
                SET resultMin TO accum
            END IF
        END FOR
        RETURN resultMin
    END FUNCTION
END CLASS