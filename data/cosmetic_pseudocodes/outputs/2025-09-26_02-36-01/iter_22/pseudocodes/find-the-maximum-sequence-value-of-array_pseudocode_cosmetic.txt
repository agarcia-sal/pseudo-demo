CLASS Solution
    FUNCTION maxValue(nums LIST OF INTEGER k INTEGER) RETURNS INTEGER
        SET p TO 1
        SET q TO 0
        WHILE q LESS THAN 7
            SET p TO p TIMES 2
            SET q TO q PLUS 1
        END WHILE
        
        SET r TO 0
        SET s TO LENGTH OF nums

        PROCEDURE Initialize3DBooleanArray(a REFERENCE TO BOOLEAN[][][], d1 INTEGER, d2 INTEGER, d3 INTEGER)
            SET idx1 TO 0
            WHILE idx1 NOT EQUAL TO d1
                SET idx2 TO 0
                SET a[idx1] TO EMPTY COLLECTION
                WHILE idx2 NOT EQUAL TO d2
                    SET idx3 TO 0
                    SET a[idx1][idx2] TO EMPTY COLLECTION
                    WHILE idx3 NOT EQUAL TO d3
                        SET a[idx1][idx2][idx3] TO FALSE
                        SET idx3 TO idx3 PLUS 1
                    END WHILE
                    SET idx2 TO idx2 PLUS 1
                END WHILE
                SET idx1 TO idx1 PLUS 1
            END WHILE
        END PROCEDURE

        DECLARE f BOOLEAN[][][]
        CALL Initialize3DBooleanArray(f, s PLUS 1, k PLUS 2, p)
        SET f[0][0][0] TO TRUE

        SET i TO 0
        WHILE i LESS THAN s
            SET j TO 0
            WHILE j LESS THAN OR EQUAL TO k
                SET x TO 0
                WHILE x LESS THAN p
                    SET index1 TO i PLUS 1
                    SET val1 TO f[index1][j][x] OR f[i][j][x]
                    SET f[index1][j][x] TO val1
                    
                    SET index2 TO j PLUS 1
                    SET newX TO x BITWISE_OR nums[i]
                    SET val2 TO f[index1][index2][newX] OR f[i][j][x]
                    SET f[index1][index2][newX] TO val2
                    SET x TO x PLUS 1
                END WHILE
                SET j TO j PLUS 1
            END WHILE
            SET i TO i PLUS 1
        END WHILE

        DECLARE g BOOLEAN[][][]
        CALL Initialize3DBooleanArray(g, s PLUS 1, k PLUS 2, p)
        SET g[s][0][0] TO TRUE

        SET u TO s
        WHILE u GREATER THAN 0
            SET v TO 0
            WHILE v LESS THAN OR EQUAL TO k
                SET w TO 0
                WHILE w LESS THAN p
                    SET idx1 TO u MINUS 1
                    SET val3 TO g[idx1][v][w] OR g[u][v][w]
                    SET g[idx1][v][w] TO val3

                    SET idx2 TO v PLUS 1
                    SET newVal TO w BITWISE_OR nums[u MINUS 1]
                    SET val4 TO g[idx1][idx2][newVal] OR g[u][v][w]
                    SET g[idx1][idx2][newVal] TO val4
                    SET w TO w PLUS 1
                END WHILE
                SET v TO v PLUS 1
            END WHILE
            SET u TO u MINUS 1
        END WHILE

        SET answer TO 0
        SET outer IS k
        WHILE outer LESS THAN OR EQUAL TO s MINUS k
            SET midX TO 0
            WHILE midX LESS THAN p
                IF f[outer][k][midX] EQUALS TRUE
                    SET innerY TO 0
                    WHILE innerY LESS THAN p
                        IF g[outer][k][innerY] EQUALS TRUE
                            SET candidate TO midX BITWISE_XOR innerY
                            IF candidate GREATER THAN answer
                                SET answer TO candidate
                            END IF
                        END IF
                        SET innerY TO innerY PLUS 1
                    END WHILE
                END IF
                SET midX TO midX PLUS 1
            END WHILE
            SET outer TO outer PLUS 1
        END WHILE

        RETURN answer
    END FUNCTION
END CLASS