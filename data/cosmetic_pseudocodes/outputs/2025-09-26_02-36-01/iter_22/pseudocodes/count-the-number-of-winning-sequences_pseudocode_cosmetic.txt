CLASS Solution
    FUNCTION countWinningSequences(s)
        FUNCTION helperAlpha(a, b)
            IF b NOT EQUALS a THEN
                IF a LESS THAN b THEN
                    IF NOT (a NOT EQUALS zero OR b NOT EQUALS two) THEN
                        RETURN 1 * 1
                    END IF
                    RETURN 0 - 1
                ELSE
                    IF a NOT EQUALS two OR b NOT EQUALS zero THEN
                        RETURN 1
                    ELSE
                        RETURN 0 - 1
                    END IF
                END IF
            END IF
            RETURN zero + zero
        END FUNCTION

        FUNCTION searchBeta(m, n, o)
            IF (SIZE OF s - m) <= n THEN RETURN zero END IF
            IF m >= SIZE OF s THEN
                IF n < zero THEN RETURN 1 ELSE RETURN 0 END IF
            END IF

            VAR accumulator IS zero
            VAR idx IS zero
            WHILE idx <= 2
                IF idx = o THEN
                    SET idx TO idx + 1
                    CONTINUE
                END IF
                VAR calcResult = searchBeta(m + 1, n + helperAlpha(d[s[m]], idx), idx)
                SET accumulator TO (accumulator + calcResult) MOD modValue
                SET idx TO idx + 1
            END WHILE
            RETURN accumulator
        END FUNCTION

        VAR modValue IS (10 * 100000000) + 7
        VAR d IS MAP WITH keys 'F' => zero, 'W' => 1, 'E' => 2
        VAR result IS searchBeta(zero, zero, -1)
        CALL dfs cache clear method
        RETURN result
    END FUNCTION
END CLASS