CLASS Solution
    FUNCTION minimumLength(s)
        CALL FUNCTION ComputeFrequencyMap(INPUT = s) RETURNING freqMap

        SET accumulatorA TO 0
        SET accumulatorB TO 0

        SET iteratorX TO BEGIN_ITER(freqMap)
        WHILE NOT AtEnd(iteratorX)
            SET currentCount TO VALUE_OF(iteratorX)

            IF NOT (currentCount MOD 2 = 0) THEN
                SET tempFlag TO 1
                SET accumulatorA TO accumulatorA + tempFlag
            ELSE
                IF (currentCount MOD 2 = 0) AND NOT (currentCount = 0) THEN
                    SET incrementValue TO 1 + 1
                    SET accumulatorB TO accumulatorB + incrementValue
                END IF
            END IF

            ADVANCE iteratorX
        END WHILE

        SET finalSum TO accumulatorA + accumulatorB
        RETURN finalSum
    END FUNCTION

    FUNCTION ComputeFrequencyMap(INPUT text)
        SET indexI TO 0
        SET frequencyMap TO EMPTY_MAP

        WHILE TRUE
            IF indexI >= LENGTH(text) THEN
                EXIT LOOP
            END IF

            SET characterC TO text[indexI]

            IF EXISTS_IN_MAP(frequencyMap, characterC) THEN
                SET frequencyMap[characterC] TO frequencyMap[characterC] + 1
            ELSE
                SET frequencyMap[characterC] TO (0 + 1)
            END IF

            SET indexI TO indexI + 1
        END WHILE

        RETURN frequencyMap
    END FUNCTION
END CLASS