CLASS Solution
    FUNCTION numberOfPairs(points)
        PROCEDURE localSort(list)
            SET m TO LENGTH OF list
            REPEAT
                SET c TO 0
                SET p TO 1
                WHILE p LESS THAN m DO
                    IF (list[p - 1].x GREATER THAN list[p].x) OR ((list[p - 1].x EQUALS list[p].x) AND (list[p - 1].y LESS THAN list[p].y)) THEN
                        SET temp TO list[p - 1]
                        SET list[p - 1] TO list[p]
                        SET list[p] TO temp
                        SET c TO c + 1
                    END IF
                    SET p TO p + 1
                END WHILE
                SET m TO m - 1
            UNTIL c EQUALS 0
        END PROCEDURE

        CALL localSort(points)

        SET u TO 0
        SET v TO LENGTH OF points

        FUNCTION checkInside(aIndex, bIndex)
            SET f TO True

            SET w TO aIndex + 1
            WHILE w LESS THAN bIndex DO
                SET px TO points[w].x
                SET py TO points[w].y
                IF (points[aIndex].x LESS THAN OR EQUAL TO px) AND (px LESS THAN OR EQUAL TO points[bIndex].x) AND (points[bIndex].y LESS THAN OR EQUAL TO py) AND (py LESS THAN OR EQUAL TO points[aIndex].y) THEN
                    SET f TO False
                    EXIT WHILE
                END IF
                SET w TO w + 1
            END WHILE
            RETURN f
        END FUNCTION

        SET res TO 0

        SET iIndex TO 0
        WHILE iIndex LESS THAN v - 1 DO
            SET jIndex TO iIndex + 1
            WHILE jIndex LESS THAN v DO
                SET Xstart TO points[iIndex].x
                SET Ystart TO points[iIndex].y
                SET Xend TO points[jIndex].x
                SET Yend TO points[jIndex].y

                IF (Xstart LESS THAN OR EQUAL TO Xend) AND (Ystart GREATER THAN OR EQUAL TO Yend) THEN
                    IF checkInside(iIndex, jIndex) THEN
                        SET res TO res + 1
                    END IF
                END IF
                SET jIndex TO jIndex + 1
            END WHILE
            SET iIndex TO iIndex + 1
        END WHILE

        RETURN res
    END FUNCTION
END CLASS