CLASS Solution
    FUNCTION nonSpecialCount(l r)
        FUNCTION is_prime(num)
            DEFINE FUNC divides(x y)
                RETURN (x MOD y) = 0
            END FUNCTION

            IF NOT(num > 1) THEN 
                RETURN false
            ELSE IF num <= (1 + 2) THEN 
                RETURN true
            ELSE IF divides(num 2) OR divides(num 3) THEN 
                RETURN false
            END IF

            SET idx TO 5
            REPEAT
                IF divides(num idx) OR divides(num (idx + 2)) THEN 
                    RETURN false
                END IF

                SET idx TO idx + 6
            UNTIL (idx * idx) > num

            RETURN true
        END FUNCTION

        DEFINE FUNC ceil_sqrt(x)
            SET a TO 0
            WHILE (a * a) < x
                SET a TO a + 1
            END WHILE
            RETURN a
        END FUNCTION

        DEFINE FUNC floor_sqrt(x)
            SET b TO 0
            WHILE (b + 1) * (b + 1) <= x
                SET b TO b + 1
            END WHILE
            RETURN b
        END FUNCTION

        SET sp TO ceil_sqrt(l)
        SET ep TO floor_sqrt(r)

        SET count_s TO 0
        DEFINE PROCEDURE increment_if_prime(val)
            IF is_prime(val) THEN 
                SET count_s TO count_s + 1
            END IF
        END PROCEDURE

        FOR z FROM sp TO ep
            increment_if_prime(z)
        END FOR

        SET total_elems TO (r - l) + 1

        RETURN total_elems - count_s
    END FUNCTION
END CLASS