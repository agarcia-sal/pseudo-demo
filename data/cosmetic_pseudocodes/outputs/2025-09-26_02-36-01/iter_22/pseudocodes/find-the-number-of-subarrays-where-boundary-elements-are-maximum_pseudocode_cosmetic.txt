CLASS Solution
	 FUNCTION numberOfSubarrays(nums)
		 DEFINE addIndexToMap(key, container)
			 IF key NOT IN container THEN
				 ASSIGN container[key] TO empty list
			 END IF
			 APPEND currentIndex TO container[key]
		 END FUNCTION
		 
		 ASSIGN index_map TO an empty dictionary
		 ASSIGN currentIndex TO zero
		 
		 WHILE currentIndex < LENGTH(nums)
			 CALL addIndexToMap(nums[currentIndex], index_map)
			 ASSIGN currentIndex TO currentIndex + 1
		 END WHILE
		 
		 ASSIGN totalCount TO 0
		 FOR each collectedIndices IN the VALUES of index_map DO
			 ASSIGN lengthIndices TO LENGTH(collectedIndices)
			 ASSIGN outerInd TO 0
			 
			 WHILE outerInd <= lengthIndices - 1
				 ASSIGN innerInd TO outerInd
				 REPEAT
					 ASSIGN startIndex TO collectedIndices[outerInd]
					 ASSIGN endIndex TO collectedIndices[innerInd]
					 ASSIGN currentRange TO EMPTY LIST
					 ASSIGN scanPos TO startIndex
					 WHILE scanPos <= endIndex
						 APPEND nums[scanPos] TO currentRange
						 ASSIGN scanPos TO scanPos + 1
					 END WHILE
					 
					 ASSIGN maxElement TO nums[ startIndex ]
					 IF NOT (maxElement < MAXIMUM(currentRange))
						 ASSIGN totalCount TO totalCount + 1
					 END IF
					 
					 ASSIGN innerInd TO innerInd + 1
				 UNTIL innerInd > lengthIndices - 1
				 ASSIGN outerInd TO outerInd + 1
			 END WHILE
		 END FOR
		 
		 RETURN totalCount
	 END FUNCTION
END CLASS