CLASS Solution  
    FUNCTION maxOperations(nums)  
        FUNCTION dfs(a, b, c, d)  
            IF a GREATER THAN OR EQUAL TO b THEN  
                RETURN 0  
            END IF  
            IF (a, b, c) IN d THEN  
                RETURN d[(a, b, c)]  
            END IF  
            SET res TO 0  
            SET first_pair TO nums[a] + nums[a + 1]  
            IF first_pair EQUALS c THEN  
                SET res TO MAX(res, 1 + dfs(a + 2, b, c, d))  
            END IF  
            SET second_pair TO nums[b] + nums[b - 1]  
            IF second_pair EQUALS c THEN  
                SET res TO MAX(res, 1 + dfs(a, b - 2, c, d))  
            END IF  
            SET cross_pair TO nums[a] + nums[b]  
            IF cross_pair EQUALS c THEN  
                SET res TO MAX(res, 1 + dfs(a + 1, b - 1, c, d))  
            END IF  
            d[(a, b, c)] = res  
            RETURN res  
        END FUNCTION  
        SET length_val TO LENGTH(nums)  
        SET dict1 TO EMPTY DICTIONARY  
        SET dict2 TO EMPTY DICTIONARY  
        SET dict3 TO EMPTY DICTIONARY  
        SET option1 TO 1 + dfs(2, length_val - 1, nums[0] + nums[1], dict1)  
        SET option2 TO 1 + dfs(0, length_val - 3, nums[length_val - 2] + nums[length_val - 1], dict2)  
        SET option3 TO 1 + dfs(1, length_val - 2, nums[0] + nums[length_val - 1], dict3)  
        RETURN MAX(option1, option2, option3)  
    END FUNCTION  
END CLASS