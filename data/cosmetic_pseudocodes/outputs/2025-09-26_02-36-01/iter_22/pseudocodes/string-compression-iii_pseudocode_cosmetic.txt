CLASS Solution
    FUNCTION compressedString(word)
        SET index TO 0
        SET segments TO list()
        REPEAT
            IF NOT (index < LENGTH(word)) THEN
                BREAK
            END IF
            SET currentChar TO word[index]
            SET tally TO 0
            WHILE ((index < LENGTH(word)) AND (word[index] = currentChar)) DO
                SET tally TO tally + 1
                SET index TO index + 1
                IF (tally >= 9) THEN
                    EXIT WHILE
                END IF
            END WHILE
            CALL AppendSegment(segments, tally, currentChar)
        UNTIL false
        RETURN CombineSegments(segments)
    END FUNCTION

    FUNCTION AppendSegment(listRef, number, character)
        SET stringForm TO ConvertNumberToString(number)
        SET entry TO stringForm + character
        INSERT entry AT END OF listRef
    END FUNCTION

    FUNCTION ConvertNumberToString(num)
        IF num = 0 THEN
            RETURN "0"
        END IF
        SET digits TO EMPTY LIST
        SET value TO num
        WHILE NOT (value = 0) DO
            SET digitChar TO CharacterFromCode(48 + (value MOD 10))
            PREPEND digitChar TO digits
            SET value TO FLOOR(value / 10)
        END WHILE
        RETURN JoinCharacters(digits)
    END FUNCTION

    FUNCTION CombineSegments(listRef)
        SET outputString TO ""
        FOR EACH item IN listRef DO
            SET outputString TO outputString + item
        END FOR
        RETURN outputString
    END FUNCTION

    FUNCTION CharacterFromCode(code)
        // Assuming ASCII codes for digits
        RETURN code AS CHARACTER
    END FUNCTION

    FUNCTION JoinCharacters(charList)
        SET resultString TO ""
        FOR EACH ch IN charList DO
            SET resultString TO resultString + ch
        END FOR
        RETURN resultString
    END FUNCTION
END CLASS