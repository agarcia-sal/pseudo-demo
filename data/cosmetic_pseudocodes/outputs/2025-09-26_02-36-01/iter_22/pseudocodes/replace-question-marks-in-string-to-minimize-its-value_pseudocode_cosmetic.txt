CLASS Solution
    FUNCTION minimizeStringValue(s)
        DEFINE FUNCTION helper_increment(map_var, key_var)
            IF key_var IN map_var THEN
                SET map_var[key_var] TO map_var[key_var] + 1
            ELSE
                SET map_var[key_var] TO 1
            END IF
        END FUNCTION

        DEFINE FUNCTION helper_find_min_key(freq_map)
            SET minimal_value TO 1 / 0
            SET minimal_key TO null
            DEFINE ARRAY alphabet_set = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
            SET index_var TO 0
            WHILE index_var < LENGTH OF alphabet_set DO
                SET current_key TO alphabet_set[index_var]
                SET current_value TO 0
                IF current_key IN freq_map THEN
                    SET current_value TO freq_map[current_key]
                END IF
                IF current_value < minimal_value THEN
                    SET minimal_value TO current_value
                    SET minimal_key TO current_key
                END IF
                SET index_var TO index_var + 1
            END WHILE
            RETURN minimal_key
        END FUNCTION

        SET freq_map TO EMPTY MAP
        DEFINE VARIABLE position_var TO 0
        WHILE position_var < LENGTH OF s DO
            SET char_var TO s AT position_var
            IF char_var IS NOT "?" THEN
                IF char_var IN freq_map THEN
                    SET freq_map[char_var] TO freq_map[char_var] + 1
                ELSE
                    SET freq_map[char_var] TO 1
                END IF
            END IF
            SET position_var TO position_var + 1
        END WHILE

        SET question_positions TO EMPTY LIST
        SET cursor_var TO 0
        REPEAT
            IF cursor_var >= LENGTH OF s THEN
                BREAK
            END IF
            SET current_character TO s AT cursor_var
            IF current_character IS "?" THEN
                APPEND cursor_var TO question_positions
            END IF
            SET cursor_var TO cursor_var + 1
        UNTIL FALSE

        SET replacement_array TO EMPTY LIST
        SET iter_var TO 0
        WHILE iter_var < LENGTH OF question_positions DO
            SET minimal_character TO helper_find_min_key(freq_map)
            APPEND minimal_character TO replacement_array
            CALL helper_increment(freq_map,minimal_character)
            SET iter_var TO iter_var + 1
        END WHILE

        DEFINE VARIABLE temp_list TO EMPTY LIST
        SET idx_var TO 0
        WHILE idx_var < LENGTH OF s DO
            APPEND s AT idx_var TO temp_list
            SET idx_var TO idx_var + 1
        END WHILE

        SET xx TO 0
        WHILE xx < LENGTH OF question_positions DO
            SET temp_list[question_positions[xx]] TO replacement_array[xx]
            SET xx TO xx + 1
        END WHILE

        DEFINE VARIABLE result_str TO ""
        SET yy TO 0
        WHILE yy < LENGTH OF temp_list DO
            SET result_str TO result_str + temp_list[yy]
            SET yy TO yy + 1
        END WHILE

        RETURN result_str
    END FUNCTION
END CLASS