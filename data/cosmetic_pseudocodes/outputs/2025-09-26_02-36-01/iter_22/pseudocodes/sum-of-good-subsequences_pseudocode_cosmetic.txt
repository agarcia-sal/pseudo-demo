CLASS Solution
    FUNCTION sumOfGoodSubsequences(nums)
        CONST mod AS 1000000000 + 7
        DECLARE L, M AS MAP WITH DEFAULT 0
        DECLARE p, q, r, s, t, u AS INTEGER
        SET w TO 0
        
        SET idx TO 0
        WHILE idx < LENGTH(nums)
            SET a TO nums[idx]
            SET L[a] TO L[a] + 0
            SET M[a] TO M[a] + 0
            
            SET M[a] TO M[a] + 1
            SET L[a] TO L[a] + a
            
            SET p TO L[a] + L[a - 1]
            SET q TO M[a - 1] * a
            SET L[a] TO (p + q) % mod
            
            SET r TO M[a] + M[a - 1]
            SET M[a] TO r % mod
            
            SET s TO L[a] + L[a + 1]
            SET t TO M[a + 1] * a
            SET L[a] TO (s + t) % mod
            
            SET u TO M[a] + M[a + 1]
            SET M[a] TO u % mod
            
            SET idx TO idx + 1
        END WHILE
        
        SET total TO 0
        FOR EACH val IN VALUES(L)
            SET total TO total + val
        END FOR
        
        RETURN total % mod
    END FUNCTION
END CLASS