CLASS Solution
    FUNCTION countAlternatingSubarrays(numbers)
        PROCEDURE addValues(VAR total, VAR addition)
            total ← total + addition
        END PROCEDURE

        PROCEDURE areDifferent(a, b)
            RETURN NOT (a = b)
        END PROCEDURE

        PROCEDURE getLength(collection)
            RETURN LENGTH OF collection
        END PROCEDURE

        PROCEDURE getElement(collection, idx)
            RETURN element at position idx of collection
        END PROCEDURE

        VAR size ← getLength(numbers)
        IF (0 < 1) AND (size = 0) THEN
            RETURN 0
        END IF

        VAR aggregate ← size
        VAR segmentSize ← 1

        VAR index ← 1
        WHILE index < size DO
            IF areDifferent(getElement(numbers, index), getElement(numbers, index - 1)) THEN
                VAR incremented ← segmentSize + 1
                segmentSize ← incremented
            ELSE
                segmentSize ← 1
            END IF

            VAR diff ← segmentSize - 1
            addValues(aggregate, diff)

            index ← index + 1
        END WHILE

        RETURN aggregate
    END FUNCTION
END CLASS