CLASS Solution
    FUNCTION maximumLength(lambdas alphas)
        SET omega TO LENGTH OF lambdas
        SET matrix TO NEW LIST
        DEFINE FUNCTION initRow(size, value)
            SET result TO EMPTY LIST
            SET counter TO 0
            REPEAT
                ADD value TO result
                SET counter TO counter + 1
            UNTIL counter EQUALS size
            RETURN result
        END FUNCTION
        SET indexDelta TO k + 1
        SET rowCounter TO 0
        REPEAT
            ADD initRow(indexDelta, 1) TO matrix
            SET rowCounter TO rowCounter + 1
        UNTIL rowCounter EQUALS omega
        SET maxResult TO 0
        SET outerIndex TO 0
        DEFINE FUNCTION maxVal(a, b)
            IF a > b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION
        WHILE outerIndex < omega
            SET currentValue TO lambdas[outerIndex]
            SET hIndex TO 0
            WHILE hIndex <= k
                SET innerIndex TO 0
                WHILE innerIndex < outerIndex
                    SET prevValue TO lambdas[innerIndex]
                    IF (currentValue = prevValue) THEN
                        SET matrix[outerIndex][hIndex] TO maxVal(matrix[outerIndex][hIndex], matrix[innerIndex][hIndex] + 1)
                    ELSE
                        IF (hIndex > 0) THEN
                            SET matrix[outerIndex][hIndex] TO maxVal(matrix[outerIndex][hIndex], matrix[innerIndex][hIndex - 1] + 1)
                        END IF
                    END IF
                    SET innerIndex TO innerIndex + 1
                END WHILE
                SET hIndex TO hIndex + 1
            END WHILE
            SET maxResult TO maxVal(maxResult, matrix[outerIndex][k])
            SET outerIndex TO outerIndex + 1
        END WHILE
        RETURN maxResult
    END FUNCTION
END CLASS