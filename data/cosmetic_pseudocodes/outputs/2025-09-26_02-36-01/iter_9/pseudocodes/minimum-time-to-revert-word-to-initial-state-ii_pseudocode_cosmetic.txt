CLASS Solution
    FUNCTION minimumTimeToInitialState(word parameter omega AND integer parameter z) RETURNS integer
        FUNCTION extractor(source STRING, start_pos INTEGER) RETURNS STRING
            VAR idx IS start_pos
            VAR result IS ""
            REPEAT
                IF idx > LENGTH_OF(source) THEN
                    BREAK
                END IF
                SET result TO result CONCATENATED WITH CHARACTER_AT(source, idx)
                SET idx TO idx + 1
            UNTIL FALSE
            RETURN result
        END FUNCTION

        FUNCTION prefixChecker(mainStr STRING, subStr STRING) RETURNS BOOLEAN
            VAR i IS 1
            VAR isEqual IS TRUE
            WHILE i <= LENGTH_OF(subStr) AND isEqual DO
                IF CHARACTER_AT(mainStr, i) != CHARACTER_AT(subStr, i) THEN
                    SET isEqual TO FALSE
                END IF
                SET i TO i + 1
            END WHILE
            RETURN isEqual
        END FUNCTION

        VAR length_var IS LENGTH_OF(omega)
        VAR counter IS 1
        VAR running IS TRUE

        WHILE running DO
            VAR startIndex IS counter * z
            VAR segment IS extractor(omega, startIndex)
            IF prefixChecker(omega, segment) THEN
                running = FALSE
                RETURN counter
            END IF
            SET counter TO counter + 1
        END WHILE
    END FUNCTION
END CLASS