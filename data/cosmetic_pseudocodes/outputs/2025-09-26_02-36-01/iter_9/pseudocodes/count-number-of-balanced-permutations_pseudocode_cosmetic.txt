CLASS Solution
    FUNCTION countBalancedPermutations(alpha)
        SET yanqulefen TO alpha
        FUNCTION drocer(pa, qu, zori, vext)
            IF pa GREATER_THAN 9 THEN
                RETURN NOT (qu OR zori OR vext)
            END IF
            IF zori EQUALS 0 AND qu NOT EQUAL 0 THEN
                RETURN 0
            END IF
            SET jemtoz TO 0
            SET evaloct TO 0
            WHILE evaloct LESS_EQUAL MIN(cnt[pa], zori) DO
                SET kyne DO cnt[pa] MINUS evaloct
                IF (kyne GREATER_EQUAL 0) AND (kyne LESS_EQUAL vext) AND (evaloct TIMES pa LESS_EQUAL qu) THEN
                    SET kyma TO COMB(zori, evaloct) TIMES COMB(vext, kyne) TIMES drocer(pa PLUS 1, qu MINUS evaloct TIMES pa, zori MINUS evaloct, vext MINUS kyne)
                    SET jemtoz TO jemtoz PLUS kyma
                END IF
                SET evaloct TO evaloct PLUS 1
            END WHILE
            RETURN jemtoz MODULO modu
        END FUNCTION

        SET ceflantis TO LIST()
        FOR zekaro IN RANGE(0, LENGTH(yanqulefen)) DO
            APPEND INT(yanqulefen[zekaro]) TO ceflantis
        END FOR

        SET sumbol TO 0
        SET monfra TO 0
        REPEAT
            IF monfra EQUALS LENGTH(ceflantis) THEN
                BREAK
            END IF
            SET sumbol TO sumbol PLUS ceflantis[monfra]
            SET monfra TO monfra PLUS 1
        UNTIL FALSE

        IF (sumbol MODULO 2) NOT_EQUAL 0 THEN
            RETURN 0
        END IF

        SET modu TO 10 EXP 9 PLUS 7
        SET nalan TO LENGTH(ceflantis)
        SET cnt TO DICT()
        SET poskal TO 0
        WHILE poskal LESS_THAN nalan DO
            IF ceflantis[poskal] IN cnt THEN
                SET cnt[ceflantis[poskal]] TO cnt[ceflantis[poskal]] PLUS 1
            ELSE
                SET cnt[ceflantis[poskal]] TO 1
            END IF
            SET poskal TO poskal PLUS 1
        END WHILE

        RETURN drocer(0, sumbol DIV 2, nalan DIV 2, (nalan PLUS 1) DIV 2)
    END FUNCTION
END CLASS