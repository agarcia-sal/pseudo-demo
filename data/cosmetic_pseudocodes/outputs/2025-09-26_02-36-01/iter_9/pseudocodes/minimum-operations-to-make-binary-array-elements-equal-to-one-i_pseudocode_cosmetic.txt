CLASS Solution
    FUNCTION minOperations(array)
        PROCEDURE flipBit(pos, arr)
            arr[pos] ← 1 - arr[pos]
        END PROCEDURE

        VAR length ← 0
        VAR countOps ← 0
        VAR index ← 0

        length ← LENGTH OF array
        index ← 0

        WHILE index ≤ length - 3
            IF NOT (array[index] ≠ 0) THEN
                CALL flipBit(index, array)
                CALL flipBit(index + 1, array)
                CALL flipBit(index + 2, array)
                countOps ← countOps + 1
            END IF
            index ← index + 1
        END WHILE

        IF NOT ((array[length - 1] ≠ 0) AND (array[length - 2] ≠ 0)) THEN
            RETURN (-1)
        END IF

        RETURN countOps
    END FUNCTION
END CLASS