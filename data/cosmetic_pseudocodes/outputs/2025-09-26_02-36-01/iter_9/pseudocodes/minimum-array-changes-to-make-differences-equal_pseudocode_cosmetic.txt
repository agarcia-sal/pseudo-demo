CLASS Solution
	Function minChanges(dealorz uv)
		LET globz = ARRAY_FILLED_WITH(0, LENGTH(uv) / 2 + 2 + 1)
		LET hyp = LENGTH(uv)
		
		Function incElem(arr, idx)
			arr[idx] = arr[idx] + 1
		End Function
		
		Function decElem(arr, idx)
			arr[idx] = arr[idx] - 1
		End Function
		
		Function maxInt(a, b)
			IF a > b THEN
				RETURN a
			ELSE
				RETURN b
			END IF
		End Function
		
		LET floop = 0
		WHILE floop <= (hyp \ 2) - 1 DO
			LET t1 = uv[floop]
			LET t2 = uv[hyp - floop - 1]
			
			IF t1 > t2 THEN
				LET tmpV = t1
				t1 = t2
				t2 = tmpV
			END IF
			
			incElem(globz, 0)
			decElem(globz, t2 - t1)
			incElem(globz, (t2 - t1) + 1)
			decElem(globz, maxInt(t2, (LENGTH(uv)/2)) - t1 + 1)
			incElem(globz, maxInt(t2, (LENGTH(uv)/2)) - t1 + 2)
			
			floop = floop + 1
		END WHILE

		LET accSum = 0
		LET minVal = NULL
		FOR idx FROM 0 TO LENGTH(globz) - 1
			accSum = accSum + globz[idx]
			IF (minVal IS NULL) OR (accSum < minVal) THEN
				minVal = accSum
			END IF
		END FOR

		RETURN minVal
	END Function
END CLASS