CLASS Solution
    FUNCTION minOperations(zarr)
        SET cnumber TO LENGTH OF zarr
        IF NOT (cnumber > 0) THEN
            RETURN 0
        END IF

        FUNCTION maxVal(a, b)
            IF a > b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION

        SET tempList TO EMPTY LIST
        SET idxCounter TO 0
        WHILE idxCounter < cnumber
            APPEND 1 TO tempList
            SET idxCounter TO idxCounter + 1
        END WHILE

        FUNCTION innerLoop(x)
            PROCEDURE process(j, currentMax)
                IF zarr[x] <= zarr[j] THEN
                    SET currentMax TO maxVal(currentMax, tempList[j] + 1)
                END IF
                RETURN currentMax
            END PROCEDURE

            SET acc TO tempList[x]
            SET iterJ TO 0
            WHILE iterJ < x
                SET acc TO process(iterJ, acc)
                SET iterJ TO iterJ + 1
            END WHILE
            SET tempList[x] TO acc
        END FUNCTION

        SET iterI TO 1
        WHILE iterI < cnumber
            innerLoop(iterI)
            SET iterI TO iterI + 1
        END WHILE

        FUNCTION findMax(arr)
            IF LENGTH OF arr = 0 THEN
                RETURN 0
            END IF
            SET maxSoFar TO arr[0]
            SET counterY TO 1
            WHILE counterY < LENGTH OF arr
                IF arr[counterY] > maxSoFar THEN
                    SET maxSoFar TO arr[counterY]
                END IF
                SET counterY TO counterY + 1
            END WHILE
            RETURN maxSoFar
        END FUNCTION

        RETURN findMax(tempList)
    END FUNCTION
END CLASS