CLASS Solution
    FUNCTION maxPalindromesAfterOperations(words)
        FUNCTION tallyCharacters(collection)
            SET mapCounts TO empty map
            FOR each str IN collection
                SET idx TO 0
                WHILE idx LESS THAN Length(str)
                    SET ch TO str[idx]
                    IF ch NOT IN mapCounts
                        SET mapCounts[ch] TO 0
                    END IF
                    SET mapCounts[ch] TO mapCounts[ch] + 1
                    SET idx TO idx + 1
                END WHILE
            END FOR
            RETURN mapCounts
        END FUNCTION

        FUNCTION ascendingLengthSort(a,b)
            RETURN (Length(a) > Length(b)) ? 1 : ((Length(a) < Length(b)) ? -1 : 0)
        END FUNCTION

        SET gfoqzlkyr TO tallyCharacters(words)
        SET wrmhlup TO 0
        SET kcstzdie TO 0
        SET valsList TO empty list
        FOR kyetcfu IN gfoqzlkyr.keys()
            valsList APPEND gfoqzlkyr[kyetcfu]
        END FOR

        SET nfobwa TO 0
        WHILE nfobwa LESS THAN Length(valsList)
            SET qfmrxin TO valsList[nfobwa]
            SET wrmhlup TO wrmhlup + (qfmrxin DIV 2)
            SET kcstzdie TO kcstzdie + (qfmrxin MOD 2)
            SET nfobwa TO nfobwa + 1
        END WHILE

        FUNCTION sortWordsAscending(listWords)
            SET newList TO empty list
            SET ceuemrw TO 0
            WHILE ceuemrw LESS THAN Length(listWords)
                newList APPEND listWords[ceuemrw]
                SET ceuemrw TO ceuemrw + 1
            END WHILE

            SET changed TO TRUE
            WHILE changed
                SET changed TO FALSE
                SET i TO 1
                WHILE i LESS THAN Length(newList)
                    IF Length(newList[i-1]) > Length(newList[i])
                        SET temp TO newList[i-1]
                        SET newList[i-1] TO newList[i]
                        SET newList[i] TO temp
                        SET changed TO TRUE
                    END IF
                    SET i TO i + 1
                END WHILE
            END WHILE
            RETURN newList
        END FUNCTION

        SET ulwvybfn TO sortWordsAscending(words)
        SET gsaupr TO 0
        SET cvemri TO 0
        WHILE cvemri LESS THAN Length(ulwvybfn)
            SET algqbm TO ulwvybfn[cvemri]
            SET iwhukodt TO Length(algqbm) DIV 2
            IF wrmhlup >= iwhukodt
                SET wrmhlup TO wrmhlup - iwhukodt
                SET gsaupr TO gsaupr + 1
            END IF
            SET cvemri TO cvemri + 1
        END WHILE

        RETURN gsaupr
    END FUNCTION
END CLASS