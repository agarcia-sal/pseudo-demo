CLASS Solution
    FUNCTION maximumValueSum(beta, delta, epsilon)
        PROCEDURE exclusiveOr(a, b) RETURNS Integer
            RETURN (a BITWISE_AND (b BITWISE_XOR 0)) BITWISE_OR ((a BITWISE_XOR 0) BITWISE_AND b)
        END PROCEDURE

        VARIABLE omega <- 0
        VARIABLE phi <- 0
        VARIABLE psi <- +âˆž

        VARIABLE alphaIndex <- 1
        WHILE alphaIndex <= LENGTH(beta) DO
            VARIABLE sigma <- exclusiveOr(beta[alphaIndex], delta)
            VARIABLE chi <- sigma - beta[alphaIndex]

            IF 0 < chi THEN
                phi <- phi + 1
            END IF

            IF beta[alphaIndex] > sigma THEN
                omega <- omega + beta[alphaIndex]
            ELSE
                omega <- omega + sigma
            END IF

            VARIABLE rho <- chi
            IF rho < 0 THEN
                rho <- 0 - rho
            END IF

            IF psi > rho THEN
                psi <- rho
            END IF

            alphaIndex <- alphaIndex + 1
        END WHILE

        IF ((phi MOD 2) - 0) != 0 THEN
            omega <- omega - psi
        END IF

        RETURN omega
    END FUNCTION
END CLASS