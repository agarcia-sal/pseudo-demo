CLASS Solution
    FUNCTION sumOfPower(qsdap parameter, lfen parameter)
        FUNCTION modAdd(pnvw parameter, rjch parameter) RETURNS INTEGER
            RETURN (pnvw + rjch) - MOD * ((pnvw + rjch) / MOD)
        END FUNCTION

        FUNCTION powerOfTwo(ixa parameter) RETURNS INTEGER
            SET res TO 1
            SET idx TO 0
            WHILE idx < ixa
                SET res TO modAdd(res, res)
                SET idx TO idx + 1
            END WHILE
            RETURN res
        END FUNCTION

        SET MOD TO 1000000007
        SET xdpf TO LENGTH OF qsdap
        SET xtzm TO LIST OF LENGTH (xdpf + 1) WITH EACH ELEMENT BEING LIST OF LENGTH (lfen + 1) INITIALIZED WITH 0
        SET xtzm[0][0] TO 1

        SET vxrp TO 1
        REPEAT UNTIL vxrp > xdpf
            SET lmisc TO 0
            WHILE lmisc <= lfen
                SET xtzm[vxrp][lmisc] TO xtzm[vxrp - 1][lmisc]
                IF lmisc >= qsdap[vxrp - 1]
                    SET xtzm[vxrp][lmisc] TO modAdd(xtzm[vxrp][lmisc], xtzm[vxrp - 1][lmisc - qsdap[vxrp - 1]])
                END IF
                SET lmisc TO lmisc + 1
            END WHILE
            SET vxrp TO vxrp + 1
        END REPEAT

        SET dpowyo TO 0
        SET zizry TO powerOfTwo(xdpf)
        SET bzfr TO 1
        WHILE bzfr < zizry
            SET eajvg TO 0
            SET gbxen TO 0
            SET wyso TO bzfr
            WHILE wyso > 0
                IF wyso % 2 == 1
                    SET eajvg TO eajvg + qsdap[gbxen]
                END IF
                SET gbxen TO gbxen + 1
                SET wyso TO wyso / 2
            END WHILE
            IF eajvg == lfen
                SET dpowyo TO (dpowyo + powerOfTwo(xdpf - gbxen)) % MOD
            END IF
            SET bzfr TO bzfr + 1
        END WHILE

        RETURN dpowyo
    END FUNCTION
END CLASS