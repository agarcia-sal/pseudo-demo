CLASS Solution
    FUNCTION minimumLength(t)
        FUNCTION tallyElements(u)
            DICT w = EMPTY_DICTIONARY
            PROCEDURE incrementDict(k)
                IF k IN w
                    w[k] = w[k] + 1
                ELSE
                    w[k] = 1
                END IF
            END PROCEDURE
            INTEGER i = 0
            REPEAT
                IF i >= LENGTH(u)
                    EXIT
                END IF
                CALL incrementDict(u[i])
                i = i + 1
            UNTIL FALSE
            RETURN w
        END FUNCTION

        DICT z = tallyElements(t)

        FUNCTION isOdd(nv)
            RETURN ((nv MOD 2) = 1)
        END FUNCTION

        FUNCTION isNonZeroEven(nv)
            RETURN ((nv MOD 2) = 0) AND (nv <> 0)
        END FUNCTION

        INTEGER accumOdd = 0
        INTEGER accumEven = 0

        LIST vals = []
        PROCEDURE collectValues(dictValues)
            FOR EACH val IN dictValues
                APPEND val TO vals
            END FOR
        END PROCEDURE

        CALL collectValues(z.VALUES)

        FUNCTION processAtIndex(idx)
            IF idx >= LENGTH(vals)
                RETURN
            ELSE
                INTEGER currentValue = vals[idx]
                IF isOdd(currentValue)
                    accumOdd = accumOdd + 1
                ELSE
                    IF isNonZeroEven(currentValue)
                        accumEven = accumEven + 2
                    END IF
                END IF
                CALL processAtIndex(idx + 1)
            END IF
        END FUNCTION

        CALL processAtIndex(0)

        INTEGER wResult = accumOdd + accumEven

        RETURN wResult
    END FUNCTION
END CLASS