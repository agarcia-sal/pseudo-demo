CLASS Solution  
    FUNCTION maximumSubarraySum(alpha beta)  
        PROCEDURE checkKeyExists(dictRef, keyToCheck, booleanResult)  
            SET booleanResult TO FALSE  
            FOR EACH k IN dictRef KEYS  
                IF k EQUALS keyToCheck  
                    SET booleanResult TO TRUE  
                    RETURN 
                END IF  
            END FOR  
        END PROCEDURE  

        PROCEDURE maxValue(a, b, result)  
            IF a GREATER THAN b  
                SET result TO a  
            ELSE  
                SET result TO b  
            END IF  
        END PROCEDURE  

        PROCEDURE minValue(a, b, result)  
            IF a LESS THAN b  
                SET result TO a  
            ELSE  
                SET result TO b  
            END IF  
        END PROCEDURE  

        SET zeta TO DICTIONARY()  
        SET omega TO -1E9 - 1E9 - 1E9  
        SET phi TO 0  

        SET i TO 0  
        WHILE i LESS THAN LENGTH OF alpha  
            SET currentNum TO alpha[i]  

            SET keyExists1 TO FALSE  
            CALL checkKeyExists(zeta, currentNum - beta, keyExists1)  
            IF keyExists1 IS TRUE  
                SET calc1 TO 0  
                CALL maxValue(omega, phi - zeta[currentNum - beta] + currentNum, calc1)  
                SET omega TO calc1  
            END IF  

            SET keyExists2 TO FALSE  
            CALL checkKeyExists(zeta, currentNum + beta, keyExists2)  
            IF keyExists2 IS TRUE  
                SET calc2 TO 0  
                CALL maxValue(omega, phi - zeta[currentNum + beta] + currentNum, calc2)  
                SET omega TO calc2  
            END IF  

            SET keyExists3 TO FALSE  
            CALL checkKeyExists(zeta, currentNum, keyExists3)  

            IF keyExists3 IS TRUE  
                SET tempMin TO 0  
                CALL minValue(zeta[currentNum], phi, tempMin)  
                SET zeta[currentNum] TO tempMin  
            ELSE  
                SET zeta[currentNum] TO phi  
            END IF  

            SET phi TO phi + currentNum  
            SET i TO i + 1  
        END WHILE  

        IF omega NOT EQUAL -1E9 - 1E9 - 1E9  
            RETURN omega  
        ELSE  
            RETURN 0  
        END IF  
    END FUNCTION  
END CLASS