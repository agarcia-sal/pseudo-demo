CLASS Solution
	FUNCTION beautifulIndices(x parameter, y parameter, z parameter, w parameter)
		
		PROCEDURE extractPositions(str, pattern, resultList)
			LET strLen BE LENGTH OF str
			LET patLen BE LENGTH OF pattern
			LET cursor BE 0
			WHILE cursor <= (strLen - patLen)
				IF eqSubstr(str, cursor, pattern, patLen)
					ADD cursor TO resultList
				END IF
				SET cursor TO cursor + 1
			END WHILE
		END PROCEDURE
		
		PROCEDURE eqSubstr(source, startIdx, target, count)
			LET idx BE 0
			WHILE idx < count
				IF source[startIdx + idx] != target[idx]
					RETURN FALSE
				END IF
				SET idx TO idx + 1
			END WHILE
			RETURN TRUE
		END PROCEDURE
		
		PROCEDURE absDiff(a, b)
			IF a >= b
				RETURN a - b
			ELSE
				RETURN b - a
			END IF
		END PROCEDURE
		
		
		LET positionsY BE EMPTY LIST
		LET positionsZ BE EMPTY LIST
		
		EXECUTE extractPositions(x, y, positionsY)
		EXECUTE extractPositions(x, z, positionsZ)
		
		LET answerList BE EMPTY LIST
		
		PROCEDURE hasClosePosition(ele, candidates, limit)
			LET pIndex BE 0
			WHILE pIndex < LENGTH OF candidates
				IF absDiff(ele, candidates[pIndex]) <= limit
					RETURN TRUE
				END IF
				SET pIndex TO pIndex + 1
			END WHILE
			RETURN FALSE
		END PROCEDURE
		
		LET counter BE 0
		WHILE counter < LENGTH OF positionsY
			IF hasClosePosition(positionsY[counter], positionsZ, w)
				ADD positionsY[counter] TO answerList
			END IF
			SET counter TO counter + 1
		END WHILE
		
		RETURN answerList
	END FUNCTION
END CLASS