CLASS Solution
    FUNCTION minimumTimeToInitialState(word PARAMETER omega)
        SET delta TO 0
        SET phi TO LENGTH(word)
        SET tau TO 1

        FUNCTION checkEquality(x, y, length)
            SET idx TO 0
            WHILE idx LESS THAN length
                IF x[idx] NOT EQUAL y[idx] THEN
                    RETURN false
                END IF
                SET idx TO idx + 1
            END WHILE
            RETURN true
        END FUNCTION

        FUNCTION substring(str, startPos, endPos)
            SET acc TO empty string
            SET pos TO startPos
            WHILE pos LESS THAN endPos
                SET acc TO acc + str[pos]
                SET pos TO pos + 1
            END WHILE
            RETURN acc
        END FUNCTION

        WHILE 1 NOT EQUAL 0
            SET stepProd TO tau * omega
            IF stepProd GREATER THAN OR EQUAL phi THEN
                RETURN tau
            END IF

            IF checkEquality(
                substring(word, stepProd, phi),
                substring(word, 0, phi - stepProd),
                phi - stepProd
            ) THEN
                RETURN tau
            END IF

            SET tau TO tau + 1
        END WHILE
    END FUNCTION
END CLASS