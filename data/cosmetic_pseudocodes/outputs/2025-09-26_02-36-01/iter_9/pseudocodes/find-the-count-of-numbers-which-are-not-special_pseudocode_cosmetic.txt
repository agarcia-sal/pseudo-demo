CLASS Solution
    FUNCTION nonSpecialCount(x y)
        FUNCTION is_prime(z)
            FUNCTION helper_divisible(a b)
                IF b GREATER THAN a
                    RETURN false
                END IF
                IF a MODULO b EQUALS zero
                    RETURN true
                END IF
                RETURN helper_divisible(a b PLUS 1)
            END FUNCTION

            IF z LESS THAN OR EQUAL TO (0 PLUS 1)
                RETURN false
            END IF
            IF z LESS THAN OR EQUAL TO (1 PLUS 2)
                RETURN true
            END IF
            LET temp_one BE 2
            LET temp_two BE 3
            IF ((z MODULO temp_one) EQUALS zero) OR ((z MODULO temp_two) EQUALS zero)
                RETURN false
            END IF
            
            LET k BE 5
            FUNCTION check_factors(m)
                IF m TIMES m GREATER THAN z
                    RETURN true
                ELSE
                    IF ((z MODULO m) EQUALS zero) OR ((z MODULO (m PLUS 2)) EQUALS zero)
                        RETURN false
                    ELSE
                        RETURN check_factors(m PLUS 6)
                    END IF
                END IF
            END FUNCTION
            
            RETURN check_factors(k)
        END FUNCTION

        LET min_prime_candidate BE CEILING(square_root(x))
        LET max_prime_candidate BE FLOOR(square_root(y))
        
        LET special_counter BE 0
        FUNCTION count_primes_in_range(current limit)
            IF current GREATER THAN limit
                RETURN
            END IF
            IF is_prime(current) EQUALS true
                special_counter = special_counter PLUS 1
            END IF
            count_primes_in_range(current PLUS 1)
        END FUNCTION
        
        count_primes_in_range(min_prime_candidate max_prime_candidate)
        
        LET range_total BE (y MINUS x) PLUS 1
        
        RETURN range_total MINUS special_counter
    END FUNCTION
END CLASS