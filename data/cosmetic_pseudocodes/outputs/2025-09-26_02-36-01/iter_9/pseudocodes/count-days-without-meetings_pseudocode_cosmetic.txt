CLASS Solution
	FUNCTION countDays(gamma, delta)
		PROCEDURE quickSortTheta(e, a, b)
			IF a < b THEN
				SET pIndex TO partitionPi(e, a, b)
				quickSortTheta(e, a, pIndex - 1)
				quickSortTheta(e, pIndex + 1, b)
			END IF
		END PROCEDURE

		PROCEDURE swapSigma(arr, x, y)
			SET tmp TO arr[x]
			SET arr[x] TO arr[y]
			SET arr[y] TO tmp
		END PROCEDURE

		FUNCTION partitionPi(arr, low, high)
			SET pivot TO arr[high][0]
			SET i TO low - 1
			SET j TO low
			WHILE j <= high - 1 DO
				IF arr[j][0] <= pivot THEN
					SET i TO i + 1
					swapSigma(arr, i, j)
				END IF
				SET j TO j + 1
			END WHILE
			swapSigma(arr, i + 1, high)
			RETURN i + 1
		END FUNCTION

		quickSortTheta(delta, 0, LENGTH(delta) - 1)

		SET omega TO 1
		SET phi TO 0

		PROCEDURE processMeeting(zet)
			SET alpha TO zet[0]
			SET beta TO zet[1]
			IF omega < alpha THEN
				SET phi TO phi + (alpha - omega)
			END IF
			IF omega > beta THEN 
				SET omega TO omega
			ELSE
				SET omega TO beta + 1
			END IF
		END PROCEDURE

		SET kappa TO 0
		WHILE kappa < LENGTH(delta) DO
			processMeeting(delta[kappa])
			SET kappa TO kappa + 1
		END WHILE

		IF omega <= gamma THEN
			SET phi TO phi + (gamma - omega + 1)
		END IF

		RETURN phi
	END FUNCTION
END CLASS