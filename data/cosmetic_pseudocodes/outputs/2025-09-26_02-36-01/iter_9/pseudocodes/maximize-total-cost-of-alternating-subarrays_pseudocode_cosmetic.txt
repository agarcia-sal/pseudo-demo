CLASS Solution
    FUNCTION maximumTotalCost(theta)
        FUNCTION negOnePower(exp)
            IF exp MOD 2 EQUALS 0 THEN
                RETURN 1
            ELSE
                RETURN -1
            END IF
        END FUNCTION

        SET lenVar TO 0
        SET idxVar TO 0
        SET sumVar TO 0
        SET arrVar TO []
        SET innerIdx TO 0
        SET altSign TO 0

        SET lenVar TO LENGTH OF theta

        IF lenVar EQUALS 1 THEN
            RETURN theta[0]
        END IF

        SET arrVar TO NEW LIST OF ZEROS WITH SIZE lenVar

        arrVar[lenVar - 1] = theta[lenVar - 1]

        SET idxVar TO lenVar - 2
        WHILE idxVar GREATER OR EQUAL TO 0 DO
            sumVar = theta[idxVar]
            IF sumVar GREATER THAN arrVar[idxVar + 1] THEN
                arrVar[idxVar] = sumVar
            ELSE
                arrVar[idxVar] = arrVar[idxVar + 1] + sumVar
            END IF

            innerIdx = idxVar + 1
            WHILE innerIdx LESS THAN lenVar DO
                altSign = negOnePower(innerIdx - idxVar)
                sumVar = sumVar + (theta[innerIdx] * altSign)
                IF (innerIdx + 1) LESS THAN lenVar THEN
                    IF arrVar[idxVar] LESS THAN (sumVar + arrVar[innerIdx + 1]) THEN
                        arrVar[idxVar] = sumVar + arrVar[innerIdx + 1]
                    END IF
                ELSE
                    IF arrVar[idxVar] LESS THAN sumVar THEN
                        arrVar[idxVar] = sumVar
                    END IF
                END IF
                innerIdx = innerIdx + 1
            END WHILE
            idxVar = idxVar - 1
        END WHILE

        RETURN arrVar[0]
    END FUNCTION
END CLASS