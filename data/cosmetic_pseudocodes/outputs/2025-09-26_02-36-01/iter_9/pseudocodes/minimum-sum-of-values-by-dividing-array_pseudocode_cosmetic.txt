CLASS Solution
    FUNCTION minimumValueSum(alpha, beta)
        SET delta TO 0
        SET epsilon TO 0
        
        PROCEDURE calculateSigma(x, y, BYREF z)
            IF y IS EQUAL TO -1 THEN
                IF x IS EQUAL TO -1 THEN
                    SET z TO 0
                ELSE
                    SET z TO INF
                END IF
                RETURN
            END IF
            
            IF x IS EQUAL TO -1 THEN
                SET z TO INF
                RETURN
            END IF
            
            SET theta TO INF
            SET omega TO -1
            SET lambda TO x
            LABEL outer_loop:
                IF lambda < -1 THEN GOTO end_loop
                IF omega = -1 THEN
                    SET omega TO alpha[lambda]
                ELSE
                    SET omega TO (omega BITWISE_AND alpha[lambda])
                END IF
                
                IF omega = beta[y] THEN
                    CALL calculateSigma(lambda - 1, y - 1, temp)
                    SET candidate TO temp + alpha[x]
                    IF candidate < theta THEN
                        SET theta TO candidate
                    END IF
                END IF
                
                SET lambda TO lambda - 1
                GOTO outer_loop
            LABEL end_loop:
            
            SET z TO theta
        END PROCEDURE
        
        SET delta TO LENGTH_OF(alpha)
        SET epsilon TO LENGTH_OF(beta)
        
        SET result TO 0
        CALL calculateSigma(delta - 1, epsilon - 1, result)
        
        IF result != INF THEN
            RETURN result
        ELSE
            RETURN -1
        END IF
    END FUNCTION
END CLASS