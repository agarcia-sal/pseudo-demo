CLASS Solution
    FUNCTION maximumLength(nums k)
        LET p BE LENGTH OF nums
        LET fGrid BE LIST OF LISTS WITH p ROWS AND (k + 1) COLUMNS
        REPEAT p TIMES WITH idx OUTER
            LET rowList BE EMPTY LIST
            REPEAT (k + 1) TIMES WITH idxInner
                APPEND 1 TO rowList
            END REPEAT
            APPEND rowList TO fGrid
        END REPEAT

        LET maxVal BE 0
        LET outerIndex BE 0

        WHILE outerIndex < p
            LET currElem BE nums[outerIndex]
            LET hCounter BE 0
            WHILE hCounter <= k
                LET innerIndex BE 0

                WHILE innerIndex < outerIndex
                    LET prevElem BE nums[innerIndex]

                    IF currElem = prevElem THEN
                        LET candidate1 BE fGrid[outerIndex][hCounter]
                        LET candidate2 BE fGrid[innerIndex][hCounter] + 1
                        IF candidate1 < candidate2 THEN
                            SET fGrid[outerIndex][hCounter] = candidate2
                        END IF
                    ELSE
                        IF hCounter > 0 THEN
                            LET alternativeCandidate1 BE fGrid[outerIndex][hCounter]
                            LET alternativeCandidate2 BE (fGrid[innerIndex][hCounter] - 1) + 1
                            IF alternativeCandidate1 < alternativeCandidate2 THEN
                                SET fGrid[outerIndex][hCounter] = alternativeCandidate2
                            END IF
                        END IF
                    END IF

                    SET innerIndex = innerIndex + 1
                END WHILE

                SET hCounter = hCounter + 1
            END WHILE

            LET maxCandidate BE fGrid[outerIndex][k]
            IF maxVal < maxCandidate THEN
                SET maxVal = maxCandidate
            END IF

            SET outerIndex = outerIndex + 1
        END WHILE

        RETURN maxVal
    END FUNCTION
END CLASS