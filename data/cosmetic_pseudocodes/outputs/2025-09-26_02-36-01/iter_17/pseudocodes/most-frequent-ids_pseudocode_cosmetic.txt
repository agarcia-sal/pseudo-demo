CLASS Solution  
    FUNCTION mostFrequentIDs(nums PARAMETER, freq PARAMETER)  
        DECLARE freqMap AS DICTIONARY WITH DEFAULT 0  
        DECLARE heapStore AS EMPTY LIST  
        DECLARE outputList AS EMPTY LIST  
        DECLARE idx AS INTEGER  
        SET idx TO 0  
        WHILE idx < LENGTH(nums)  
            DECLARE valKey AS INTEGER  
            DECLARE addVal AS INTEGER  
            SET valKey TO nums[idx]  
            SET addVal TO freq[idx]  
            SET freqMap[valKey] TO freqMap[valKey] + addVal  
            ADD_ELEMENT_TO_END(heapStore, (NEGATE(freqMap[valKey]), valKey))  
            DECLARE proceed AS BOOLEAN  
            SET proceed TO TRUE  
            WHILE proceed  
                IF LENGTH(heapStore) = 0 THEN  
                    SET proceed TO FALSE  
                ELSE  
                    DECLARE topPair AS TUPLE  
                    SET topPair TO REMOVE_ELEMENT_AT(heapStore, 0)  
                    IF NEGATE(topPair[0]) = freqMap[topPair[1]] THEN  
                        INSERT_ELEMENT_AT(heapStore, 0, topPair)  
                        SET proceed TO FALSE  
                    END IF  
                END IF  
            END WHILE  
            IF LENGTH(heapStore) > 0 THEN  
                DECLARE currentTop AS TUPLE  
                SET currentTop TO heapStore[0]  
                ADD_ELEMENT_TO_END(outputList, NEGATE(currentTop[0]))  
            ELSE  
                ADD_ELEMENT_TO_END(outputList, 0)  
            END IF  
            SET idx TO idx + 1  
        END WHILE  
        RETURN outputList  
    END FUNCTION  
END CLASS