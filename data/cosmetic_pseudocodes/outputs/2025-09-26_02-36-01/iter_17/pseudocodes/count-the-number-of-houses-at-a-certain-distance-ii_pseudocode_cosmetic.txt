CLASS Solution  
    FUNCTION countOfPairs(n, x, y)  
        BEGIN  
            IF NOT (y GREATER THAN OR EQUAL TO x) THEN  
                SET alpha TO x  
                SET x TO y  
                SET y TO alpha  
            END IF  
  
            FUNCTION bfs(start)  
                BEGIN  
                    SET vis TO ARRAY OF (n + 1) ELEMENTS ALL False  
                    SET dist TO ARRAY OF (n + 1) ELEMENTS ALL 0  
                    SET q TO NEW deque CONTAINING start  
                    SET vis[start] TO True  
  
                    WHILE TRUE  
                        BEGIN  
                            IF LENGTH(q) EQUALS 0 THEN BREAK END IF  
                            SET curr TO q.POP_FRONT()  
  
                            SET neighbors TO [curr - 1, curr + 1]  
  
                            FOR EACH nbr IN neighbors DO  
                                BEGIN  
                                    IF nbr GREATER THAN OR EQUAL TO 1 AND nbr LESS THAN OR EQUAL TO n THEN  
                                        IF vis[nbr] EQUALS False THEN  
                                            SET vis[nbr] TO True  
                                            SET dist[nbr] TO dist[curr] + 1  
                                            q.PUSH_BACK(nbr)  
                                        END IF  
                                    END IF  
                                END  
                            END FOR  
  
                            IF curr EQUALS x THEN  
                                IF vis[y] EQUALS False THEN  
                                    SET vis[y] TO True  
                                    SET dist[y] TO dist[curr] + 1  
                                    q.PUSH_BACK(y)  
                                END IF  
                            ELSE IF curr EQUALS y THEN  
                                IF vis[x] EQUALS False THEN  
                                    SET vis[x] TO True  
                                    SET dist[x] TO dist[curr] + 1  
                                    q.PUSH_BACK(x)  
                                END IF  
                            END IF  
                        END  
                    END WHILE  
  
                    RETURN dist[1 TO n]  
                END  
            END FUNCTION  
  
            SET output TO ARRAY OF n ELEMENTS ALL 0  
  
            SET i TO 1  
            WHILE i LESS THAN OR EQUAL TO n DO  
                BEGIN  
                    SET vals TO bfs(i)  
                    SET idx TO 1  
                    WHILE idx LESS THAN OR EQUAL TO LENGTH(vals) DO  
                        BEGIN  
                            SET val TO vals[idx]  
                            IF val GREATER THAN 0 THEN  
                                SET output[val - 1] TO output[val - 1] + 1  
                            END IF  
                            SET idx TO idx + 1  
                        END  
                    END WHILE  
                    SET i TO i + 1  
                END  
            END WHILE  
  
            RETURN output  
        END  
    END FUNCTION  
END CLASS