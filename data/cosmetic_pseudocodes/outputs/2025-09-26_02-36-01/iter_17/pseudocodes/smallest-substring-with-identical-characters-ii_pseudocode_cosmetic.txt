CLASS Solution
    FUNCTION minLength(s parameter representing a string, numOps parameter representing an integer) RETURNS integer
        FUNCTION check(m parameter representing an integer) RETURNS boolean
            DECLARE sumCount AS integer = 0
            DECLARE segmentLen AS integer = 0
            DECLARE pos AS integer = 0
            WHILE pos LESS THAN LENGTH(s)
                SET segmentLen TO segmentLen + 1
                IF pos EQUALS LENGTH(s) - 1 OR s[pos] NOT EQUAL s[pos + 1]
                    SET sumCount TO sumCount + (segmentLen DIVIDE m + 1)
                    IF sumCount GREATER THAN numOps
                        RETURN false
                    END IF
                    SET segmentLen TO 0
                END IF
                SET pos TO pos + 1
            END WHILE
            RETURN sumCount LESS THAN OR EQUAL numOps
        END FUNCTION

        DECLARE totalLen AS integer = LENGTH(s)
        DECLARE lowBound AS integer = 1
        DECLARE highBound AS integer = totalLen
        REPEAT
            DECLARE pivot AS integer = (lowBound + highBound) DIVIDE 2
            IF check(pivot) EQUALS true
                SET highBound TO pivot
            ELSE
                SET lowBound TO pivot + 1
            END IF
        UNTIL lowBound GREATER THAN OR EQUAL highBound
        RETURN lowBound
    END FUNCTION
END CLASS