CLASS Solution  
    FUNCTION maxUpgrades(count LIST OF INTEGER upgrade LIST OF INTEGER sell LIST OF INTEGER money LIST OF INTEGER) RETURNS LIST OF INTEGER  
        DECLARE result LIST OF INTEGER ← EMPTY LIST  
        DECLARE outer_index INTEGER ← 0  
        WHILE outer_index < LENGTH(count) DO  
            DECLARE current_count INTEGER ← count[outer_index]  
            DECLARE cost_upgrade INTEGER ← upgrade[outer_index]  
            DECLARE price_sell INTEGER ← sell[outer_index]  
            DECLARE budget INTEGER ← money[outer_index]  
            DECLARE highest_upgrades INTEGER ← 0  
            DECLARE inner_index INTEGER ← 0  
            WHILE inner_index <= current_count DO  
                DECLARE remaining_servers INTEGER ← current_count - inner_index  
                DECLARE revenue INTEGER ← inner_index * price_sell  
                DECLARE funds INTEGER ← budget + revenue  
                DECLARE achievable_upgrades INTEGER ← FLOOR(funds / cost_upgrade)  
                IF achievable_upgrades > remaining_servers THEN  
                    SET achievable_upgrades ← remaining_servers  
                END IF  
                IF highest_upgrades < achievable_upgrades THEN  
                    SET highest_upgrades ← achievable_upgrades  
                END IF  
                SET inner_index ← inner_index + 1  
            END WHILE  
            APPEND highest_upgrades TO result  
            SET outer_index ← outer_index + 1  
        END WHILE  
        RETURN result  
    END FUNCTION  
END CLASS