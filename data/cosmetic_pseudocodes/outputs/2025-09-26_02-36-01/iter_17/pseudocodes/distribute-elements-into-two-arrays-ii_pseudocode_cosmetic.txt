CLASS Solution
    FUNCTION resultArray(nums)
        SET A TO NEW LIST
        ADD nums[0] TO A
        SET B TO NEW LIST
        ADD nums[1] TO B
        SET SA TO NEW LIST
        ADD nums[0] TO SA
        SET SB TO NEW LIST
        ADD nums[1] TO SB

        FUNCTION count_greater(X, Y)
            SET L TO 0
            SET R TO LENGTH OF X
            WHILE L < R
                SET M TO (L + R) / 2
                IF Y >= X[M]
                    SET L TO M + 1
                ELSE
                    SET R TO M
                END IF
            END WHILE
            RETURN LENGTH OF X - L
        END FUNCTION

        SET idx TO 2
        WHILE idx < LENGTH OF nums
            SET v TO nums[idx]
            SET cA TO count_greater(SA, v)
            SET cB TO count_greater(SB, v)

            IF cA > cB THEN
                ADD v TO A
                SET p TO LENGTH OF SA
                SET l TO 0
                WHILE l < p
                    SET m TO (l + p) / 2
                    IF v < SA[m]
                        SET p TO m
                    ELSE
                        SET l TO m + 1
                    END IF
                END WHILE
                INSERT v AT POSITION l IN SA
            ELSE IF cA < cB THEN
                ADD v TO B
                SET p TO LENGTH OF SB
                SET l TO 0
                WHILE l < p
                    SET m TO (l + p) / 2
                    IF v < SB[m]
                        SET p TO m
                    ELSE
                        SET l TO m + 1
                    END IF
                END WHILE
                INSERT v AT POSITION l IN SB
            ELSE
                IF LENGTH OF A <= LENGTH OF B THEN
                    ADD v TO A
                    SET p TO LENGTH OF SA
                    SET l TO 0
                    WHILE l < p
                        SET m TO (l + p) / 2
                        IF v < SA[m]
                            SET p TO m
                        ELSE
                            SET l TO m + 1
                        END IF
                    END WHILE
                    INSERT v AT POSITION l IN SA
                ELSE
                    ADD v TO B
                    SET p TO LENGTH OF SB
                    SET l TO 0
                    WHILE l < p
                        SET m TO (l + p) / 2
                        IF v < SB[m]
                            SET p TO m
                        ELSE
                            SET l TO m + 1
                        END IF
                    END WHILE
                    INSERT v AT POSITION l IN SB
                END IF
            END IF

            SET idx TO idx + 1
        END WHILE

        RETURN A CONCATENATED WITH B
    END FUNCTION
END CLASS