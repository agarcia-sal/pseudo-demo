CLASS Solution
    FUNCTION minimumOperations(grid)
        LET uqa = LENGTH(grid)
        LET reh = LENGTH(grid[0])
        LET nqw = 0

        LET azw = 0
        WHILE azw < reh
            LET cxd = 0
            WHILE cxd < uqa - 1
                IF grid[cxd][azw] <> grid[cxd + 1][azw] THEN
                    nqw = nqw + 1
                    grid[cxd + 1][azw] = grid[cxd][azw]
                END IF
                cxd = cxd + 1
            END WHILE

            LET kiv = 0
            WHILE kiv < uqa
                IF (azw < reh - 1) AND (grid[kiv][azw] = grid[kiv][azw + 1]) THEN
                    nqw = nqw + 1
                    FOR mvl FROM 0 TO 9
                        IF mvl <> grid[kiv][azw] THEN
                            grid[kiv][azw + 1] = mvl
                            EXIT FOR
                        END IF
                    END FOR
                END IF
                kiv = kiv + 1
            END WHILE

            azw = azw + 1
        END WHILE

        RETURN nqw
    END FUNCTION
END CLASS