CLASS Solution
    FUNCTION getSum(nums)
        FUNCTION calc(nums)
            SET lengthVal TO SIZE OF nums
            SET arrayA TO ARRAY FILLED WITH 0 OF LENGTH lengthVal
            SET arrayB TO ARRAY FILLED WITH 0 OF LENGTH lengthVal
            SET frequencyMap TO NEW counter OBJECT
            SET indexVar TO 1
            WHILE indexVar < lengthVal
                SET prevNum TO nums AT POSITION (indexVar - 1)
                SET additionVal TO 1
                IF frequencyMap CONTAINS prevNum THEN
                    SET additionVal TO additionVal + frequencyMap VALUE AT prevNum
                END IF
                ASSIGN frequencyMap VALUE AT prevNum TO additionVal
                ASSIGN arrayA AT POSITION indexVar TO frequencyMap VALUE AT prevNum
                SET indexVar TO indexVar + 1
            END WHILE
            SET frequencyMap TO NEW counter OBJECT
            SET idx TO lengthVal - 2
            REPEAT
                SET nextNum TO nums AT POSITION (idx + 1)
                SET incrementVal TO 1
                IF frequencyMap CONTAINS nextNum THEN
                    SET incrementVal TO incrementVal + frequencyMap VALUE AT nextNum
                END IF
                ASSIGN frequencyMap VALUE AT nextNum TO incrementVal
                ASSIGN arrayB AT POSITION idx TO frequencyMap VALUE AT nextNum
                SET idx TO idx - 1
            UNTIL idx < 0
            SET accumulator TO 0
            SET iteratorI TO 0
            WHILE iteratorI < lengthVal
                SET longTermSum TO arrayA AT iteratorI + arrayB AT iteratorI + (arrayA AT iteratorI * arrayB AT iteratorI)
                SET contribution TO longTermSum * nums AT iteratorI
                SET accumulator TO accumulator + contribution
                SET iteratorI TO iteratorI + 1
            END WHILE
            RETURN accumulator MODULO modValue
        END FUNCTION

        SET modValue TO (10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10) + 7
        SET firstCalc TO calc(nums)
        CALL nums REVERSE IN PLACE
        SET secondCalc TO calc(nums)
        SET sumTotal TO firstCalc + secondCalc
        SET sumElements TO 0
        FOR EACH element IN nums DO
            SET sumElements TO sumElements + element
        END FOR
        RETURN (sumTotal + sumElements) MODULO modValue
    END FUNCTION
END CLASS