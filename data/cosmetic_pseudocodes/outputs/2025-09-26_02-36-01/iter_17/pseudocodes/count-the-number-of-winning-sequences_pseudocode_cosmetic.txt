CLASS Solution
    FUNCTION countWinningSequences(s)
        FUNCTION calc(p, q)
            BEGIN
                IF NOT (p = q) THEN
                    IF p < q THEN
                        BEGIN
                            IF (p = 0) THEN
                                IF q = 2 THEN
                                    RETURN 1
                                ELSE
                                    RETURN -1
                                END IF
                            ELSE
                                RETURN -1
                            END IF
                        END
                    ELSE
                        BEGIN
                            IF (p = 2) AND (q = 0) THEN
                                RETURN -1
                            ELSE
                                RETURN 1
                            END IF
                        END
                    END IF
                ELSE
                    RETURN 0
                END IF
            END
        END FUNCTION

        FUNCTION dfs(a, b, c)
            BEGIN
                IF ((LEN(s) - a) <= b) THEN
                    RETURN 0
                ELSE
                    IF a >= LEN(s) THEN
                        IF b < 0 THEN
                            RETURN 1
                        ELSE
                            RETURN 0
                        END IF
                    ELSE
                        DECLARE total_results = 0
                        DECLARE current_index = 0

                        WHILE current_index <= 2 DO
                            BEGIN
                                IF current_index = c THEN
                                    BEGIN
                                        SET current_index = current_index + 1
                                        CONTINUE
                                    END
                                END IF

                                DECLARE delta = calc(d[GET(s, a)], current_index)
                                SET subtotal = dfs(a + 1, b + delta, current_index)
                                SET total_results = total_results + subtotal
                                SET total_results = total_results MOD mod
                                SET current_index = current_index + 1
                            END
                        END WHILE

                        RETURN total_results
                    END IF
                END IF
            END
        END FUNCTION

        SET mod = (10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10) + 7
        SET d = MAP()
        ASSIGN d["F"] = 0
        ASSIGN d["W"] = 1
        ASSIGN d["E"] = 2

        DECLARE answer = dfs(0, 0, -1)
        CALL dfs.cache.clear()
        RETURN answer
    END FUNCTION
END CLASS