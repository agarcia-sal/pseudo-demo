CLASS Solution
    FUNCTION minChanges(nums k)
        SET deltaArr TO array filled with zeros of size (k + 2)
        SET lenNums TO LENGTH OF nums
        SET index TO 0
        WHILE index <= (lenNums / 2) - 1
            SET firstVal TO nums AT index
            SET secondVal TO nums AT (lenNums - 1 - index)
            SET swapped1 TO firstVal
            SET swapped2 TO secondVal
            IF NOT (firstVal <= secondVal)
                SET tempSwap TO firstVal
                SET swapped1 TO secondVal
                SET swapped2 TO tempSwap
            END IF
            SET deltaArr AT 0 TO (deltaArr AT 0) + 1
            SET deltaArr AT (swapped2 - swapped1) TO (deltaArr AT (swapped2 - swapped1)) - 1
            SET deltaArr AT ((swapped2 - swapped1) + 1) TO (deltaArr AT ((swapped2 - swapped1) + 1)) + 1
            SET maxVal TO swapped2
            SET diffVal TO (k - swapped1)
            IF maxVal < diffVal
                SET maxVal TO diffVal
            END IF
            SET deltaArr AT (maxVal + 1) TO (deltaArr AT (maxVal + 1)) - 1
            SET deltaArr AT (maxVal + 2) TO (deltaArr AT (maxVal + 2)) + 1
            SET index TO index + 1
        END WHILE
        SET runningSum TO 0
        SET minRes TO +âˆž
        SET iterIdx TO 0
        REPEAT
            IF iterIdx > (k + 1)
                BREAK
            END IF
            SET runningSum TO runningSum + deltaArr AT iterIdx
            IF runningSum < minRes
                SET minRes TO runningSum
            END IF
            SET iterIdx TO iterIdx + 1
        UNTIL FALSE
        RETURN minRes
    END FUNCTION
END CLASS