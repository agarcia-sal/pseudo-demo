CLASS Solution  
    FUNCTION maxFrequency(nums, k, numOperations)  
        ASSIGN reference alpha TO a new default dictionary with integer default  
        ASSIGN reference beta TO a new default dictionary with integer default  
        INITIALIZE index TO 0  
        WHILE index < length of nums  
            LET current TO nums[index]  
            SET alpha[current] = alpha[current] + 1  
            SET beta[current] = beta[current] + 0  
            SET beta[current - k] = beta[current - k] + 1  
            SET beta[current + k + 1] = beta[current + k + 1] - 1  
            SET index = index + 1  
        END WHILE  
        LET result TO 0  
        LET accumulator TO 0  
        LET sortedItems TO the list of key-value pairs from beta, sorted ascending by key  
        FOR each element pair IN sortedItems  
            LET key TO element pair’s key  
            LET value TO element pair’s value  
            SET accumulator = accumulator + value  
            LET minimumCandidate TO if accumulator < alpha[key] + numOperations then accumulator else alpha[key] + numOperations  
            LET maximumCandidate TO if minimumCandidate > result then minimumCandidate else result  
            SET result = maximumCandidate  
        END FOR  
        RETURN result  
    END FUNCTION  
END CLASS