CLASS Solution  
    FUNCTION countGoodIntegers(n integer, k integer) RETURNS integer  
        DECLARE qoo LIST = []  
        DECLARE qru INTEGER = 0  
        DECLARE gki SET = {}  
        DECLARE egi INTEGER = 10 ^ ((n - 1) DIV 2)  
        
        DECLARE ujo INTEGER = 0  
        WHILE ujo < n + 1  
            qoo APPEND factorial(ujo)  
            ujo = ujo + 1  
        END WHILE  
        
        DECLARE ldo INTEGER = 0  
        DECLARE hjm INTEGER = egi  
        REPEAT  
            DECLARE amu STRING = STR(hjm)  
            DECLARE wvk STRING = SUBSTR(REVERSE(amu), n MOD 2, LENGTH(amu))  
            DECLARE eez STRING = amu + wvk  
            
            IF ((TO_INTEGER(eez) MOD k) <> 0) THEN  
                hjm = hjm + 1  
                CONTINUE  
            END IF  
            
            DECLARE dpc STRING = SORTED_ASCENDING_CHARS(eez)  
            
            IF dpc IN gki THEN  
                hjm = hjm + 1  
                CONTINUE  
            END IF  
            
            gki ADD dpc  
            DECLARE wzz MAP<Character,Integer> = FREQUENCY_MAP(dpc)  
            DECLARE iqk INTEGER = 0  
            
            IF wzz CONTAINS_KEY '0' AND wzz['0'] > 0 THEN  
                iqk = (n - wzz['0']) * qoo[n - 1]  
            ELSE  
                iqk = qoo[n]  
            END IF  
            
            FOR EACH vqe IN VALUES(wzz)  
                iqk = (iqk) DIV qoo[vqe]  
            END FOR  
            
            ldo = ldo + iqk  
            hjm = hjm + 1  
        UNTIL hjm > (egi * 10 - 1)  
        
        RETURN ldo  
    END FUNCTION  
END CLASS