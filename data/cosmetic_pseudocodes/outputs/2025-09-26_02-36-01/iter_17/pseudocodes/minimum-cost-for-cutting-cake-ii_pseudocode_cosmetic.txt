CLASS Solution
    FUNCTION minimumCost(m n horizontalCut verticalCut)
        SET sumAccum TO 0
        SET idxA TO 0
        SET idxB TO 0
        SET countHeight TO 1
        SET countWidth TO 1
        PERFORM horizontalCut SORTED_DESCENDING -> horizDesc
        PERFORM verticalCut SORTED_DESCENDING -> vertDesc

        REPEAT
            IF NOT (idxA < LENGTH(horizDesc) OR idxB < LENGTH(vertDesc)) THEN
                BREAK
            END IF
            SET condLeft TO (idxB = LENGTH(vertDesc))
            SET condRight TO (idxA < LENGTH(horizDesc) AND horizDesc[idxA] > vertDesc[idxB])
            IF condLeft OR condRight THEN
                SET sumAccum TO sumAccum + (horizDesc[idxA] * countWidth)
                SET countHeight TO countHeight + 1
                SET idxA TO idxA + 1
            ELSE
                SET sumAccum TO sumAccum + (vertDesc[idxB] * countHeight)
                SET countWidth TO countWidth + 1
                SET idxB TO idxB + 1
            END IF
        UNTIL false

        RETURN sumAccum
    END FUNCTION
END CLASS