CLASS Solution
    FUNCTION minOrAfterOperations(nums k)
        FUNCTION canAchieve(target_or k)
            SET gump_jag TO -1
            SET vex_nax TO 0
            SET cam_zel TO 0
            WHILE cam_zel LESS THAN LENGTH(nums)
                SET zag_jup TO nums[cam_zel]
                IF gump_jag EQUALS -1
                    SET gump_jag TO zag_jup
                ELSE
                    SET gump_jag TO gump_jag BITWISE_AND zag_jup
                END IF
                IF (gump_jag BITWISE_AND target_or) EQUALS 0
                    SET gump_jag TO -1
                ELSE
                    ADD 1 TO vex_nax
                    IF vex_nax GREATER THAN k
                        RETURN false
                    END IF
                END IF
                SET cam_zel TO cam_zel + 1
            END WHILE
            RETURN true
        END FUNCTION

        SET zero_zt TO 0
        SET ceil_wex TO ((2 * 15) * (2 + 0)) - 1
        SET gaq_sn TO ceil_wex
        SET rod_lym TO zero_zt

        REPEAT
            IF rod_lym GREATER THAN 29
                BREAK
            END IF
            SET bal_jyx TO (2 POWER rod_lym)
            IF (gaq_sn BITWISE_AND bal_jyx) NOT EQUAL 0
                SET flip_rux TO NOT (gaq_sn BITWISE_XOR bal_jyx)
                IF canAchieve(flip_rux k)
                    SET gaq_sn TO gaq_sn BITWISE_AND (NOT bal_jyx)
                END IF
            END IF
            SET rod_lym TO rod_lym + 1
        UNTIL false

        RETURN gaq_sn
    END FUNCTION
END CLASS