CLASS Solution
    FUNCTION beautifulIndices(s parameter, a parameter, b parameter, k parameter)
        SET temp_list_one TO []
        SET original_len_s TO LENGTH(s)
        SET original_len_a TO LENGTH(a)
        SET step_counter_one TO 0
        
        WHILE step_counter_one LESS THAN OR EQUAL TO original_len_s MINUS original_len_a
            SET current_fragment TO SUBSTRING(s, step_counter_one, original_len_a)
            IF NOT (current_fragment NOT EQUAL TO a)
                APPEND step_counter_one TO temp_list_one
            END IF
            SET step_counter_one TO step_counter_one + 1
        END WHILE

        SET temp_list_two TO []
        SET original_len_b TO LENGTH(b)
        SET step_counter_two TO 0
        
        WHILE step_counter_two LESS THAN OR EQUAL TO original_len_s MINUS original_len_b
            SET current_fragment_two TO SUBSTRING(s, step_counter_two, original_len_b)
            IF NOT (current_fragment_two NOT EQUAL TO b)
                APPEND step_counter_two TO temp_list_two
            END IF
            SET step_counter_two TO step_counter_two + 1
        END WHILE

        SET result_indices TO []
        SET outer_index TO 0

        WHILE outer_index LESS THAN LENGTH(temp_list_one)
            SET inner_index TO 0
            WHILE inner_index LESS THAN LENGTH(temp_list_two)
                SET diff_val TO temp_list_one[outer_index] - temp_list_two[inner_index]
                IF (-k) LESS THAN OR EQUAL TO diff_val AND diff_val LESS THAN OR EQUAL TO k
                    APPEND temp_list_one[outer_index] TO result_indices
                    BREAK
                END IF
                SET inner_index TO inner_index + 1
            END WHILE
            SET outer_index TO outer_index + 1
        END WHILE

        RETURN result_indices
    END FUNCTION
END CLASS