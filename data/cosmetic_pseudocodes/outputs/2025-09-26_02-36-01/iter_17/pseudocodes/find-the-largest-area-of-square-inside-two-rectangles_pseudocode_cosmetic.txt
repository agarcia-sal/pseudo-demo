CLASS Solution
    FUNCTION largestSquareArea(bottomLeft, topRight)
        FUNCTION intersecting_square_area(bl1, tr1, bl2, tr2)
            BEGIN
                DECLARE alpha, beta, gamma, delta, epsilon
                alpha = (bl1[0] >= bl2[0]) ? bl1[0] : bl2[0]
                beta = (tr1[0] <= tr2[0]) ? tr1[0] : tr2[0]
                gamma = (bl1[1] >= bl2[1]) ? bl1[1] : bl2[1]
                delta = (tr1[1] <= tr2[1]) ? tr1[1] : tr2[1]
                IF ((beta <= alpha) OR (delta <= gamma)) THEN
                    RETURN 0
                ENDIF
                epsilon = ((beta - alpha) <= (delta - gamma)) ? (beta - alpha) : (delta - gamma)
                RETURN epsilon * epsilon
            END
        END FUNCTION

        BEGIN
            DECLARE m, x, y, z, w
            m = 0
            x = LENGTH(bottomLeft)
            y = 0
            WHILE y < x - 1
                z = y + 1
                WHILE z < x
                    w = intersecting_square_area(bottomLeft[y], topRight[y], bottomLeft[z], topRight[z])
                    m = (m > w) ? m : w
                    z = z + 1
                ENDWHILE
                y = y + 1
            ENDWHILE
            RETURN m
        END
    END FUNCTION
END CLASS