CLASS Solution
    FUNCTION minimumDeletions(word, k)
        SET char_counts TO EMPTY MAP
        FOR EACH ch IN word DO
            IF ch NOT IN char_counts THEN
                SET char_counts[ch] TO 0
            END IF
            SET char_counts[ch] TO char_counts[ch] + 1
        END FOR

        SET freq_list TO EMPTY LIST
        FOR EACH val IN char_counts VALUES DO
            APPEND val TO freq_list
        END FOR

        SORT freq_list ASCENDING

        SET best_result TO +âˆž
        
        SET iter TO 0
        WHILE iter < LENGTH(freq_list) DO
            SET max_freq_boundary TO freq_list[iter] + k
            SET total_deletions TO 0

            SET pos TO iter + 1
            WHILE pos < LENGTH(freq_list) DO
                IF freq_list[pos] > max_freq_boundary THEN
                    SET total_deletions TO total_deletions + (freq_list[pos] - max_freq_boundary)
                END IF
                SET pos TO pos + 1
            END WHILE

            SET rev_pos TO 0
            WHILE rev_pos < iter DO
                SET total_deletions TO total_deletions + freq_list[rev_pos]
                SET rev_pos TO rev_pos + 1
            END WHILE

            IF total_deletions < best_result THEN
                SET best_result TO total_deletions
            END IF

            SET iter TO iter + 1
        END WHILE

        RETURN best_result
    END FUNCTION
END CLASS