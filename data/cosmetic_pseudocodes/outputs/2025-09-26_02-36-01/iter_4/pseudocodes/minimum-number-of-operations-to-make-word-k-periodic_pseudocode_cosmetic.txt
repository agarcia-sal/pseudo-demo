CLASS Solution  
    FUNCTION minimumOperationsToMakeKPeriodic(word parameter k)  
        DECLARE length_of_word = LENGTH_OF(word)  
        DECLARE parts AS AN EMPTY ARRAY  
        DECLARE current_index = 0  
        WHILE current_index <= length_of_word - k  
            DECLARE segment = SUBSTRING(word, current_index, current_index + k - 1)  
            ADD segment TO parts  
            SET current_index TO current_index + k  
        END WHILE  
        DECLARE frequency_map = EMPTY MAP  
        FOR each_part IN parts  
            IF each_part NOT IN frequency_map THEN  
                SET frequency_map[each_part] = 1  
            ELSE  
                SET frequency_map[each_part] = frequency_map[each_part] + 1  
            END IF  
        END FOR  
        DECLARE highest_frequency = 0  
        FOR key IN frequency_map KEYS  
            IF frequency_map[key] > highest_frequency THEN  
                SET highest_frequency = frequency_map[key]  
            END IF  
        END FOR  
        DECLARE operations_needed = LENGTH_OF(parts) - highest_frequency  
        RETURN operations_needed  
    END FUNCTION  
END CLASS