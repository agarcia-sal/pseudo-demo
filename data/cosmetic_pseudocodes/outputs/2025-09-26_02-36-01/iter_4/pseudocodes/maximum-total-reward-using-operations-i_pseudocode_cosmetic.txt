CLASS Solution  
    FUNCTION maxTotalReward(rewardValues)  
        FUNCTION dfs(currentSum)  
            DECLARE insertionIndex  
            DECLARE highestReward  
            SET insertionIndex AS the index after the rightmost position to insert currentSum into rewardValues, maintaining ascending order  
            SET highestReward TO 0  
            SET idx TO insertionIndex  
            WHILE idx LESS THAN length of rewardValues  
                DECLARE candidateValue  
                SET candidateValue TO rewardValues[idx]  
                DECLARE newSum  
                SET newSum TO candidateValue PLUS currentSum  
                IF NOT (newSum LESS OR EQUAL TO currentSum)  
                    DECLARE recursiveResult  
                    SET recursiveResult TO dfs(newSum)  
                    DECLARE combinedReward  
                    SET combinedReward TO candidateValue PLUS recursiveResult  
                    IF combinedReward GREATER THAN highestReward  
                        SET highestReward TO combinedReward  
                    END IF  
                END IF  
                INCREMENT idx BY 1  
            END WHILE  
            RETURN highestReward  
        END FUNCTION  

        CALL rewardValues SORTED IN ASCENDING ORDER AND STORE BACK IN rewardValues  
        RETURN dfs(0)  
    END FUNCTION  
END CLASS