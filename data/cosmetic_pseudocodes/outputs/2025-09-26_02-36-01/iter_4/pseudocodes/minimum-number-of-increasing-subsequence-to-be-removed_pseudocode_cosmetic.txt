CLASS Solution  
    FUNCTION minOperations(nums)  
        DECLARE lengthVal = COUNT(nums)  
        IF NOT (lengthVal > 0) THEN  
            RETURN 0  
        ENDIF  

        DECLARE dpArray AS ARRAY OF lengthVal FILLED WITH 1  

        DECLARE outerIndex = 2  
        WHILE outerIndex <= lengthVal DO  
            DECLARE innerIndex = 1  
            WHILE innerIndex < outerIndex DO  
                IF nums[outerIndex - 1] <= nums[innerIndex - 1] THEN  
                    DECLARE candidateVal = dpArray[innerIndex - 1] + 1  
                    IF candidateVal > dpArray[outerIndex - 1] THEN  
                        dpArray[outerIndex - 1] = candidateVal  
                    ENDIF  
                ENDIF  
                innerIndex = innerIndex + 1  
            END WHILE  
            outerIndex = outerIndex + 1  
        END WHILE  

        DECLARE maxVal = dpArray[0]  
        DECLARE idx = 2  
        WHILE idx <= lengthVal DO  
            IF dpArray[idx - 1] > maxVal THEN  
                maxVal = dpArray[idx - 1]  
            ENDIF  
            idx = idx + 1  
        END WHILE  

        RETURN maxVal  
    END FUNCTION  
END CLASS