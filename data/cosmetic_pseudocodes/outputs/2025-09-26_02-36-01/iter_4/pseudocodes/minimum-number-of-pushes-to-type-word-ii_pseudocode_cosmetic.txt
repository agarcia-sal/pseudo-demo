CLASS Solution  
    FUNCTION minimumPushes(word)  
        DECLARE letter_counts AS empty dictionary  
        FOR each character IN word  
            IF character IS NOT IN letter_counts  
                ASSIGN letter_counts[character] TO 1  
            ELSE  
                INCREASE letter_counts[character] BY 1  
            END IF  
        END FOR  

        DECLARE frequencies AS empty list  
        FOR each entry IN letter_counts  
            APPEND entry's value TO frequencies  
        END FOR  

        SORT frequencies IN descending order  

        DECLARE cumulative_presses AS 0  
        DECLARE press_level AS 1  
        DECLARE keys_used AS 0  

        DECLARE index AS 0  
        WHILE index LESS THAN LENGTH of frequencies  
            COMPUTE current_frequency AS frequencies[index]  
            COMPUTE increment AS current_frequency TIMES press_level  
            ASSIGN cumulative_presses TO cumulative_presses PLUS increment  
            INCREASE keys_used BY 1  

            IF keys_used EQUALS 8 THEN  
                RESET keys_used TO 0  
                INCREMENT press_level BY 1  
            END IF  

            INCREMENT index BY 1  
        END WHILE  

        RETURN cumulative_presses  
    END FUNCTION  
END CLASS