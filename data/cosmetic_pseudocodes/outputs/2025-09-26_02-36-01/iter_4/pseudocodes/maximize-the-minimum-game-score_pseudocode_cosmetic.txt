CLASS Solution  
    FUNCTION maxScore(points, m)  
        FUNCTION isPossible(minVal, m)  
            DECLARE totalMoves AS 0  
            DECLARE prevUsed AS 0  
            DECLARE idx AS 0  
            WHILE idx < LENGTH(points)  
                DECLARE pt AS points[idx]  
                DECLARE divCalc AS (minVal + pt - 1) DIV pt  
                DECLARE req AS divCalc  
                IF (req - prevUsed) < 0 THEN  
                    LET req TO 0  
                ELSE  
                    LET req TO req - prevUsed  
                END IF  
                IF req > 0 THEN  
                    LET totalMoves TO totalMoves + (2 * req - 1)  
                    LET prevUsed TO req - 1  
                ELSE IF (idx + 1) < LENGTH(points) THEN  
                    LET totalMoves TO totalMoves + 1  
                    LET prevUsed TO 0  
                END IF  
                IF totalMoves > m THEN  
                    RETURN False  
                END IF  
                LET idx TO idx + 1  
            END WHILE  
            RETURN True  
        END FUNCTION  

        LET leftBound TO 0  
        LET rightBound TO (((m + 1) DIV 2) * (points[0] + 1))  

        WHILE leftBound < rightBound  
            DECLARE middleVal AS (leftBound + rightBound + 1) DIV 2  
            IF isPossible(middleVal, m) = True THEN  
                LET leftBound TO middleVal  
            ELSE  
                LET rightBound TO middleVal - 1  
            END IF  
        END WHILE  

        RETURN leftBound  
    END FUNCTION  
END CLASS