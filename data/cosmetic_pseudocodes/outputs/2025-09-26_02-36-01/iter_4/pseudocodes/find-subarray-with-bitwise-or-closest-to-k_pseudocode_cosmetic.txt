CLASS Solution  
    FUNCTION minimumDifference(nums k)  
        FUNCTION bitwise_or_of_subarray(start_index end_index)  
            DECLARE accumulator = 0  
            DECLARE idx = start_index  
            WHILE idx IS LESS OR EQUAL TO end_index DO  
                LET accumulator BE accumulator BITWISE OR nums[idx]  
                INCREMENT idx BY 1  
            END WHILE  
            RETURN accumulator  
        END FUNCTION  

        DECLARE length_of_nums BE LENGTH OF nums  
        DECLARE minimal_difference ASSIGNED TO POSITIVE_INFINITY  

        DECLARE outer_idx = 0  
        WHILE outer_idx <= length_of_nums - 1 DO  
            DECLARE or_value = 0  
            DECLARE inner_idx = outer_idx  
            WHILE inner_idx <= length_of_nums - 1 DO  
                LET or_value BE or_value BITWISE OR nums[inner_idx]  
                DECLARE difference AS ABS(k MINUS or_value)  
                IF difference < minimal_difference THEN  
                    ASSIGN minimal_difference TO difference  
                END IF  
                IF difference EQUALS 0 THEN  
                    RETURN 0  
                END IF  
                INCREMENT inner_idx BY 1  
            END WHILE  
            INCREMENT outer_idx BY 1  
        END WHILE  

        RETURN minimal_difference  
    END FUNCTION  
END CLASS