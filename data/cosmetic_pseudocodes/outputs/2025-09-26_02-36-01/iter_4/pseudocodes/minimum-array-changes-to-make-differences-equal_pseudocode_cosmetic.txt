CLASS Solution
    FUNCTION minChanges(nums k)
        DECLARE counts AS array filled with zeros, length k plus 2
        LET lengthNums BE LENGTH OF nums
        LET index BE 0
        WHILE index LESS THAN (lengthNums DIVIDED BY 2)
            LET firstVal BE nums[index]
            LET secondVal BE nums[lengthNums - 1 - index]
            IF firstVal NOT GREATER THAN secondVal THEN
                LET lowVal BE firstVal
                LET highVal BE secondVal
            ELSE
                LET lowVal BE secondVal
                LET highVal BE firstVal
            END IF
            LET posZero BE 0
            LET diffVal BE highVal MINUS lowVal
            LET diffPlusOne BE diffVal PLUS 1
            LET maxVal BE (IF highVal GREATER THAN (k - lowVal) THEN highVal ELSE (k - lowVal))
            LET maxPlusOne BE maxVal PLUS 1
            LET maxPlusTwo BE maxVal PLUS 2

            counts[posZero] = counts[posZero] + 1
            counts[diffVal] = counts[diffVal] - 1
            counts[diffPlusOne] = counts[diffPlusOne] + 1
            counts[maxPlusOne] = counts[maxPlusOne] - 1
            counts[maxPlusTwo] = counts[maxPlusTwo] + 1

            INCREMENT index BY 1
        END WHILE

        DECLARE runningTotal AS 0
        LET minimumResult BE some very large number
        LET i BE 0
        WHILE i LESS THAN LENGTH OF counts
            runningTotal = runningTotal + counts[i]
            IF runningTotal LESS THAN minimumResult THEN
                minimumResult = runningTotal
            END IF
            INCREMENT i BY 1
        END WHILE

        RETURN minimumResult
    END FUNCTION
END CLASS