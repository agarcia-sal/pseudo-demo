CLASS Solution  
    FUNCTION minimumCost(m n horizontalCut verticalCut)  
        DECLARE sortedHoriz AS horizontalCut SORTED DESCENDING  
        DECLARE sortedVert AS verticalCut SORTED DESCENDING  
        LET totalCost SET TO 0  
        LET horizIndex SET TO 0  
        LET vertIndex SET TO 0  
        LET horizSegments SET TO 1  
        LET vertSegments SET TO 1  
        
        WHILE NOT (horizIndex EQUALS LENGTH OF sortedHoriz AND vertIndex EQUALS LENGTH OF sortedVert)  
            IF vertIndex EQUALS LENGTH OF sortedVert OR (horizIndex LESS THAN LENGTH OF sortedHoriz AND sortedHoriz[horizIndex] GREATER THAN sortedVert[vertIndex]) THEN  
                LET partialCost ASSIGN sortedHoriz[horizIndex] TIMES vertSegments  
                totalCost ASSIGN totalCost PLUS partialCost  
                horizSegments ASSIGN horizSegments PLUS 1  
                horizIndex ASSIGN horizIndex PLUS 1  
            ELSE  
                LET partialCost ASSIGN sortedVert[vertIndex] TIMES horizSegments  
                totalCost ASSIGN totalCost PLUS partialCost  
                vertSegments ASSIGN vertSegments PLUS 1  
                vertIndex ASSIGN vertIndex PLUS 1  
            END IF  
        END WHILE  
        
        GIVE BACK totalCost  
    END FUNCTION  
END CLASS