CLASS Solution  
    FUNCTION makeAntiPalindrome(s)  
        DECLARE charsArray AS ARRAY = SPLIT s INTO CHARACTERS  
        CALL SORT charsArray IN ASCENDING ORDER  
        DECLARE totalLength AS INTEGER = LENGTH OF charsArray  
        DECLARE halfIndex AS INTEGER = totalLength DIVIDED BY 2  
        
        IF charsArray[halfIndex] IS EQUAL TO charsArray[halfIndex - 1] THEN  
            DECLARE leftPointer AS INTEGER = halfIndex  
            LOOP WHILE leftPointer < totalLength AND charsArray[leftPointer] IS EQUAL TO charsArray[leftPointer - 1]  
                leftPointer = leftPointer + 1  
            END LOOP  
            
            DECLARE rightPointer AS INTEGER = halfIndex  
            LOOP WHILE rightPointer < totalLength AND charsArray[rightPointer] IS EQUAL TO charsArray[totalLength - rightPointer - 1]  
                IF leftPointer >= totalLength THEN  
                    RETURN "-1"  
                END IF  
                TEMP_VAR = charsArray[leftPointer]  
                charsArray[leftPointer] = charsArray[rightPointer]  
                charsArray[rightPointer] = TEMP_VAR  
                leftPointer = leftPointer + 1  
                rightPointer = rightPointer + 1  
            END LOOP  
        END IF  
        
        DECLARE index AS INTEGER = 0  
        LOOP WHILE index < halfIndex  
            IF charsArray[index] IS EQUAL TO charsArray[totalLength - index - 1] THEN  
                DECLARE foundSwap AS BOOLEAN = false  
                DECLARE searchPointer AS INTEGER = halfIndex  
                LOOP WHILE searchPointer < totalLength  
                    IF charsArray[searchPointer] IS NOT EQUAL TO charsArray[index] AND charsArray[searchPointer] IS NOT EQUAL TO charsArray[totalLength - index - 1] THEN  
                        TEMP_VAR2 = charsArray[searchPointer]  
                        charsArray[searchPointer] = charsArray[index]  
                        charsArray[index] = TEMP_VAR2  
                        foundSwap = true  
                        EXIT LOOP  
                    END IF  
                    searchPointer = searchPointer + 1  
                END LOOP  
                IF NOT foundSwap THEN  
                    RETURN "-1"  
                END IF  
            END IF  
            index = index + 1  
        END LOOP  
        
        DECLARE resultString AS STRING = ""  
        DECLARE buildPointer AS INTEGER = 0  
        LOOP WHILE buildPointer < totalLength  
            resultString = resultString + charsArray[buildPointer]  
            buildPointer = buildPointer + 1  
        END LOOP  
        
        RETURN resultString  
    END FUNCTION  
END CLASS