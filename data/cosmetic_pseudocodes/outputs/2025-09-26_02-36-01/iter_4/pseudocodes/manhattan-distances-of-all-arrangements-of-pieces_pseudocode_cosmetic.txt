CLASS Solution
    FUNCTION distanceSum WITH PARAMETERS m n k
        DECLARE constant_modulo AS 1000000007
        DECLARE temp_r1 AS m
        DECLARE temp_r2 AS m * m
        DECLARE temp_r3 AS temp_r2 * m
        DECLARE numerator_rows AS temp_r3 - temp_r1
        DECLARE value_rows AS (n * n) * numerator_rows
        DECLARE partial_row_contrib AS value_rows / 6

        DECLARE temp_c1 AS n
        DECLARE temp_c2 AS n * n
        DECLARE temp_c3 AS temp_c2 * n
        DECLARE numerator_cols AS temp_c3 - temp_c1
        DECLARE value_cols AS (m * m) * numerator_cols
        DECLARE partial_col_contrib AS value_cols / 6

        DECLARE total_positions AS m * n
        DECLARE adjusted_k AS k - 2
        DECLARE combinations_factor AS 1
        DECLARE count AS 1
        DECLARE limit AS adjusted_k
        DECLARE numerator_combo AS total_positions - 2
        DECLARE denominator_combo AS 1

        WHILE count <= limit
            numerator_combo <- numerator_combo - (count - 1)
            combinations_factor <- combinations_factor * (numerator_combo + 1) / denominator_combo
            denominator_combo <- denominator_combo + 1
            count <- count + 1
        END WHILE

        DECLARE sum_contrib AS (partial_row_contrib + partial_col_contrib) * combinations_factor

        DECLARE final_result AS sum_contrib MOD constant_modulo

        RETURN final_result
    END FUNCTION
END CLASS