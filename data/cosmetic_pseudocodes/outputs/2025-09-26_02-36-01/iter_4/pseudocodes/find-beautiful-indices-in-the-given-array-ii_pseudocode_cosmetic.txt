CLASS Solution  
    FUNCTION beautifulIndices(s parameter a parameter b parameter k)  
        DECLARE foundPositionsA AS empty collection  
        DECLARE idxA AS zero  
        DECLARE limitA AS LENGTH(s) MINUS LENGTH(a)  
        WHILE idxA IS LESS THAN OR EQUAL TO limitA  
            DECLARE segmentLengthA AS LENGTH(a)  
            DECLARE segmentA AS substring of s FROM idxA TO idxA PLUS segmentLengthA MINUS one  
            IF NOT (segmentA IS NOT EQUAL TO a)  
                ADD idxA TO foundPositionsA  
            END IF  
            SET idxA TO idxA PLUS one  
        END WHILE  
        
        DECLARE foundPositionsB AS empty collection  
        DECLARE idxB AS zero  
        DECLARE limitB AS LENGTH(s) MINUS LENGTH(b)  
        WHILE idxB IS LESS THAN OR EQUAL TO limitB  
            DECLARE segmentLengthB AS LENGTH(b)  
            DECLARE segmentB AS substring of s FROM idxB TO idxB PLUS segmentLengthB MINUS one  
            IF NOT (segmentB IS NOT EQUAL TO b)  
                ADD idxB TO foundPositionsB  
            END IF  
            SET idxB TO idxB PLUS one  
        END WHILE  
        
        DECLARE resultIndices AS empty collection  
        
        DECLARE pointerA AS zero  
        DECLARE pointerB AS zero  
        WHILE (pointerA IS LESS THAN LENGTH(foundPositionsA)) AND (pointerB IS LESS THAN LENGTH(foundPositionsB))  
            DECLARE currentDiff AS foundPositionsA[pointerA]  
            DECLARE tempVal AS foundPositionsB[pointerB]  
            IF currentDiff IS GREATER THAN OR EQUAL TO tempVal  
                SET currentDiff TO currentDiff MINUS tempVal  
            ELSE  
                SET currentDiff TO tempVal MINUS currentDiff  
            END IF  
            
            IF currentDiff IS NOT GREATER THAN k  
                APPEND foundPositionsA[pointerA] TO resultIndices  
                SET pointerA TO pointerA PLUS one  
            ELSE IF foundPositionsA[pointerA] IS LESS THAN foundPositionsB[pointerB]  
                SET pointerA TO pointerA PLUS one  
            ELSE  
                SET pointerB TO pointerB PLUS one  
            END IF  
        END WHILE  
        
        RETURN resultIndices  
    END FUNCTION  
END CLASS