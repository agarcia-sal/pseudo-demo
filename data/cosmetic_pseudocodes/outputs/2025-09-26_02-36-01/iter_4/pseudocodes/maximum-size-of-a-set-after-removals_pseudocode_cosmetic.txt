CLASS Solution  
    FUNCTION maximumSetSize(nums1 PARAMETER List OF integers nums2 PARAMETER List OF integers) RETURNS integer  
        DECLARE totalCount AS integer  
        DECLARE lengthNums1 AS integer, halfLength AS integer  
        DECLARE setA AS Set, setB AS Set  
        DECLARE intersectionSet AS Set  
        DECLARE exclusiveA AS Set, exclusiveB AS Set  
        DECLARE pickA AS integer, pickB AS integer, pickCommon AS integer  
        
        ASSIGN lengthNums1 TO LENGTH(nums1)  
        ASSIGN halfLength TO lengthNums1 DIVIDED BY 2  

        ASSIGN setA TO CREATE SET FROM nums1  
        ASSIGN setB TO CREATE SET FROM nums2  

        ASSIGN intersectionSet TO setA INTERSECT setB  

        ASSIGN exclusiveA TO setA MINUS intersectionSet  
        ASSIGN exclusiveB TO setB MINUS intersectionSet  

        IF halfLength < LENGTH(exclusiveA) THEN  
            ASSIGN pickA TO halfLength  
        ELSE  
            ASSIGN pickA TO LENGTH(exclusiveA)  
        END IF  

        IF halfLength < LENGTH(exclusiveB) THEN  
            ASSIGN pickB TO halfLength  
        ELSE  
            ASSIGN pickB TO LENGTH(exclusiveB)  
        END IF  

        DECLARE remainA AS integer  
        DECLARE remainB AS integer  
        ASSIGN remainA TO halfLength MINUS pickA  
        ASSIGN remainB TO halfLength MINUS pickB  

        IF remainA > 0 THEN  
            ASSIGN remainA TO remainA  
        ELSE  
            ASSIGN remainA TO 0  
        END IF  

        IF remainB > 0 THEN  
            ASSIGN remainB TO remainB  
        ELSE  
            ASSIGN remainB TO 0  
        END IF  

        ASSIGN pickCommon TO remainA PLUS remainB  
        IF pickCommon > LENGTH(intersectionSet) THEN  
            ASSIGN pickCommon TO LENGTH(intersectionSet)  
        END IF  

        ASSIGN totalCount TO pickA PLUS pickB PLUS pickCommon  
        RETURN totalCount  
    END FUNCTION  
END CLASS