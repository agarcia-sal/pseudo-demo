CLASS Solution
    FUNCTION minOrAfterOperations(nums k)
        FUNCTION canAchieve(target_or k)
            DECLARE acc_and AS -1
            DECLARE op_count AS 0
            SET idx TO 0
            WHILE idx LESS THAN LENGTH OF nums
                DECLARE current_num AS nums[idx]
                IF acc_and EQUAL -1 THEN
                    SET acc_and TO current_num
                ELSE
                    SET acc_and TO acc_and BITWISE_AND current_num
                END IF
                IF (acc_and BITWISE_AND target_or) EQUAL 0 THEN
                    SET acc_and TO -1
                ELSE
                    SET op_count TO op_count PLUS 1
                    IF op_count GREATER_THAN k THEN
                        RETURN false
                    END IF
                END IF
                SET idx TO idx PLUS 1
            END WHILE
            RETURN true
        END FUNCTION

        LET max_val BE (1 SHIFT_LEFT 30) MINUS 1
        LET res BE max_val
        LET bit_idx BE 0
        WHILE bit_idx LESS_THAN 30
            LET mask BE (1 SHIFT_LEFT bit_idx)
            IF (res BITWISE_AND mask) EQUAL 0 THEN
                SET bit_idx TO bit_idx PLUS 1
                CONTINUE TO NEXT iteration
            END IF

            DECLARE inv_res_mask AS NOT (res BITWISE_XOR mask)
            IF canAchieve(inv_res_mask k) THEN
                SET res TO res BITWISE_AND NOT mask
            END IF
            SET bit_idx TO bit_idx PLUS 1
        END WHILE
        RETURN res
    END FUNCTION
END CLASS