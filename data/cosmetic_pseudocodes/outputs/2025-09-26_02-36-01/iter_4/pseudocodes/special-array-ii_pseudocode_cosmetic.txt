CLASS Solution  
    FUNCTION isArraySpecial(nums, queries)  
        DECLARE parity AS empty collection  
        DECLARE iterator AS zero  
        WHILE iterator LESS THAN LENGTH OF nums  
            DECLARE remainder_mod TWO AS nums[iterator] MODULO 2  
            ADD remainder_mod TO parity  
            INCREMENT iterator BY one  
        END WHILE  
  
        DECLARE prefix_special AS array FILLED WITH zero OF LENGTH LENGTH OF nums  
        DECLARE position AS one  
        WHILE position LESS THAN LENGTH OF nums  
            IF NOT(parity[position] IS NOT EQUAL TO parity[position - 1]) THEN  
                SET prefix_special[position] TO prefix_special[position - 1] PLUS one  
            ELSE  
                SET prefix_special[position] TO prefix_special[position - 1]  
            END IF  
            INCREMENT position BY one  
        END WHILE  
  
        DECLARE results AS empty collection  
        DECLARE index AS zero  
        WHILE index LESS THAN LENGTH OF queries  
            LET boundaries BE queries[index]  
            LET start_pos BE boundaries[0]  
            LET end_pos BE boundaries[1]  
  
            IF start_pos EQUALS end_pos THEN  
                APPEND True TO results  
            ELSE  
                LET value_start BE zero  
                IF start_pos GREATER THAN zero THEN  
                    SET value_start TO prefix_special[start_pos]  
                END IF  
                LET diff_val BE prefix_special[end_pos] MINUS value_start  
                APPEND (diff_val EQUALS zero) TO results  
            END IF  
            INCREMENT index BY one  
        END WHILE  
  
        RETURN results  
    END FUNCTION  
END CLASS