CLASS Solution  
    FUNCTION doesAliceWin(s)  
        DECLARE vowel_chars AS a collection containing 'a','e','i','o','u'  
        LET segment_count BE set to 0  
        LET running_count BE assigned 0  
        
        LET position BE 0  
        LET length_of_s BE the length of s  
        WHILE position LESS THAN length_of_s DO  
            LET current_char BE s AT position  
            LET is_vowel BE false  
            LET check_index BE 0  
            LET vowels_length BE number of elements in vowel_chars  
            WHILE check_index LESS THAN vowels_length DO  
                IF current_char EQUALS vowel_chars AT check_index THEN  
                    LET is_vowel BE true  
                    BREAK  
                END IF  
                INCREMENT check_index BY one  
            END WHILE  
            IF is_vowel IS true THEN  
                LET running_count BE running_count + 1  
            END IF  
            INCREMENT position BY 1  
        END WHILE  
        
        LET inside_odd_segment BE false  
        
        LET index BE 0  
        WHILE index LESS THAN length_of_s DO  
            LET letter BE s AT index  
            LET vowel_found BE false  
            LET search_index BE 0  
            WHILE search_index LESS THAN vowels_length DO  
                IF letter EQUALS vowel_chars AT search_index THEN  
                    LET vowel_found BE true  
                    EXIT INNER LOOP  
                END IF  
                INCREMENT search_index BY 1  
            END WHILE  
            IF vowel_found THEN  
                LET inside_odd_segment BE NOT inside_odd_segment  
            END IF  
            LET running_count_mod2 BE running_count - 2 * FLOOR(running_count DIVIDED BY 2)  
            IF inside_odd_segment IS false AND running_count_mod2 IS 1 THEN  
                LET segment_count BE segment_count + 1  
                LET running_count BE 0  
            ELSE IF inside_odd_segment IS true THEN  
                LET running_count BE running_count + 1  
            END IF  
            INCREMENT index BY 1  
        END WHILE  
        
        LET remainder_mod2 BE running_count - (2 * INTEGER_DIVIDE(running_count, 2))  
        IF inside_odd_segment IS true AND remainder_mod2 IS 1 THEN  
            LET segment_count BE segment_count + 1  
        END IF  
        
        LET final_result BE false  
        IF segment_count - 2 * (segment_count DIVIDED BY 2) EQUALS 1 THEN  
            LET final_result BE true  
        END IF  
        
        RETURN final_result  
    END FUNCTION  
END CLASS