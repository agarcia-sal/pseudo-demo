CLASS Solution  
    FUNCTION countWinningSequences(s)  
        FUNCTION calc(a, b)  
            IF a IS b THEN  
                RETURN 0  
            ELSE IF a LESS THAN b THEN  
                IF a IS 0 AND b IS 2 THEN  
                    RETURN 1  
                ELSE  
                    RETURN -1  
                END IF  
            ELSE IF a IS 2 AND b IS 0 THEN  
                RETURN -1  
            ELSE  
                RETURN 1  
            END IF  
        END FUNCTION  

        FUNCTION dfs(p, q, r)  
            DECLARE lengthS AS LENGTH OF s  
            IF (lengthS - p) <= q THEN  
                RETURN 0  
            END IF  

            IF p >= lengthS THEN  
                IF q < 0 THEN  
                    RETURN 1  
                ELSE  
                    RETURN 0  
                END IF  
            END IF  

            DECLARE accumulator AS 0  
            DECLARE index AS 0  
            WHILE index <= 2 DO  
                IF index == r THEN  
                    SET index TO index + 1  
                    CONTINUE  
                END IF  

                DECLARE currentCharValue AS d[s[p]]  
                DECLARE increment AS calc(currentCharValue, index)  
                DECLARE nextP AS p + 1  
                DECLARE nextQ AS q + increment  
                SET accumulator TO accumulator + dfs(nextP, nextQ, index)  
                SET accumulator TO accumulator MOD mod  
                SET index TO index + 1  
            END WHILE  

            RETURN accumulator  
        END FUNCTION  

        SET mod TO 1000000007  
        SET d TO EMPTY MAP  
        ASSIGN d["F"] TO 0  
        ASSIGN d["W"] TO 1  
        ASSIGN d["E"] TO 2  

        DECLARE result AS dfs(0, 0, -1)  
        CALL dfs.cache_clear()  
        RETURN result  
    END FUNCTION  
END CLASS