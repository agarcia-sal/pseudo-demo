CLASS Solution
    FUNCTION minLength(s parameter representing a string, numOps parameter representing an integer) RETURNS integer
        FUNCTION check(m parameter representing an integer) RETURNS boolean
            DECLARE totalSegments AS 0
            DECLARE segmentLength AS 0
            DECLARE position AS 0
            DECLARE strLength AS LENGTH OF s
            WHILE position LESS THAN strLength
                SET segmentLength TO segmentLength PLUS 1
                IF (position EQUALS strLength MINUS 1) OR (s[position] NOT EQUAL TO s[position PLUS 1])
                    DECLARE segmentsForThisBlock AS (segmentLength DIV m) PLUS 1
                    SET totalSegments TO totalSegments PLUS segmentsForThisBlock
                    IF totalSegments GREATER THAN numOps
                        RETURN false
                    END IF
                    SET segmentLength TO 0
                END IF
                INCREMENT position BY 1
            END WHILE
            RETURN NOT (totalSegments GREATER THAN numOps)
        END FUNCTION

        DECLARE lengthOfS AS LENGTH OF s
        DECLARE lowBound AS 1
        DECLARE highBound AS lengthOfS
        WHILE lowBound LESS THAN highBound
            DECLARE midPoint AS lowBound PLUS ((highBound MINUS lowBound) DIV 2)
            IF check(midPoint)
                SET highBound TO midPoint
            ELSE
                SET lowBound TO midPoint PLUS 1
            END IF
        END WHILE
        RETURN lowBound
    END FUNCTION
END CLASS