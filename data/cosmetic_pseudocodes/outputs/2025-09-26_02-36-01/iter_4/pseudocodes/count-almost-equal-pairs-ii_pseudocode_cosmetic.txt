CLASS Solution  
    FUNCTION countPairs(nums)  
        EXECUTE in-place sort ON nums  
        DECLARE totalPairs AS 0  
        INITIATE countMap AS a dictionary defaulting to 0 for unseen keys  
        DECLARE index1, index2, index3, index4 AS integer placeholders  
        DECLARE currentSet, charList AS collections  
        FOR each element_number IN nums WHILE True DO  
            SET currentSet TO an empty set  
            ADD element_number TO currentSet  
            ASSIGN charList TO convert element_number TO string, THEN to list of characters  
            LET lengthChars BE size of charList  
            SET index2 TO zero  
            WHILE index2 < lengthChars DO  
                SET index1 TO zero  
                WHILE index1 < index2 DO  
                    -- swap characters at index1 and index2 --  
                    ASSIGN tempChar TO charList[index1]  
                    SET charList[index1] TO charList[index2]  
                    SET charList[index2] TO tempChar  
                    
                    DECLARE concatenatedString AS empty string  
                    SET index4 TO zero  
                    WHILE index4 < lengthChars DO  
                        CONCATENATE charList[index4] TO concatenatedString  
                        INCREMENT index4 BY one  
                    END WHILE  
                    ADD integer value of concatenatedString TO currentSet  
                    
                    SET index3 TO index1 + 1  
                    WHILE index3 < lengthChars DO  
                        SET index4 TO index1 + 1  
                        WHILE index4 < index3 DO  
                            -- swap characters at index4 and index3 --  
                            SET tempChar TO charList[index4]  
                            SET charList[index4] TO charList[index3]  
                            SET charList[index3] TO tempChar  
                            
                            DECLARE concatStr2 AS empty string  
                            SET index1 TO zero  
                            WHILE index1 < lengthChars DO  
                                CONCATENATE charList[index1] TO concatStr2  
                                INCREMENT index1 BY 1  
                            END WHILE  
                            ADD integer value of concatStr2 TO currentSet  
                            
                            -- revert swap --  
                            SET tempChar TO charList[index4]  
                            SET charList[index4] TO charList[index3]  
                            SET charList[index3] TO tempChar  
                            INCREMENT index4 BY 1  
                        END WHILE  
                        INCREMENT index3 BY 1  
                    END WHILE  
                    
                    -- revert swap --  
                    SET tempChar TO charList[index1]  
                    SET charList[index1] TO charList[index2]  
                    SET charList[index2] TO tempChar  
                    INCREMENT index1 BY 1  
                END WHILE  
                INCREMENT index2 BY 1  
            END WHILE  
            
            DECLARE sumPairs AS 0  
            FOR each val IN currentSet DO  
                IF val EXISTS IN countMap THEN  
                    INCREASE sumPairs BY countMap[val]  
                END IF  
            END FOR  
            INCREASE totalPairs BY sumPairs  
            
            INCREASE countMap[element_number] BY 1  
            
            BREAK IF no more elements to read  
        END FOR  
        RETURN totalPairs  
    END FUNCTION  
END CLASS