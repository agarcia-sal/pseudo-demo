CLASS Solution
    FUNCTION tripletCount(a AS List OF integer, b AS List OF integer, c AS List OF integer) RETURNS integer
        FUNCTION count_even_odd_bits(arr AS List OF integer) RETURNS tuple OF integer AND integer
            DECLARE evens_found AS integer ASSIGN zero
            DECLARE idx AS integer ASSIGN zero
            WHILE idx LESS THAN LENGTH OF arr DO
                DECLARE element AS integer ASSIGN arr AT idx
                DECLARE one_bits_num AS integer ASSIGN the count of bits set to one in element (binary)
                
                IF NOT (one_bits_num MOD TWO NOT EQUAL TO zero) THEN
                    evens_found ASSIGN evens_found PLUS one
                END IF
                
                SET idx TO idx PLUS one
            END WHILE
            
            DECLARE odds_found AS integer ASSIGN LENGTH OF arr MINUS evens_found
            RETURN evens_found AND odds_found
        END FUNCTION

        DECLARE ev_a AS integer
        DECLARE od_a AS integer
        ev_a, od_a := count_even_odd_bits WITH a
        
        DECLARE ev_b AS integer
        DECLARE od_b AS integer
        ev_b, od_b := count_even_odd_bits WITH b
        
        DECLARE ev_c AS integer
        DECLARE od_c AS integer
        ev_c, od_c := count_even_odd_bits WITH c

        DECLARE first_case AS integer ASSIGN ev_a TIMES ev_b TIMES ev_c
        
        DECLARE second_part1 AS integer ASSIGN ev_a TIMES od_b TIMES od_c
        DECLARE second_part2 AS integer ASSIGN od_a TIMES ev_b TIMES od_c
        DECLARE second_part3 AS integer ASSIGN od_a TIMES od_b TIMES ev_c
        
        DECLARE second_case AS integer ASSIGN second_part1 PLUS second_part2 PLUS second_part3
        
        DECLARE total AS integer ASSIGN first_case PLUS second_case
        
        RETURN total
    END FUNCTION
END CLASS