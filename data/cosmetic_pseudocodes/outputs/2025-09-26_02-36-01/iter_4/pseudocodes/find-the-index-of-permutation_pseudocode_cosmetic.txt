CLASS Solution  
    FUNCTION getPermutationIndex(perm)  
        LET length_of_perm ASSIGN LENGTH OF perm  
        LET modulus ASSIGN (1 * (10 ^ 9)) + 1  
        
        DECLARE factorials AS ARRAY WITH SIZE length_of_perm  
        INITIALIZE factorials WITH 1 AT ALL POSITIONS  
        
        LET iterator ASSIGN 2  
        WHILE iterator IS LESS THAN length_of_perm DO  
            LET prev_factorial ASSIGN factorials[iterator - 1]  
            LET current_factorial ASSIGN iterator * prev_factorial  
            SET factorials[iterator] TO current_factorial  
            SET iterator TO iterator + 1  
        END WHILE  
        
        DECLARE available_numbers AS EMPTY LIST  
        LET counter ASSIGN 1  
        WHILE counter IS LESS THAN OR EQUAL TO length_of_perm DO  
            APPEND counter TO available_numbers  
            SET counter TO counter + 1  
        END WHILE  
        
        LET result_index ASSIGN 0  
        LET position_index ASSIGN 0  
        WHILE position_index IS LESS THAN length_of_perm DO  
            LET current_element ASSIGN perm[position_index]  
            LET element_position ASSIGN INDEX OF current_element IN available_numbers  
            
            LET factorial_lookup_index ASSIGN length_of_perm - position_index - 1  
            LET product_value ASSIGN element_position * factorials[factorial_lookup_index]  
            SET result_index TO result_index + product_value  
            
            REMOVE element_position TH ELEMENT FROM available_numbers  
            SET position_index TO position_index + 1  
        END WHILE  
        
        RETURN result_index MOD modulus  
    END FUNCTION  
END CLASS