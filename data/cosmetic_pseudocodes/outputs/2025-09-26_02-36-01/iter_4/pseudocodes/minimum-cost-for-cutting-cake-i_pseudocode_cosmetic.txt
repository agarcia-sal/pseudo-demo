CLASS Solution  
    FUNCTION minimumCost(m n horizontalCut verticalCut)  
        DECLARE descendingHorizontalCuts AS horizontalCut SORTED FROM LARGEST TO SMALLEST  
        DECLARE descendingVerticalCuts AS verticalCut SORTED FROM BIGGEST TO SMALLEST  
        SET totalCost := 0  
        SET horizontalIndex := 0  
        SET verticalIndex := 0  
        SET horizontalSegments := 1  
        SET verticalSegments := 1  
        
        WHILE NOT (horizontalIndex >= m-1 AND verticalIndex >= n-1)  
            IF verticalIndex = n - 1 OR (horizontalIndex < m - 1 AND descendingHorizontalCuts[horizontalIndex] > descendingVerticalCuts[verticalIndex]) THEN  
                LET increment := descendingHorizontalCuts[horizontalIndex]  
                LET weightedIncrement := increment * verticalSegments  
                totalCost := totalCost + weightedIncrement  
                horizontalSegments := horizontalSegments + 1  
                horizontalIndex := horizontalIndex + 1  
            ELSE  
                LET increment := descendingVerticalCuts[verticalIndex]  
                LET weightedIncrement := increment * horizontalSegments  
                totalCost := totalCost + weightedIncrement  
                verticalSegments := verticalSegments + 1  
                verticalIndex := verticalIndex + 1  
            END IF  
        END WHILE  
        
        RETURN totalCost  
    END FUNCTION  
END CLASS