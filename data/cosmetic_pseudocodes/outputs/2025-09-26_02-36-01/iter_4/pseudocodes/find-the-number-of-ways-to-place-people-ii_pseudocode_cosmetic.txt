CLASS Solution  
    FUNCTION numberOfPairs(points)  
        LET sorted_points BE points SORTED BY ascending x-coordinate THEN descending y-coordinate  
        LET total_points BE LENGTH OF sorted_points  
        DECLARE pair_count AS zero  
        LET outer_index BE zero  
        WHILE outer_index LESS THAN total_points MINUS one  
            LET inner_index BE outer_index PLUS one  
            WHILE inner_index LESS THAN total_points  
                LET first_point_x BE sorted_points[outer_index].x  
                LET first_point_y BE sorted_points[outer_index].y  
                LET second_point_x BE sorted_points[inner_index].x  
                LET second_point_y BE sorted_points[inner_index].y  
                LET condition1 BE first_point_x LESS THAN OR EQUAL TO second_point_x  
                LET condition2 BE first_point_y GREATER THAN OR EQUAL TO second_point_y  
                IF NOT (condition1 EQUALS FALSE OR condition2 EQUALS FALSE) THEN  
                    DECLARE is_valid_pair AS True  
                    LET middle_index BE outer_index PLUS one  
                    WHILE middle_index LESS THAN inner_index  
                        LET mid_point_x BE sorted_points[middle_index].x  
                        LET mid_point_y BE sorted_points[middle_index].y  
                        LET inside_x_range BE (first_point_x LESS THAN OR EQUAL TO mid_point_x) AND (mid_point_x LESS THAN OR EQUAL TO second_point_x)  
                        LET inside_y_range BE (second_point_y LESS THAN OR EQUAL TO mid_point_y) AND (mid_point_y LESS THAN OR EQUAL TO first_point_y)  
                        IF inside_x_range AND inside_y_range THEN  
                            SET is_valid_pair TO False  
                            EXIT WHILE  
                        END IF  
                        SET middle_index TO middle_index PLUS one  
                    END WHILE  
                    IF is_valid_pair EQUALS True THEN  
                        SET pair_count TO pair_count PLUS one  
                    END IF  
                END IF  
                SET inner_index TO inner_index PLUS one  
            END WHILE  
            SET outer_index TO outer_index PLUS one  
        END WHILE  
        RETURN pair_count  
    END FUNCTION  
END CLASS