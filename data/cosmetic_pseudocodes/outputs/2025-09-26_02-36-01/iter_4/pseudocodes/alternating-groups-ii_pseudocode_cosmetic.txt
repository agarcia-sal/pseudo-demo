CLASS Solution  
    FUNCTION numberOfAlternatingGroups(colors k)  
        IF NOT (k GREATER OR EQUAL TO 3) THEN  
            RETURN 0  
        END IF  
  
        DECLARE total_elements = LENGTH(colors)  
        DECLARE wrapped_colors = CONCAT(colors, SUBSEQUENCE(colors, 0, k - 1))  
  
        DECLARE valid_groups = 0  
        DECLARE idx = 0  
  
        WHILE idx LESS THAN total_elements  
            DECLARE alternating_flag = 1  // true represented as 1  
            DECLARE offset = 1  
  
            WHILE offset LESS THAN k  
                DECLARE pos_current = idx + offset  
                DECLARE pos_prev = pos_current - 1  
  
                IF wrapped_colors[pos_current] EQUALS wrapped_colors[pos_prev] THEN  
                    SET alternating_flag = 0  
                    EXIT inner_loop  
                END IF  
  
                SET offset TO offset + 1  
            END WHILE  
  
            IF alternating_flag EQUALS 1 THEN  
                valid_groups = valid_groups + 1  
            END IF  
  
            SET idx = idx + 1  
        END WHILE  
  
        RETURN valid_groups  
    END FUNCTION  
END CLASS