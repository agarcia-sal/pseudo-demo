CLASS Solution
    FUNCTION minOperations(initial parameter TO string, target parameter TO string) RETURNS integer
        DECLARE lengthInitial AS integer ASSIGN LENGTH(initial)
        DECLARE lengthTarget AS integer ASSIGN LENGTH(target)
        DECLARE matrix AS LIST OF LIST OF integer ASSIGN EMPTY LIST
        DECLARE rowIndex AS integer ASSIGN 0
        WHILE rowIndex < lengthInitial + 1
            DECLARE colList AS LIST OF integer ASSIGN EMPTY LIST
            DECLARE colIndex AS integer ASSIGN 0
            WHILE colIndex < lengthTarget + 1
                ADD 0 TO colList
                SET colIndex TO colIndex + 1
            END WHILE
            ADD colList TO matrix
            SET rowIndex TO rowIndex + 1
        END WHILE
        DECLARE longestCommonSubsequence AS integer ASSIGN 0
        DECLARE outerIterator AS integer ASSIGN 1
        WHILE outerIterator <= lengthInitial
            DECLARE innerIterator AS integer ASSIGN 1
            WHILE innerIterator <= lengthTarget
                DECLARE initialChar AS string ASSIGN initial[outerIterator - 1]
                DECLARE targetChar AS string ASSIGN target[innerIterator - 1]
                IF NOT (initialChar != targetChar)
                    DECLARE diagonalValue AS integer ASSIGN matrix[outerIterator - 1][innerIterator - 1]
                    SET matrix[outerIterator][innerIterator] TO diagonalValue + 1
                    IF NOT (longestCommonSubsequence >= matrix[outerIterator][innerIterator])
                        SET longestCommonSubsequence TO matrix[outerIterator][innerIterator]
                    END IF
                END IF
                SET innerIterator TO innerIterator + 1
            END WHILE
            SET outerIterator TO outerIterator + 1
        END WHILE
        DECLARE result AS integer ASSIGN (lengthInitial + lengthTarget) - (2 * longestCommonSubsequence)
        RETURN result
    END FUNCTION
END CLASS