CLASS Solution  
    FUNCTION getSum(nums)  
        FUNCTION calc(nums)  
            DECLARE length AS LENGTH OF nums  
            DECLARE leftCounts AS ARRAY OF length ELEMENTS INITIALIZED TO 0  
            DECLARE rightCounts AS ARRAY OF length ELEMENTS INITIALIZED TO 0  
            DECLARE frequencyMap AS NEW counter  
            
            DECLARE index AS 1  
            WHILE index < length DO  
                DECLARE keyLeft AS nums[index - 1]  
                DECLARE previousCountLeft AS frequencyMap[keyLeft]  
                SET frequencyMap[keyLeft] = previousCountLeft + 1  
                SET leftCounts[index] = previousCountLeft  
                INCREMENT index BY 1  
            END WHILE  
            
            SET frequencyMap TO NEW counter  
            
            SET index TO length - 2  
            WHILE index >= 0 DO  
                DECLARE keyRight AS nums[index + 1]  
                DECLARE previousCountRight AS frequencyMap[keyRight]  
                SET frequencyMap[keyRight] = previousCountRight + 1  
                SET rightCounts[index] = previousCountRight  
                DECREMENT index BY 1  
            END WHILE  
            
            DECLARE accumulatedSum AS 0  
            DECLARE pos AS 0  
            WHILE pos < length DO  
                DECLARE l AS leftCounts[pos]  
                DECLARE r AS rightCounts[pos]  
                DECLARE val AS nums[pos]  
                
                DECLARE partialSum AS (l + r + (l * r)) * val  
                SET accumulatedSum = accumulatedSum + partialSum  
                
                INCREMENT pos BY 1  
            END WHILE  
            
            RETURN accumulatedSum MODULO (1000000000 + 7)  
        END FUNCTION  
        
        DECLARE modValue AS 1000000000 + 7  
        DECLARE xResult AS calc(nums)  
        
        DECLARE leftIndex AS 0  
        DECLARE rightIndex AS LENGTH OF nums - 1  
        WHILE leftIndex < rightIndex DO  
            DECLARE temp AS nums[leftIndex]  
            SET nums[leftIndex] = nums[rightIndex]  
            SET nums[rightIndex] = temp  
            INCREMENT leftIndex BY 1  
            DECREMENT rightIndex BY 1  
        END WHILE  
        
        DECLARE yResult AS calc(nums)  
        
        DECLARE sumNums AS 0  
        DECLARE i AS 0  
        WHILE i < LENGTH OF nums DO  
            SET sumNums = sumNums + nums[i]  
            INCREMENT i BY 1  
        END WHILE  
        
        RETURN (xResult + yResult + sumNums) MODULO modValue  
    END FUNCTION  
END CLASS