CLASS Solution  
    FUNCTION lastNonEmptyString(s)  
        DECLARE frequency_map AS a dictionary mapping characters to integers  
        FOR each character c IN s  
            IF c NOT IN frequency_map  
                SET frequency_map[c] TO 1  
            ELSE  
                INCREMENT frequency_map[c] BY 1  
            END IF  
        END FOR  
  
        SET highest_count TO 0  
        FOR each count IN values of frequency_map  
            IF count GREATER THAN highest_count  
                SET highest_count TO count  
            END IF  
        END FOR  
  
        DECLARE candidates AS an empty set  
        FOR each key, value IN frequency_map  
            IF value EQUALS highest_count  
                ADD key TO candidates  
            END IF  
        END FOR  
  
        DECLARE collected_chars AS an empty list  
        SET index TO length of s MINUS 1  
        WHILE index GREATER OR EQUAL TO 0  
            SET current_char TO s[index]  
            IF current_char IN candidates  
                APPEND current_char TO collected_chars  
                REMOVE current_char FROM candidates  
            END IF  
            DECREMENT index BY 1  
        END WHILE  
  
        DECLARE output_string AS empty string  
        FOR i FROM length of collected_chars MINUS 1 DOWNTO 0  
            CONCATENATE collected_chars[i] TO output_string  
        END FOR  
  
        RETURN output_string  
    END FUNCTION  
END CLASS