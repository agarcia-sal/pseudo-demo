CLASS Solution  
    FUNCTION lastMarkedNodes(edges)  
        FUNCTION dfs(current, parent, distances)  
            FOR neighbor IN g[current]  
                IF neighbor != parent THEN  
                    distances[neighbor] = distances[current] + 1  
                    dfs(neighbor, current, distances)  
                END IF  
            END FOR  
        END FUNCTION  

        n = LENGTH(edges) + 1  
        g = ARRAY WITH n EMPTY ARRAYS  
        FOR EACH (u, v) IN edges DO  
            g[u].APPEND(v)  
            g[v].APPEND(u)  
        END FOR  

        dist1 = ARRAY OF n ELEMENTS SET TO -1  
        dist1[0] = 0  
        dfs(0, -1, dist1)  
        a = INDEX OF MAXIMUM VALUE IN dist1  

        dist2 = ARRAY OF n ELEMENTS SET TO -1  
        dist2[a] = 0  
        dfs(a, -1, dist2)  
        b = INDEX OF MAXIMUM VALUE IN dist2  

        dist3 = ARRAY OF n ELEMENTS SET TO -1  
        dist3[b] = 0  
        dfs(b, -1, dist3)  

        result = EMPTY ARRAY  
        FOR i FROM 0 TO n - 1 DO  
            IF dist2[i] > dist3[i] THEN  
                result.APPEND(a)  
            ELSE  
                result.APPEND(b)  
            END IF  
        END FOR  

        RETURN result  
    END FUNCTION  
END CLASS