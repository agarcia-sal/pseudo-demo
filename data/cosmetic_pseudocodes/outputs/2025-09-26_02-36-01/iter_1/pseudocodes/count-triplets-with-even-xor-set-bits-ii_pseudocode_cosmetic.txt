CLASS Solution  
    FUNCTION tripletCount(a AS List OF integer, b AS List OF integer, c AS List OF integer) RETURNS integer  
        FUNCTION countBitsParity(numbers AS List OF integer) RETURNS tuple OF integer AND integer  
            INITIALIZE evenParityCount TO 0  
            FOR EACH value IN numbers DO  
                CALCULATE bitSum AS the total number of bits set to 1 in value  
                IF bitSum MOD 2 == 0 THEN  
                    evenParityCount = evenParityCount + 1  
                END IF  
            END FOR  
            SET oddParityCount TO LENGTH(numbers) - evenParityCount  
            RETURN evenParityCount, oddParityCount  
        END FUNCTION  
        
        LET evenA, oddA BE countBitsParity(a)  
        LET evenB, oddB BE countBitsParity(b)  
        LET evenC, oddC BE countBitsParity(c)  
        
        LET tripleAllEven BE evenA * evenB * evenC  
        LET tripleMixedParity BE (evenA * oddB * oddC) + (oddA * evenB * oddC) + (oddA * oddB * evenC)  
        
        LET totalTriplets BE tripleAllEven + tripleMixedParity  
        RETURN totalTriplets  
    END FUNCTION  
END CLASS