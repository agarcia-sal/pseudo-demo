CLASS Solution
    FUNCTION nonSpecialCount(l r)
        FUNCTION is_prime(num)
            IF num <= 1 THEN
                RETURN false
            END IF
            
            IF num <= 3 THEN
                RETURN true
            END IF
            
            IF (num % 2 == 0) OR (num % 3 == 0) THEN
                RETURN false
            END IF
            
            SET divisor TO 5
            WHILE divisor * divisor <= num DO
                IF (num % divisor == 0) OR (num % (divisor + 2) == 0) THEN
                    RETURN false
                END IF
                divisor = divisor + 6
            END WHILE

            RETURN true
        END FUNCTION

        SET lower_bound TO CEIL(SQRT(l))
        SET upper_bound TO FLOOR(SQRT(r))

        SET prime_counter TO 0
        FOR value FROM lower_bound TO upper_bound DO
            IF is_prime(value) THEN
                prime_counter = prime_counter + 1
            END IF
        END FOR

        SET range_size TO (r - l + 1)
        RETURN range_size - prime_counter
    END FUNCTION
END CLASS