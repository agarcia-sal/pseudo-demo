CLASS Solution  
    FUNCTION minimumValueSum(nums, andValues)  
        LET length_nums BE LENGTH OF nums  
        LET length_and BE LENGTH OF andValues  
        
        FUNCTION dp(index_nums, index_and)  
            IF index_and < 0 THEN  
                IF index_nums < 0 THEN  
                    RETURN 0  
                ELSE  
                    RETURN ∞  
                END IF  
            END IF  
            
            IF index_nums < 0 THEN  
                RETURN ∞  
            END IF  
            
            LET minimal_sum BE ∞  
            LET accumulated_and BE UNDEFINED  
            
            FOR pos FROM index_nums DOWN TO 0 STEP -1 DO  
                IF accumulated_and IS UNDEFINED THEN  
                    SET accumulated_and TO nums[pos]  
                ELSE  
                    SET accumulated_and TO accumulated_and BITWISE_AND nums[pos]  
                END IF  
                
                IF accumulated_and == andValues[index_and] THEN  
                    LET candidate_sum BE dp(pos - 1, index_and - 1) + nums[index_nums]  
                    IF candidate_sum < minimal_sum THEN  
                        SET minimal_sum TO candidate_sum  
                    END IF  
                END IF  
            END FOR  
            
            RETURN minimal_sum  
        END FUNCTION  
        
        LET answer BE dp(length_nums - 1, length_and - 1)  
        IF answer IS NOT ∞ THEN  
            RETURN answer  
        ELSE  
            RETURN -1  
        END IF  
    END FUNCTION  
END CLASS