```pseudocode
CLASS Solution
    FUNCTION minChanges(nums, k)
        INITIALIZE diff_array AS an array of size k + 2 filled with zeros
        LET length_nums BE LENGTH OF nums
        LET half_length BE length_nums DIVIDED BY 2 (integer division)
        
        FOR index FROM 0 TO half_length - 1
            LET front_val BE nums[index]
            LET back_val BE nums[length_nums - 1 - index]
            
            IF front_val > back_val THEN
                SWAP front_val WITH back_val
            END IF
            
            diff_array[0] = diff_array[0] + 1
            diff_array[back_val - front_val] = diff_array[back_val - front_val] - 1
            diff_array[back_val - front_val + 1] = diff_array[back_val - front_val + 1] + 1
            
            LET edge_pos1 = MAX(back_val, k - front_val + 1)
            diff_array[edge_pos1] = diff_array[edge_pos1] - 1
            diff_array[edge_pos1 + 1] = diff_array[edge_pos1 + 1] + 1
        END FOR
        
        SET cumulative_sum TO 0
        SET minimum_changes TO a very large number
        
        FOR each value IN diff_array
            cumulative_sum = cumulative_sum + value
            IF cumulative_sum < minimum_changes THEN
                minimum_changes = cumulative_sum
            END IF
        END FOR
        
        RETURN minimum_changes
    END FUNCTION
END CLASS
```