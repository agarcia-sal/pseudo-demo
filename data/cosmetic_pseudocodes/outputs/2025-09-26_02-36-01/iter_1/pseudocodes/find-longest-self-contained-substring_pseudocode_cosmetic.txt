CLASS Solution  
    FUNCTION maxSubstringLength(s)  
        DEFINE total_frequencies AS map of character counts in s  
        INITIALIZE longest_substring_length TO -1  
        FOR start_pos FROM 0 TO LENGTH(s) - 1 DO  
            DEFINE substring_frequencies AS empty map  
            FOR end_pos FROM start_pos TO LENGTH(s) - 1 DO  
                LET current_char = s[end_pos]  
                IF current_char NOT IN substring_frequencies THEN  
                    substring_frequencies[current_char] = 0  
                END IF  
                INCREMENT substring_frequencies[current_char] BY 1  
                
                SET all_chars_satisfied TO true  
                FOR EACH char_key IN substring_frequencies KEYS DO  
                    IF substring_frequencies[char_key] < total_frequencies[char_key] THEN  
                        all_chars_satisfied = false  
                        EXIT FOR  
                    END IF  
                END FOR  
                
                IF all_chars_satisfied AND COUNT_KEYS(substring_frequencies) < COUNT_KEYS(total_frequencies) THEN  
                    CALCULATE current_length = end_pos - start_pos + 1  
                    IF current_length > longest_substring_length THEN  
                        longest_substring_length = current_length  
                    END IF  
                END IF  
            END FOR  
        END FOR  
        RETURN longest_substring_length  
    END FUNCTION  
END CLASS