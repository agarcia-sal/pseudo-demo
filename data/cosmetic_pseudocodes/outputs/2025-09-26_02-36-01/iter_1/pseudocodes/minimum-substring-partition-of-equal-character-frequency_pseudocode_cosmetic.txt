CLASS Solution  
    FUNCTION minimumSubstringsInPartition(s)  
        FUNCTION dfs(index)  
            IF index >= LENGTH(s) THEN  
                RETURN 0  
            END IF  
  
            DEFINE countMap AS EMPTY MAP with default 0  
            DEFINE freqMap AS EMPTY MAP with default 0  
            DEFINE result AS LENGTH(s) - index  
  
            FOR pos IN RANGE index TO LENGTH(s) - 1  
                CHARACTER char = s[pos]  
  
                IF countMap CONTAINS char AND countMap[char] > 0 THEN  
                    frequency = countMap[char]  
                    freqMap[frequency] = freqMap[frequency] - 1  
                    IF freqMap[frequency] == 0 THEN  
                        DELETE freqMap[frequency]  
                    END IF  
                END IF  
  
                countMap[char] = countMap[char] + 1  
                freqMap[countMap[char]] = freqMap.get(countMap[char], 0) + 1  
  
                IF LENGTH(freqMap) == 1 THEN  
                    temp = 1 + dfs(pos + 1)  
                    IF temp < result THEN  
                        result = temp  
                    END IF  
                END IF  
            END FOR  
  
            RETURN result  
        END FUNCTION  
  
        RETURN dfs(0)  
    END FUNCTION  
END CLASS