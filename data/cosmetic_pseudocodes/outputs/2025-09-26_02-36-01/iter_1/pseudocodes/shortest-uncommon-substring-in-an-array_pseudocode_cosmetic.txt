CLASS Solution  
    FUNCTION shortestSubstrings(arr)  
        DECLARE frequency_map AS a dictionary with default integer zero  
        
        FOR EACH word IN arr DO  
            LET n BE the length of word  
            FOR start_pos FROM 0 TO n - 1 DO  
                FOR end_pos FROM start_pos + 1 TO n DO  
                    LET fragment BE substring of word from start_pos up to (but not including) end_pos  
                    frequency_map[fragment] = frequency_map[fragment] + 1  
                END FOR  
            END FOR  
        END FOR  
        
        DECLARE results AS an empty list  
        
        FOR EACH word IN arr DO  
            LET n BE the length of word  
            LET candidate BE null  
            
            FOR start_pos FROM 0 TO n - 1 DO  
                FOR end_pos FROM start_pos + 1 TO n DO  
                    LET fragment BE substring of word from start_pos up to (but not including) end_pos  
                    IF frequency_map[fragment] == 1 THEN  
                        IF candidate IS null OR  
                           LENGTH(fragment) < LENGTH(candidate) OR  
                           (LENGTH(fragment) == LENGTH(candidate) AND fragment < candidate) THEN  
                            candidate = fragment  
                        END IF  
                    END IF  
                END FOR  
            END FOR  
            
            APPEND candidate TO results  
        END FOR  
        
        RETURN results  
    END FUNCTION  
END CLASS