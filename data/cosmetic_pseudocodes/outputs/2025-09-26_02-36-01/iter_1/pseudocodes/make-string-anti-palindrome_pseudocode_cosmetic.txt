CLASS Solution  
    FUNCTION makeAntiPalindrome(s)  
        SET chars TO an array containing each character from s  
        SORT chars in ascending order  
        SET length TO the number of elements in chars  
        SET half TO floor division of length by 2  
        
        IF chars[half] IS EQUAL TO chars[half - 1]  
            SET leftIndex TO half  
            WHILE leftIndex < length AND chars[leftIndex] == chars[leftIndex - 1]  
                INCREMENT leftIndex BY 1  
            END WHILE  
            
            SET rightIndex TO half  
            WHILE rightIndex < length AND chars[rightIndex] == chars[length - rightIndex - 1]  
                IF leftIndex >= length  
                    RETURN "-1"  
                END IF
                SWAP chars[leftIndex], chars[rightIndex]
                INCREMENT leftIndex BY 1
                INCREMENT rightIndex BY 1
            END WHILE
        END IF
        
        FOR frontIndex FROM 0 TO half - 1  
            IF chars[frontIndex] == chars[length - frontIndex - 1]  
                SET foundSwap TO false  
                FOR backIndex FROM half TO length - 1  
                    IF chars[backIndex] != chars[frontIndex] AND chars[backIndex] != chars[length - frontIndex - 1]  
                        SWAP chars[backIndex], chars[frontIndex]  
                        SET foundSwap TO true  
                        BREAK  
                    END IF  
                END FOR  
                IF NOT foundSwap  
                    RETURN "-1"  
                END IF  
            END IF  
        END FOR
        
        RETURN concatenation of all elements in chars as a string  
    END FUNCTION  
END CLASS