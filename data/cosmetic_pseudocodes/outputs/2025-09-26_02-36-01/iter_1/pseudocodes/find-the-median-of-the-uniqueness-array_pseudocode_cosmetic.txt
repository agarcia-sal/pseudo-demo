CLASS Solution  
    FUNCTION medianOfUniquenessArray(nums)  
        FUNCTION countLessOrEqual(target)  
            INITIALIZE counts AS empty map with default 0  
            SET leftIndex TO 0  
            SET uniqueCount TO 0  
            SET result TO 0  
            FOR rightIndex FROM 0 TO LENGTH(nums) - 1 DO  
                IF counts[nums[rightIndex]] EQUALS 0 THEN  
                    INCREMENT uniqueCount BY 1  
                END IF  
                INCREMENT counts[nums[rightIndex]] BY 1  
                WHILE uniqueCount > target DO  
                    DECREMENT counts[nums[leftIndex]] BY 1  
                    IF counts[nums[leftIndex]] EQUALS 0 THEN  
                        DECREMENT uniqueCount BY 1  
                    END IF  
                    INCREMENT leftIndex BY 1  
                END WHILE  
                ADD (rightIndex - leftIndex + 1) TO result  
            END FOR  
            RETURN result  
        END FUNCTION  
  
        SET n TO LENGTH(nums)  
        SET totalSubarrays TO (n * (n + 1)) / 2  
        SET medianTarget TO (totalSubarrays + 1) / 2  
        SET start TO 1  
        SET end TO n  
        WHILE start < end DO  
            SET midVal TO (start + end) / 2  
            IF countLessOrEqual(midVal) < medianTarget THEN  
                SET start TO midVal + 1  
            ELSE  
                SET end TO midVal  
            END IF  
        END WHILE  
        RETURN start  
    END FUNCTION  
END CLASS