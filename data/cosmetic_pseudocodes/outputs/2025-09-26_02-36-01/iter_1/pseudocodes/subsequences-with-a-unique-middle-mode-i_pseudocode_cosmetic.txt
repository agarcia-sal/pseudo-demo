CLASS Solution  
    FUNCTION subsequencesWithMiddleMode(nums)  
        DEFINE CONSTANT MOD = 1000000007  
        ASSIGN n = LENGTH(nums)  
        IF n < 5 THEN  
            RETURN 0  
        END IF  
          
        INITIALIZE result = 0  
        GENERATE combination_list AS all 5-element subsets OF nums  
          
        FOR EACH subset IN combination_list DO  
            CREATE frequency_map AS EMPTY DICTIONARY  
            FOR EACH val IN subset DO  
                IF val IN frequency_map THEN  
                    frequency_map[val] = frequency_map[val] + 1  
                ELSE  
                    frequency_map[val] = 1  
                END IF  
            END FOR  
              
            ASSIGN mid_val = subset[2]  # zero-based index, third element  
            ASSIGN mid_freq = frequency_map[mid_val]  
              
            SET unique_mode_flag = TRUE  
            FOR EACH key, count_val IN frequency_map DO  
                IF key != mid_val AND count_val >= mid_freq THEN  
                    unique_mode_flag = FALSE  
                    BREAK  
                END IF  
            END FOR  
              
            IF unique_mode_flag THEN  
                result = result + 1  
            END IF  
        END FOR  
          
        RETURN result MOD MOD  
    END FUNCTION  
END CLASS