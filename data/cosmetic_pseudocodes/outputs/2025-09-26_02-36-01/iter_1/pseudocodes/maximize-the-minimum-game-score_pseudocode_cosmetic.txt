CLASS Solution  
    FUNCTION maxScore(points, m)  
        FUNCTION isPossible(minVal, m)  
            INITIALIZE usedMoves AS 0  
            INITIALIZE leftover AS 0  
            FOR i FROM 0 TO LENGTH(points) - 1  
                LET point = points[i]  
                LET needed = CEIL(minVal / point)  
                LET diff = needed - leftover  
                IF diff < 0 THEN  
                    diff = 0  
                END IF  
                IF diff > 0 THEN  
                    usedMoves = usedMoves + (2 * diff - 1)  
                    leftover = diff - 1  
                ELSE IF i < LENGTH(points) - 1 THEN  
                    usedMoves = usedMoves + 1  
                    leftover = 0  
                END IF  
                IF usedMoves > m THEN  
                    RETURN False  
                END IF  
            END FOR  
            RETURN True  
        END FUNCTION  
  
        LET left = 0  
        LET right = ((m + 1) // 2) * (points[0] + 1)  
  
        WHILE left < right  
            LET middle = (left + right + 1) // 2  
            IF isPossible(middle, m) THEN  
                left = middle  
            ELSE  
                right = middle - 1  
            END IF  
        END WHILE  
  
        RETURN left  
    END FUNCTION  
END CLASS