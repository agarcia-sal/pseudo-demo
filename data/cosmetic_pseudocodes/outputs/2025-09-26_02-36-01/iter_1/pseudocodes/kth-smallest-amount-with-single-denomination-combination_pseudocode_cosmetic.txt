CLASS Solution  
    FUNCTION findKthSmallest(coins k)  
        FUNCTION count_up_to(value)  
            INITIALIZE total TO 0  
            LET n BE LENGTH OF coins  
            FOR mask FROM 1 TO (2 EXP n) - 1  
                INITIALIZE current_lcm TO 1  
                INITIALIZE bits_count TO 0  
                FOR index FROM 0 TO n - 1  
                    IF (mask BITWISE_AND (1 LEFT_SHIFT index)) NOT EQUALS 0 THEN  
                        SET current_lcm TO (current_lcm TIMES coins[index]) DIVIDED_BY GCD(current_lcm, coins[index])  
                        INCREMENT bits_count BY 1  
                    END IF  
                END FOR  
                IF bits_count MOD 2 EQUALS 1 THEN  
                    ADD (value DIV current_lcm) TO total  
                ELSE  
                    SUBTRACT (value DIV current_lcm) FROM total  
                END IF  
            END FOR  
            RETURN total  
        END FUNCTION  

        SET low TO 1  
        SET high TO k TIMES MINIMUM_OF(coins)  
        WHILE low < high DO  
            SET middle TO (low + high) DIV 2  
            IF count_up_to(middle) < k THEN  
                SET low TO middle + 1  
            ELSE  
                SET high TO middle  
            END IF  
        END WHILE  
        RETURN low  
    END FUNCTION  
END CLASS