```pseudocode
CLASS Solution
    FUNCTION minimumOperationsToMakeKPeriodic(word, k)
        LET totalLength = LENGTH(word)
        LET chunkList = []
        LET start = 0

        WHILE start < totalLength
            LET end = start + k
            LET part = SUBSTRING(word, start, end - 1)
            ADD part TO chunkList
            INCREMENT start BY k
        END WHILE

        LET frequencyMap = EMPTY DICTIONARY
        FOR EACH element IN chunkList
            IF element NOT IN frequencyMap THEN
                frequencyMap[element] = 0
            END IF
            INCREMENT frequencyMap[element] BY 1
        END FOR

        LET highestFrequency = 0
        FOR EACH key IN frequencyMap KEYS
            IF frequencyMap[key] > highestFrequency THEN
                highestFrequency = frequencyMap[key]
            END IF
        END FOR

        LET changesNeeded = LENGTH(chunkList) - highestFrequency
        RETURN changesNeeded
    END FUNCTION
END CLASS
```