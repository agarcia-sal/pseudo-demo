CLASS Solution  
    FUNCTION gcdValues(nums, queries)  
        LET max_val BE the largest number in nums  
        LET frequency BE a map counting occurrences in nums  
        LET gcd_counts BE an array of zeros sized max_val + 1  
        FOR divisor FROM max_val DOWN TO 1  
            LET total_count BE 0  
            FOR multiple FROM divisor TO max_val STEP divisor  
                total_count = total_count + frequency.get(multiple, 0)  
                gcd_counts[divisor] = gcd_counts[divisor] - gcd_counts[multiple]  
            END FOR  
            gcd_counts[divisor] = gcd_counts[divisor] + (total_count * (total_count - 1)) / 2  
        END FOR  
        LET prefix_sums BE an array accumulating gcd_counts from start to end  
        LET answers BE an empty list  
        FOR query_value IN queries  
            LET position BE bisect_right(prefix_sums, query_value)  
            answers.append(position)  
        END FOR  
        RETURN answers  
    END FUNCTION  
END CLASS