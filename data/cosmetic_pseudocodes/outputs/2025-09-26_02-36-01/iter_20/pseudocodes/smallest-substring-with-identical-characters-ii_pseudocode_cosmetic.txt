CLASS Solution
    FUNCTION minLength(s parameter representing a string, numOps parameter representing an integer) RETURNS integer

        FUNCTION check(m parameter representing an integer) RETURNS boolean
            FUNCTION isNextEqual(a parameter representing string, idx parameter representing integer) RETURNS boolean
                RETURN (idx + 1 LESS THAN LENGTH(a)) AND (a AT idx EQUALS a AT (idx + 1))
            END FUNCTION

            SET x1 TO 0
            SET x2 TO 0

            SET idx TO 0
            REPEAT
                SET x2 TO x2 + 1

                IF (idx EQUALS (LENGTH(s) - 1)) OR (NOT isNextEqual(s, idx)) THEN
                    SET tempDiv TO (x2 DIV m) + 1
                    SET x1 TO x1 + tempDiv
                    IF x1 GREATER THAN numOps THEN
                        RETURN false
                    END IF
                    SET x2 TO 0
                END IF

                SET idx TO idx + 1
            UNTIL idx GREATER OR EQUAL TO LENGTH(s)

            RETURN x1 LESS THAN OR EQUAL TO numOps
        END FUNCTION

        SET lengthOfS TO LENGTH(s)
        SET lo TO 1
        SET hi TO lengthOfS

        FUNCTION integerDivideFloor(a parameter representing integer, b parameter representing integer) RETURNS integer
            RETURN a DIV b
        END FUNCTION

        FUNCTION integerAverageFloor(a parameter representing integer, b parameter representing integer) RETURNS integer
            RETURN integerDivideFloor(a + b, 2)
        END FUNCTION

        WHILE lo LESS THAN hi DO
            SET midVal TO integerAverageFloor(lo, hi)

            IF check(midVal) THEN
                SET hi TO midVal
            ELSE
                SET lo TO midVal + 1
            END IF
        END WHILE

        RETURN lo
    END FUNCTION
END CLASS