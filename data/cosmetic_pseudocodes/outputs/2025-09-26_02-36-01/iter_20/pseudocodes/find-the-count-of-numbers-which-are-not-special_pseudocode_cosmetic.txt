CLASS Solution  
    FUNCTION nonSpecialCount(l r)  
        FUNCTION is_prime(x)  
            FUNCTION modulo(a b)  
                RETURN a - (a / b) * b  
            END FUNCTION  
  
            FUNCTION leq(a b)  
                RETURN (a < b) OR (a = b)  
            END FUNCTION  
  
            FUNCTION geq(a b)  
                RETURN NOT leq(a b) OR (a = b)  
            END FUNCTION  
  
            FUNCTION and_op(p q)  
                RETURN p AND q  
            END FUNCTION  
  
            FUNCTION or_op(p q)  
                RETURN p OR q  
            END FUNCTION  
  
            FUNCTION not_op(p)  
                RETURN NOT p  
            END FUNCTION  
  
            FUNCTION equal(a b)  
                RETURN NOT (a < b) AND NOT (b < a)  
            END FUNCTION  
  
            SET alpha TO 1  
            SET beta TO 3  
            SET two_val TO 2  
            SET five_val TO 5  
            SET six_val TO 6  
            SET false_val TO FALSE  
            SET true_val TO TRUE  
  
            IF leq(x alpha)  
                RETURN false_val  
            END IF  
  
            IF leq(x beta)  
                RETURN true_val  
            END IF  
  
            IF or_op(equal(modulo(x two_val) 0) equal(modulo(x beta) 0))  
                RETURN false_val  
            END IF  
  
            SET gamma TO five_val  
            REPEAT  
                IF not_op(leq(gamma * gamma x))  
                    BREAK  
                END IF  
  
                IF or_op(equal(modulo(x gamma) 0) equal(modulo(x gamma + 2) 0))  
                    RETURN false_val  
                END IF  
  
                SET gamma TO gamma + six_val  
            UNTIL FALSE  
  
            RETURN true_val  
        END FUNCTION  
  
        FUNCTION floor_sqrt(n)  
            FUNCTION helper(low high)  
                IF low > high THEN
                    RETURN high
                ELSE
                    SET mid TO (low + high) / 2
                    IF mid * mid <= n THEN
                        RETURN helper(mid + 1 high)
                    ELSE
                        RETURN helper(low mid - 1)
                    END IF
                END IF
            END FUNCTION
            RETURN helper(0 n)
        END FUNCTION  
  
        SET a TO floor_sqrt(l)  
        SET b TO floor_sqrt(r)  
  
        SET count_excluded TO 0  
  
        SET i TO a  
        WHILE TRUE  
            IF i > b THEN  
                BREAK  
            END IF  
  
            IF is_prime(i) = TRUE THEN  
                SET count_excluded TO count_excluded + 1  
            END IF  
  
            SET i TO i + 1  
        END WHILE  
  
        SET total_elements TO r - l + 1  
  
        SET answer TO total_elements - count_excluded  
  
        RETURN answer  
    END FUNCTION  
END CLASS