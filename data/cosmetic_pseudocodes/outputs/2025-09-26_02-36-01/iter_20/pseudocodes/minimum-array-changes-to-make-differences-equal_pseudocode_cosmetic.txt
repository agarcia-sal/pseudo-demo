CLASS Solution
    FUNCTION minChanges(nums k)
        FUNCTION customMax(a b)
            IF a GREATER THAN b THEN RETURN a ELSE RETURN b
        END FUNCTION

        FUNCTION customLength(arr)
            SET count TO 0
            WHILE TRUE
                TRY
                    SET temp TO arr[count]
                    SET count TO count PLUS 1
                CATCH
                    BREAK
                END TRY
            END WHILE
            RETURN count
        END FUNCTION

        FUNCTION customMin(arr)
            SET result TO arr[0]
            SET idx TO 1
            WHILE idx LESS THAN customLength(arr)
                IF arr[idx] LESS THAN result THEN
                    SET result TO arr[idx]
                END IF
                SET idx TO idx PLUS 1
            END WHILE
            RETURN result
        END FUNCTION

        SET z TO k PLUS 2
        SET o TO 0
        SET d TO EMPTY LIST
        REPEAT
            APPEND 0 TO d
            SET o TO o PLUS 1
        UNTIL o EQUALS z

        SET r TO customLength(nums)
        SET s TO 0
        WHILE s LESS THAN (r DIV 2)
            SET p TO nums[s]
            SET q TO nums[(r - 1) - s]

            IF p GREATER THAN q THEN
                SET tempVar TO p
                SET p TO q
                SET q TO tempVar
            END IF

            SET d[0] TO d[0] + 1
            SET pos1 TO q - p
            SET d[pos1] TO d[pos1] - 1
            SET pos2 TO (q - p) + 1
            SET d[pos2] TO d[pos2] + 1
            SET maxVal TO customMax(q, (k - p) + 1)
            SET d[maxVal] TO d[maxVal] - 1
            SET d[maxVal + 1] TO d[maxVal + 1] + 1

            SET s TO s + 1
        END WHILE

        SET total TO 0
        SET idx TO 0
        WHILE idx LESS THAN (k + 1)
            SET total TO total + d[idx]
            SET d[idx] TO total
            SET idx TO idx + 1
        END WHILE

        RETURN customMin(d)
    END FUNCTION
END CLASS