CLASS Solution  
    FUNCTION findMaximumNumber(k, x)  
        FUNCTION getBitCount(m, q)  
            SET accumulator TO 0  
            SET segment_length TO 1  
            SET shift_val TO segment_length << q  
            SET full_segment_count TO m DIV shift_val  
            SET accumulator TO accumulator + (full_segment_count DIV 2) * shift_val  
            IF (full_segment_count MOD 2) = 1 THEN  
                SET accumulator TO accumulator + (m MOD shift_val) + 1  
            END IF  
            RETURN accumulator  
        END FUNCTION  

        FUNCTION totalCost(r)  
            SET sum_val TO 0  
            SET pointer TO 1  
            WHILE (1 << ((pointer * x) - 1)) <= r DO  
                SET sum_val TO sum_val + getBitCount(r, (pointer * x) - 1)  
                SET pointer TO pointer + 1  
            END WHILE  
            RETURN sum_val  
        END FUNCTION  

        SET start_bound TO 1  
        SET end_bound TO 1 << 60  
        WHILE start_bound <= end_bound DO  
            SET middle_point TO start_bound + ((end_bound - start_bound) DIV 2)  
            IF totalCost(middle_point) <= k THEN  
                SET start_bound TO middle_point + 1  
            ELSE  
                SET end_bound TO middle_point - 1  
            END IF  
        END WHILE  
        RETURN end_bound  
    END FUNCTION  
END CLASS