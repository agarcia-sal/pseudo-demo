CLASS Solution
    FUNCTION maxScore(nums)
        
        FUNCTION computeLength(collection)
            SET counter TO 0
            WHILE TRUE
                IF counter EQUALS collection LENGTH
                    BREAK
                END IF
                SET counter TO counter PLUS 1
            END WHILE
            RETURN counter
        END FUNCTION
        
        FUNCTION zeroList(size)
            SET result TO EMPTY LIST
            SET index TO 0
            REPEAT
                IF index EQUALS size
                    EXIT LOOP
                END IF
                APPEND 0 TO result
                SET index TO index PLUS 1
            UNTIL FALSE
            RETURN result
        END FUNCTION
        
        SET alpha TO computeLength(nums)
        SET beta TO zeroList(alpha)
        
        FUNCTION innerLoop(startIndex, maxValue)
            FUNCTION recurse(j, currentMax)
                IF j EQUALS alpha
                    RETURN currentMax
                END IF
                
                SET tempScore TO (j MINUS startIndex) MULTIPLIED BY nums[j]
                SET combined TO tempScore PLUS beta[j]
                
                IF currentMax LESS THAN combined
                    SET currentMax TO combined
                END IF
                
                RETURN recurse(j PLUS 1, currentMax)
            END FUNCTION
            
            RETURN recurse(startIndex PLUS 1, maxValue)
        END FUNCTION
        
        SET i TO alpha MINUS 2
        WHILE i GREATER THAN OR EQUAL TO 0
            SET maxScoreVar TO 0
            SET maxScoreVar TO innerLoop(i, maxScoreVar)
            SET beta[i] TO maxScoreVar
            SET i TO i MINUS 1
        END WHILE
        
        RETURN beta[0]
    END FUNCTION
END CLASS