CLASS Solution  
    FUNCTION compressedString(word)  
        FUNCTION replicateString(n)  
            SET tempVar TO ""  
            SET iterX TO 0  
            WHILE iterX NOT EQUAL n  
                tempVar ← tempVar + "1"  
                iterX ← iterX + 1  
            END WHILE  
            RETURN tempVar  
        END FUNCTION

        FUNCTION toStr(num)  
            DEFINE digits AS "0123456789"  
            SET strRes TO ""  
            SET numberVal TO num  
            IF numberVal EQUALS 0  
                RETURN "0"  
            END IF  
            WHILE numberVal GREATER THAN 0  
                SET remVal TO numberVal MOD 10  
                SET strRes TO substr(digits, remVal + 1, 1) + strRes  
                SET numberVal TO numberVal DIV 10  
            END WHILE  
            RETURN strRes  
        END FUNCTION

        SET alphaSeq TO []  
        SET indVar TO 0  
        REPEAT  
            EXIT IF NOT indVar LESS THAN LENGTH(word)  
            SET elemX TO word[indVar]  
            SET totCount TO 0  
            FUNCTION incrementCount(indY) RETURNS INTEGER
                IF indY NOT LESS THAN LENGTH(word)  
                    RETURN 0  
                END IF  
                IF word[indY] NOT EQUAL TO elemX  
                    RETURN 0  
                ELSE IF totCount EQUALS 9  
                    RETURN 0  
                ELSE  
                    RETURN 1 + incrementCount(indY + 1)  
                END IF  
            END FUNCTION
            SET totCount TO incrementCount(indVar)  
            SET indVar TO indVar + totCount  
            APPEND toStr(totCount) + elemX TO alphaSeq  
        UNTIL FALSE  
        SET finalResult TO ""  
        FOR EACH item IN alphaSeq  
            finalResult ← finalResult + item  
        END FOR  
        RETURN finalResult  
    END FUNCTION  
END CLASS