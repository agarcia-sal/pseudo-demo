CLASS Solution
    FUNCTION numberOfRightTriangles(grid)
        FUNCTION customLength(arr)
            SET idx TO 0
            REPEAT
                IF idx IS EQUAL TO LENGTH_OF_ARRAY(arr) THEN
                    RETURN idx
                END IF
                SET idx TO idx + 1
            UNTIL FALSE
        END FUNCTION

        FUNCTION getElement(collection, position)
            RETURN collection[position]
        END FUNCTION

        SET alpha TO customLength(grid)
        SET beta TO customLength(getElement(grid, 0))
        SET gamma TO 0

        FUNCTION sumRowExcept(collected, skipIndex)
            SET result TO 0
            SET h TO 0
            WHILE h IS LESS THAN customLength(collected) DO
                IF h IS NOT EQUAL TO skipIndex THEN
                    SET tempVal TO getElement(collected, h)
                    SET result TO result + tempVal
                END IF
                SET h TO h + 1
            END WHILE
            RETURN result
        END FUNCTION

        FUNCTION sumColExcept(matrix, colIndex, skipRow)
            SET acc TO 0
            SET m TO 0
            WHILE m IS LESS THAN customLength(matrix) DO
                IF m IS NOT EQUAL TO skipRow THEN
                    SET elem TO getElement(getElement(matrix, m), colIndex)
                    SET acc TO acc + elem
                END IF
                SET m TO m + 1
            END WHILE
            RETURN acc
        END FUNCTION

        SET outerCounter TO 0
        WHILE outerCounter IS LESS THAN alpha DO
            SET innerCounter TO 0
            WHILE innerCounter IS LESS THAN beta DO
                SET cellValue TO getElement(getElement(grid, outerCounter), innerCounter)
                IF cellValue IS EQUAL TO 1 THEN
                    SET rowSum TO sumRowExcept(getElement(grid, outerCounter), innerCounter)
                    SET colSum TO sumColExcept(grid, innerCounter, outerCounter)
                    SET gamma TO gamma + (rowSum * colSum)
                END IF
                SET innerCounter TO innerCounter + 1
            END WHILE
            SET outerCounter TO outerCounter + 1
        END WHILE

        RETURN gamma
    END FUNCTION
END CLASS