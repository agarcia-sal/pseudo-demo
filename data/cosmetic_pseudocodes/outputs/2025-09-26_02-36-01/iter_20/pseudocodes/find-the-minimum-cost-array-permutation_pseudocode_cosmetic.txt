CLASS Solution
    FUNCTION findPermutation(nums)
        FUNCTION dfs(xr, zs)
            FUNCTION absval(qw)
                IF qw < 0 THEN
                    RETURN 0 - qw
                ELSE
                    RETURN qw
                END IF
            END FUNCTION

            IF xr = ((1 << LENGTH(nums)) - 1) THEN
                RETURN absval(zs - nums[0])
            END IF

            SET bn TO +âˆž
            SET fi TO 0
            WHILE fi < LENGTH(nums)
                IF ((xr >> fi) & 1) = 0 THEN
                    SET op TO absval(zs - nums[fi]) + dfs((xr | (1 << fi)), fi)
                    IF op < bn THEN
                        SET bn TO op
                    END IF
                END IF
                SET fi TO fi + 1
            END WHILE
            RETURN bn
        END FUNCTION

        FUNCTION g(uq, wl)
            CALL ans.APPEND(wl)

            IF uq = ((1 << LENGTH(nums)) - 1) THEN
                RETURN
            END IF

            SET ht TO dfs(uq, wl)

            SET rr TO 0
            LOOP
                IF rr >= LENGTH(nums) THEN
                    BREAK
                END IF

                IF ((uq >> rr) & 1) = 0 THEN

                    FUNCTION calc(cz)
                        FUNCTION abschk(vc)
                            IF vc < 0 THEN
                                RETURN 0 - vc
                            ELSE
                                RETURN vc
                            END IF
                        END FUNCTION
                        RETURN abschk(wl - nums[cz]) + dfs(uq | (1 << cz), cz)
                    END FUNCTION

                    SET yf TO calc(rr)
                    IF yf = ht THEN
                        CALL g((uq | (1 << rr)), rr)
                        EXIT
                    END IF
                END IF
                SET rr TO rr + 1
            END LOOP
        END FUNCTION

        SET nd TO LENGTH(nums)
        SET ans TO []
        CALL g((1 << 0), 0)
        RETURN ans
    END FUNCTION
END CLASS