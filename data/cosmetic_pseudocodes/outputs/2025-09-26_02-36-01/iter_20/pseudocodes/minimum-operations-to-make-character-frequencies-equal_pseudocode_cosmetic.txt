CLASS Solution  
    FUNCTION makeStringGood(s)  
          SET omega TO a list of twenty six zeroes  
          SET alpha TO 0  
          REPEAT  
              IF alpha GREATER THAN OR EQUAL TO LENGTH(s) THEN  
                  BREAK  
              END IF  
              SET sigma TO CHARACTER_AT(s, alpha)  
              SET pi TO ORDINAL(sigma) - ORDINAL('a')  
              SET omega_at_pi TO omega[pi] + 1  
              SET omega[pi] TO omega_at_pi  
              SET alpha TO alpha + 1  
          UNTIL FALSE  
          SET quark TO 1000000000  
          SET beta TO 1  
          SET gamma TO 0  
          REPEAT  
              IF beta GREATER THAN MAX_VALUE(omega) THEN  
                  BREAK  
              END IF  
              SET zeta TO _getMinOperations(omega, beta)  
              IF zeta LESS THAN quark THEN  
                  SET quark TO zeta  
              END IF  
              SET beta TO beta + 1  
          UNTIL FALSE  
          RETURN quark  
    END FUNCTION  
  
    FUNCTION _getMinOperations(count, target)  
          SET dp TO a list of twenty seven zeroes  
          SET idx TO 25  
          WHILE idx GREATER THAN OR EQUAL TO 0 DO  
              SET valDeleteAll TO count[idx]  
              SET valDiff TO 0  
              IF target GREATER THAN count[idx] THEN  
                  SET valDiff TO target - count[idx]  
              ELSE  
                  SET valDiff TO count[idx] - target  
              END IF  
              SET candidate1 TO MINIMUM(valDeleteAll, valDiff + dp[idx + 1])  
              IF (idx + 1) LESS THAN 26 AND count[idx + 1] LESS THAN target THEN  
                  SET deficitNext TO target - count[idx + 1]  
                  SET needChange TO 0  
                  IF count[idx] LESS THAN OR EQUAL TO target THEN  
                      SET needChange TO count[idx]  
                  ELSE  
                      SET needChange TO count[idx] - target  
                  END IF  
                  SET candidate2 TO 0  
                  IF deficitNext GREATER THAN needChange THEN  
                      SET candidate2 TO needChange + (deficitNext - needChange)  
                  ELSE  
                      SET candidate2 TO deficitNext + (needChange - deficitNext)  
                  END IF  
                  SET candidate2 TO candidate2 + dp[idx + 2]  
                  SET candidate1 TO MINIMUM(candidate1, candidate2)  
              END IF  
              SET dp[idx] TO candidate1  
              SET idx TO idx - 1  
          END WHILE  
          RETURN dp[0]  
    END FUNCTION  
END CLASS