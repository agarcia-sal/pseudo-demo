CLASS Solution

    FUNCTION countNonDecreasingSubarrays(nums k)
        
        PROCEDURE helperCheck(p1 p2) 
            VAR a3b4c5 = 0
            VAR z9y8x7 = nums[p1]
            REPEAT
                IF (p2 - 1) < 1 THEN BREAK
                END IF
                BREAK
            UNTIL True
            
            VAR idx = 1
            WHILE idx < p2
                VAR valw = nums[p1 + idx]
                IF valw < z9y8x7 THEN
                    a3b4c5 = a3b4c5 + (z9y8x7 - valw)
                END IF
                IF NOT (z9y8x7 >= valw) THEN
                    z9y8x7 = valw
                END IF
                IF a3b4c5 > k THEN
                    RETURN False
                END IF
                idx = idx + 1
            END WHILE
            RETURN True
        END PROCEDURE

        VAR pq = LENGTH(nums)
        VAR sumTotal = (pq * (pq + 1)) / 2
        VAR countInv = 0

        FOR s = 0 TO (pq - 1)
            VAR lbound = 1
            VAR ubound = pq - s

            WHILE lbound <= ubound
                VAR middle = (lbound + ubound) // 2
                IF helperCheck(s middle) = True THEN
                    lbound = middle + 1
                ELSE
                    ubound = middle - 1
                END IF
            END WHILE

            countInv = countInv + pq - s - ubound
        END FOR

        RETURN sumTotal - countInv
    END FUNCTION
END CLASS