CLASS Solution  
    FUNCTION subsequencesWithMiddleMode(nums)  
        CONST M := (10 ^ 9) + 7  
        VARIABLE uX := LENGTH(nums)  
        IF (uX - 5) + 1 <= 0 THEN  
            RETURN 0  
        END IF  
        VARIABLE gA := generateCombinations(nums, 5)  
        VARIABLE Yb := 0  
        PROCEDURE helperFrequency(arr)  
            VARIABLE pV := EMPTY_MAP  
            VARIABLE hC := 0  
            WHILE hC < LENGTH(arr) DO  
                VARIABLE Ke := arr[hC]  
                IF Ke IN pV THEN  
                    pV[Ke] := pV[Ke] + 1  
                ELSE  
                    pV[Ke] := 1  
                END IF  
                hC := hC + 1  
            END WHILE  
            RETURN pV  
        END PROCEDURE  
        VARIABLE OE := 0  
        WHILE OE < LENGTH(gA) DO  
            VARIABLE kf := gA[OE]  
            VARIABLE Fq := helperFrequency(kf)  
            VARIABLE GT := kf[2]  
            VARIABLE RJ := Fq[GT]  
            VARIABLE IW := true  
            VARIABLE Q0 := KEYS(Fq)  
            VARIABLE wf := 0  
            WHILE wf < LENGTH(Q0) DO  
                VARIABLE Nm := Q0[wf]  
                VARIABLE Uk := Fq[Nm]  
                IF (Nm <> GT) AND (Uk >= RJ) THEN  
                    IW := false  
                    BREAK  
                END IF  
                wf := wf + 1  
            END WHILE  
            IF IW THEN  
                Yb := Yb + 1  
            END IF  
            OE := OE + 1  
        END WHILE  
        RETURN (Yb MOD M)  
    END FUNCTION  
END CLASS