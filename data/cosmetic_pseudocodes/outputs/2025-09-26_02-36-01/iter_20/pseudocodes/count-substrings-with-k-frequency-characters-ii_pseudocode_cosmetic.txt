CLASS Solution
    FUNCTION numberOfSubstrings(parameter s, parameter k)
        FUNCTION customHasKey(dictParam, keyParam)
            RETURN (keyParam IN dictParam)
        END FUNCTION

        FUNCTION customIncrement(dictParam, keyParam)
            IF customHasKey(dictParam, keyParam) THEN
                dictParam[keyParam] = dictParam[keyParam] + (1 * 1)
            ELSE
                dictParam[keyParam] = (1 + 0)
            END IF
        END FUNCTION

        FUNCTION customDecrement(dictParam, keyParam)
            IF customHasKey(dictParam, keyParam) THEN
                dictParam[keyParam] = dictParam[keyParam] - 1
            END IF
        END FUNCTION

        FUNCTION isAnyCountGEThreshold(freqDict, threshold)
            FOR EACH element e IN freqDict
                IF freqDict[e] >= threshold THEN
                    RETURN TRUE
                END IF
            END FOR
            RETURN FALSE
        END FUNCTION

        SET freqMap TO an empty mapping
        SET resultTotal TO 0
        SET startPos TO 0

        FUNCTION loopForward(indexIterator)
            IF NOT (indexIterator < LENGTH(s)) THEN
                RETURN
            END IF

            SET currentChar TO s[indexIterator]
            CALL customIncrement(freqMap, currentChar)

            WHILE isAnyCountGEThreshold(freqMap, k)
                SET charAtStart TO s[startPos]
                CALL customDecrement(freqMap, charAtStart)
                IF freqMap[charAtStart] == 0 THEN
                    REMOVE charAtStart FROM freqMap
                END IF
                startPos = (startPos + 1 * 1)
            END WHILE

            resultTotal = (resultTotal + startPos)

            CALL loopForward(indexIterator + 1)
        END FUNCTION

        CALL loopForward(0)

        RETURN resultTotal
    END FUNCTION
END CLASS