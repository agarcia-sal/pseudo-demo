```
CLASS Solution
    FUNCTION countDays(days, meetings)
        PROCEDURE customSort(list)
            SET idx_outer TO 0
            WHILE idx_outer < length(list) - 1
                SET idx_inner TO 0
                WHILE idx_inner < length(list) - idx_outer - 1
                    IF compareFirstElement(list[idx_inner], list[idx_inner + 1]) > 0 THEN
                        swapElements(list, idx_inner, idx_inner + 1)
                    END IF
                    SET idx_inner TO idx_inner + 1
                END WHILE
                SET idx_outer TO idx_outer + 1
            END WHILE
        END PROCEDURE

        FUNCTION compareFirstElement(a, b)
            IF a[0] < b[0] THEN
                RETURN -1
            ELSEIF a[0] > b[0] THEN
                RETURN 1
            ELSE
                RETURN 0
            END IF
        END FUNCTION

        PROCEDURE swapElements(arr, i, j)
            SET temp_swap TO arr[i]
            SET arr[i] TO arr[j]
            SET arr[j] TO temp_swap
        END PROCEDURE

        CALL customSort(meetings)

        SET varA TO 1
        SET varB TO 0

        PROCEDURE processListRec(idx)
            IF idx >= length(meetings) THEN
                RETURN
            END IF

            SET varC TO meetings[idx][0]
            SET varD TO meetings[idx][1]

            IF (varA < varC) THEN
                SET varB TO varB + (varC - varA)
            END IF

            SET varE TO maxValue(varA, varD)
            SET varA TO varE + 1

            CALL processListRec(idx + 1)
        END PROCEDURE

        FUNCTION maxValue(x, y)
            IF x >= y THEN
                RETURN x
            ELSE
                RETURN y
            END IF
        END FUNCTION

        CALL processListRec(0)

        IF (varA <= days) THEN
            SET varB TO varB + (days - varA + 1)
        END IF

        RETURN varB
    END FUNCTION
END CLASS
```