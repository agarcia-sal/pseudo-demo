CLASS Solution  
    FUNCTION largestSquareArea(bottomLeft, topRight)  
        FUNCTION intersecting_square_area(bl1, tr1, bl2, tr2)  
            FUNCTION max_val(a, b)  
                IF a GREATER THAN b THEN RETURN a ELSE RETURN b END IF  
            END FUNCTION  

            FUNCTION min_val(a, b)  
                IF a LESS THAN b THEN RETURN a ELSE RETURN b END IF  
            END FUNCTION  

            SET alpha TO max_val(bl1[0], bl2[0])  
            SET beta TO min_val(tr1[0], tr2[0])  
            SET gamma TO max_val(bl1[1], bl2[1])  
            SET delta TO min_val(tr1[1], tr2[1])  

            IF (alpha GREATER THAN OR EQUAL TO beta) OR (gamma GREATER THAN OR EQUAL TO delta) THEN  
                RETURN 0  
            END IF  

            SET epsilon TO min_val(beta - alpha, delta - gamma)  
            RETURN epsilon * epsilon  
        END FUNCTION  

        SET omega TO 0  
        SET tau TO LENGTH(bottomLeft)  
        SET i TO 0  

        WHILE i LESS THAN tau DO  
            SET j TO i + 1  
            REPEAT  
                IF j GREATER THAN OR EQUAL TO tau THEN BREAK END IF  
                SET zeta TO intersecting_square_area(bottomLeft[i], topRight[i], bottomLeft[j], topRight[j])  
                IF zeta GREATER THAN omega THEN omega = zeta END IF  
                SET j TO j + 1  
            UNTIL FALSE  
            SET i TO i + 1  
        END WHILE  

        RETURN omega  
    END FUNCTION  
END CLASS