CLASS Solution  
    FUNCTION maximumSetSize(nums1 PARAMETER List OF integers nums2 PARAMETER List OF integers) RETURNS integer  
      
      FUNCTION uniqueElements(collection PARAMETER List OF integers) RETURNS Set OF integers  
        SET resultSet TO empty Set  
        SET indexCounter TO 0  
        
        REPEAT  
          IF indexCounter EQUALS LENGTH OF collection THEN  
            EXIT REPEAT  
          END IF  
          SET currentItem TO collection[indexCounter]  
          IF NOT contains(resultSet, currentItem) THEN  
            CALL addToSet(resultSet, currentItem)  
          END IF  
          SET indexCounter TO indexCounter PLUS 1  
        UNTIL false  
        
        RETURN resultSet  
      END FUNCTION  
      
      FUNCTION contains(s PARAMETER Set OF integers, val PARAMETER integer) RETURNS boolean  
        FOR EACH element IN s DO  
          IF element EQUALS val THEN  
            RETURN true  
          END IF  
        END FOR  
        RETURN false  
      END FUNCTION  
      
      FUNCTION addToSet(s PARAMETER Set OF integers, item PARAMETER integer) RETURNS void  
        /* Assume this appends item to set s if not present */  
        /* Internal implementation abstracted since pseudocode */  
      END FUNCTION  
      
      FUNCTION intersection(setA PARAMETER Set OF integers, setB PARAMETER Set OF integers) RETURNS Set OF integers  
        SET intersected TO empty Set  
        FOR EACH elementA IN setA DO  
          IF contains(setB, elementA) THEN  
            CALL addToSet(intersected, elementA)  
          END IF  
        END FOR  
        RETURN intersected  
      END FUNCTION  
      
      FUNCTION difference(setA PARAMETER Set OF integers, setB PARAMETER Set OF integers) RETURNS Set OF integers  
        SET diff TO empty Set  
        FOR EACH elementA IN setA DO  
          IF NOT contains(setB, elementA) THEN  
            CALL addToSet(diff, elementA)  
          END IF  
        END FOR  
        RETURN diff  
      END FUNCTION  
      
      FUNCTION minimum(a PARAMETER integer, b PARAMETER integer) RETURNS integer  
        IF a LESS THAN b THEN  
          RETURN a  
        ELSE  
          RETURN b  
        END IF  
      END FUNCTION  
      
      FUNCTION maximum(a PARAMETER integer, b PARAMETER integer) RETURNS integer  
        IF a GREATER THAN b THEN  
          RETURN a  
        ELSE  
          RETURN b  
        END IF  
      END FUNCTION  
      
      SET totalNums TO LENGTH OF nums1  
      
      SET midNums TO 0  
      
      SET counterN TO 0  
      REPEAT  
        IF counterN TIMES 2 GREATER OR EQUAL totalNums THEN  
          SET midNums TO counterN  
          EXIT REPEAT  
        END IF  
        SET counterN TO counterN PLUS 1  
      UNTIL false  
      
      SET distinct1 TO uniqueElements(nums1)  
      SET distinct2 TO uniqueElements(nums2)  
      
      SET commonSet TO intersection(distinct1, distinct2)  
      
      SET uniqueSet1 TO difference(distinct1, commonSet)  
      SET uniqueSet2 TO difference(distinct2, commonSet)  
      
      SET picked1 TO minimum(midNums, LENGTH OF uniqueSet1)  
      SET picked2 TO minimum(midNums, LENGTH OF uniqueSet2)  
      
      SET remain1 TO maximum(0, midNums MINUS picked1)  
      SET remain2 TO maximum(0, midNums MINUS picked2)  
      
      SET fromCommon TO remain1 PLUS remain2  
      
      SET total FROM 0  
      
      IF fromCommon LESS THAN LENGTH OF commonSet THEN  
        SET total TO picked1 PLUS picked2 PLUS fromCommon  
      ELSE  
        SET total TO picked1 PLUS picked2 PLUS LENGTH OF commonSet  
      END IF  
      
      RETURN total  
    END FUNCTION  
END CLASS