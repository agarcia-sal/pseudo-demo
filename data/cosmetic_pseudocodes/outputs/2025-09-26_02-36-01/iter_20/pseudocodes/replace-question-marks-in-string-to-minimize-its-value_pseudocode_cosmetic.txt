CLASS Solution  
    FUNCTION minimizeStringValue(s)  
        
        DEFINE FUNCTION custom_count_elements(sequence)  
            SET accumulator TO empty map  
            SET idx TO 0  
            WHILE idx < LENGTH(sequence) DO  
                SET element TO sequence[idx]  
                IF element IN accumulator THEN  
                    SET accumulator[element] TO accumulator[element] + 1  
                ELSE  
                    SET accumulator[element] TO 1  
                END IF  
                SET idx TO idx + 1  
            END WHILE  
            RETURN accumulator  
        END FUNCTION  
        
        SET a1b2c3 TO custom_count_elements(s)  
        
        IF '?' IN a1b2c3 THEN  
            REMOVE '?' FROM a1b2c3  
        END IF  
        
        SET x9y8z7 TO empty sequence  
        SET u5v4w3 TO 0  
        LOOP_WHILE u5v4w3 < LENGTH(s) DO  
            SET elt TO s[u5v4w3]  
            IF elt = '?' THEN  
                APPEND u5v4w3 TO x9y8z7  
            END IF  
            SET u5v4w3 TO u5v4w3 + 1  
        END LOOP_WHILE  
        
        SET m2n1o0 TO empty sequence  
        
        DEFINE FUNCTION alphabet_generator()  
            SET c TO 97  
            WHILE c <= 122 DO  
                YIELD CHARACTER(c)  
                SET c TO c + 1  
            END WHILE  
        END FUNCTION  
        
        DEFINE FUNCTION get_count_or_zero(mapping, key)  
            IF key IN mapping THEN  
                RETURN mapping[key]  
            ELSE  
                RETURN 0  
            END IF  
        END FUNCTION  
        
        DEFINE FUNCTION increment_mapping(mapping, key)  
            SET current_val TO get_count_or_zero(mapping, key)  
            SET mapping[key] TO current_val + 1  
        END FUNCTION  
        
        FOR pos_var IN x9y8z7 DO  
            SET lowest_val TO positive infinity  
            SET selected_char TO null  
            
            SET gen_iter TO alphabet_generator()  
            SET continue_loop TO true  
            WHILE continue_loop DO  
                TRY  
                    SET char_iter TO NEXT(gen_iter)  
                EXCEPT StopIteration  
                    SET continue_loop TO false  
                    CONTINUE  
                END TRY  
                
                SET char_count_val TO get_count_or_zero(a1b2c3, char_iter)  
                
                IF char_count_val < lowest_val THEN  
                    SET lowest_val TO char_count_val  
                    SET selected_char TO char_iter  
                END IF  
            END WHILE  
            
            APPEND selected_char TO m2n1o0  
            CALL increment_mapping(a1b2c3, selected_char)  
        END FOR  
        
        DEFINE FUNCTION insertion_sort(sequence)  
            SET pos_a TO 1  
            WHILE pos_a < LENGTH(sequence) DO  
                SET key_val TO sequence[pos_a]  
                SET pos_b TO pos_a - 1  
                WHILE pos_b >= 0 AND sequence[pos_b] > key_val DO  
                    SET sequence[pos_b + 1] TO sequence[pos_b]  
                    SET pos_b TO pos_b - 1  
                END WHILE  
                SET sequence[pos_b + 1] TO key_val  
                SET pos_a TO pos_a + 1  
            END WHILE  
        END FUNCTION  
        
        CALL insertion_sort(m2n1o0)  
        
        SET l1m0n9 TO []  
        SET idx_seq TO 0  
        WHILE idx_seq < LENGTH(s) DO  
            APPEND s[idx_seq] TO l1m0n9  
            SET idx_seq TO idx_seq + 1  
        END WHILE  
        
        SET idx_c TO 0  
        WHILE idx_c < LENGTH(x9y8z7) DO  
            SET pos_index TO x9y8z7[idx_c]  
            SET repl_char TO m2n1o0[idx_c]  
            SET l1m0n9[pos_index] TO repl_char  
            SET idx_c TO idx_c + 1  
        END WHILE  
        
        DEFINE FUNCTION join_characters(char_list)  
            SET res_str TO empty string  
            SET i_join TO 0  
            WHILE i_join < LENGTH(char_list) DO  
                SET res_str TO res_str + char_list[i_join]  
                SET i_join TO i_join + 1  
            END WHILE  
            RETURN res_str  
        END FUNCTION  
        
        RETURN join_characters(l1m0n9)  
    END FUNCTION  
END CLASS