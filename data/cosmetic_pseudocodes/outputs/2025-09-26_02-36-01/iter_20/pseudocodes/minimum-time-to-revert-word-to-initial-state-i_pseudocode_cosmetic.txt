CLASS Solution
    FUNCTION minimumTimeToInitialState(word PARAMETER k)
        FUNCTION customLength(str)
            VARIABLE counter SET TO zero
            REPEAT
                IF counter GREATER THAN OR EQUAL TO str.LENGTH THEN
                    BREAK
                END IF
                INCREMENT counter BY one
            UNTIL false
            RETURN counter
        END FUNCTION

        FUNCTION excerptSubstring(str, startIndex, endIndex)
            VARIABLE collection SET TO empty list
            VARIABLE pointer SET TO startIndex
            REPEAT
                IF pointer GREATER THAN OR EQUAL TO endIndex THEN
                    BREAK
                END IF
                APPEND str[pointer] TO collection
                INCREMENT pointer BY one
            UNTIL false
            RETURN collection JOINED AS string
        END FUNCTION

        VARIABLE alpha SET TO customLength(word)
        VARIABLE beta SET TO 1

        LABEL loopBegin
        IF NOT (beta * k < alpha) THEN
            VARIABLE leftSegment SET TO excerptSubstring(word, beta * k, alpha)
            VARIABLE rightSegment SET TO excerptSubstring(word, 0, alpha - (beta * k))
            IF leftSegment EQUALS rightSegment THEN
                RETURN beta
            END IF
        END IF
        beta = beta + 1
        GOTO loopBegin
    END FUNCTION
END CLASS