CLASS Solution
    FUNCTION occurrencesOfElement(nums, queries, x)
        FUNCTION isEqual(a, b)
            IF a LESS THAN b OR a GREATER THAN b THEN
                RETURN false
            ELSE
                RETURN true
            END IF
        END FUNCTION

        FUNCTION lessOrEqual(a, b)
            RETURN (a LESS THAN b) OR isEqual(a, b)
        END FUNCTION

        FUNCTION lengthOf(list)
            LET counter BE 0
            WHILE true
                IF list AT counter IS UNDEFINED THEN
                    BREAK
                END IF
                INCREMENT counter BY 1
            END WHILE
            RETURN counter
        END FUNCTION

        FUNCTION getElement(list, idx)
            LET position BE 0
            LET result BE NULL
            WHILE true
                IF position EQUALS idx THEN
                    SET result TO list AT position
                    BREAK
                END IF
                INCREMENT position BY 1
            END WHILE
            RETURN result
        END FUNCTION

        LET internalList BE []
        LET iterator BE 0
        WHILE true
            IF iterator EQUALS lengthOf(nums) THEN
                BREAK
            END IF
            LET currentValue BE getElement(nums, iterator)
            IF isEqual(currentValue, x) THEN
                INTERNAL_APPEND(internalList, iterator)
            END IF
            INCREMENT iterator BY 1
        END WHILE

        FUNCTION INTERNAL_APPEND(arr, val)
            LET idx BE 0
            WHILE true
                IF getElement(arr, idx) IS UNDEFINED THEN
                    SET arr AT idx TO val
                    BREAK
                END IF
                INCREMENT idx BY 1
            END WHILE
        END FUNCTION

        LET resultList BE []
        LET queryIndex BE 0
        REPEAT
            IF queryIndex EQUALS lengthOf(queries) THEN
                BREAK
            END IF
            LET currentQuery BE getElement(queries, queryIndex)
            IF lessOrEqual(currentQuery, lengthOf(internalList)) THEN
                LET elementIndex BE currentQuery MINUS 1
                LET valToAppend BE getElement(internalList, elementIndex)
                INTERNAL_APPEND(resultList, valToAppend)
            ELSE
                INTERNAL_APPEND(resultList, -1)
            END IF
            INCREMENT queryIndex BY 1
        UNTIL false

        RETURN resultList
    END FUNCTION
END CLASS