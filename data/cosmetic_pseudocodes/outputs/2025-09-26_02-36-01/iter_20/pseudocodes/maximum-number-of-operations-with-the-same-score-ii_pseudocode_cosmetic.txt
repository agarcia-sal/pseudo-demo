CLASS Solution  
    FUNCTION maxOperations(nums)  
        FUNCTION dfs(a, b, c, d)  
            FUNCTION equalsSum(x, y, val)  
                RETURN x + y = val  
            END FUNCTION

            IF (a >= b) THEN  
                RETURN 0  
            END IF

            IF (d CONTAINS_KEY (a, b, c)) THEN  
                RETURN d[(a, b, c)]  
            END IF

            VARIABLE z ASSIGN 0  

            IF equalsSum(nums[a], nums[a + 1], c) THEN  
                VARIABLE temp1 ASSIGN dfs(a + 2, b, c, d) + 1  
                z ASSIGN (temp1 > z) ? temp1 : z  
            END IF

            IF equalsSum(nums[b], nums[b - 1], c) THEN  
                VARIABLE temp2 ASSIGN dfs(a, b - 2, c, d) + 1  
                IF temp2 > z THEN  
                    z ASSIGN temp2  
                END IF  
            END IF

            IF equalsSum(nums[a], nums[b], c) THEN  
                VARIABLE temp3 ASSIGN dfs(a + 1, b - 1, c, d) + 1  
                IF temp3 > z THEN  
                    z ASSIGN temp3  
                END IF  
            END IF

            d[(a, b, c)] = z  
            RETURN z  
        END FUNCTION

        VARIABLE v1 ASSIGN dfs(2, LENGTH(nums) - 1, nums[0] + nums[1], {}) + 1  
        VARIABLE v2 ASSIGN dfs(0, LENGTH(nums) - 3, nums[LENGTH(nums) - 2] + nums[LENGTH(nums) - 1], {}) + 1  
        VARIABLE v3 ASSIGN dfs(1, LENGTH(nums) - 2, nums[0] + nums[LENGTH(nums) - 1], {}) + 1  

        RETURN (v1 > v2) ? ((v1 > v3) ? v1 : v3) : ((v2 > v3) ? v2 : v3)  
    END FUNCTION  
END CLASS