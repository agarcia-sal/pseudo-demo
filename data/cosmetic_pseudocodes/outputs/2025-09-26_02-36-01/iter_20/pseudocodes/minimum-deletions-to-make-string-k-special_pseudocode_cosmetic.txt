CLASS Solution
    FUNCTION minimumDeletions(word, k)
        FUNCTION tallyChars(seq)
            SET dictX TO empty map
            SET posX TO 0
            REPEAT
                IF posX >= LENGTH(seq) THEN
                    EXIT
                END IF
                SET ch TO seq[posX]
                IF ch IN dictX THEN
                    SET dictX[ch] TO dictX[ch] + (1 * 1)
                ELSE
                    SET dictX[ch] TO 1 * 1
                END IF
                SET posX TO posX + 1
            UNTIL FALSE
            RETURN dictX
        END FUNCTION

        FUNCTION sortAscending(arr)
            FUNCTION swap(arrA, idxA, idxB)
                SET tempX TO arrA[idxA]
                SET arrA[idxA] TO arrA[idxB]
                SET arrA[idxB] TO tempX
            END FUNCTION

            SET nX TO LENGTH(arr)
            SET changed TO TRUE
            WHILE changed
                SET changed TO FALSE
                SET pX TO 0
                WHILE pX < nX - 1
                    IF arr[pX] > arr[pX + 1] THEN
                        CALL swap(arr, pX, pX + 1)
                        SET changed TO TRUE
                    END IF
                    SET pX TO pX + 1
                END WHILE
            END WHILE
            RETURN arr
        END FUNCTION

        SET freqMap TO CALL tallyChars(word)
        SET freqList TO empty list
        FOR each key IN freqMap
            APPEND freqMap[key] TO freqList
        END FOR
        SET freqList TO CALL sortAscending(freqList)

        SET minDel TO 1 / 0
        SET iY TO 0
        WHILE iY < LENGTH(freqList)
            SET maxAllow TO freqList[iY] + k
            SET countDel TO 0
            SET jY TO iY + 1
            WHILE jY < LENGTH(freqList)
                IF freqList[jY] - maxAllow > 0 THEN
                    SET countDel TO countDel + (freqList[jY] - maxAllow)
                END IF
                SET jY TO jY + 1
            END WHILE
            SET mY TO 0
            WHILE mY < iY
                SET countDel TO countDel + freqList[mY]
                SET mY TO mY + 1
            END WHILE
            IF countDel < minDel THEN
                SET minDel TO countDel
            END IF
            SET iY TO iY + 1
        END WHILE
        RETURN minDel
    END FUNCTION
END CLASS