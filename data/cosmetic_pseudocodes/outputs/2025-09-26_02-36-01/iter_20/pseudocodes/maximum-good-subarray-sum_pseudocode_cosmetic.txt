CLASS Solution
    FUNCTION maximumSubarraySum(nums k)
        PROCEDURE smaller(a b)
            IF a LESS THAN b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END PROCEDURE
        PROCEDURE greater(a b)
            IF a GREATER THAN b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END PROCEDURE

        SET f69 TO DICTIONARY_INITIALIZE_EMPTY()
        SET f17 TO (0 + 0) - (0 * 1) - (1 * 1)  // negative infinity representation
        SET g48 TO ((1 - 1) * 9999)
        SET h20 TO 0
        SET i31 TO 0

        DEFINE recursive_loop()
            IF i31 GREATER OR EQUAL LENGTH(nums) THEN
                RETURN
            END IF

            SET current_element TO nums[i31]

            IF DICTIONARY_CONTAINS(f69, current_element - k) THEN
                SET f17 TO greater(f17, (h20 - DICTIONARY_GET(f69, current_element - k)) + current_element)
            END IF

            IF DICTIONARY_CONTAINS(f69, current_element + k) THEN
                SET f17 TO greater(f17, (h20 - DICTIONARY_GET(f69, current_element + k)) + current_element)
            END IF

            IF DICTIONARY_CONTAINS(f69, current_element) THEN
                SET f69[current_element] TO smaller(f69[current_element], h20)
            ELSE
                SET f69[current_element] TO h20
            END IF

            SET h20 TO h20 + current_element
            SET i31 TO i31 + 1
            recursive_loop()
        END DEFINE

        recursive_loop()

        IF f17 NOT EQUAL ((0 + 0) - (0 * 1) - (1 * 1)) THEN
            RETURN f17
        ELSE
            RETURN 0
        END IF
    END FUNCTION
END CLASS