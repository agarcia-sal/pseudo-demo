CLASS Solution  
  FUNCTION answerString(word, numFriends)  
    FUNCTION _minValue(a, b)  
      IF a LESS THAN b THEN  
        RETURN a  
      ELSE  
        RETURN b  
      END IF  
    END FUNCTION

    FUNCTION _length(str)  
      SET cnt TO 0  
      WHILE TRUE  
        TRY  
          _ = str[cnt]  
          SET cnt TO cnt + 1  
        CATCH  
          BREAK  
        END TRY  
      END WHILE  
      RETURN cnt  
    END FUNCTION

    FUNCTION _substring(src, startPos, endPos)  
      SET result TO ""  
      SET p TO startPos  
      WHILE p LESS THAN endPos  
        SET result TO result + src[p]  
        SET p TO p + 1  
      END WHILE  
      RETURN result  
    END FUNCTION

    IF numFriends EQUALS 1 THEN  
      RETURN word  
    END IF

    FUNCTION _lastSubstring(n)  
      FUNCTION _charAt(t, idx)  
        RETURN t[idx]  
      END FUNCTION

      SET x TO 0  
      SET y TO 1  
      SET z TO 0

      REPEAT  
        IF (y + z) GREATER OR EQUAL TO _length(n) THEN  
          EXIT REPEAT  
        END IF

        IF _charAt(n, x + z) EQUALS _charAt(n, y + z) THEN  
          SET z TO z + 1  
        ELSE  
          IF _charAt(n, x + z) GREATER THAN _charAt(n, y + z) THEN  
            SET y TO y + z + 1  
            SET z TO 0  
          ELSE  
            SET x TO (_length(maximumValue(x + z + 1, y)) =>  
                      IF x + z + 1 GREATER THAN y THEN x + z + 1 ELSE y)  
            SET y TO x + 1  
            SET z TO 0  
          END IF  
        END IF  

      UNTIL FALSE

      RETURN _substring(n, x, _length(n))  
    END FUNCTION

    FUNCTION maximumValue(m, n)  
      IF m GREATER THAN n THEN  
        RETURN m  
      ELSE  
        RETURN n  
      END IF  
    END FUNCTION

    SET s TO _lastSubstring(word)  
    SET lengthW TO _length(word)  
    SET cutLen TO lengthW - numFriends + 1  
    SET endIndex TO _minValue(_length(s), cutLen)  
    RETURN _substring(s, 0, endIndex)  
  END FUNCTION  
END CLASS