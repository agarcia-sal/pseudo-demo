CLASS Solution
    FUNCTION maximumPrimeDifference(nums)
            DEFINE isMember(setRef, val) RETURNS BOOLEAN
                FOR idx FROM 0 TO (length(setRef) - 1) DO
                    IF setRef[idx] = val THEN
                        RETURN TRUE
                    END IF
                END FOR
                RETURN FALSE
            END DEFINE

            LET alpha TO [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]
            LET beta TO -1
            LET gamma TO -1

            DEFINE scanAll(current, accFirst, accLast)
                IF current = length(nums) THEN
                    RETURN (accFirst, accLast)
                ELSE
                    LET val TO nums[current]
                    IF isMember(alpha, val) THEN
                        LET newFirst TO accFirst
                        IF accFirst = -1 THEN
                            newFirst = current
                        END IF
                        LET newLast TO current
                        RETURN scanAll(current + 1, newFirst, newLast)
                    ELSE
                        RETURN scanAll(current + 1, accFirst, accLast)
                    END IF
                END IF
            END DEFINE

            (beta, gamma) = scanAll(0, beta, gamma)

            LET result TO gamma + (-1 * beta)

            RETURN result
    END FUNCTION
END CLASS