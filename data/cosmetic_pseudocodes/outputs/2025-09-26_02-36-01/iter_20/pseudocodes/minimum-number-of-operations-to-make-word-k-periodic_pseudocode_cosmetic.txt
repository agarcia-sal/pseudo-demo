CLASS Solution
    FUNCTION minimumOperationsToMakeKPeriodic(word parameter k)
          DEFINE FUNCTION countOccurrences(listInput)
              SET mapCount TO AN EMPTY MAP
              DEFINE VARIABLE idx c
              SET idx c TO 0
              WHILE idx c LESS THAN THE LENGTH OF listInput
                    SET currentElem TO listInput AT idx c
                    IF currentElem IS IN mapCount
                        SET mapCount[currentElem] TO mapCount[currentElem] PLUS 1
                    ELSE
                        SET mapCount[currentElem] TO 1
                    END IF
                    SET idx c TO idx c PLUS 1
              END WHILE
              RETURN mapCount
          END FUNCTION
          DEFINE FUNCTION findMaxValueInMap(aMap)
              DEFINE VARIABLE keyIterator
              DEFINE VARIABLE accMaxVal
              SET accMaxVal TO 0
              FOR EACH keyIterator IN aMap KEYS
                    IF aMap[keyIterator] GREATER THAN accMaxVal
                        SET accMaxVal TO aMap[keyIterator]
                    END IF
              END FOR
              RETURN accMaxVal
          END FUNCTION
          DEFINE VARIABLE lenInput
          SET lenInput TO 0
          DEFINE VARIABLE listSegments
          SET listSegments TO AN EMPTY LIST
          DEFINE VARIABLE posTracker
          SET posTracker TO 0
          WHILE posTracker LESS THAN (lengthOf word)
                DEFINE VARIABLE subStrSegment
                SET subStrSegment TO EMPTY_STRING
                DEFINE VARIABLE limitIndex
                SET limitIndex TO posTracker PLUS k
                DEFINE VARIABLE iterIndex
                SET iterIndex TO posTracker
                WHILE iterIndex LESS THAN limitIndex AND iterIndex LESS THAN (lengthOf word)
                    SET subStrSegment TO CONCAT(subStrSegment, word[iterIndex])
                    SET iterIndex TO iterIndex PLUS 1
                END WHILE
                APPEND subStrSegment TO listSegments
                SET posTracker TO posTracker PLUS k
          END WHILE
          SET lenInput TO LENGTH OF listSegments
          SET occurrencesMap TO countOccurrences(listSegments)
          SET highestFrequency TO findMaxValueInMap(occurrencesMap)
          DEFINE VARIABLE differenceResult
          SET differenceResult TO lenInput MINUS highestFrequency
          RETURN differenceResult
    END FUNCTION
END CLASS