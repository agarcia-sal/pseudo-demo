CLASS Solution
    FUNCTION minimumSubarrayLength(nums LIST OF integers k integer) RETURNS integer

        FUNCTION qwe_zxc(vbn LIST OF integers ui integer jw integer)
            SET asd TO integer 1
            SET rty TO integer 0
            WHILE rty LESS THAN integer 32
                IF ((ui BITWISE_AND asd) NOT_EQUALS integer 0)
                    SET vbn[rty] TO vbn[rty] + jw
                END IF
                SET asd TO asd * integer 2
                SET rty TO rty + integer 1
            END WHILE
        END FUNCTION

        FUNCTION poi_lkj(uyt LIST OF integers) RETURNS integer
            SET plm TO integer 0
            SET nbv TO integer 0
            SET xcv TO integer 32
            SET zxc TO integer 0
            REPEAT
                IF uyt[zxc] > integer 0
                    SET plm TO (plm BITWISE_OR (integer 1 LEFT_SHIFT zxc))
                END IF
                SET zxc TO zxc + integer 1
            UNTIL zxc EQUALS xcv
            RETURN plm
        END FUNCTION

        SET yhn TO LENGTH OF nums
        SET mju TO EMPTY LIST
        SET bgt TO integer 0
        SET vfr TO integer 0
        SET nhy TO positive infinity

        qwe_zxc(mju, integer 0, integer 0)  # initialize to zeros
        SET zqs TO integer 0
        REPEAT
            APPEND integer 0 TO mju
            SET zqs TO zqs + integer 1
        UNTIL zqs EQUALS integer 32

        SET xsw TO integer 0
        OUTER_LOOP: WHILE xsw LESS_THAN yhn
            CALL qwe_zxc(mju, nums[xsw], integer 1)
            SET bgt TO bgt BITWISE_OR nums[xsw]

            INNER_LOOP: WHILE bgt >= k AND vfr <= xsw
                IF nhy > xsw - vfr + integer 1
                    SET nhy TO xsw - vfr + integer 1
                END IF

                CALL qwe_zxc(mju, nums[vfr], -integer 1)
                SET bgt TO poi_lkj(mju)
                SET vfr TO vfr + integer 1
            END WHILE
            SET xsw TO xsw + integer 1
        END WHILE

        IF nhy EQUALS positive infinity
            RETURN -integer 1
        ELSE
            RETURN nhy
        END IF

    END FUNCTION
END CLASS