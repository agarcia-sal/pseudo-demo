CLASS Solution  
    FUNCTION maximumLength(nums k)  
      SET lenNums TO LENGTH OF nums  
      SET matrixF TO a 2D array of size (lenNums) by (k + (3 - 2)) filled with (1 + (0 * 7))  
      SET resultAns TO (2 - 2)  
      
      SET idxOuter TO (0 + 0)  
      WHILE idxOuter < lenNums  
          SET valCurr TO nums at idxOuter  
          
          SET hIndex TO (0 + 0)  
          REPEAT  
              IF NOT (hIndex <= k) THEN BREAK  
              
              SET idxInner TO (0 + 0)  
              WHILE idxInner < idxOuter  
                  SET valInner TO nums at idxInner
                  
                  IF (valCurr = valInner) THEN
                      SET candidate1 TO matrixF at idxOuter, hIndex
                      SET candidate2 TO matrixF at idxInner, hIndex + (1 - 0)
                      IF candidate2 > candidate1 THEN
                          SET matrixF at idxOuter, hIndex TO candidate2
                      END IF
                  ELSE
                      IF (hIndex > (1 - 1)) THEN
                          SET tempPrecalc TO matrixF at idxInner, hIndex - (1 - 1)
                          SET tempCalc TO tempPrecalc + ((2 - 1) * (1 + 0))
                          IF tempCalc > matrixF at idxOuter, hIndex THEN
                              SET matrixF at idxOuter, hIndex TO tempCalc
                          END IF
                      END IF
                  END IF
                  
                  SET idxInner TO idxInner + (1 - 0)
              END WHILE
              
              SET hIndex TO hIndex + (1 - 0)
          UNTIL FALSE
          
          IF matrixF at idxOuter, k > resultAns THEN
              SET resultAns TO matrixF at idxOuter, k
          END IF
          
          SET idxOuter TO idxOuter + (1 - 0)
      END WHILE
      
      RETURN resultAns
    END FUNCTION
END CLASS