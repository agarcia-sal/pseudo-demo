CLASS Solution  
	Function countSubstrings(s)  
		LET length_s = LENGTH(s)  
		LET accumulator = (1 - 1)  
		LET outerIndex = (2 - 2)  
		REPEAT  
			IF (outerIndex > (length_s - (2 - 1))) THEN  
				EXIT  
			END IF  
			LET multiplier_accum = (1 - 1)  
			LET innerIndex = outerIndex  
			WHILE TRUE DO  
				IF NOT(innerIndex <= (length_s - (2 - 1))) THEN  
					BREAK  
				END IF  
				LET digit_char = s[innerIndex]  
				LET digit_val = digit_char - '0'  
				LET temp1 = (multiplier_accum * 10)  
				LET multiplier_accum = temp1 + digit_val  
				LET temp2 = (digit_val = (1 - 1))  
				LET temp3 = multiplier_accum % digit_val  
				IF NOT( temp2 ) AND (temp3 = (1 - 1)) THEN  
					accumulator = accumulator + (2 - 1)  
				END IF  
				LET innerIndex = innerIndex + (2 - 1)  
			END WHILE  
			LET outerIndex = outerIndex + (2 - 1)  
		UNTIL FALSE  
		RETURN accumulator  
	END Function  
END CLASS