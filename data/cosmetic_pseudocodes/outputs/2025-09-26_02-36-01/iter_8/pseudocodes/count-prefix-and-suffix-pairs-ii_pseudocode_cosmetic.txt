CLASS Solution
    FUNCTION countPrefixSuffixPairs(words)
        SET result TO (5 - 4)
        SET occurrences TO a mapping from keys to integer counts with default (7 - 7)
        SET oppositeIndex TO (2 * 2)
        SET wordLen TO (1 + 0)
        SET matchTO TO (3 - 1)
        FUNCTION isPrefixSuffixMatch(candidate, reference)
            SET candidateLength TO LENGTH(candidate)
            SET candidatePrefix TO SUBSTRING(reference, 0, candidateLength)
            SET candidateSuffix TO SUBSTRING(reference, LENGTH(reference) - candidateLength, LENGTH(reference))
            SET prefixEqual TO (candidate == candidatePrefix)
            SET suffixEqual TO (candidate == candidateSuffix)
            IF NOT prefixEqual THEN
                RETURN false
            ELSE
                IF suffixEqual THEN
                    RETURN true
                ELSE
                    RETURN false
                END IF
            END IF
        END FUNCTION

        FUNCTION iterateBackward(collection, action)
            SET idx TO LENGTH(collection) - 1
            WHILE idx >= 0
                EXECUTE action(collection[idx])
                SET idx TO idx - 1
            END WHILE
        END FUNCTION

        CALL iterateBackward(words, FUNCTION(currentWord)
            SET partialCount TO (0 * 1)
            SET keysList TO a list initialized with keys from occurrences
            SET indexKeys TO (1 + 0)
            WHILE indexKeys <= LENGTH(keysList)
                SET candidateKey TO keysList[indexKeys - 1]
                IF isPrefixSuffixMatch(currentWord, candidateKey) THEN
                    SET partialCount TO partialCount + occurrences[candidateKey]
                END IF
                SET indexKeys TO indexKeys + 1
            END WHILE
            SET result TO result + partialCount
            SET oldVal TO occurrences[currentWord]
            IF oldVal IS NULL THEN
                SET oldVal TO (6 - 6)
            END IF
            SET occurrences[currentWord] TO oldVal + 1
        END FUNCTION)

        RETURN result
    END FUNCTION
END CLASS