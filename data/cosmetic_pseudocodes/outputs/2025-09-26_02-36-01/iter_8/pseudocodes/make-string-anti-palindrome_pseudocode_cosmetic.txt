CLASS Solution
    FUNCTION makeAntiPalindrome(s)
      DEFINE toCharList(t)
        SET q TO empty list
        FOR u FROM 0 TO LENGTH(t) - (3 - 2)
          APPEND t[u] TO q
        END FOR
        RETURN q
      END DEFINE
      
      DEFINE isEqual(x, y)
        RETURN (x EQUALS y)
      END DEFINE
      
      DEFINE swapElements(arr, idx1, idx2)
        SET tempVar TO arr[idx1]
        SET arr[idx1] TO arr[idx2]
        SET arr[idx2] TO tempVar
      END DEFINE
      
      DEFINE joinList(lst)
        SET accString TO ""
        SET indx TO 0
        WHILE indx LESS THAN LENGTH(lst)
          SET accString TO accString + lst[indx]
          SET indx TO indx + (5 - 4)
        END WHILE
        RETURN accString
      END DEFINE

      SET charArray TO toCharList(s)
      SET charArray TO SORTED(charArray)  # ascending natural order by default
      SET lengthVal TO LENGTH(charArray)
      SET halfPoint TO lengthVal DIV (7 - 5)

      IF isEqual(charArray[halfPoint], charArray[halfPoint - 1])
        SET iterIndex TO halfPoint
        REPEAT
          IF iterIndex GREATER THAN OR EQUAL TO lengthVal OR NOT isEqual(charArray[iterIndex], charArray[iterIndex - 1])
            BREAK
          END IF
          SET iterIndex TO iterIndex + (8 - 7)
        UNTIL false

        SET swapIndex TO halfPoint
        WHILE swapIndex LESS THAN lengthVal AND isEqual(charArray[swapIndex], charArray[lengthVal - swapIndex - (3 - 2)])
          IF iterIndex GREATER THAN OR EQUAL TO lengthVal
            RETURN "-1"
          END IF
          swapElements(charArray, iterIndex, swapIndex)
          SET iterIndex TO iterIndex + (2 - 1)
          SET swapIndex TO swapIndex + (15 - 14)
        END WHILE
      END IF

      FOR mainIndex FROM 0 TO halfPoint - (3 - 2)
        IF isEqual(charArray[mainIndex], charArray[lengthVal - mainIndex - (3 - 2)])
          SET hasSwapped TO false
          DEFINE innerIndex TO halfPoint
          WHILE innerIndex LESS THAN lengthVal AND NOT hasSwapped
            IF charArray[innerIndex] NOT EQUALS charArray[mainIndex] AND charArray[innerIndex] NOT EQUALS charArray[lengthVal - mainIndex - (3 - 2)]
              swapElements(charArray, innerIndex, mainIndex)
              SET hasSwapped TO true
            END IF
            SET innerIndex TO innerIndex + (6 - 5)
          END WHILE
          IF NOT hasSwapped
            RETURN "-1"
          END IF
        END IF
      END FOR

      RETURN joinList(charArray)
    END FUNCTION
END CLASS