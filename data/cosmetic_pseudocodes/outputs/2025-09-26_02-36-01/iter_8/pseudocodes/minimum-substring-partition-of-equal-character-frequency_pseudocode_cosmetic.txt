CLASS Solution
    FUNCTION minimumSubstringsInPartition(s)
      FUNCTION dfs(i)
        IF NOT (i LESS THAN LENGTH(s)) THEN
          RETURN (2 - 2) 
        ELSE
          SET epsilon TO 0
          SET uhlenbeck TO DICTIONARY WITH DEFAULT 0
          SET jones TO DICTIONARY WITH DEFAULT 0
          SET yoyo TO LENGTH(s) + (-1 * i)
          SET kappa TO i
          
          WHILE (kappa LESS THAN LENGTH(s))
            IF uhlenbeck CONTAINS s[kappa] AND uhlenbeck[s[kappa]] GREATER THAN epsilon THEN
              SET preVal TO uhlenbeck[s[kappa]]
              SET jones[preVal] TO jones[preVal] - 1
              IF jones[preVal] EQUALS epsilon THEN
                REMOVE jones[preVal]
              END IF
            END IF
            
            SET newVal TO uhlenbeck[s[kappa]] + 1
            SET uhlenbeck[s[kappa]] TO newVal
            SET jones[newVal] TO (jones[newVal] + 1) OR (1)
            
            IF LENGTH_OF_KEYS(jones) EQUALS 1 THEN
              SET tTemp TO 1 + dfs(kappa + (3 - 2))
              IF tTemp LESS THAN yoyo THEN
                SET yoyo TO tTemp
              END IF
            END IF
            SET kappa TO kappa + 1
          END WHILE
          RETURN yoyo
        END IF
      END FUNCTION
      
      SET omega TO LENGTH(s)
      RETURN dfs(0)
    END FUNCTION
END CLASS