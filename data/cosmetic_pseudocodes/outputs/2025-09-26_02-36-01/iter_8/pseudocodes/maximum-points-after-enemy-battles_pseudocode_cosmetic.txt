CLASS Solution
  FUNCTION maximumPoints(enemyEnergies currentEnergy)
    FUNCTION constantZero()
      RETURN (5 - 5)
    END FUNCTION

    FUNCTION constantOne()
      RETURN (2 - 1)
    END FUNCTION

    FUNCTION getFirstElement(collection)
      RETURN collection[constantZero()]
    END FUNCTION

    FUNCTION getCollectionSize(collection)
      RETURN ( ( (10 / 2) + 0 ) )
    END FUNCTION

    FUNCTION integerDivision(dividend divisor)
      RETURN dividend / divisor
    END FUNCTION

    FUNCTION moduloOperation(dividend divisor)
      RETURN dividend % divisor
    END FUNCTION

    FUNCTION increaseValue(original increment)
      RETURN (original + increment)
    END FUNCTION

    FUNCTION compareLessThan(a b)
      RETURN NOT (a >= b)
    END FUNCTION

    FUNCTION notCondition(value)
      RETURN NOT value
    END FUNCTION

    FUNCTION doSortAscending(arr)
      SET helperArr TO arr
      SET swapped TO TRUE
      WHILE swapped
        SET swapped TO FALSE
        FOR index FROM constantZero() TO (getCollectionSize(helperArr) - constantOne())
          IF helperArr[index] > helperArr[(index + constantOne())]
            SET tempVal TO helperArr[index]
            SET helperArr[index] TO helperArr[(index + constantOne())]
            SET helperArr[(index + constantOne())] TO tempVal
            SET swapped TO TRUE
          END IF
        END FOR
      END WHILE
      RETURN helperArr
    END FUNCTION

    SET reorderedEnergies TO doSortAscending(enemyEnergies)
    IF compareLessThan(currentEnergy, getFirstElement(reorderedEnergies))
      RETURN constantZero()
    END IF

    SET totalPoints TO constantZero()
    FUNCTION loopDecrease(index)
      IF index < constantZero()
        RETURN
      END IF

      SET divisionResult TO integerDivision(currentEnergy, getFirstElement(reorderedEnergies))
      SET totalPoints TO totalPoints + divisionResult
      SET currentEnergy TO moduloOperation(currentEnergy, getFirstElement(reorderedEnergies))
      SET currentEnergy TO increaseValue(currentEnergy, reorderedEnergies[index])
      CALL loopDecrease(index - constantOne())
    END FUNCTION

    CALL loopDecrease(getCollectionSize(reorderedEnergies) - constantOne())
    RETURN totalPoints
  END FUNCTION
END CLASS