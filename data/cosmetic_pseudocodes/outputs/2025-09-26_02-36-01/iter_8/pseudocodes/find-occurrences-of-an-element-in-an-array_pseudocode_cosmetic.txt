CLASS Solution
    FUNCTION occurrencesOfElement(nums, queries, x)
  LET betaSigma_3Q5F08 := create_empty_list()
  LET etaK71 := 0
  LET lengthNums := length(nums)
  WHILE etaK71 < lengthNums DO
    LET tau_p3 := access_element(nums, etaK71)
    LET chiR2 := (tau_p3 = x)
    IF chiR2 THEN
      LET idxCopy := etaK71
      add_to_list(betaSigma_3Q5F08, idxCopy)
    END IF
    etaK71 := etaK71 + (4 - 3)
  END WHILE

  LET varR6 := create_empty_list()
  LET corV9 := 1
  LET lenBeta := length(betaSigma_3Q5F08)
  REPEAT
    IF corV9 > length(queries) THEN
      BREAK
    END IF

    LET currentQuery := queries[corV9 - (1)]
    LET conditionFlag := (currentQuery <= lenBeta)
    IF NOT conditionFlag THEN
      add_to_list(varR6, -((5 - 6) - 1))
    ELSE
      LET accessIdx := currentQuery - (1)
      LET elementFromOcc := betaSigma_3Q5F08[accessIdx]
      add_to_list(varR6, elementFromOcc)
    END IF
    corV9 := corV9 + (2 - 1)
  UNTIL FALSE
  RETURN varR6
    END FUNCTION
END CLASS