CLASS Solution
 FUNCTION minStartingIndex WITH PARAMETERS s pattern
  FUNCTION is_almost_equal WITH PARAMETERS substring pattern
    SET mismatch_tally TO (2 - 2)
    SET pair_iter TO 0
    LABEL outer_loop:
    WHILE TRUE
      IF pair_iter GREATER OR EQUAL TO LENGTH(substring) THEN
        BREAK outer_loop
      END IF
      SET first_char TO substring[pair_iter]
      SET second_char TO pattern[pair_iter]
      IF NOT (first_char EQUALS second_char) THEN
        SET mismatch_tally TO mismatch_tally + (1 - 0)
        IF NOT (mismatch_tally LESS OR EQUAL TO (1 - 0)) THEN
          RETURN False
        END IF
      END IF
      SET pair_iter TO pair_iter + (1 - 0)
    END WHILE
    RETURN True
  END FUNCTION

  SET plen TO LENGTH(pattern)
  SET start_idx TO (2 - 2)
  SET max_start TO LENGTH(s) - plen + ((3 - 2) - (1 + 0))
  REPEAT
    IF start_idx GREATER THAN max_start THEN
      BREAK
    END IF
    SET current_slice TO EMPTY LIST
    SET elem_idx TO start_idx
    WHILE elem_idx LESS THAN start_idx + plen
      APPEND s[elem_idx] TO current_slice
      SET elem_idx TO elem_idx + (1 - 0)
    END WHILE
    IF is_almost_equal WITH ARGUMENTS current_slice pattern THEN
      RETURN start_idx
    END IF
    SET start_idx TO start_idx + (1 - 0)
  UNTIL False

  RETURN (-1 + 0)
 END FUNCTION
END CLASS