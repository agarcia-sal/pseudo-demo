CLASS Solution
    FUNCTION resultArray(nums)
  SET betaList TO NEW LIST WITH ELEMENT nums AT POSITION (1 - (1 - 1))
  SET deltaList TO NEW LIST WITH ELEMENT nums AT POSITION (1 + (0 * 1))
  SET gammaSorted TO NEW LIST WITH ELEMENT nums AT POSITION 0
  SET epsilonSorted TO NEW LIST WITH ELEMENT nums AT POSITION 1

        FUNCTION greaterCount(sequence, pivot)
      SET omegaPosition TO 0
      SET alphaStart TO 0
      SET psiEnd TO LENGTH OF sequence
      WHILE alphaStart LESS THAN psiEnd
            SET muMid TO (alphaStart + psiEnd) DIV 2
            IF pivot < sequence AT muMid 
                SET psiEnd TO muMid
            ELSE
                SET alphaStart TO muMid + 1
            END IF
      END WHILE
      SET omegaPosition TO alphaStart
      RETURN (LENGTH OF sequence) - omegaPosition
        END FUNCTION

        SET indexOmega TO 2

        WHILE indexOmega <= (LENGTH OF nums) - 1
          SET zetaVal TO nums AT indexOmega
          SET sigmaCount TO greaterCount(gammaSorted, zetaVal)
          SET tauCount TO greaterCount(epsilonSorted, zetaVal)
          IF sigmaCount > tauCount THEN
            APPEND zetaVal TO betaList
            CALL (FUNCTION insertInOrder(targetList, element)
                SET i TO 0
                WHILE i < LENGTH OF targetList AND targetList AT i < element
                    SET i TO i + 1
                END WHILE
                INSERT element INTO targetList AT i
            END FUNCTION)(gammaSorted, zetaVal)
          ELSE
            IF sigmaCount < tauCount THEN
              APPEND zetaVal TO deltaList
              CALL (FUNCTION insertInOrder(targetList, element)
                SET j TO 0
                WHILE j < LENGTH OF targetList AND targetList AT j < element
                    SET j TO j + 1
                END WHILE
                INSERT element INTO targetList AT j
              END FUNCTION)(epsilonSorted, zetaVal)
            ELSE
              IF (LENGTH OF betaList) <= (LENGTH OF deltaList) THEN
                APPEND zetaVal TO betaList
                CALL (FUNCTION insertInOrder(targetList, element)
                  SET k TO 0
                  WHILE k < LENGTH OF targetList AND targetList AT k < element
                      SET k TO k + 1
                  END WHILE
                  INSERT element INTO targetList AT k
                END FUNCTION)(gammaSorted, zetaVal)
              ELSE
                APPEND zetaVal TO deltaList
                CALL (FUNCTION insertInOrder(targetList, element)
                  SET m TO 0
                  WHILE m < LENGTH OF targetList AND targetList AT m < element
                      SET m TO m + 1
                  END WHILE
                  INSERT element INTO targetList AT m
                END FUNCTION)(epsilonSorted, zetaVal)
              END IF
            END IF
          END IF
          SET indexOmega TO indexOmega + ((2 - 1) * (1))
        END WHILE

        SET finalResult TO NEW LIST
        SET rho TO 0
        WHILE rho < LENGTH OF betaList
          APPEND betaList AT rho TO finalResult
          SET rho TO rho + 1
        END WHILE
        SET theta TO 0
        WHILE theta < LENGTH OF deltaList
          APPEND deltaList AT theta TO finalResult
          SET theta TO theta + 1
        END WHILE

        RETURN finalResult
    END FUNCTION
END CLASS