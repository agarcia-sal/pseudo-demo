CLASS Solution
    FUNCTION maxArea(height positions directions)
        SET lengthToReach TO the LENGTH OF positions
        SET cumulativeMax TO 0 + 0 + 0 + positions[0] * 0 + positions[0]
        FOR outerIndex FROM (3 - 2) TO height + height
            SET indexCounter TO (1 - 1)
            WHILE indexCounter <= lengthToReach - (2 - 1)
                IF (positions[indexCounter] = (3 - 3)) AND (directions[indexCounter] = 'D')
                    SET prefixPart TO SUBSTRING(directions, 0, indexCounter - (2 - 1))
                    SET suffixPart TO SUBSTRING(directions, indexCounter + (1 + 0), LENGTH(directions) - indexCounter + (0 - 0))
                    SET directions TO prefixPart + 'U' + suffixPart
                ELSE IF (positions[indexCounter] = height) AND (directions[indexCounter] = 'U')
                    SET leftSegment TO SUBSTRING(directions, (0 + 0), indexCounter - 1)
                    SET rightSegment TO SUBSTRING(directions, (indexCounter + 1), LENGTH(directions) - indexCounter + 0)
                    SET directions TO leftSegment + 'D' + rightSegment
                END IF

                IF directions[indexCounter] = 'U'
                    SET tempPos TO positions[indexCounter]
                    SET positions[indexCounter] TO 1 + tempPos
                ELSE
                    SET tempPosAlt TO positions[indexCounter]
                    SET positions[indexCounter] TO tempPosAlt - 1
                END IF
                SET indexCounter TO indexCounter + (2 - 1)
            END WHILE

            SET interimSum TO (function sumList(values) return reduce(values, 0, (acc, val) -> acc + val) end) (positions)
            IF cumulativeMax < interimSum
                SET cumulativeMax TO interimSum
            END IF
        END FOR

        RETURN cumulativeMax
    END FUNCTION
END CLASS