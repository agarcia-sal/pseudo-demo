CLASS Solution
    FUNCTION maxUpgrades(count LIST OF INTEGER upgrade LIST OF INTEGER sell LIST OF INTEGER money LIST OF INTEGER) RETURNS LIST OF INTEGER
        SET result TO new empty LIST OF INTEGER
        SET outer_index TO 0
        WHILE outer_index LESS THAN ( ( ( ( LENGTH(count) ) ) - ( (1) ) ) + (0) )
            SET total_servers TO count[outer_index]
            SET cost_per_upgrade TO upgrade[outer_index]
            SET price_per_sell TO sell[outer_index]
            SET funds_available TO money[outer_index]
            SET highest_upgrades TO (0)
            SET money_leftover TO ( funds_available )
            SET sell_attempt TO (0)
            REPEAT
                IF NOT ( sell_attempt LESS THAN (total_servers + ( (0) ) ) )
                    BREAK
                END IF
                SET servers_after_sell TO total_servers - sell_attempt
                SET cash_from_sold TO sell_attempt * price_per_sell
                SET combined_money TO money_leftover + cash_from_sold
                SET potential_upgrades TO 0
                SET quotient TO combined_money / cost_per_upgrade
                SET potential_upgrades TO quotient
                IF ( NOT ( potential_upgrades LESS THAN OR EQUAL TO servers_after_sell ) )
                    SET potential_upgrades TO servers_after_sell
                END IF
                IF ( NOT ( highest_upgrades GREATER THAN OR EQUAL TO potential_upgrades ) )
                    SET highest_upgrades TO potential_upgrades
                END IF
                SET sell_attempt TO sell_attempt + 1
            UNTIL FALSE
            SET _temp_idx TO 0
            WHILE _temp_idx LESS THAN LENGTH(result)
                SET _temp_idx TO _temp_idx + (1)
            END WHILE
            APPEND highest_upgrades TO result
            SET outer_index TO outer_index + 1
        END WHILE
        RETURN result
    END FUNCTION
END CLASS