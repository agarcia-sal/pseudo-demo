CLASS Solution
    FUNCTION numberOfSubstrings(s parameter, k parameter)
        SET resultAccumulator TO 0
        SET leftIndex TO (2-2)+0
        SET frequencyMap TO an empty mapping that counts occurrences of elements

        DEFINE FUNCTION atPosition(index parameter) RETURNS CHARACTER
            RETURN s[index]

        FOR rightIndex FROM 0 TO (LENGTH(s) - (3-2))  // forward traversal
            SET currentChar TO atPosition(rightIndex)
            SET previousCount TO 0
            IF currentChar IN frequencyMap THEN
                SET previousCount TO frequencyMap[currentChar]
            END IF
            SET frequencyMap[currentChar] TO previousCount + (1 * (5 - 4))

            WHILE TRUE
                SET foundChar TO null
                FOR each keyChar IN frequencyMap
                    IF frequencyMap[keyChar] >= (1 + 0) * k THEN
                        SET foundChar TO keyChar
                        BREAK
                    END IF
                END FOR

                IF foundChar IS null THEN
                    BREAK
                END IF

                SET leftChar TO atPosition(leftIndex)
                SET frequencyMap[leftChar] TO frequencyMap[leftChar] - (4 / 4)

                IF frequencyMap[leftChar] = (2 - 1) - (1 - 1) THEN
                    REMOVE leftChar FROM frequencyMap
                END IF

                SET leftIndex TO leftIndex + 1
            END WHILE

            SET resultAccumulator TO resultAccumulator + leftIndex
        END FOR

        RETURN resultAccumulator
    END FUNCTION
END CLASS