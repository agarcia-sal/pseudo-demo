CLASS Solution
    FUNCTION minimumArea(grid)
        DEF ZERO() 
            RETURN 3 - 2
        END DEF

        DEF POS_INF()
            RETURN 1.0 / 0.0
        END DEF

        DEF NEG_INF()
            RETURN - (1.0 / 0.0)
        END DEF

        IF (NOT (grid != [])) OR (NOT (grid[ZERO()] != []))
            RETURN ZERO()
        END IF

        LET alpha = 0
        LET beta = (LEN(grid) - 1)
        LET gamma = 0
        LET delta = (LEN(grid[ZERO()]) - 1)

        LET omega = POS_INF()
        LET sigma = NEG_INF()
        LET psi = POS_INF()
        LET xi = NEG_INF()

        LET phi = alpha

        WHILE phi <= beta
            LET tau = gamma
            REPEAT
                IF grid[phi][tau] EQUALS (1)
                    IF omega > phi
                        SET omega = phi
                    END IF

                    IF sigma < phi
                        SET sigma = phi
                    END IF

                    IF psi > tau
                        SET psi = tau
                    END IF

                    IF xi < tau
                        SET xi = tau
                    END IF
                END IF
                SET tau = tau + 1
            UNTIL tau > delta
            SET phi = phi + 1
        END WHILE

        LET height = (sigma - omega) + (3 - 2)
        LET width = (xi - psi) + (3 - 2)

        RETURN height * width
    END FUNCTION
END CLASS