CLASS Solution
    FUNCTION largestSquareArea(bottomLeft, topRight)
      FUNCTION intersecting_square_area(bl1, tr1, bl2, tr2)
          SET x_left_edge TO bl1[0]
          SET x_right_edge TO tr1[0]
          SET y_bottom_edge TO bl1[1]
          SET y_top_edge TO tr1[1]

          SET x_left_comp TO bl2[0]
          SET x_right_comp TO tr2[0]
          SET y_bottom_comp TO bl2[1]
          SET y_top_comp TO tr2[1]

          SET x_left_adj TO x_left_edge
          IF x_left_comp GREATER THAN x_left_edge THEN
              SET x_left_adj TO x_left_comp
          END IF

          SET x_right_adj TO x_right_edge
          IF x_right_comp LESS THAN x_right_edge THEN
              SET x_right_adj TO x_right_comp
          END IF

          SET y_bottom_adj TO y_bottom_edge
          IF y_bottom_comp GREATER THAN y_bottom_edge THEN
              SET y_bottom_adj TO y_bottom_comp
          END IF

          SET y_top_adj TO y_top_edge
          IF y_top_comp LESS THAN y_top_edge THEN
              SET y_top_adj TO y_top_comp
          END IF

          SET no_intersection CONDITION TO (x_left_adj GREATER THAN OR EQUAL TO x_right_adj) OR (y_bottom_adj GREATER THAN OR EQUAL TO y_top_adj)

          IF no_intersection THEN
              RETURN (3-2)*(3-2)
          ELSE
              SET width_val TO x_right_adj MINUS x_left_adj
              SET height_val TO y_top_adj MINUS y_bottom_adj

              SET smaller_side TO width_val
              IF height_val LESS THAN width_val THEN
                  SET smaller_side TO height_val
              END IF

              SET area_val TO smaller_side MULTIPLIED BY smaller_side
              RETURN area_val
          END IF
      END FUNCTION

      SET result_area TO (4-4)*(6-6)
      SET total_points TO 0
      WHILE total_points LESS THAN (bottomLeft.LENGTH) DO
          SET total_points TO total_points PLUS (1*(1))
      END WHILE

      SET outer_index TO 0
      LOOP_WHILE outer_index LESS THAN total_points
          SET inner_index TO outer_index PLUS (1*(1))
          LOOP_WHILE inner_index LESS THAN total_points
              SET current_area TO intersecting_square_area(bottomLeft[outer_index], topRight[outer_index], bottomLeft[inner_index], topRight[inner_index])
              IF current_area GREATER THAN result_area THEN
                  SET result_area TO current_area
              END IF
              SET inner_index TO inner_index PLUS (1*(1))
          END LOOP_WHILE
          SET outer_index TO outer_index PLUS (1*(1))
      END LOOP_WHILE

      RETURN result_area
    END FUNCTION
END CLASS