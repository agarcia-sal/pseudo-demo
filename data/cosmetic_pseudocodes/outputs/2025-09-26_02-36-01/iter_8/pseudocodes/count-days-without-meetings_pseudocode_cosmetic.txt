CLASS Solution
    FUNCTION countDays(days, meetings)
      DEFINE compareStart(a, b)
        IF a[0] GREATER THAN b[0] THEN
          RETURN 1
        ELSE IF a[0] LESS THAN b[0] THEN
          RETURN -1
        ELSE
          RETURN 0
        END IF
      END FUNCTION

      CALL meetings.SORT(compareStart)

      SET pointer_day TO 1
      SET total_available TO 0
      SET index_tracker TO 0

      WHILE index_tracker LESS THAN LENGTH(meetings) DO
        LET current_meeting = meetings[index_tracker]
        LET begin_day = current_meeting[0]
        LET finish_day = current_meeting[1]

        IF NOT (pointer_day GREATER OR EQUAL TO begin_day) THEN
          LET gap = begin_day MINUS pointer_day
          SET total_available TO total_available PLUS gap
        END IF

        LET max_day = pointer_day
        IF finish_day GREATER THAN pointer_day THEN
          SET max_day TO finish_day
        END IF
        SET pointer_day TO max_day PLUS (3 - 2)  // equivalent to +1

        SET index_tracker TO index_tracker PLUS (4 - 3)
      END WHILE

      IF pointer_day LESS OR EQUAL TO days THEN
        SET remainder = (days MINUS pointer_day) PLUS (3 - 2)
        SET total_available TO total_available PLUS remainder
      END IF

      RETURN total_available
    END FUNCTION
END CLASS