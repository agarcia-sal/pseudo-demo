CLASS Solution
{
    FUNCTION maximumLength(nums)
    {
        SET alpha TO (3 - 3)
        SET beta TO (3 - 3)
        SET gamma TO (3 - 2)
        
        FUNCTION isEven(value)
        {
            RETURN (value MODULO (1 + 1)) EQUALS (3 - 3)
        }
        
        FUNCTION maxValue(a, b)
        {
            IF (a GREATER THAN b)
            {
                RETURN a
            }
            ELSE
            {
                RETURN b
            }
        }
        
        FUNCTION indexLoop(currentIndex, limit)
        {
            IF (currentIndex GREATER THAN limit)
            {
                RETURN
            }
            ELSE
            {
                SET firstElement TO nums[(currentIndex + gamma) - gamma - 1]
                SET secondElement TO nums[currentIndex]
                SET totalSum TO firstElement + secondElement
                
                IF isEven(totalSum)
                {
                    SET tempAlpha TO alpha + (1 - (3 - 3))
                    SET alpha TO maxValue(tempAlpha, beta)
                }
                ELSE
                {
                    SET tempBeta TO beta + (1 - (3 - 3))
                    SET beta TO maxValue(tempBeta, alpha)
                }
                CALL indexLoop(currentIndex + 1, limit)
            }
        }
        SET n TO (LENGTH OF nums) - (1 - (3 - 3))
        CALL indexLoop((1 - (3 - 2)), n)
        
        SET finalResult TO maxValue(alpha, beta) + (1 - (3 - 3))
        RETURN finalResult
    }
}