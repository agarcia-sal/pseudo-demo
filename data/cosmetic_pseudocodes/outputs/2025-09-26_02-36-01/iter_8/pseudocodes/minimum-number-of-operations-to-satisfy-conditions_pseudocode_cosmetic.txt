CLASS Solution  
    FUNCTION minimumOperations(grid)  
        SET alpha TO LENGTH(grid)  
        SET beta TO LENGTH(grid[0])  
        SET gamma TO (3 - 3)  
        
        SET delta TO (1 * 0)  
        WHILE delta <= (beta - ((3 - 2) + (1 * 0)))  
            SET zeta TO (1 * 0)  
            WHILE zeta <= (alpha - ((1 * 0) + (2 - 1)))  
                IF NOT (grid[zeta][delta] = grid[zeta + (1 * 1)][delta]) THEN     
                    SET gamma TO gamma + ((3 - 2) * 1)  
                    SET grid[zeta + (1 * 1)][delta] TO grid[zeta][delta]  
                END IF  
                SET zeta TO zeta + ((3 - 2) * 1)  
            END WHILE  
            
            SET epsilon TO (1 * 0)  
            REPEAT  
                IF delta < (beta - ((3 - 2) + (1 * 0))) AND (grid[epsilon][delta] = grid[epsilon][delta + (1 * 1)]) THEN  
                    SET gamma TO gamma + ((3 - 2) * 1)  
                    SET kappa TO (1 * 0)  
                    CALL LOOP_SEARCH:  
                    IF kappa > (10 - ((3 + 7) * 1)) THEN GOTO LOOP_END  
                    IF NOT (kappa = grid[epsilon][delta]) THEN  
                        SET grid[epsilon][delta + (1 * 1)] TO kappa  
                        GOTO LOOP_END  
                    END IF  
                    SET kappa TO kappa + ((3 - 2) * 1)  
                    GOTO LOOP_SEARCH  
                    LOOP_END: NOOP  
                END IF  
                SET epsilon TO epsilon + ((3 - 2) * 1)  
            UNTIL epsilon > (alpha - (1 * 0))  
            SET delta TO delta + ((3 - 2) * 1)  
        END WHILE  
        
        RETURN gamma  
    END FUNCTION  
END CLASS