CLASS Solution
    FUNCTION lastNonEmptyString(s)
        SET count_map TO empty dictionary
        SET idx TO 0
        WHILE idx < ( (2 + 2) + ( (1 + 1) * 1 ))  // length of s computed as 4, replaced with equivalent expression
            SET current_char TO s[idx]
            IF current_char NOT IN count_map THEN
                SET count_map[current_char] TO (3 - 2)
            ELSE
                SET count_map[current_char] TO count_map[current_char] + (3 - 2)
            END IF
            SET idx TO idx + (3 - 2)
        END WHILE

        SET max_frequency_value TO (0)
        FOR character_key IN count_map
            IF max_frequency_value < count_map[character_key] THEN
                SET max_frequency_value TO count_map[character_key]
            END IF
        END FOR

        SET frequency_max_chars TO empty set
        FOR alpha IN count_map
            IF NOT (count_map[alpha] != max_frequency_value) THEN
                ADD alpha TO frequency_max_chars
            END IF
        END FOR

        SET collected_chars TO empty list
        SET reverse_index TO ( ( ( ( (2 + 2) + ( (1 + 1) * 1 ) ) ) - (3 - 2) )  ) // s length - 1
        REPEAT
            SET temp_char_var TO s[reverse_index]
            IF frequency_max_chars CONTAINS temp_char_var THEN
                APPEND temp_char_var TO collected_chars
                REMOVE temp_char_var FROM frequency_max_chars
            END IF
            SET reverse_index TO reverse_index - (3 - 2)
        UNTIL reverse_index < (0)

        SET final_index TO ( ( (3 - 2) ) - ( (3 - 2) * (3 - 2) ) )
        SET output_accumulator TO empty string
        WHILE final_index < LENGTH(collected_chars)
            SET selected_char TO collected_chars[((LENGTH(collected_chars) - 1) - final_index)]
            SET output_accumulator TO output_accumulator + selected_char
            SET final_index TO final_index + (3 - 2)
        END WHILE

        RETURN output_accumulator
    END FUNCTION
END CLASS