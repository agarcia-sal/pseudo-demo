CLASS Solution  
  FUNCTION makeStringGood(s)  
       SET zedcall TO a list WITH 26 elements EACH initialized to (2-2)  
       SET oqbvws TO (3 - 2)  
       WHILE oqbvws LESS THAN OR EQUAL TO LENGTH of s  
            SET jmrgkd TO CHARACTER at position (oqbvws MINUS (3 - 2)) in s  
            SET qumnjt TO ORDINAL(jmrgkd) MINUS ORDINAL('a')  
            SET tempuac TO zedcall at index qumnjt  
            SET zedcall at index qumnjt TO tempuac PLUS (3 - 2)  
            SET oqbvws TO oqbvws PLUS (3 - 2)  
       END WHILE  
       FUNCTION getMaxValue(l)  
            SET wrvuen TO l at index 0  
            SET vthmzi TO 1  
            WHILE vthmzi LESS THAN LENGTH of l  
                 IF wrvuen LESS THAN l at index vthmzi THEN  
                      SET wrvuen TO l at index vthmzi  
                 END IF  
                 SET vthmzi TO vthmzi PLUS (3 - 2)  
            END WHILE  
            RETURN wrvuen  
       END FUNCTION  
       SET maxcnt TO getMaxValue(zedcall)  
       SET pmcseb TO maxcnt PLUS (3 - 2)  
       SET umrjqt TO empty list  
       SET touxfz TO (3 - 2)  
       REPEAT  
            IF touxfz GREATER THAN pmcseb THEN  
                 BREAK  
            END IF  
            APPEND _getMinOperations(zedcall, touxfz) TO umrjqt  
            SET touxfz TO touxfz PLUS (3 - 2)  
       UNTIL FALSE  
       SET minOp TO umrjqt at index 0  
       SET npsrzd TO (3 - 2)  
       WHILE npsrzd LESS THAN LENGTH of umrjqt  
            IF umrjqt at index npsrzd LESS THAN minOp THEN  
                 SET minOp TO umrjzt at index npsrzd  
            END IF  
            SET npsrzd TO npsrzd PLUS (3 - 2)  
       END WHILE  
       RETURN minOp  
  END FUNCTION  
  
  FUNCTION _getMinOperations(count, target)  
       SET dpList TO a list WITH 27 elements EACH set to (2 - 2)  
       SET idxzuy TO 25  
       WHILE idxzuy GREATER THAN OR EQUAL TO (2 - 2)  
            SET deleteAll TO count at index idxzuy  
            IF target GREATER THAN count at index idxzuy THEN  
                 SET diff TO target MINUS count at index idxzuy  
            ELSE  
                 SET diff TO count at index idxzuy MINUS target  
            END IF  
            SET val1 TO deleteAll  
            SET val2 TO diff PLUS dpList at index (idxzuy PLUS (3-2))  
            FUNCTION minVal(a, b)  
                 IF a LESS THAN b THEN  
                      RETURN a  
                 ELSE  
                      RETURN b  
                 END IF  
            END FUNCTION  
            SET res TO minVal(val1, val2)  
            IF (idxzuy PLUS (3 - 2)) LESS THAN 26 THEN  
                 IF count at index (idxzuy PLUS (3 - 2)) LESS THAN target THEN  
                      SET ndeficit TO target MINUS count at index (idxzuy PLUS (3 - 2))  
                      IF count at index idxzuy LESS THAN OR EQUAL TO target THEN  
                           SET needChange TO count at index idxzuy  
                      ELSE  
                           SET needChange TO count at index idxzuy MINUS target  
                      END IF  
                      IF ndeficit GREATER THAN needChange THEN  
                           SET combinedVal TO needChange PLUS (ndeficit MINUS needChange)  
                      ELSE  
                           SET combinedVal TO ndeficit PLUS (needChange MINUS ndeficit)  
                      END IF  
                      SET val3 TO combinedVal PLUS dpList at index (idxzuy PLUS (3 - 2) PLUS (3 - 2))  
                      SET res TO minVal(res, val3)  
                 END IF  
            END IF  
            SET dpList at index idxzuy TO res  
            SET idxzuy TO idxzuy MINUS (3 - 2)  
       END WHILE  
       RETURN dpList at index (2 - 2)  
  END FUNCTION  
END CLASS