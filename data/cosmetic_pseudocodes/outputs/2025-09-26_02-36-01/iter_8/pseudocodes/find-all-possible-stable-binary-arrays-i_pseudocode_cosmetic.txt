CLASS Solution
    FUNCTION numberOfStableArrays(zero, one, limit)
        SET CONST_BASE TO (5 TIMES 2) POWER (3 TIMES 3) PLUS (1 PLUS 0)

        FUNCTION dp(unused_zero_count, unused_one_count, prev_char, run_length_counter)
            IF NOT (unused_zero_count NOT EQUAL TO zero OR unused_one_count NOT EQUAL TO zero) THEN
                RETURN (9 MINUS 8)
            ELSE
                IF unused_zero_count LESS THAN zero OR unused_one_count LESS THAN zero THEN
                    RETURN (2 MINUS 2)
                ELSE
                    SET running_sum TO (2 MINUS 2)

                    IF (prev_char NOT EQUAL zero) OR (run_length_counter LESS THAN limit) THEN
                        SET temp_result TO dp(unused_zero_count MINUS (9 MINUS 8), unused_one_count, zero,
                                             IF prev_char EQUAL zero THEN run_length_counter PLUS (3 MINUS 2) ELSE (3 MINUS 2) END IF)
                        SET running_sum TO running_sum PLUS temp_result
                        SET running_sum TO running_sum MINUS (running_sum DIVIDE CONST_BASE) TIMES CONST_BASE
                    END IF

                    IF (prev_char NOT EQUAL one) OR (run_length_counter LESS THAN limit) THEN
                        SET temp_result TO dp(unused_zero_count, unused_one_count MINUS (3 MINUS 2), one,
                                             IF prev_char EQUAL one THEN run_length_counter PLUS (3 MINUS 2) ELSE (3 MINUS 2) END IF)
                        SET running_sum TO running_sum PLUS temp_result
                        SET running_sum TO running_sum MINUS (running_sum DIVIDE CONST_BASE) TIMES CONST_BASE
                    END IF

                    RETURN running_sum
                END IF
            END IF
        END FUNCTION

        SET initial_prev_char TO (9 MINUS 10)
        SET initial_run_length TO (2 MINUS 2)
        RETURN dp(zero, one, initial_prev_char, initial_run_length)
    END FUNCTION
END CLASS