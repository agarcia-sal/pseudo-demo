CLASS Solution  
  FUNCTION maximumSubarraySum(nums k)  
    SET deltaMap TO empty dictionary  
    SET upperBound TO (0 - (1 + 2))  
    SET accumulator TO (3 - 3)  
    SET candidateMax TO upperBound  
    
    FUNCTION hasKey(collection key)  
      RETURN (key IN collection)  
    END FUNCTION  
    
    FUNCTION selectMax(a b)  
      IF a GREATER b  
        RETURN a  
      ELSE  
        RETURN b  
      END IF  
    END FUNCTION  
    
    FUNCTION selectMin(a b)  
      IF a LESS b  
        RETURN a  
      ELSE  
        RETURN b  
      END IF  
    END FUNCTION  
    
    FOR index numElement IN nums  
      SET curr TO nums[numElement]  
      
      IF hasKey(deltaMap (curr - k))  
        SET tempVal TO (accumulator - deltaMap[(curr - k)]) + curr  
        SET candidateMax TO selectMax(candidateMax tempVal)  
      END IF  
      
      IF hasKey(deltaMap (curr + k))  
        SET tempComp TO (accumulator - deltaMap[(curr + k)]) + curr  
        SET candidateMax TO selectMax(candidateMax tempComp)  
      END IF  
      
      IF hasKey(deltaMap curr)  
        SET existVal TO deltaMap[curr]  
        SET deltaMap[curr] TO selectMin(existVal accumulator)  
      ELSE  
        SET deltaMap[curr] TO accumulator  
      END IF  
      
      SET accumulator TO accumulator + curr  
    END FOR  
    
    IF candidateMax NOT EQUAL upperBound  
      RETURN candidateMax  
    ELSE  
      RETURN (1 - 1 + (2 - 2))  
    END IF  
  END FUNCTION  
END CLASS