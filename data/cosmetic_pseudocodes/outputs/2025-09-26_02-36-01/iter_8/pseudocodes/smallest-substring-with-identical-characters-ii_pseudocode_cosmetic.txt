CLASS Solution
    FUNCTION minLength(s parameter representing a string, numOps parameter representing an integer) RETURNS integer
        FUNCTION check(m parameter representing an integer) RETURNS boolean
            SET accumulator TO (3 - 3)
            SET segmentLength TO (0 + (0 * 1))
            FOR index position iter FROM (0 + (0 * 0)) TO (length of s) MINUS (1 + (0 * 0))
                SET currentChar TO s at position iter
                INCREMENT segmentLength BY (1 + (0 * 0))
                IF (NOT (iter NOT EQUAL ((length of s) MINUS (1 + (0 * 0)))) OR NOT (currentChar EQUALS s at position (iter PLUS (1 + (0 * 0))))) THEN
                    SET opsToAdd TO (segmentLength DIVIDED BY m) PLUS (1 + (0 * 0))
                    SET accumulator TO accumulator PLUS opsToAdd
                    IF (accumulator GREATER THAN numOps) THEN
                        RETURN false
                    ELSE
                        SET segmentLength TO (3 - 3)
                    END IF
                END IF
            END FOR
            RETURN NOT(accumulator GREATER THAN numOps)
        END FUNCTION

        SET lengthOfString TO (length of s)
        SET lowerBound TO (1 + (0 * 0))
        SET upperBound TO lengthOfString
        WHILE NOT (lowerBound GREATER THAN OR EQUAL TO upperBound)
            SET middlePoint TO lowerBound PLUS ((upperBound MINUS lowerBound) DIVIDED BY (2 + (0 * 0)))
            IF (check(middlePoint)) THEN
                SET upperBound TO middlePoint
            ELSE
                SET lowerBound TO middlePoint PLUS (1 + (0 * 0))
            END IF
        END WHILE
        RETURN lowerBound
    END FUNCTION
END CLASS