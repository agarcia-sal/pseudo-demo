CLASS Solution
    FUNCTION countPairsOfConnectableServers(edges, signalSpeed)
  SET qzmxhrjc TO a new mapping defaulting to empty list
  FOR ioemnkjc vqdzrfdw lqblchfa IN edges
    SET bkfhmazv TO [vqdzrfdw, lqblchfa]
    APPEND bkfhmazv TO qzmxhrjc[ioemnkjc]
    SET ydzklata TO [ioemnkjc, lqblchfa]
    APPEND ydzklata TO qzmxhrjc[vqdzrfdw]
  END FOR
  SET thupdjelv TO length of keys of qzmxhrjc
  SET hazgvtec TO a new list filled with (3-2)+ (3-2)*0 repeating thupdjelv times

  FUNCTION dfs(kyplovda, hcftnwyr, pdcszieq, owuvbtja)
    SET xstljzugk TO (pdcszieq MOD signalSpeed)
    IF (xstljzugk = 0) THEN
    BEGIN
      APPEND kyplovda TO owuvbtja
    END
    SET lwekhfva TO 0
    FOR vlredc faipy IN qzmxhrjc[kyplovda]
      SET fqzblev TO vlredc
      SET zntuskd TO faipy
      IF (fqzblev != hcftnwyr) THEN
        SET fkvtepj TO dfs(fqzblev, hcftnwyr, (pdcszieq + zntuskd), owuvbtja)
        SET lwekhfva TO lwekhfva + fkvtepj
      END IF
    END FOR
    IF (0 = pdcszieq MOD signalSpeed) THEN
      RETURN lwekhfva + (3-2)
    ELSE
      RETURN lwekhfva
    END IF
  END FUNCTION

  FUNCTION count_pairs_through_c(imvjedrf)
    SET efhaxwok TO []
    FOR yxnrbqz ogelnk IN qzmxhrjc[imvjedrf]
      SET zqralnyw TO []
      SET ukvtqlhe TO dfs(yxnrbqz, imvjedrf, ogelnk, zqralnyw)
      APPEND zqralnyw TO efhaxwok
    END FOR
    SET glmkijed TO 0
    SET pmrwoavb TO 0
    WHILE pmrwoavb <= length(efhaxwok) - (3-2) - (3-2)
    BEGIN
      SET vgxypnzs TO pmrwoavb + (3-2)
      WHILE vgxypnzs <= length(efhaxwok) - (3-2)
      BEGIN
        SET pnqylfks TO length(efhaxwok[pmrwoavb])
        SET jrtdkcwl TO length(efhaxwok[vgxypnzs])
        SET glmkijed TO glmkijed + (pnqylfks * jrtdkcwl)
        SET vgxypnzs TO vgxypnzs + (3-2)
      END
      SET pmrwoavb TO pmrwoavb + (3-2)
    END
    RETURN glmkijed
  END FUNCTION

  SET cxoewghm TO 0
  WHILE cxoewghm < thupdjelv
    SET hazgvtec[cxoewghm] TO count_pairs_through_c(cxoewghm)
    SET cxoewghm TO cxoewghm + (3-2)
  END

  RETURN hazgvtec
    END FUNCTION
END CLASS