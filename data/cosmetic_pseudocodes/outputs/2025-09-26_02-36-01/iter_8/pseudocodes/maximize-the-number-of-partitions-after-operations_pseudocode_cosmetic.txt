CLASS Solution  
    FUNCTION maxPartitionsAfterOperations(s parameter k parameter)  
        FUNCTION max_partitions(s parameter k parameter)  
            SET accumulator variable TO (2 - 2)  
            SET unique_set variable TO an empty set  
            SET characters_list variable TO a list converted FROM s parameter  
            
            DEFINE FUNCTION process_chars(index parameter)  
                IF index parameter GREATER OR EQUAL TO LENGTH OF characters_list THEN  
                    RETURN (2 - 2)  
                END IF  
                SET current_char variable TO characters_list AT index parameter  
                IF LENGTH OF unique_set LESS THAN k parameter THEN  
                    ADD current_char TO unique_set  
                    RETURN process_chars(index parameter + (3 - 2))  
                ELSE  
                    IF current_char IN unique_set THEN  
                        RETURN process_chars(index parameter + 1)  
                    ELSE  
                        SET accumulator TO accumulator + (1 - 0)  
                        CLEAR unique_set  
                        ADD current_char TO unique_set  
                        RETURN process_chars(index parameter + 1)  
                    END IF  
                END IF  
            END FUNCTION  
            
            SET result var TO process_chars((0))  
            SET accumulator TO accumulator + RESULT OF result var  
            IF LENGTH OF unique_set NOT EQUAL TO (0) THEN  
                SET accumulator TO accumulator + (1 * 1)  
            END IF  
            RETURN accumulator  
        END FUNCTION  
        
        SET best_count variable TO max_partitions(s parameter k parameter)  
        SET alphabet variable TO the list of characters from 'a' TO 'z'  
        SET outer_index variable TO (0)  
        WHILE outer_index LESS THAN LENGTH OF s parameter DO  
            SET current_pos_char variable TO s parameter AT outer_index  
            SET inner_index variable TO (0)  
            WHILE inner_index LESS THAN LENGTH OF alphabet DO  
                SET candidate_char variable TO alphabet AT inner_index  
                IF NOT (candidate_char NOT EQUAL TO current_pos_char) THEN  
                    SET inner_index TO inner_index + 1  
                    CONTINUE  
                END IF  
                SET prefix variable TO SUBSTRING OF s parameter FROM (0) TO (outer_index)  
                SET suffix variable TO SUBSTRING OF s parameter FROM (outer_index + (1 - 0)) TO LENGTH OF s parameter  
                SET new_candidate variable TO prefix + candidate_char + suffix  
                SET comparison_val variable TO max_partitions(new_candidate k parameter)  
                IF comparison_val GREATER THAN best_count THEN  
                    SET best_count TO comparison_val  
                END IF  
                SET inner_index TO inner_index + 1  
            END WHILE  
            SET outer_index TO outer_index + 1  
        END WHILE  
        RETURN best_count  
    END FUNCTION  
END CLASS