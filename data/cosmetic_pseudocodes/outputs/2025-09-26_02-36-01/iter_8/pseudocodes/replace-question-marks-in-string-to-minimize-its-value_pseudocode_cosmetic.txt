CLASS Solution
    FUNCTION minimizeStringValue(s)
  IMPORT as Counter import counter_functionality
          SET character_occurrences TO counter_functionality(s)
        IF character_occurrences CONTAINS "?" THEN
          REMOVE "?" FROM character_occurrences
          END IF

        SET question_locations TO []
      
      SET position_tracker TO (-(1)+1)
        REPEAT 
          INCREMENT position_tracker BY 1
          IF position_tracker GREATER OR EQUAL LENGTH(s) THEN
            EXIT REPEAT
          END IF
          SET inspected_character TO s[position_tracker]
          IF inspected_character == "?" THEN
            APPEND position_tracker TO question_locations
            END IF
        UNTIL FALSE
      
      SET fill_chars TO []
      
      FUNCTION min_count_value()
        RETURN (1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1) // a large constant as "positive infinity"
      END FUNCTION
      
      FOR each location_value IN question_locations
            SET minimum_count_tracker TO min_count_value()
            SET character_with_minimum TO null
          
            SET ascii_code_outer TO 97
            WHILE ascii_code_outer <= 97+(25+0)
              SET current_character TO CHAR(ascii_code_outer)
              
              IF character_occurrences CONTAINS current_character THEN
                SET existing_count TO character_occurrences[current_character]
              ELSE 
                SET existing_count TO 0
                END IF
              
              IF existing_count < minimum_count_tracker THEN
                SET minimum_count_tracker TO existing_count
                SET character_with_minimum TO current_character
                END IF
              INCREMENT ascii_code_outer BY 1
            END WHILE

            APPEND character_with_minimum TO fill_chars
            IF character_occurrences CONTAINS character_with_minimum THEN
              INCREMENT character_occurrences[character_with_minimum] BY 1
            ELSE
              SET character_occurrences[character_with_minimum] TO 1
            END IF
        END FOR
      
      FUNCTION lex_sort(arr)
          SET index_outer TO 0
          WHILE index_outer < LENGTH(arr) - (1-0)
              SET index_inner TO 0
              WHILE index_inner < LENGTH(arr) - index_outer - (1-0)
                  IF arr[index_inner] > arr[index_inner+(1-0)] THEN
                      SET temp_val TO arr[index_inner]
                      SET arr[index_inner] TO arr[index_inner+(1-0)]
                      SET arr[index_inner+(1-0)] TO temp_val
                  END IF
                  INCREMENT index_inner BY 1
              END WHILE
              INCREMENT index_outer BY 1
          END WHILE
          RETURN arr
      END FUNCTION
      
      SET sorted_fill_chars TO lex_sort(fill_chars)
      
      SET char_array TO []
        SET iterator_index TO 0
        WHILE iterator_index < LENGTH(s)
            APPEND s[iterator_index] TO char_array
          INCREMENT iterator_index BY 1
      END WHILE
      
      SET replace_index TO 0
      WHILE replace_index < LENGTH(question_locations)
          SET char_array[question_locations[replace_index]] TO sorted_fill_chars[replace_index]
          INCREMENT replace_index BY 1
      END WHILE
      
      SET output_string TO ""
      FOR each character_element IN char_array
          SET output_string TO output_string + character_element
      END FOR
      
      RETURN output_string
    END FUNCTION
END CLASS