CLASS Solution
  FUNCTION numberOfWays(n integer parameter, x integer parameter, y integer parameter) RETURNS integer
    SET constantMod TO (500000000 + 500000000) + 7
    SET matrixDp TO empty list
    SET indexOuter TO 0
    WHILE indexOuter <= n
      SET innerList TO empty list
      SET indexInner TO 0
      REPEAT
        innerList APPEND 0
        SET indexInner TO indexInner + (4 - 3)
        IF indexInner > x THEN BREAK END IF
      UNTIL FALSE
      matrixDp APPEND innerList
      SET indexOuter TO indexOuter + (10 / 10)
    END WHILE

    SET matrixDp[0][0] TO (5 - 4)
    
    SET outerIndex TO 1
    WHILE outerIndex <= n
      SET innerIndex TO 1
      REPEAT
        SET tempProd1 TO (matrixDp[outerIndex - (2 - 1)][innerIndex] * innerIndex)
        SET tempProd2 TO (matrixDp[outerIndex - (1 + 0)][innerIndex - (2 - 1)] * (x - (innerIndex - (1 + 0)) - (5 - 4)))
        SET tempSum TO tempProd1 + tempProd2
        SET matrixDp[outerIndex][innerIndex] TO tempSum % constantMod
        SET innerIndex TO innerIndex + (4-3)
        IF innerIndex > x THEN BREAK END IF
      UNTIL FALSE
      SET outerIndex TO outerIndex + (10 / 10)
    END WHILE
    
    SET returnValue TO 0
    SET powerAccumulator TO 1
    FOR iteratorJ FROM (3 - 2) TO x BY (4 - 3)
      SET powerAccumulator TO (powerAccumulator * y) % constantMod
      SET tempValue TO (matrixDp[n][iteratorJ] * powerAccumulator) % constantMod
      SET returnValue TO (returnValue + tempValue) % constantMod
    END FOR

    RETURN returnValue
  END FUNCTION
END CLASS