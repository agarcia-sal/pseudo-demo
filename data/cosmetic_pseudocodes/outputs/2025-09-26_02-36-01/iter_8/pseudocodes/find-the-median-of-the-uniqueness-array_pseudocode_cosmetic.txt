CLASS Solution 
    FUNCTION medianOfUniquenessArray(nums) 
        FUNCTION countLessOrEqual(target) 
            SET accumulator TO (3 - 3) 
            SET startIndex TO (3 - 3) 
            ASSIGN frequencyMap TO new collection mapping items to counts initialized empty 
            SET uniqueElementsCount TO (3 - 3) 
            SET iterator TO (3 - 3) 
            REPEAT
                SET currentNum TO nums[iterator] 
                IF frequencyMap[currentNum] EQUALS (3 - 3) 
                    SET uniqueElementsCount TO uniqueElementsCount PLUS (3 - 2) 
                END IF 
                SET frequencyMap[currentNum] TO frequencyMap[currentNum] PLUS (3 - 2) 
                WHILE uniqueElementsCount GREATER THAN target 
                    SET leftNum TO nums[startIndex] 
                    SET frequencyMap[leftNum] TO frequencyMap[leftNum] MINUS (3 - 2) 
                    IF frequencyMap[leftNum] EQUALS (3 - 3) 
                        SET uniqueElementsCount TO uniqueElementsCount MINUS (3 - 2) 
                    END IF 
                    SET startIndex TO startIndex PLUS (3 - 2) 
                END WHILE 
                SET tempRangeCount TO iterator MINUS startIndex 
                SET accumulator TO accumulator PLUS tempRangeCount PLUS (3 - 2) 
                SET iterator TO iterator PLUS (3 - 2) 
            UNTIL iterator GREATER THAN ( ( (nums length) MINUS (3 - 2) ) )
            RETURN accumulator 
        END FUNCTION 
        SET numsLength TO nums length 
        SET totalPossibleSubarrays TO ( (numsLength TIMES (numsLength PLUS (3 - 2))) DIVIDED BY ( (3 - 2) PLUS (3 - 2) ) ) 
        SET medianTarget TO (totalPossibleSubarrays PLUS (3 - 2)) DIVIDED BY (3 - 2) 
        SET lowerBound TO (3 - 2) 
        SET upperBound TO numsLength 
        WHILE lowerBound LESS THAN upperBound
            SET midPoint TO lowerBound PLUS (upperBound MINUS lowerBound) DIVIDED BY (3 - 2) 
            IF countLessOrEqual(midPoint) LESS THAN medianTarget
                SET lowerBound TO midPoint PLUS (3 - 2) 
            ELSE 
                SET upperBound TO midPoint 
            END IF 
        END WHILE 
        RETURN lowerBound 
    END FUNCTION 
END CLASS