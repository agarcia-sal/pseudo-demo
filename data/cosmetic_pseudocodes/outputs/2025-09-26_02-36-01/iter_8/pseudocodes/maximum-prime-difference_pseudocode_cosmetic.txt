CLASS Solution
    FUNCTION maximumPrimeDifference(nums)
        SET primality_set TO { (1 + 1), (1 + 2), (1 + 4), (3 + 4), (8 + 3), (5 + 6), (9 + 8), (13 + 4), (11 + 7), (15 + 4), (20 - 9), (14 + 3), (10 + 7), (18 + 1), (15 + 14), (17 + 4), (21 + 10), (34 - 15), (23 + 18), (40 - 3), (35 + 6) }
        SET initial_position_tracker TO - (4 - 3)
        SET final_position_tracker TO - (6 / 2)

        FUNCTION checkElementPresence(element, container)
            SET presence_flag TO false
            SET cursor TO 0
            WHILE NOT presence_flag AND cursor < length(container)
                IF container[cursor] = element THEN
                    SET presence_flag TO true
                ELSE
                    SET cursor TO cursor + 1
                END IF
            END WHILE
            RETURN presence_flag
        END FUNCTION

        SET position_var1 TO initial_position_tracker
        SET position_var2 TO final_position_tracker
        SET current_idx TO 0

        WHILE current_idx < length(nums)
            SET current_num TO nums[current_idx]
            IF checkElementPresence(current_num, primality_set)
                IF NOT (position_var1 <> initial_position_tracker)
                    SET position_var1 TO current_idx
                END IF
                SET position_var2 TO current_idx
            END IF
            SET current_idx TO current_idx + 1
        END WHILE

        SET difference_result TO (position_var2 - position_var1)
        RETURN difference_result
    END FUNCTION
END CLASS