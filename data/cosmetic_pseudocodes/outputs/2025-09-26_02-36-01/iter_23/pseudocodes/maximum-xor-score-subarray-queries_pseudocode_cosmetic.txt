```pseudocode
CLASS Solution
    FUNCTION maximumSubarrayXor(nums PARAMETER, queries PARAMETER)
        SET W TO LENGTH OF nums
        SET H TO W
        FUNCTION buildTableZ(a PARAMETER)
            FUNCTION recurX(m PARAMETER)
                IF m LESS THAN 0 THEN
                    RETURN LIST FILLED WITH ZEROS OF LENGTH W
                ELSE
                    SET prevRow TO recurX(m - 1)
                    SET newRow TO LIST FILLED WITH ZEROS OF LENGTH W
                    SET idxA TO m
                    WHILE idxA LESS THAN W DO
                        IF idxA EQUALS m THEN
                            SET newRow[idxA] TO a[m]
                        ELSE
                            SET newRow[idxA] TO prevRow[idxA - 1] XOR prevRow[idxA]
                        END IF
                        SET idxA TO idxA + 1
                    END WHILE
                    RETURN newRow
                END IF
            END FUNCTION
            RETURN recurX(W - 1)
        END FUNCTION

        FUNCTION buildTableY(f PARAMETER)
            FUNCTION recurY(row PARAMETER, col PARAMETER)
                IF row LESS THAN 0 THEN
                    RETURN LIST OF LISTS FILLED WITH ZEROS SIZE W BY W
                ELSE
                    SET prevMatrix TO recurY(row - 1, col)
                    SET currMatrix TO prevMatrix
                    SET iX TO row
                    SET jX TO row
                    WHILE jX LESS THAN W DO
                        SET val1 TO f[iX][jX]
                        SET val2 TO (IF jX > iX THEN currMatrix[iX][jX - 1] ELSE 0)
                        SET val3 TO (IF iX + 1 < W THEN currMatrix[iX + 1][jX] ELSE 0)
                        SET candidates TO [val1, val2, val3]
                        SET maxVal TO val1
                        FOR v IN candidates DO
                            IF v GREATER THAN maxVal THEN
                                SET maxVal TO v
                            END IF
                        END FOR
                        SET currMatrix[iX][jX] TO maxVal
                        SET jX TO jX + 1
                    END WHILE
                    RETURN currMatrix
                END IF
            END FUNCTION
            RETURN recurY(W - 1, 0)
        END FUNCTION

        FUNCTION buildFX(nums PARAMETER)
            FUNCTION recurF(i PARAMETER)
                IF i LESS THAN 0 THEN
                    RETURN LIST OF LISTS FILLED WITH ZEROS SIZE W BY W
                ELSE
                    SET partialF TO recurF(i - 1)
                    SET matrixF TO partialF
                    SET p TO i
                    SET q TO i
                    WHILE q LESS THAN W DO
                        IF q EQUALS p THEN
                            SET matrixF[p][q] TO nums[p]
                        ELSE
                            SET left TO matrixF[p][q - 1]
                            SET down TO matrixF[p + 1][q]
                            SET matrixF[p][q] TO left XOR down
                        END IF
                        SET q TO q + 1
                    END WHILE
                    RETURN matrixF
                END IF
            END FUNCTION
            RETURN recurF(W - 1)
        END FUNCTION

        SET tmpF TO buildFX(nums)
        SET tmpG TO buildTableY(tmpF)
        SET resultList TO EMPTY LIST

        FUNCTION processQueries(qList PARAMETER, idx PARAMETER)
            IF idx EQUALS LENGTH OF qList THEN
                RETURN
            ELSE
                SET li TO qList[idx][0]
                SET ri TO qList[idx][1]
                APPEND tmpG[li][ri] TO resultList
                processQueries(qList, idx + 1)
            END IF
        END FUNCTION

        processQueries(queries, 0)

        RETURN resultList
    END FUNCTION
END CLASS
```