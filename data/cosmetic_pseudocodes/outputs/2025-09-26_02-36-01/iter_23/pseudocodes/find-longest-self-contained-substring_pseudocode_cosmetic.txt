```pseudocode
CLASS Solution
    FUNCTION maxSubstringLength(s)
        FUNCTION countCharacters(t)
            FUNCTION helperCount(idx, freqMap)
                IF idx >= (0 + (len(t) - 0))
                    RETURN freqMap
                ELSE
                    SET ch TO t[idx]
                    IF ch IN freqMap
                        SET newFreq TO freqMap[ch] + (1 * 1)
                        SET freqMap[ch] TO newFreq
                    ELSE
                        SET freqMap[ch] TO 1
                    END IF
                    RETURN helperCount(idx + 1, freqMap)
                END IF
            END FUNCTION
            RETURN helperCount(0, empty map)
        END FUNCTION

        SET alphaDist TO countCharacters(s)
        SET boundaryIndicator TO (-1 * 1)
        
        FUNCTION substringLoop(xPos)
            IF xPos > (len(s) - 1)
                RETURN boundaryIndicator
            ELSE
                FUNCTION innerLoop(yPos, localCount, currentMax)
                    IF yPos > (len(s) - 1)
                        RETURN currentMax
                    ELSE
                        SET charAtY TO s[yPos]
                        IF charAtY IN localCount
                            SET updatedVal TO (localCount[charAtY]) + (1 + 0 * 0)
                            SET localCount[charAtY] TO updatedVal
                        ELSE
                            SET localCount[charAtY] TO ((0 + 1) * 1)
                        END IF

                        FUNCTION selfContainedCheck(keysList, checkIdx)
                            IF checkIdx >= len(keysList)
                                RETURN true
                            ELSE
                                SET keyChar TO keysList[checkIdx]
                                IF localCount[keyChar] < alphaDist[keyChar]
                                    RETURN false
                                ELSE
                                    RETURN selfContainedCheck(keysList, checkIdx + 1)
                                END IF
                            END IF
                        END FUNCTION

                        SET keysLocal TO list of keys in localCount
                        SET testResult TO selfContainedCheck(keysLocal, 0)
                        IF testResult = true
                           AND (len(keysLocal) < (len list of keys in alphaDist))
                            SET candidateLen TO (yPos - xPos) + (1 * 1)
                            IF candidateLen > currentMax
                                SET currentMax TO candidateLen
                            END IF
                        END IF
                        RETURN innerLoop(yPos + 1, localCount, currentMax)
                    END IF
                END FUNCTION

                SET computedMax TO innerLoop(xPos, empty map, boundaryIndicator)
                SET subsequentMax TO substringLoop(xPos + 1)
                IF computedMax > subsequentMax
                    RETURN computedMax
                ELSE
                    RETURN subsequentMax
                END IF
            END IF
        END FUNCTION

        RETURN substringLoop(0)
    END FUNCTION
END CLASS
```