```pseudocode
CLASS Solution
    FUNCTION sumOfGoodSubsequences(nums)
        SET Alpha TO 1000000000 PLUS 7
        ASSIGN Beta TO a map returning zero by default
        ASSIGN Gamma TO a map returning zero by default

        FUNCTION Omega(Delta)
            IF Delta GREATER THAN LENGTH(nums) MINUS 1 THEN
                RETURN
            END IF
            SET Epsilon TO nums[Delta]
            Gamma[Epsilon] = Gamma[Epsilon] PLUS 1
            Beta[Epsilon] = Beta[Epsilon] PLUS Epsilon

            Beta[Epsilon] = (Beta[Epsilon] PLUS Beta[Epsilon MINUS 1] PLUS (Gamma[Epsilon MINUS 1] MULTIPLY Epsilon)) MOD Alpha
            Gamma[Epsilon] = (Gamma[Epsilon] PLUS Gamma[Epsilon MINUS 1]) MOD Alpha

            Beta[Epsilon] = (Beta[Epsilon] PLUS Beta[Epsilon PLUS 1] PLUS (Gamma[Epsilon PLUS 1] MULTIPLY Epsilon)) MOD Alpha
            Gamma[Epsilon] = (Gamma[Epsilon] PLUS Gamma[Epsilon PLUS 1]) MOD Alpha

            CALL Omega(Delta PLUS 1)
        END FUNCTION

        CALL Omega(0)

        SET Xi TO 0
        FUNCTION IterateValues(ValuesList, Index)
            IF Index EQUALS LENGTH(ValuesList) THEN
                RETURN
            END IF
            SET Theta TO ValuesList[Index]
            Xi = Xi PLUS Theta
            CALL IterateValues(ValuesList, Index PLUS 1)
        END FUNCTION

        CALL IterateValues(Beta.values(), 0)

        RETURN Xi MOD Alpha
    END FUNCTION
END CLASS
```