```pseudocode
CLASS Solution
    FUNCTION findMaximumNumber(k, x)
        FUNCTION count_set_bits(p, q)
            SET s TO 0
            SET v TO 1 * (2 ^ q)
            SET r TO p DIV v
            SET s TO s + (r DIV 2) * v
            IF (r MOD 2) = 1 THEN
                SET s TO s + (p MOD v) + 1
            END IF
            RETURN s
        END FUNCTION

        FUNCTION accumulated_price(w)
            SET t TO 0
            PROCEDURE loop_j(j)
                IF (2 ^ (j * x - 1)) <= w THEN
                    SET t TO t + count_set_bits(w, j * x - 1)
                    CALL loop_j(j + 1)
                END IF
            END PROCEDURE
            CALL loop_j(1)
            RETURN t
        END FUNCTION

        SET a TO 1
        SET b TO 1 * (2 ^ 60)

        FUNCTION binary_search(c, d)
            IF c > d THEN
                RETURN d
            ELSE
                SET e TO c + ((d - c) DIV 2)
                IF accumulated_price(e) <= k THEN
                    RETURN binary_search(e + 1, d)
                ELSE
                    RETURN binary_search(c, e - 1)
                END IF
            END IF
        END FUNCTION

        RETURN binary_search(a, b)
    END FUNCTION
END CLASS
```