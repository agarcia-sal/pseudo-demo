```pseudocode
CLASS Solution
    FUNCTION countPairsOfConnectableServers(edges, signalSpeed)
        SET mxybr TO a map with default empty list
        FUNCTION fillGraph(idx)
            IF idx EQUALS LENGTH(edges) THEN
                RETURN
            ELSE
                SET a, b, c TO edges[idx][0], edges[idx][1], edges[idx][2]
                APPEND (b, c) TO mxybr[a]
                APPEND (a, c) TO mxybr[b]
                CALL fillGraph(idx PLUS 1)
            END IF
        END FUNCTION
        CALL fillGraph(0)

        SET wwetaf TO LENGTH(mxybr)
        SET cbvnep TO a list filled with zero VALUES of size wwetaf

        FUNCTION explore(t, r, s, l)
            IF (s MOD signalSpeed) EQUALS 0 THEN
                APPEND t TO l
            END IF
            SET ultrs TO 0

            FUNCTION neighborIter(pairs, pos)
                IF pos EQUALS LENGTH(pairs) THEN
                    RETURN
                END IF
                SET cfnwy, gquzo TO pairs[pos][0], pairs[pos][1]
                IF cfnwy NOT EQUAL r THEN
                    SET ultrs TO ultrs PLUS explore(cfnwy, r, s PLUS gquzo, l)
                END IF
                CALL neighborIter(pairs, pos PLUS 1)
            END FUNCTION

            CALL neighborIter(mxybr[t], 0)

            IF (s MOD signalSpeed) EQUALS 0 THEN
                RETURN ultrs PLUS 1
            ELSE
                RETURN ultrs
            END IF
        END FUNCTION

        FUNCTION pairsCountThrough(q)
            SET ktrux TO empty list

            FUNCTION gatherPaths(arr, idxp)
                IF idxp EQUALS LENGTH(arr) THEN
                    RETURN
                END IF
                SET vlmnt, wght TO arr[idxp][0], arr[idxp][1]
                SET ptth TO empty list
                CALL explore(vlmnt, q, wght, ptth)
                APPEND ptth TO ktrux
                CALL gatherPaths(arr, idxp PLUS 1)
            END FUNCTION

            CALL gatherPaths(mxybr[q], 0)

            SET totalPairs TO 0

            FUNCTION sumPairs(i_idx)
                IF i_idx EQUALS LENGTH(ktrux) THEN
                    RETURN
                END IF
                FUNCTION innerLoop(j_idx)
                    IF j_idx EQUALS LENGTH(ktrux) THEN
                        RETURN
                    END IF
                    SET totalPairs TO totalPairs PLUS (LENGTH(ktrux[i_idx]) TIMES LENGTH(ktrux[j_idx]))
                    CALL innerLoop(j_idx PLUS 1)
                END FUNCTION
                CALL innerLoop(i_idx PLUS 1)
                CALL sumPairs(i_idx PLUS 1)
            END FUNCTION

            CALL sumPairs(0)

            RETURN totalPairs
        END FUNCTION

        FUNCTION resultFill(idxx)
            IF idxx EQUALS wwetaf THEN
                RETURN
            ELSE
                SET cbvnep[idxx] TO pairsCountThrough(idxx)
                CALL resultFill(idxx PLUS 1)
            END IF
        END FUNCTION
        CALL resultFill(0)
        RETURN cbvnep
    END FUNCTION
END CLASS
```