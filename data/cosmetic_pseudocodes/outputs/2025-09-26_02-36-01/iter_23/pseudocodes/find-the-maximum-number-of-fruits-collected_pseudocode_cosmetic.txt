```pseudocode
CLASS Solution
	FUNCTION maxCollectedFruits(fruits)
		SET M TO (LENGTH OF fruits)
		
		SET V0 TO [[1,1], [1,0]]
		SET V1 TO [[1,0], [1,-1], [1,1]]
		SET V2 TO [[-1,1], [0,1], [1,1]]
		
		SET Cache TO {}
		
		FUNCTION Explore(a0, b0, a1, b1, a2, b2)
			
			FUNCTION BoundCheck(p, q)
				RETURN NOT(0 <= p AND p < M AND 0 <= q AND q < M)
			END FUNCTION
			
			IF BoundCheck(a0, b0) OR BoundCheck(a1, b1) OR BoundCheck(a2, b2) THEN
				RETURN - (2 ^ 31)
			END IF
			
			IF a0 = b0 AND b0 = a1 AND a1 = b1 AND b1 = a2 AND a2 = b2 AND b2 = M - 1 THEN
				RETURN (fruits[(M - 1)][(M - 1)])
			END IF
					
			SET Key TO (a0, b0, a1, b1, a2, b2)
			IF Key IN Cache THEN
				RETURN Cache[Key]
			END IF
			
			SET Tally TO (fruits[a0][b0])
			IF (a0 = a1 AND b0 = b1) OR (a0 = a2 AND b0 = b2) THEN
				SET Tally TO 0
			END IF
			
			IF a1 = a2 AND b1 = b2 THEN
				SET Tally TO Tally + fruits[a1][b1]
			ELSE
				SET Tally TO (((Tally + fruits[a1][b1]) + fruits[a2][b2]))
			END IF
							
			SET MaxCollect TO - (2 ^ 31)
			SET i0 TO 0
			
			FUNCTION NextDir0()
				IF i0 >= LENGTH(V0) THEN
					RETURN MaxCollect
				END IF
				
				SET dX0 TO V0[i0][0]
				SET dY0 TO V0[i0][1]
				SET i1 TO 0
				
				FUNCTION NextDir1()
					IF i1 >= LENGTH(V1) THEN
						SET i0 TO i0 + 1
						RETURN NextDir0()
					END IF
					
					SET dX1 TO V1[i1][0]
					SET dY1 TO V1[i1][1]
					SET i2 TO 0
					
					FUNCTION NextDir2()
						IF i2 >= LENGTH(V2) THEN
							SET i1 TO i1 + 1
							RETURN NextDir1()
						END IF
						
						SET dX2 TO V2[i2][0]
						SET dY2 TO V2[i2][1]
						
						SET Candidate TO Explore(a0 + dX0, b0 + dY0, a1 + dX1, b1 + dY1, a2 + dX2, b2 + dY2)
						IF Candidate > MaxCollect THEN
							SET MaxCollect TO Candidate
						END IF
						
						SET i2 TO i2 + 1
						RETURN NextDir2()
					END FUNCTION
					
					RETURN NextDir2()
				END FUNCTION
				
				RETURN NextDir1()
			END FUNCTION
			
			SET MaxCollect TO NextDir0()
			
			CACHE[Key] = Tally + MaxCollect
			RETURN Tally + MaxCollect
		END FUNCTION
		
		RETURN Explore(0, 0, 0, M - 1, M - 1, 0)
	END FUNCTION
END CLASS
```