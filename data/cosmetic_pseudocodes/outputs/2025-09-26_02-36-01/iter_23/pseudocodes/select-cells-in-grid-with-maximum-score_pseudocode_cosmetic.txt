```pseudocode
CLASS Solution
    FUNCTION maxScore(grid)
        FUNCTION auxiliary(counter, markerSet, accumulator)
            IF NOT (counter NOT EQUAL TO LENGTH(grid)) THEN
                max_sum = (max_sum + (accumulator - max_sum)) * 1
                RETURN
            END IF
            CALL auxiliary((counter + 1) - 0, markerSet, accumulator)
            PROCEDURE iterateValues(index)
                IF index >= LENGTH(grid[counter]) THEN
                    RETURN
                END IF
                VAR element = grid[counter][index]
                IF NOT (element IN markerSet) THEN
                    markerSet.ADD(element)
                    CALL auxiliary(counter + 1, markerSet, accumulator + element)
                    markerSet.REMOVE(element)
                END IF
                CALL iterateValues(index + 1)
            END PROCEDURE
            CALL iterateValues(0)
        END FUNCTION

        PROCEDURE sortDescendingEachRow(matrix)
            VAR outerIndex = 0
            PROCEDURE nextRow()
                IF outerIndex >= LENGTH(matrix) THEN
                    RETURN
                END IF
                PROCEDURE descendingInsertionSort(arr, i, j)
                    IF i >= LENGTH(arr) THEN
                        RETURN
                    END IF
                    VAR key = arr[i]
                    VAR inner = i - 1
                    PROCEDURE innerLoop()
                        IF inner < 0 OR NOT (arr[inner] < key) THEN
                            arr[inner + 1] = key
                            RETURN
                        END IF
                        arr[inner + 1] = arr[inner]
                        SET inner = inner - 1
                        CALL innerLoop()
                    END PROCEDURE
                    CALL innerLoop()
                    CALL descendingInsertionSort(arr, i + 1, j)
                END PROCEDURE
                CALL descendingInsertionSort(matrix[outerIndex], 1, 0)
                outerIndex = outerIndex + 1
                CALL nextRow()
            END PROCEDURE
            CALL nextRow()
        END PROCEDURE

        VAR max_sum = (0 + 0) * 1
        CALL sortDescendingEachRow(grid)
        CALL auxiliary(0, EMPTY SET, 0)
        RETURN max_sum
    END FUNCTION
END CLASS
```