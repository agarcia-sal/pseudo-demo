```pseudocode
CLASS Solution
    FUNCTION minimumOperationsToMakeKPeriodic(word parameter k)
        SET lengthVar TO 0
        SET substringsList TO an EMPTY LIST
        PROCEDURE loopRecursion(startIdx)
            IF NOT (startIdx LESS THAN (LENGTH OF word)) THEN
                RETURN
            ELSE
                SET tempSubstring TO ""
                PROCEDURE substrBuilder(counter)
                    IF counter GREATER THAN (k MINUS 1) OR ((startIdx PLUS counter) GREATER THAN OR EQUAL TO LENGTH OF word) THEN
                        RETURN
                    ELSE
                        SET tempSubstring TO (tempSubstring CONCATENATED WITH CHARACTER AT (startIdx PLUS counter) OF word)
                        CALL substrBuilder(counter PLUS 1)
                    END IF
                END PROCEDURE
                CALL substrBuilder(0)
                APPEND tempSubstring TO substringsList
                CALL loopRecursion(startIdx PLUS k)
            END IF
        END PROCEDURE
        SET lengthVar TO LENGTH OF word
        CALL loopRecursion(0)
        SET segmentFrequency TO an EMPTY MAP
        PROCEDURE frequencyCounter(i)
            IF NOT (i LESS THAN LENGTH OF substringsList) THEN
                RETURN
            ELSE
                IF substringsList[i] IS IN segmentFrequency THEN
                    SET segmentFrequency[substringsList[i]] TO segmentFrequency[substringsList[i]] PLUS 1
                ELSE
                    SET segmentFrequency[substringsList[i]] TO 1
                END IF
                CALL frequencyCounter(i PLUS 1)
            END IF
        END PROCEDURE
        CALL frequencyCounter(0)
        SET highestFrequency TO 0
        FOR EACH key IN KEYS OF segmentFrequency
            IF highestFrequency LESS THAN OR EQUAL TO segmentFrequency[key] THEN
                SET highestFrequency TO segmentFrequency[key]
            END IF
        END FOR
        SET totalSegments TO LENGTH OF substringsList
        SET computedResult TO totalSegments MINUS highestFrequency
        RETURN computedResult
    END FUNCTION
END CLASS
```