```pseudocode
CLASS Solution
    FUNCTION maxTotalReward(rewardValues)
        FUNCTION iuomhq(ovwzd)
            FUNCTION krsxvm(yfcwib, elqamq, mdqwanz)
                WHILE elqamq < mdqwanz
                    SET wdipo TO (elqamq + mdqwanz) // 2
                    IF yfcwib >= rewardValues[wdipo]
                        SET elqamq TO wdipo + 1
                    ELSE
                        SET mdqwanz TO wdipo
                    END IF
                END WHILE
                RETURN elqamq
            END FUNCTION

            SET sxcrow TO krsxvm(ovwzd, 0, LENGTH(rewardValues))
            SET ptvynl TO 0
            FUNCTION vdoizi(zntb)
                IF zntb >= LENGTH(rewardValues)
                    RETURN 0
                END IF
                SET kwusl TO 0
                FOR srx IN RANGE(zntb, LENGTH(rewardValues))
                    IF ovwzd + rewardValues[srx] > ovwzd
                        SET ebljn TO ovwzd + rewardValues[srx]
                        SET htxm TO vdoizi(ebljn)
                        IF ptvynl < rewardValues[srx] + htxm
                            SET ptvynl TO rewardValues[srx] + htxm
                        END IF
                    END IF
                END FOR
                RETURN ptvynl
            END FUNCTION

            SET hgipqw TO 0
            SET aets TO 0
            FUNCTION dofmvgl(bei)
                IF bei >= LENGTH(rewardValues)
                    RETURN 0
                END IF
                IF ovwzd + rewardValues[bei] > ovwzd
                    SET cdqkjmh TO ovwzd + rewardValues[bei]
                    SET vhlkt TO dofmvgl(bei + 1)
                    RETURN MAX(vhlkt + rewardValues[bei], aets)
                ELSE
                    RETURN aets
                END IF
            END FUNCTION

            SET aets TO 0
            SET dxse TO sxcrow
            LABEL loop_start
            IF dxse >= LENGTH(rewardValues)
                RETURN aets
            END IF
            IF ovwzd + rewardValues[dxse] > ovwzd
                SET qstmhv TO ovwzd + rewardValues[dxse]
                SET Tczekw TO iuomhq(qstmhv)
                IF aets < rewardValues[dxse] + Tczekw
                    SET aets TO rewardValues[dxse] + Tczekw
                END IF
            END IF
            SET dxse TO dxse + 1
            GOTO loop_start
        END FUNCTION

        FUNCTION bisect_right(value, arr)
            SET low TO 0
            SET high TO LENGTH(arr)
            WHILE low < high
                SET mid TO (low + high) // 2
                IF value < arr[mid]
                    SET high TO mid
                ELSE
                    SET low TO mid + 1
                END IF
            END WHILE
            RETURN low
        END FUNCTION

        SET sortedValues TO []
        FUNCTION insertion_sort(input)
            SET idx TO 0
            LABEL sort_loop
            IF idx >= LENGTH(input)
                RETURN
            END IF
            SET key TO input[idx]
            SET j TO idx - 1
            LABEL inner_loop
            IF j < 0 OR input[j] <= key
                SET idx TO idx + 1
                GOTO sort_loop
            END IF
            input[j + 1] = input[j]
            SET j TO j - 1
            GOTO inner_loop
        END FUNCTION
        SET sortedValues TO rewardValues
        CALL insertion_sort(sortedValues)
        SET rewardValues TO sortedValues

        SET result_value TO iuomhq(0)
        RETURN result_value
    END FUNCTION
END CLASS
```