```pseudocode
CLASS Solution
    FUNCTION valueAfterKSeconds(n k)
        SET primeModulus TO 1000000000 + 7
        DEFINE INITIAL_VALUE AS 1
        FUNCTION addMod(x y)
            SET sum TO x + y
            IF sum >= primeModulus THEN
                SET sum TO sum - primeModulus
            END IF
            RETURN sum
        END FUNCTION
        FUNCTION updatePosition(listX idx)
            RETURN addMod(listX[idx] listX[idx - 1])
        END FUNCTION
        FUNCTION incrementIndex(currentIndex maxIndex)
            RETURN currentIndex + 1
        END FUNCTION
        FUNCTION iterateIndicesRecursively(currentIndex maxIndex listX)
            IF (currentIndex = maxIndex) THEN
                RETURN
            ELSE
                SET listX[currentIndex] TO updatePosition(listX currentIndex)
                CALL iterateIndicesRecursively(incrementIndex(currentIndex maxIndex) maxIndex listX)
            END IF
        END FUNCTION
        FUNCTION repeatIterations(currentIteration maxIteration listX)
            IF (currentIteration = maxIteration) THEN
                RETURN
            ELSE
                CALL iterateIndicesRecursively(1 n listX)
                CALL repeatIterations(currentIteration + 1 maxIteration listX)
            END IF
        END FUNCTION
        SET tempArray TO ARRAY_OF_SIZE(n)
        SET idx_counter TO 0
        WHILE idx_counter < n
            SET tempArray[idx_counter] TO INITIAL_VALUE
            SET idx_counter TO idx_counter + 1
        END WHILE
        CALL repeatIterations(0 k tempArray)
        RETURN tempArray[n - 1]
    END FUNCTION
END CLASS
```