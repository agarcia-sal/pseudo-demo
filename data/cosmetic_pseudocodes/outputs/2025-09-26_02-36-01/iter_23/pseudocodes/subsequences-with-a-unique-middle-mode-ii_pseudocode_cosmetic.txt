```pseudocode
CLASS Solution
    FUNCTION subsequencesWithMiddleMode(nums)
        SET CONST_MODULO TO (10 ^ 9) + 7
        SET accumulator TO 0
        SET mapAlpha TO a new empty mapping defaulting to zero
        SET mapBeta TO a mapping of nums elements to their counts

        FUNCTION combinationTwo(x)
            RETURN (x * (x - 1)) / 2
        END FUNCTION

        SET temp1 TO 0
        SET temp2 TO 0
        SET temp3 TO 0
        SET temp4 TO 0
        SET temp5 TO 0

        FOR index_var FROM 0 TO (length(nums) - 1)
            SET current_elem TO nums[index_var]

            SET temp1 TO temp1 + (mapAlpha[current_elem] * ((-(mapBeta[current_elem]) ^ 2) + ((mapBeta[current_elem] - 1) ^ 2)))
            SET temp2 TO temp2 + (-(mapAlpha[current_elem] ^ 2))
            SET temp4 TO temp4 + (-(mapBeta[current_elem] ^ 2) + ((mapBeta[current_elem] - 1) ^ 2))
            SET temp5 TO temp5 + (-(mapAlpha[current_elem]))

            SET mapBeta[current_elem] TO mapBeta[current_elem] - 1

            SET leftSide TO index_var
            SET rightSide TO (length(nums) - index_var - 1)

            SET accumulator TO accumulator + (combinationTwo(leftSide) * combinationTwo(rightSide))
            SET accumulator TO accumulator - (combinationTwo(leftSide - mapAlpha[current_elem]) * combinationTwo(rightSide - mapBeta[current_elem]))

            SET helper1 TO temp1 - (mapAlpha[current_elem] * (mapBeta[current_elem] ^ 2))
            SET helper2 TO temp2 - (mapBeta[current_elem] * (mapAlpha[current_elem] ^ 2))
            SET helper3 TO temp3 - (mapAlpha[current_elem] ^ 2)
            SET helper4 TO temp4 - (mapBeta[current_elem] ^ 2)
            SET helper5 TO temp5 - (mapAlpha[current_elem] * mapBeta[current_elem])
            SET diffAlpha TO leftSide - mapAlpha[current_elem]
            SET diffBeta TO rightSide - mapBeta[current_elem]

            SET accumulator TO accumulator - (helper5 * mapAlpha[current_elem] * (rightSide - mapBeta[current_elem])) - (helper1 * (-mapAlpha[current_elem]))
            SET accumulator TO accumulator - (helper5 * mapBeta[current_elem] * (leftSide - mapAlpha[current_elem])) - (helper2 * (-mapBeta[current_elem]))
            SET accumulator TO accumulator - (((helper3 - diffAlpha) * mapBeta[current_elem] * (rightSide - mapBeta[current_elem])) / 2)
            SET accumulator TO accumulator - (((helper4 - diffBeta) * mapAlpha[current_elem] * (leftSide - mapAlpha[current_elem])) / 2)

            SET accumulator TO accumulator MOD CONST_MODULO

            SET temp1 TO temp1 + (mapBeta[current_elem] ^ 2)
            SET temp2 TO temp2 + (mapBeta[current_elem] * (-(mapAlpha[current_elem] ^ 2) + ((mapAlpha[current_elem] + 1) ^ 2)))
            SET temp3 TO temp3 + (-(mapAlpha[current_elem] ^ 2) + ((mapAlpha[current_elem] + 1) ^ 2))
            SET temp5 TO temp5 + mapBeta[current_elem]

            SET mapAlpha[current_elem] TO mapAlpha[current_elem] + 1
        END FOR

        RETURN accumulator
    END FUNCTION
END CLASS
```