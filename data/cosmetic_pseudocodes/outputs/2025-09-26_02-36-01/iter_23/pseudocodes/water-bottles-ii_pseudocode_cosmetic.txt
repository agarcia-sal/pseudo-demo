``` 
CLASS Solution
    FUNCTION maxBottlesDrunk(numBottles numBottles numExchange numExchange)
        SET consumed_sum TO 0
        SET bottles_empty TO 0

        FUNCTION recursiveDrink(consumed, empties, currentBottles)
            IF ( (currentBottles > 0) ) THEN
                SET newConsumed TO consumed + currentBottles
                SET newEmpties TO empties + currentBottles
                SET currentBottles TO 0

                FUNCTION innerExchange(exchCount, bottlesNow, empt)
                    IF ( (empt < exchCount) ) THEN
                        RETURN (bottlesNow, empt)
                    ELSE
                        SET empt TO empt - exchCount
                        SET bottlesNow TO bottlesNow + 1
                        SET exchCount TO exchCount + 1
                        RETURN innerExchange(exchCount, bottlesNow, empt)
                    END IF
                END FUNCTION

                SET pairResult TO innerExchange(numExchange, currentBottles, newEmpties)
                SET updatedBottles TO pairResult[0]
                SET updatedEmpties TO pairResult[1]

                RETURN recursiveDrink(newConsumed, updatedEmpties, updatedBottles)
            ELSE
                RETURN consumed
            END IF
        END FUNCTION

        SET consumed_sum TO recursiveDrink(consumed_sum, bottles_empty, numBottles)
        RETURN consumed_sum
    END FUNCTION
END CLASS
```