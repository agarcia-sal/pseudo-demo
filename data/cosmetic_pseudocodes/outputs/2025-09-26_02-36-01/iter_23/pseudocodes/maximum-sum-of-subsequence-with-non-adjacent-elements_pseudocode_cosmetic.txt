```pseudocode
CLASS Solution
    FUNCTION maximumSumSubsequence(nums, queries)
        SET modValue TO 10 ^ 9 + 1
        SET lengthVal TO LENGTH(nums)

        FUNCTION computeStep(aryTake, arySkip, valArr, idx)
            IF idx < 0 THEN
                RETURN
            ELSE
                SET currentTake TO 0
                SET currentSkip TO 0

                SET prevSkip TO 0
                SET prevTake TO 0
                IF idx - 1 >= 0 THEN
                    SET prevSkip TO arySkip[idx - 1]
                    SET prevTake TO aryTake[idx - 1]
                END IF

                SET currentTake TO (0 > prevSkip ? 0 : prevSkip) + valArr[idx]
                IF currentTake < 0 THEN SET currentTake TO 0 END IF

                IF prevSkip > prevTake THEN
                    SET currentSkip TO prevSkip
                ELSE
                    SET currentSkip TO prevTake
                END IF

                IF currentTake < 0 THEN SET currentTake TO 0 END IF

                SET aryTake[idx] TO currentTake
                SET arySkip[idx] TO currentSkip
            END IF
        END FUNCTION

        FUNCTION recalcRange(aryTake, arySkip, valArr, startIdx, endIdx)
            IF startIdx >= endIdx THEN
                RETURN
            ELSE
                CALL computeStep(aryTake, arySkip, valArr, startIdx)
                CALL recalcRange(aryTake, arySkip, valArr, startIdx + 1, endIdx)
            END IF
        END FUNCTION

        SET arrTake TO []
        SET arrSkip TO []
        FOR k FROM 0 TO lengthVal - 1
            APPEND 0 TO arrTake
            APPEND 0 TO arrSkip
        END FOR

        SET firstTake TO (nums[0] > 0 ? nums[0] : 0)
        IF firstTake < 0 THEN SET firstTake TO 0 END IF
        SET arrTake[0] TO firstTake
        SET arrSkip[0] TO 0

        CALL recalcRange(arrTake, arrSkip, nums, 1, lengthVal)

        SET resultSum TO 0

        FUNCTION maxOfTwo(a, b)
            IF a > b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION

        FOR EACH pairEntry IN queries
            SET position TO pairEntry[0]
            SET newVal TO pairEntry[1]

            SET nums[position] TO newVal

            IF position = 0 THEN
                SET arrTake[0] TO (nums[0] > 0 ? nums[0] : 0)
                IF arrTake[0] < 0 THEN SET arrTake[0] TO 0 END IF
                SET arrSkip[0] TO 0
            ELSE
                CALL computeStep(arrTake, arrSkip, nums, position)
            END IF

            CALL recalcRange(arrTake, arrSkip, nums, position + 1, lengthVal)

            SET maxEndVal TO maxOfTwo(arrTake[lengthVal - 1], arrSkip[lengthVal - 1])
            SET resultSum TO (resultSum + maxEndVal) % modValue
        END FOR

        RETURN resultSum
    END FUNCTION
END CLASS
```