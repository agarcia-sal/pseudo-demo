```pseudocode
CLASS Solution
    FUNCTION minimumOperations(grid)
        SET h TO LENGTH(grid)
        SET w TO LENGTH(grid[0])
        SET resultCount TO 0

        FUNCTION checkI(idx, col)
            IF idx GREATER OR EQUAL h - 1 THEN
                RETURN
            END IF
            IF grid[idx][col] != grid[idx + 1][col] THEN
                SET resultCount TO resultCount + 1
                SET grid[idx + 1][col] TO grid[idx][col]
            END IF
            SET nextIdx TO idx + 1
            CALL checkI(nextIdx, col)
        END FUNCTION

        FUNCTION findReplacement(r, c)
            IF c >= w - 1 THEN
                RETURN
            END IF
            IF grid[r][c] == grid[r][c + 1] THEN
                SET resultCount TO resultCount + 1
                SET candidate TO 0

                FUNCTION tryCandidate(x)
                    IF x > 9 THEN
                        RETURN
                    END IF
                    IF x != grid[r][c] THEN
                        SET grid[r][c + 1] TO x
                        RETURN
                    ELSE
                        CALL tryCandidate(x + 1)
                    END IF
                END FUNCTION

                CALL tryCandidate(candidate)
            END IF
        END FUNCTION

        FUNCTION loopCols(col)
            IF col >= w THEN
                RETURN
            END IF
            CALL checkI(0, col)
            SET row TO 0

            FUNCTION innerLoopRows(r)
                IF r >= h THEN
                    RETURN
                END IF
                CALL findReplacement(r, col)
                CALL innerLoopRows(r + 1)
            END FUNCTION

            CALL innerLoopRows(row)
            CALL loopCols(col + 1)
        END FUNCTION

        CALL loopCols(0)
        RETURN resultCount
    END FUNCTION
END CLASS
```