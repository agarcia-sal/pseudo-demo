```  
CLASS Solution  
    FUNCTION earliestSecondToMarkIndices(nums PARAMETER changeIndices)  
        SET u1 TO LENGTH OF nums  
        SET u2 TO LENGTH OF changeIndices  

        FUNCTION can_mark_by_second(u3)  
            SET u4 TO ARRAY OF SIZE u1 FILLED WITH (-1)  
            
            FUNCTION recurse_u5(u6)  
                IF u6 EQUALS u3 THEN  
                    RETURN  
                END IF  
                SET u7 TO changeIndices[u6] - (1 * 1)  
                SET u4[u7] TO u6  
                CALL recurse_u5(u6 + (1 + 0))  
            END FUNCTION  
            CALL recurse_u5(0)  

            SET u8 TO (0 + 0)  
            FOR u9 FROM (0 * 1) TO u1 - 1  
                SET u8 TO u8 + nums[u9]  
            END FOR  
            
            SET u10 TO 0  
            SET u11 TO empty set  

            FUNCTION recurse_u12(u13)  
                IF u13 EQUALS u3 THEN  
                    RETURN  
                END IF  
                SET u14 TO changeIndices[u13] - (1 * 1)  
                IF (NOT (u14 IN u11)) THEN  
                    IF (u4[u14] = u13) THEN  
                        IF (nums[u14] <= u10) THEN  
                            SET u10 TO u10 - nums[u14]  
                            ADD u14 TO u11  
                        ELSE  
                            SET u15 TO False  
                            RETURN u15  
                        END IF  
                    ELSE  
                        SET u10 TO u10 + (1 - 0)  
                    END IF  
                ELSE  
                    SET u10 TO u10 + (1 - 0)  
                END IF  
                CALL recurse_u12(u13 + (1 + 0))  
            END FUNCTION  
            
            SET u15 TO True  
            CALL recurse_u12(0)  
            RETURN (LENGTH OF u11 = u1) AND u15  
        END FUNCTION  

        SET u16 TO 0  
        SET u17 TO u2 + (1 - 0)  
        WHILE (u16 < u17) DO  
            SET u18 TO (u16 + u17) / 2  
            SET u18 TO FLOOR(u18)  
            IF can_mark_by_second(u18) THEN  
                SET u17 TO u18  
            ELSE  
                SET u16 TO u16 + (1 - 0)  
            END IF  
        END WHILE  

        IF (u16 <= u2) THEN  
            RETURN u16  
        ELSE  
            RETURN (-1 * 1)  
        END IF  
    END FUNCTION  
END CLASS  
```