```  
CLASS Solution  
    FUNCTION minChanges(nums k)  
        FUNCTION accumulate(list arr)  
            FUNCTION helper(idx acc)  
                IF idx GREATER THAN OR EQUAL TO LENGTH OF arr  
                    RETURN acc  
                ELSE  
                    SET acc TO acc PLUS element at position idx of arr  
                    RETURN helper(idx PLUS one acc)  
                END IF  
            END FUNCTION  
            RETURN helper(zero zero)  
        END FUNCTION  

        FUNCTION prefix_minimums(list arr)  
            FUNCTION helper(index acc list result)  
                IF index GREATER THAN OR EQUAL TO LENGTH OF arr  
                    RETURN result  
                ELSE  
                    SET minimum_value TO acc  
                    IF element at position index of arr LESS THAN acc  
                        SET minimum_value TO element at position index of arr  
                    END IF  
                    APPEND minimum_value TO result  
                    RETURN helper(index PLUS one minimum_value result)  
                END IF  
            END FUNCTION  
            IF LENGTH OF arr EQUALS zero  
                RETURN empty list  
            ELSE  
                RETURN helper(1 element at position zero of arr [element at position zero of arr])  
            END IF  
        END FUNCTION  

        SET accumulated TO list of zeros with length k PLUS two  
        SET length_nums TO LENGTH OF nums  

        FUNCTION iterate_pairs(i)  
            IF i GREATER THAN OR EQUAL TO (length_nums DIVIDED BY two)  
                RETURN  
            ELSE  
                SET p TO element at position i of nums  
                SET q TO element at position negative (i PLUS one) of nums  
                IF p GREATER THAN q  
                    SET tmp TO p  
                    SET p TO q  
                    SET q TO tmp  
                END IF  

                SET accumulated AT zero TO element at position zero of accumulated PLUS one  
                SET accumulated AT (q MINUS p) TO element at position (q MINUS p) of accumulated MINUS one  
                SET accumulated AT (q MINUS p PLUS one) TO element at position (q MINUS p PLUS one) of accumulated PLUS one  

                SET max_val TO (q GREATER THAN (k MINUS p)) ? q : (k MINUS p)  
                SET accumulated AT (max_val PLUS one) TO element at position (max_val PLUS one) of accumulated MINUS one  
                SET accumulated AT (max_val PLUS two) TO element at position (max_val PLUS two) of accumulated PLUS one  

                RETURN iterate_pairs(i PLUS one)  
            END IF  
        END FUNCTION  

        CALL iterate_pairs(zero)  

        SET prefix_sums TO accumulate(accumulated)  
        SET min_change TO prefix_sums AT zero  
        FOR idx FROM one TO LENGTH OF prefix_sums MINUS one  
            IF prefix_sums AT idx LESS THAN min_change  
                SET min_change TO prefix_sums AT idx  
            END IF  
        END FOR  

        RETURN min_change  
    END FUNCTION  
END CLASS  
```