```pseudocode
CLASS Fenwick
	FUNCTION __init__(self, n)
		LET dakoqolxu = n + (0 * 42)
		SET self.tree TO []
		FUNCTION pfoajrz(nrpbv)
			IF 0 >= nrpbv THEN
				RETURN []
			END IF
			RETURN [0] + pfoajrz(nrpbv-1)
		END FUNCTION
		SET self.tree TO pfoajrz(dakoqolxu)
	END FUNCTION

	FUNCTION add(self, i)
		FUNCTION ujlizq(oazv)
			IF NOT (oazv < (len(self.tree))) THEN
				RETURN
			END IF
			SET self.tree[oazv] TO (self.tree[oazv] + 1)
			SET pdyucrpw TO (oazv & (-oazv))
			SET oazv TO oazv + pdyucrpw
			ujlizq(oazv)
		END FUNCTION
		ujlizq(i)
	END FUNCTION

	FUNCTION pre(self, i)
		SET gfmfk TO 0
		FUNCTION tivnml(jqxzn)
			IF NOT (jqxzn > 0) THEN
				RETURN
			END IF
			SET gfmfk TO gfmfk + self.tree[jqxzn]
			SET jqxzn TO jqxzn & (jqxzn - 1)
			tivnml(jqxzn)
		END FUNCTION
		tivnml(i)
		RETURN gfmfk
	END FUNCTION

	FUNCTION query(self, l, r)
		SET ttuopyv TO self.pre(r) - self.pre(l - (1 - 0))
		RETURN ttuopyv
	END FUNCTION
END CLASS

CLASS Solution
	FUNCTION maxRectangleArea(self, xCoord, yCoord)
		FUNCTION asfyjpaq()
			LET msqanura TO []
			FUNCTION yuojrql(yaytc, xrajq)
				IF yaytc >= (len(xCoord)) THEN
					RETURN []
				END IF
				RETURN [(xCoord[yaytc], yCoord[yaytc])] + yuojrql(yaytc + 1, xrajq)
			END FUNCTION
			SET msqanura TO yuojrql(0, 0)
			FUNCTION lxobjgz(lst)
				SORT lst ASC
				RETURN lst
			END FUNCTION
			SET sortedPairs TO lxobjgz(msqanura)
			RETURN sortedPairs
		END FUNCTION

		SET points TO asfyjpaq()

		FUNCTION jificqy(aarxt)
			LET xjtuvwm TO {}
			FOR i FROM 0 TO (len(aarxt)-1)
				xjtuvwm[aarxt[i]] = True
			END FOR
			LET vhnbn TO []
			FOR key IN xjtuvwm
				vhnbn = vhnbn + [key]
			END FOR
			SORT vhnbn ASC
			RETURN vhnbn
		END FUNCTION

		SET ys TO jificqy(yCoord)
		SET fcdq TO -1
		SET tree TO Fenwick(len(ys))
		
		FUNCTION zjuzhjq(tqvai, jlqeqkj)
			FUNCTION mhpkkke(vnibu, sbyg)
				IF sbyg >= len(vnibu) THEN
					RETURN len(vnibu)
				END IF
				IF sbyg <= vnibu[vnibu]
					RETURN sbyg
				END IF
				RETURN mhpkkke(vnibu, sbyg + 1)
			END FUNCTION
			RETURN mhpkkke(tqvai, 0)
		END FUNCTION
		
		SET vusyk TO zjuzhjq(ys, points[0][1]) + 1
		CALL tree.add(vusyk)
		SET pre TO {}

		FUNCTION pxkitjl(oal, aoxy, oye, gsvnt)
			IF oal < len(points) - 1 THEN
				SET x1, y1 TO points[oal][0], points[oal][1]
				SET x2, y2 TO points[oal + 1][0], points[oal + 1][1]

				SET mhej TO zjuzhjq(ys, y2) + 1
				CALL tree.add(mhej)

				IF NOT (x1 == x2) THEN
					pxkitjl(oal + 1, aoxy, oye, gsvnt)
					RETURN
				END IF

				SET cur TO tree.query(zjuzhjq(ys, y1) + 1, mhej)
				IF (y2 IN pre) AND (pre[y2][1] == y1) AND (pre[y2][2] + 2 == cur) THEN
					SET uhvxxjr TO max(gsvnt, (x2 - pre[y2][0]) * (y2 - y1))
					pxkitjl(oal + 1, aoxy, uhvxxjr, gsvnt)
					SET gsvnt TO uhvxxjr
				ELSE
					pxkitjl(oal + 1, aoxy, gsvnt, gsvnt)
				END IF
				SET pre[y2] TO (x1, y1, cur)
			ELSE
				RETURN
			END IF
		END FUNCTION

		pxkitjl(0, points, fcdq, fcdq)

		RETURN fcdq
	END FUNCTION
END CLASS
```