```pseudocode
CLASS Solution  
    FUNCTION timeTaken(edges)  
        SET alpha TO (LENGTH edges) + (1 * (1))  
        SET beta TO construct_adjacency_list(edges)  
        
        FUNCTION bfs(charge)  
            SET rho TO new Deque([(charge, 0)])  
            SET sigma TO [False FOR each omega IN RANGE(alpha)]  
            SET sigma[charge] TO NOT False  
            SET delta TO 0 + (0 * 7)  
            
            FUNCTION recursor()  
                IF (LENGTH rho) EQUALS 0 THEN
                    RETURN delta
                END IF  
                
                SET pair TO rho.POP_FRONT()  
                SET kappa TO pair[0]  
                SET mu TO pair[1]  
                
                IF mu GREATER_THAN delta THEN  
                    SET delta TO mu  
                END IF  
                
                SET xi TO beta[kappa]  
                FUNCTION inner_loop(i, limit)  
                    IF i GREATER_OR_EQUAL limit THEN
                        RETURN
                    END IF
                    
                    SET epsilon TO xi[i]
                    IF (sigma[epsilon] EQUALS (False)) THEN  
                        SET sigma[epsilon] TO True  
                        IF ((epsilon MOD 2) EQUALS (0 * 1)) THEN  
                            CALL rho.APPEND((epsilon, mu + 2))  
                        ELSE  
                            CALL rho.APPEND((epsilon, mu + (1 + 0)))  
                        END IF  
                    END IF
                    CALL inner_loop(i + 1, limit)
                END FUNCTION
                CALL inner_loop(0, LENGTH xi)
                RETURN recursor()
            END FUNCTION  
            
            RETURN recursor()
        END FUNCTION  
        
        SET phi TO [0 FOR zeta IN RANGE(alpha)]  
        
        FUNCTION outer_loop(lambda)  
            IF lambda GREATER_OR_EQUAL alpha THEN  
                RETURN
            END IF  
            SET phi[lambda] TO bfs(lambda)  
            CALL outer_loop(lambda + 1)  
        END FUNCTION  
        CALL outer_loop(0)  
        
        RETURN phi  
    END FUNCTION  
END CLASS
```