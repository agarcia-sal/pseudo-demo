```pseudocode
CLASS Solution
    FUNCTION shortestDistanceAfterQueries(n, queries)
        SET c1 TO empty mapping FROM integer TO list
        SET c2 TO 0
        WHILE c2 <= n - 2
            SET c3 TO (c2 + (1 * 1))
            SET c4 TO 1
            IF c1 HAS KEY c2 THEN
                APPEND (c3, c4) TO c1[c2]
            ELSE
                SET c1[c2] TO list containing (c3, c4)
            END IF
            SET c2 TO c2 + 1
        END WHILE

        FUNCTION dijkstra()
            SET c5 TO empty list
            SET c6 TO 0
            WHILE c6 < n
                APPEND (0.5 * (10 ^ 10)) TO c5
                SET c6 TO c6 + 1
            END WHILE
            SET c5[0] TO 0
            SET c7 TO list containing (0, 0)

            FUNCTION extract_minimum_heap()
                SET length_c7 TO LENGTH OF c7
                IF length_c7 = 0 THEN
                    RETURN NULL
                END IF
                SET c8 TO c7[0]
                REPLACE c7[0] WITH c7[length_c7 - 1]
                DELETE c7[length_c7 - 1]
                SET c9 TO 0
                WHILE (2 * c9 + 1) < LENGTH OF c7
                    SET c10 TO 2 * c9 + 1
                    SET c11 TO 2 * c9 + 2
                    SET c12 TO c10
                    IF c11 < LENGTH OF c7 AND c7[c11][0] < c7[c10][0]
                        SET c12 TO c11
                    END IF
                    IF c7[c9][0] <= c7[c12][0]
                        BREAK
                    END IF
                    SET c13 TO c7[c9]
                    SET c7[c9] TO c7[c12]
                    SET c7[c12] TO c13
                    SET c9 TO c12
                END WHILE
                RETURN c8
            END FUNCTION

            FUNCTION insert_heap(element)
                APPEND element TO c7
                SET c14 TO LENGTH OF c7 - 1
                WHILE c14 > 0
                    SET c15 TO (c14 - 1) // 2
                    IF c7[c15][0] <= c7[c14][0]
                        BREAK
                    END IF
                    SET c16 TO c7[c14]
                    SET c7[c14] TO c7[c15]
                    SET c7[c15] TO c16
                    SET c14 TO c15
                END WHILE
            END FUNCTION

            WHILE LENGTH OF c7 > 0
                SET c17, c18 TO extract_minimum_heap()
                IF c17 > c5[c18]
                    CONTINUE
                END IF
                SET c19 TO LENGTH OF c1[c18]
                SET c20 TO 0
                WHILE c20 < c19
                    SET c21, c22 TO c1[c18][c20]
                    SET c23 TO c17 + c22
                    IF c23 < c5[c21]
                        SET c5[c21] TO c23
                        CALL insert_heap((c23, c21))
                    END IF
                    SET c20 TO c20 + 1
                END WHILE
            END WHILE
            RETURN c5[n - 1]
        END FUNCTION

        SET c24 TO empty list
        SET c25 TO 0
        SET c26 TO LENGTH OF queries
        WHILE c25 < c26
            SET c27, c28 TO queries[c25]
            IF c1 HAS KEY c27 THEN
                APPEND (c28, 1) TO c1[c27]
            ELSE
                SET c1[c27] TO list containing (c28, 1)
            END IF
            APPEND dijkstra() TO c24
            SET c25 TO c25 + 1
        END WHILE
        RETURN c24
    END FUNCTION
END CLASS
```