```  
CLASS Solution  
    FUNCTION maximumPoints(enemyEnergies enemyList, currentEnergy power)  
        PROCEDURE recursiveLoop(index, accumulated)  
            IF (index + 1) == 0 THEN  
                RETURN accumulated  
            ELSE  
                LET divisionResult = (power - (power MOD enemyList[0])) / enemyList[0]  
                LET remainderValue = power MOD enemyList[0]  
                LET updatedAccumulated = accumulated + divisionResult  
                LET updatedPower = remainderValue + enemyList[index]  
                RETURN recursiveLoop(index - 1, updatedAccumulated)  
            END IF  
        END PROCEDURE  

        LET reorderedEnemyEnergies = enemyList  
        LET sortingIndex = 0  
        WHILE sortingIndex < (LENGTH(reorderedEnemyEnergies) - 1)  
            LET innerIndex = 0  
            WHILE innerIndex < (LENGTH(reorderedEnemyEnergies) - sortingIndex - 1)  
                IF NOT (reorderedEnemyEnergies[innerIndex] <= reorderedEnemyEnergies[innerIndex + 1]) THEN  
                    LET tempSwap = reorderedEnemyEnergies[innerIndex]  
                    reorderedEnemyEnergies[innerIndex] = reorderedEnemyEnergies[innerIndex + 1]  
                    reorderedEnemyEnergies[innerIndex + 1] = tempSwap  
                END IF  
                innerIndex = innerIndex + 1  
            END WHILE  
            sortingIndex = sortingIndex + 1  
        END WHILE  

        IF power < reorderedEnemyEnergies[0] THEN  
            RETURN 0  
        ELSE  
            RETURN recursiveLoop(LENGTH(reorderedEnemyEnergies) - 1, 0)  
        END IF  
    END FUNCTION  
END CLASS  
```