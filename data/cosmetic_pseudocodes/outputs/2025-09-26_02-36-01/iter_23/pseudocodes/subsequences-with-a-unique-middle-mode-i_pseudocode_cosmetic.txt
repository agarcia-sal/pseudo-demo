```  
CLASS Solution
    FUNCTION subsequencesWithMiddleMode(nums)
        SET M TO (10 ^ 9) + 7
        SET LEN TO LENGTH OF nums
        IF NOT (LEN >= (2 + 3)) THEN
            RETURN 0
        END IF

        FUNCTION generateCombs(arr, k)
            FUNCTION rec(startIdx, path, res)
                IF (LENGTH OF path) = k THEN
                    APPEND path TO res
                    RETURN
                END IF

                IF startIdx >= LENGTH OF arr THEN
                    RETURN
                END IF

                rec(startIdx + 1, CONCAT(path, [arr[startIdx]]), res)
                rec(startIdx + 1, path, res)
            END FUNCTION

            SET result TO []
            rec(0, [], result)
            RETURN result
        END FUNCTION

        SET subs TO generateCombs(nums, 5)
        SET ans TO 0

        FUNCTION countFreq(lst)
            SET hm TO {}
            FOR elem IN lst DO
                IF elem IN hm THEN
                    SET hm[elem] TO hm[elem] + 1
                ELSE
                    SET hm[elem] TO 1
                END IF
            END FOR
            RETURN hm
        END FUNCTION

        FUNCTION anyViolation(freqMap, midElem, midCnt)
            FOR key IN freqMap DO
                SET val TO freqMap[key]
                IF ((key != midElem) AND (val >= midCnt)) THEN
                    RETURN true
                END IF
            END FOR
            RETURN false
        END FUNCTION

        FUNCTION processSubs(idx, acc)
            IF idx = LENGTH OF subs THEN
                RETURN acc
            END IF
            SET currentSub TO subs[idx]
            SET frequencies TO countFreq(currentSub)
            SET mElem TO currentSub[2]
            SET mCount TO frequencies[mElem]
            SET flag TO NOT anyViolation(frequencies, mElem, mCount)
            IF flag THEN
                RETURN processSubs(idx + 1, acc + 1)
            ELSE
                RETURN processSubs(idx + 1, acc)
            END IF
        END FUNCTION

        RETURN (processSubs(0, 0)) MODULO M
    END FUNCTION
END CLASS
```