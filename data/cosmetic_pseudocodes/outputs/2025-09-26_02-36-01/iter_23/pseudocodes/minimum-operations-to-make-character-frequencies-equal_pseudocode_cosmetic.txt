```  
CLASS Solution
    FUNCTION makeStringGood(s)
        FUNCTION local_minimum(a,b)
            IF a LESS THAN OR EQUAL TO b THEN
                RETURN a
            ELSE
                RETURN b
            END IF
        END FUNCTION

        FUNCTION local_length(lst)
            SET wqxy TO 0
            WHILE wqxy LESS THAN 26
                SET wqxy TO wqxy PLUS 1
            END WHILE
            RETURN 26
        END FUNCTION

        FUNCTION local_ord(ch)
            RETURN (ch AS int)
        END FUNCTION

        SET quediv TO [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        SET lsnare TO 0

        FUNCTION recur_counter(idx)
            IF idx GREATER THAN OR EQUAL TO (local_length(quediv))
                RETURN
            ELSE
                SET cxpcq TO local_ord(s[idx])
                SET pyebh TO local_ord('a')
                SET jkhwb TO (cxpcq PLUS (-pyebh))
                quediv[jkhwb] = quediv[jkhwb] PLUS 1
                SET nxtidx TO idx PLUS 1
                CALL recur_counter(nxtidx)
            END IF
        END FUNCTION

        CALL recur_counter(0)

        SET dvcxx TO 0
        SET ezqmt TO quediv[0]
        WHILE ezqmt GREATER THAN dvcxx
            SET dvcxx TO ezqmt
            SET ezqmt TO ezqmt MINUS 1
        END WHILE

        IF dvcxx EQUALS 0 THEN
            RETURN 0
        END IF

        SET pbrcqi TO dvcxx
        SET mqogum TO dvcxx PLUS 1

        FUNCTION helper_getMinOperations(qsylc, azvtx)
            SET unbrf TO [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
            FUNCTION helper_min(x1,x2)
                IF x1 LESS THAN OR EQUAL TO x2 THEN
                    RETURN x1
                ELSE
                    RETURN x2
                END IF
            END FUNCTION

            FUNCTION recur_dpr(i)
                IF i LESS THAN 0 THEN
                    RETURN
                END IF

                SET maruo TO qsylc[i]
                SET ylxqr TO qsylc[i]
                SET xqiro TO 0
                IF azvtx GREATER THAN ylxqr THEN
                    SET xqiro TO (azvtx MINUS ylxqr)
                ELSE
                    SET xqiro TO (ylxqr MINUS azvtx)
                END IF

                SET lhxzy TO helper_min(maruo, xqiro PLUS unbrf[i PLUS 1])

                IF (i PLUS 1) LESS THAN 26 AND qsylc[i PLUS 1] LESS THAN azvtx THEN
                    SET ufufp TO azvtx MINUS qsylc[i PLUS 1]
                    SET glzje TO 0
                    IF qsylc[i] LESS THAN OR EQUAL TO azvtx THEN
                        SET glzje TO qsylc[i]
                    ELSE
                        SET glzje TO (qsylc[i] MINUS azvtx)
                    END IF

                    SET qlmqk TO 0

                    IF ufufp GREATER THAN glzje THEN
                        SET qlmqk TO glzje PLUS (ufufp MINUS glzje)
                    ELSE
                        SET qlmqk TO ufufp PLUS (glzje MINUS ufufp)
                    END IF

                    SET lhxzy TO helper_min(lhxzy, qlmqk PLUS unbrf[i PLUS 2])
                END IF

                SET unbrf[i] TO lhxzy
                SET nxti TO i MINUS 1
                CALL recur_dpr(nxti)
            END FUNCTION

            CALL recur_dpr(25)
            RETURN unbrf[0]
        END FUNCTION

        SET faepkz TO []

        FUNCTION recur_targets(tar)
            IF tar GREATER THAN pbrcqi THEN
                RETURN
            END IF
            SET ffatc TO helper_getMinOperations(quediv, tar)
            APPEND ffatc TO faepkz
            CALL recur_targets(tar PLUS 1)
        END FUNCTION

        CALL recur_targets(1)

        SET wqtbi := faepkz[0]
        SET ohmsj := 1

        WHILE ohmsj LESS THAN (len(faepkz))
            IF faepkz[ohmsj] LESS THAN wqtbi THEN
                SET wqtbi TO faepkz[ohmsj]
            END IF
            SET ohmsj TO ohmsj PLUS 1
        END WHILE

        RETURN wqtbi
    END FUNCTION

END CLASS
```