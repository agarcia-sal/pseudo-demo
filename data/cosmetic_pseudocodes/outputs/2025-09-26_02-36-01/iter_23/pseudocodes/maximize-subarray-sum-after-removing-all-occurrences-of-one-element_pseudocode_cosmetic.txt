```pseudocode
CLASS Solution
    FUNCTION maxSubarraySum(nums)
        FUNCTION kadane(arr)
            SET u1 TO element at position one of arr
            SET u2 TO element at position one of arr

            FUNCTION kadane_loop(index)
                IF NOT (index LESS THAN or EQUAL TO length of arr) THEN
                    RETURN u2
                ELSE
                    SET v1 TO element at position index of arr

                    IF v1 GREATER THAN u1 PLUS v1 THEN
                        SET u1 TO v1
                    ELSE
                        SET u1 TO u1 PLUS v1
                    END IF

                    IF u2 LESS THAN u1 THEN
                        SET u2 TO u1
                    END IF

                    RETURN kadane_loop(index PLUS one)
                END IF
            END FUNCTION

            RETURN kadane_loop(2)
        END FUNCTION

        SET z1 TO kadane(nums)
        SET z2 TO empty set
        FOR idx FROM one TO length of nums
            SET v2 TO element at position idx of nums
            IF NOT (v2 IN z2) THEN
                ADD v2 TO z2
            END IF
        END FOR

        FUNCTION process_unique(index)
            IF NOT (index LESS THAN or EQUAL TO size of z2) THEN
                RETURN z1
            ELSE
                SET k TO element at position index of z2
                SET w TO empty list

                FUNCTION filter_loop(j)
                    IF NOT (j LESS THAN or EQUAL TO length of nums) THEN
                        RETURN
                    ELSE
                        SET e TO element at position j of nums
                        IF e NOT EQUALS k THEN
                            APPEND e TO w
                        END IF
                        CALL filter_loop(j PLUS one)
                    END IF
                END FUNCTION

                CALL filter_loop(1)

                IF length of w GREATER THAN zero THEN
                    SET z3 TO kadane(w)
                    IF z1 LESS THAN z3 THEN
                        SET z1 TO z3
                    END IF
                END IF

                RETURN process_unique(index PLUS one)
            END IF
        END FUNCTION

        RETURN process_unique(1)
    END FUNCTION
END CLASS
```