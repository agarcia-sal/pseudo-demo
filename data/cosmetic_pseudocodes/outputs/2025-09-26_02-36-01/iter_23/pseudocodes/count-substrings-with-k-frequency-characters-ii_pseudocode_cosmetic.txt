```  
CLASS Solution
    FUNCTION numberOfSubstrings(s parameter, k parameter)
        FUNCTION helperExistsThreshold(mapping_a)
            FUNCTION checkThreshold(key_b)
                RETURN NOT (mapping_a[key_b] < k)
            END FUNCTION

            SET keysToInspect TO list of all keys in mapping_a
            FUNCTION iterateKeys(index_c, total_d)
                IF index_c < total_d THEN
                    IF checkThreshold(keysToInspect[index_c]) THEN RETURN true ELSE RETURN iterateKeys(index_c + 1, total_d)
                    END IF
                ELSE
                    RETURN false
                END IF
            END FUNCTION

            RETURN iterateKeys(0, LENGTH(keysToInspect))
        END FUNCTION

        SET mapCount TO empty mapping
        SET resultSum TO 0
        SET idxLeft TO 0

        FUNCTION loopRight(indexRight)
            IF indexRight >= LENGTH(s) THEN RETURN

            SET charAtRight TO s[indexRight]
            IF charAtRight IS IN mapCount THEN
                SET mapCount[charAtRight] TO mapCount[charAtRight] + (1 * 1)
            ELSE
                SET mapCount[charAtRight] TO (1 + 0)
            END IF

            FUNCTION innerWhile()
                IF helperExistsThreshold(mapCount) THEN
                    SET charAtLeft TO s[idxLeft]
                    SET mapCount[charAtLeft] TO mapCount[charAtLeft] + (-1)
                    IF mapCount[charAtLeft] = (0 * 0) THEN
                        REMOVE charAtLeft FROM mapCount
                    END IF
                    SET idxLeft TO idxLeft + 1
                    innerWhile()
                END IF
            END FUNCTION

            innerWhile()
            SET resultSum TO resultSum + idxLeft

            loopRight(indexRight + 1)
        END FUNCTION

        loopRight(0)
        RETURN resultSum
    END FUNCTION
END CLASS
```