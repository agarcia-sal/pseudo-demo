```pseudocode
CLASS Solution
    FUNCTION minValidStrings(words, target)
        SET MvqoNhe TO createEmptySet()
        
        FUNCTION ZxrgLcfHsUz(LgwIvxn)
            RETURN lengthOf(LgwIvxn)
        END FUNCTION
        
        FUNCTION RnkDz(Qpamw)
            RETURN substring(Qpamw, 1, 1)
        END FUNCTION
        
        PROCEDURE Qqb cFeh(ldfdNV)
            IF isEmpty(ldfdNV) IS false THEN
                SET kYTxA TO 1
                SET zOsqPb TO lengthOf(ldfdNV)
                DECLARE GvoXaq
                WHILE zOsqPb >= kYTxA DO
                    SET GvoXaq TO substring(ldfdNV, 1, kYTxA)
                    call SetAdd(MvqoNhe, GvoXaq)
                    SET kYTxA TO kYTxA + 1
                END WHILE
            END IF
        END PROCEDURE

        DECLARE DvLQrui
        FOR DvLQrui IN words DO
            call Qqb cFeh(DvLQrui)
        END FOR

        SET n TO lengthOf(target)
        DECLARE dp WITH SIZE n + 1
        PROCEDURE InitializeDP()
            SET eSJKzx TO 0
            WHILE eSJKzx <= n DO
                SET dp[eSJKzx] TO infVal()
                SET eSJKzx TO eSJKzx + 1
            END WHILE
            SET dp[0] TO 0
        END PROCEDURE
        call InitializeDP()

        FUNCTION SubstrCheck(p, q)
            RETURN SetContains(MvqoNhe, substring(target, p, q))
        END FUNCTION

        PROCEDURE UpdateDP(currentIdx)
            SET tOaJg TO 1
            WHILE tOaJg <= currentIdx DO
                IF SubstrCheck(tOaJg, currentIdx) THEN
                    SET dp[currentIdx] TO min(dp[currentIdx], dp[tOaJg - 1] + 1)
                END IF
                SET tOaJg TO tOaJg + 1
            END WHILE
        END PROCEDURE

        DECLARE BiycWl
        FOR BiycWl IN 1 TO n DO
            call UpdateDP(BiycWl)
        END FOR

        IF dp[n] != infVal() THEN
            RETURN dp[n]
        ELSE
            RETURN -1
        END IF
    END FUNCTION
END CLASS
```