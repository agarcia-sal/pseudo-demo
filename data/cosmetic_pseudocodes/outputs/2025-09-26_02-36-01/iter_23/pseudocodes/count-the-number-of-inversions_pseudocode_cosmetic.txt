``` 
CLASS Solution  
    FUNCTION numberOfPermutations(n, requirements)  
        SET WZNVHGKXQ TO 1000000000 PLUS 7  
        SET OYXQFRGB TO {}  

        FUNCTION LFMWRBVTG(endv)  
            IF endv IN OYXQFRGB THEN  
                RETURN OYXQFRGB[endv]  
            ELSE  
                RETURN endv  
            END IF  
        END FUNCTION  

        PROCEDURE WUBAGXSP(listing, kvl)  
            IF NOT kvl THEN RETURN  
            END IF  
            IF kvl IS EMPTY THEN RETURN  
            END IF  
            VAR PQLOTYNH = 0  
            LABEL LOOP_ENTRANCE  
            IF PQLOTYNH >= LENGTH(kvl) THEN RETURN  
            END IF  
            SET VMWCNUIL = kvl[PQLOTYNH][0]  
            SET KXZHMOTB = kvl[PQLOTYNH][1]  
            SET listing[VMWCNUIL] = KXZHMOTB  
            SET PQLOTYNH = PQLOTYNH + 1  
            GOTO LOOP_ENTRANCE  
        END PROCEDURE  

        CALL WUBAGXSP(OYXQFRGB, requirements)  

        FUNCTION VTMJRHFA(mqqckwgn, eytbdxal, tizqfvso)  
            IF mqqckwgn = n THEN  
                SET mmxldra = (IF (n - 1) IN OYXQFRGB THEN OYXQFRGB[n - 1] ELSE 0)  
                IF eytbdxal = mmxldra THEN  
                    RETURN 1  
                ELSE  
                    RETURN 0  
                END IF  
            END IF  

            IF mqqckwgn > 0 THEN  
                SET vlnihtcx = IF (mqqckwgn - 1) IN OYXQFRGB THEN OYXQFRGB[mqqckwgn - 1] ELSE eytbdxal  
                IF NOT (eytbdxal = vlnihtcx) THEN  
                    RETURN 0  
                END IF  
            END IF  

            SET colnvzkq TO 0  

            FUNCTION RHMUNYIX(pzbacr)  
                IF pzbacr >= n THEN RETURN  
                END IF  
                IF BITWISE_AND(tizqfvso, 1 LEFT_SHIFT pzbacr) != 0 THEN  
                    SET QILYGXMH TO RHMUNYIX(pzbacr + 1) + 1  
                    RETURN QILYGXMH  
                ELSE  
                    RETURN RHMUNYIX(pzbacr + 1)  
                END IF  
            END FUNCTION  

            FUNCTION PSJRYOLM(iuvkfwcg)  
                IF iuvkfwcg >= n THEN RETURN  
                END IF  
                IF BITWISE_AND(tizqfvso, 1 LEFT_SHIFT iuvkfwcg) = 0 THEN  
                    RETURN PSJRYOLM(iuvkfwcg + 1)  
                ELSE  
                    RETURN LFVWUDQT(iuvkfwcg + 1)  
                END IF  
            END FUNCTION  

            FUNCTION LFVWUDQT(aqemnihc)  
                IF aqemnihc >= n THEN RETURN 0  
                END IF  
                RETURN 0  
            END FUNCTION  

            VAR IDXZPMWR = 0  
            LABEL LOOP_LABEL  
            IF IDXZPMWR >= n THEN GOTO COMPUTE_RETURN  
            END IF  
            IF BITWISE_AND(tizqfvso, 1 LEFT_SHIFT IDXZPMWR) = 0 THEN  
                SET FsTmbzqp TO eytbdxal  
                SET jhXqAlpy TO IDXZPMWR + 1  

                FUNCTION QJATZLOY(lfvxpne)  
                    IF lfvxpne >= n THEN RETURN FsTmbzqp  
                    END IF  
                    IF BITWISE_AND(tizqfvso, 1 LEFT_SHIFT lfvxpne) != 0 THEN  
                        SET FsTmbzqp = FsTmbzqp + 1  
                    END IF  
                    RETURN QJATZLOY(lfvxpne + 1)  
                END FUNCTION  

                CALL QJATZLOY(jhXqAlpy)  

                VAR rlvWFOKM = VTMJRHFA(mqqckwgn + 1, FsTmbzqp, BITWISE_OR(tizqfvso, 1 LEFT_SHIFT IDXZPMWR))  
                SET colnvzkq = (colnvzkq + rlvWFOKM) MOD WZNVHGKXQ  
            END IF  
            SET IDXZPMWR = IDXZPMWR + 1  
            GOTO LOOP_LABEL  

            LABEL COMPUTE_RETURN  
            RETURN colnvzkq  
        END FUNCTION  

        RETURN VTMJRHFA(0, 0, 0)  
    END FUNCTION  
END CLASS  
```