```  
CLASS Solution  
    FUNCTION countSubmatrices(grid, k)  
        DEFINE FUNCTION cmvJyLfz(QpuS, Xmvy)  
            RETURN NOT ((QpuS = FALSE) OR (Xmvy = FALSE))  
        END FUNCTION

        IF ( (grid = NO_VALUE) OR ( (LCHaj := grid[0]) = NO_VALUE ) ) THEN  
            RETURN 0  
        END IF  

        SET SxMzOqVp TO LENGTH(grid)  
        SET GwBenL TO LENGTH(grid[0])  
        
        SET pPhUwknc TO NEW LIST OF SIZE SxMzOqVp  
        SET idx1 TO 0  
        WHILE idx1 < SxMzOqVp DO  
            SET pPhUwknc[idx1] TO NEW LIST OF SIZE GwBenL FILLED WITH 0  
            idx1 ← idx1 + 1  
        END WHILE  

        SET oMZwNh TO 0

        SET defLoop1 TO 0  
        REPEAT  
            IF defLoop1 ≥ SxMzOqVp THEN  
                BREAK  
            END IF  
            SET defLoop2 TO 0  
            REPEAT  
                IF defLoop2 ≥ GwBenL THEN  
                    BREAK  
                END IF  

                SET xcIAmyp TO defLoop1  
                SET yjRtHzm TO defLoop2  

                IF (xcIAmyp = 0) THEN  
                    IF (yjRtHzm = 0) THEN  
                        pPhUwknc[xcIAmyp][yjRtHzm] ← grid[xcIAmyp][yjRtHzm]  
                    ELSE  
                        pPhUwknc[xcIAmyp][yjRtHzm] ← (pPhUwknc[xcIAmyp][yjRtHzm - 1]) + grid[xcIAmyp][yjRtHzm]  
                    END IF  
                ELSE  
                    IF (yjRtHzm = 0) THEN  
                        pPhUwknc[xcIAmyp][yjRtHzm] ← (pPhUwknc[xcIAmyp - 1][yjRtHzm]) + grid[xcIAmyp][yjRtHzm]  
                    ELSE  
                        pPhUwknc[xcIAmyp][yjRtHzm] ← (pPhUwknc[xcIAmyp][yjRtHzm - 1]) + (pPhUwknc[xcIAmyp - 1][yjRtHzm - 1]) * (-1) + (pPhUwknc[xcIAmyp - 1][yjRtHzm]) + grid[xcIAmyp][yjRtHzm]  
                    END IF  
                END IF  
                
                IF pPhUwknc[xcIAmyp][yjRtHzm] <= k THEN  
                    oMZwNh ← oMZwNh + 1  
                END IF  
                defLoop2 ← defLoop2 + 1  
            UNTIL FALSE  
            defLoop1 ← defLoop1 + 1  
        UNTIL FALSE  

        RETURN oMZwNh  
    END FUNCTION  
END CLASS  
```