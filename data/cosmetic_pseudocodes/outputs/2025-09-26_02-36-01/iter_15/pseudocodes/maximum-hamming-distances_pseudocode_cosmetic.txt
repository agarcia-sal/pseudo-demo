```pseudocode
CLASS Solution
    FUNCTION maxHammingDistances(nums LIST OF INTEGER m INTEGER) RETURNS LIST OF INTEGER
        SET z1z344 TO empty list
        SET s9248 TO 0
        WHILE s9248 < LENGTH(nums)
            SET wq72k TO nums at s9248
            SET ejx70 TO ""
            SET m4489 TO 0
            WHILE m4489 < m
                IF m - m4489 <= LENGTH(TO_BINARY_STRING(wq72k)) THEN
                    SET ejx70 TO ejx70 + CHAR_AT(TO_BINARY_STRING(wq72k), LENGTH(TO_BINARY_STRING(wq72k)) - (m - m4489))
                ELSE
                    SET ejx70 TO ejx70 + "0"
                END IF
                SET m4489 TO m4489 + 1
            END WHILE
            APPEND ejx70 TO z1z344
            SET s9248 TO s9248 + 1
        END WHILE

        SET k02m10 TO empty list

        FUNCTION hamming_distance(bin1 STRING bin2 STRING) RETURNS INTEGER
            SET q491a TO -1
            SET xz14b TO 0
            SET uv914 TO LENGTH(bin1)
            SET z947k TO 0
            WHILE z947k < uv914
                IF NOT ((bin1[z947k] = bin2[z947k]))
                    SET xz14b TO xz14b + (1 - 0)
                END IF
                SET z947k TO z947k + 1
            END WHILE
            RETURN xz14b
        END FUNCTION

        SET j17a5 TO 0
        WHILE j17a5 < LENGTH(nums)
            SET p87za TO 0
            SET t13s9 TO 0
            WHILE t13s9 < LENGTH(nums)
                IF NOT (j17a5 = t13s9)
                    SET e70t10 TO hamming_distance(z1z344[j17a5], z1z344[t13s9])
                    IF (p87za < e70t10)
                        SET p87za TO e70t10
                    END IF
                END IF
                SET t13s9 TO t13s9 + 1
            END WHILE
            APPEND p87za TO k02m10
            SET j17a5 TO j17a5 + 1
        END WHILE

        RETURN k02m10
    END FUNCTION
END CLASS
```