```pseudocode
CLASS Solution
	FUNCTION countPairs(nums)
		PROCEDURE inplaceSort(arr)
			VAR u = 1
			WHILE u < LENGTH(arr)
				VAR v = u
				WHILE v > 0 AND arr[v - 1] > arr[v]
					VAR w = arr[v]
					arr[v] = arr[v - 1]
					arr[v - 1] = w
					v = v - 1
				END WHILE
				u = u + 1
			END WHILE
		END PROCEDURE

		CALL inplaceSort(nums)

		VAR b25 = 0
		VAR t1u = DEFAULT_DICT(0)

		VAR n3r = 0
		WHILE n3r < LENGTH(nums)
			VAR zqf = SET()
			CALL zqf.ADD(nums[n3r])

			VAR ksr = STR(nums[n3r])
			VAR l87 = []
			VAR idxh = 0
			WHILE idxh < LENGTH(ksr)
				l87.ADD(ksr[idxh])
				idxh = idxh + 1
			END WHILE
			VAR v04 = LENGTH(l87)

			VAR yx9 = 0
			WHILE yx9 < v04
				VAR ekc = 0
				WHILE ekc < yx9
					// Swap positions ekc and yx9
					VAR txv = l87[ekc]
					l87[ekc] = l87[yx9]
					l87[yx9] = txv

					VAR vo2 = ""
					VAR j5p = 0
					WHILE j5p < v04
						vo2 = vo2 + l87[j5p]
						j5p = j5p + 1
					END WHILE
					CALL zqf.ADD(INT(vo2))

					VAR m1z = ekc + 1
					WHILE m1z < v04
						VAR wl0 = ekc + 1
						WHILE wl0 < m1z
							// Swap positions wl0 and m1z
							VAR lku = l87[wl0]
							l87[wl0] = l87[m1z]
							l87[m1z] = lku

							VAR rbi = ""
							VAR gto = 0
							WHILE gto < v04
								rbi = rbi + l87[gto]
								gto = gto + 1
							END WHILE
							CALL zqf.ADD(INT(rbi))

							// Swap back positions wl0 and m1z
							VAR yx5 = l87[wl0]
							l87[wl0] = l87[m1z]
							l87[m1z] = yx5

							wl0 = wl0 + 1
						END WHILE
						m1z = m1z + 1
					END WHILE

					// Swap back positions ekc and yx9
					VAR atb = l87[ekc]
					l87[ekc] = l87[yx9]
					l87[yx9] = atb

					ekc = ekc + 1
				END WHILE
				yx9 = yx9 + 1
			END WHILE

			VAR gz6 = 0
			WHILE gz6 < LENGTH(zqf)
				VAR xd8 = zqf.GET_ELEMENT_AT(gz6)
				b25 = b25 + t1u[xd8]
				gz6 = gz6 + 1
			END WHILE

			t1u[nums[n3r]] = t1u[nums[n3r]] + 1

			n3r = n3r + 1
		END WHILE

		RETURN b25
	END FUNCTION
END CLASS
```