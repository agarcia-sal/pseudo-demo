```pseudocode
CLASS Solution
    FUNCTION countPrefixSuffixPairs(words)
        SET aCountAccumulator TO 0
        SET frequencyMap TO an empty map with default integer value 0

        SET reversedWords TO empty list
        SET idxIterator TO LENGTH(words) - 1
        WHILE idxIterator >= 0
            APPEND words[idxIterator] TO reversedWords
            SET idxIterator TO idxIterator - 1
        END WHILE

        SET outerIndex TO 0
        WHILE outerIndex < LENGTH(reversedWords)
            SET currentWord TO reversedWords[outerIndex]

            FOR EACH recordedKey IN frequencyMap
                SET lengthWord TO LENGTH(currentWord)
                SET lengthKey TO LENGTH(recordedKey)

                SET prefixOfKey TO SUBSTRING(recordedKey, 0, lengthWord)
                SET suffixOfKey TO SUBSTRING(recordedKey, lengthKey - lengthWord, lengthKey)

                SET conditionCheck1 TO (currentWord = prefixOfKey)
                SET conditionCheck2 TO (currentWord = suffixOfKey)

                IF conditionCheck1 AND conditionCheck2 THEN
                    SET aCountAccumulator TO aCountAccumulator + frequencyMap[recordedKey]
                END IF
            END FOR

            SET frequencyMap[currentWord] TO frequencyMap[currentWord] + 1
            SET outerIndex TO outerIndex + 1
        END WHILE

        RETURN aCountAccumulator
    END FUNCTION
END CLASS
```