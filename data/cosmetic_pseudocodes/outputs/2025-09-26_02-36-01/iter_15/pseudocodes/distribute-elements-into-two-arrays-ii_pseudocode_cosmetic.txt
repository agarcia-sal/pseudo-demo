```pseudocode
CLASS Solution
    FUNCTION resultArray(nums)
        SET uV TO LIST_CONTAINING(nums[0])
        SET rH TO LIST_CONTAINING(nums[1])
        SET jL TO LIST_CONTAINING(nums[0])
        SET qK TO LIST_CONTAINING(nums[1])

        FUNCTION greaterCount(Nx, Yz)
            FUNCTION binarySearchRight(Wa, Wx, Wn, Wm)
                IF Wn GREATER_THAN_OR_EQUAL_TO Wm THEN
                    RETURN Wn
                END IF
                SET Wp TO (Wx + Wn) DIV 2
                IF Wa[Wp] LESS_OR_EQUAL_THAN Yz THEN
                    RETURN binarySearchRight(Wa, Wp + 1, Wn, Wm)
                ELSE
                    RETURN binarySearchRight(Wa, Wx, Wp, Wm)
                END IF
            END FUNCTION

            SET Wg TO binarySearchRight(Nx, 0, LENGTH(Nx), LENGTH(Nx))
            RETURN LENGTH(Nx) MINUS Wg
        END FUNCTION

        SET iM TO 2
        WHILE iM LESS_OR_EQUAL_THAN LENGTH(nums) MINUS 1
            SET Tl TO nums[iM]
            SET Xf TO greaterCount(jL, Tl)
            SET Eh TO greaterCount(qK, Tl)

            IF Xf GREATER_THAN Eh THEN
                CALL uV.APPEND(Tl)
                CALL insertSorted(jL, Tl)
            ELSE
                IF Xf LESS_THAN Eh THEN
                    CALL rH.APPEND(Tl)
                    CALL insertSorted(qK, Tl)
                ELSE
                    IF LENGTH(uV) LESS_OR_EQUAL_THAN LENGTH(rH) THEN
                        CALL uV.APPEND(Tl)
                        CALL insertSorted(jL, Tl)
                    ELSE
                        CALL rH.APPEND(Tl)
                        CALL insertSorted(qK, Tl)
                    END IF
                END IF
            END IF
            SET iM TO iM + 1
        END WHILE

        RETURN uV CONCATENATED_WITH rH
    END FUNCTION

    FUNCTION insertSorted(Xb, Zt)
        SET leftP TO 0
        SET rightP TO LENGTH(Xb)

        WHILE leftP LESS_THAN rightP
            SET midP TO (leftP + rightP) DIV 2
            IF Xb[midP] LESS_THAN_OR_EQUAL_THAN Zt THEN
                SET leftP TO midP + 1
            ELSE
                SET rightP TO midP
            END IF
        END WHILE

        CALL Xb.INSERT_AT(leftP, Zt)
    END FUNCTION
END CLASS
```