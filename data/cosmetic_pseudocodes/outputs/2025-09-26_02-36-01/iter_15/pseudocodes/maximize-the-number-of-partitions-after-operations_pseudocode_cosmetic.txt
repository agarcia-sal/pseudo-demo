```pseudocode
CLASS Solution
    FUNCTION maxPartitionsAfterOperations(s parameter k parameter)
        FUNCTION max_partitions(s parameter k parameter)
            SET alpha_count TO 0
            SET distinct_set TO empty set
            DEFINE index x AS 0
            WHILE x < LENGTH(s parameter)
                SET ch TO s parameter[x]
                IF NOT (k parameter <= SIZE(distinct_set)) THEN
                    ADD ch TO distinct_set
                ELSE 
                    IF ch IN distinct_set THEN
                        # no operation, proceed directly
                        # jump to next iteration
                    ELSE
                        SET alpha_count TO alpha_count + 1
                        SET distinct_set TO { ch }
                    END IF
                END IF
                SET x TO x + 1
            END WHILE
            IF NOT (SIZE(distinct_set) == 0) THEN
                SET alpha_count TO alpha_count + 1
            END IF
            RETURN alpha_count
        END FUNCTION

        SET max_parts TO max_partitions(s parameter k parameter)
        SET pos_i TO 0
        WHILE pos_i <= LENGTH(s parameter) - 1
            SET letters TO "abcdefghijklmnopqrstuvwxyz"
            SET idx_j TO 0
            WHILE idx_j < LENGTH(letters)
                SET candidate_char TO letters[idx_j]
                IF candidate_char == s parameter[pos_i] THEN
                    SET idx_j TO idx_j + 1
                    CONTINUE
                END IF
                SET prefix TO ""
                SET suffix TO ""
                # build prefix as substring of s parameter from 0 up to pos_i-1 inclusive if pos_i > 0
                IF pos_i > 0 THEN
                    SET p TO 0
                    WHILE p <= pos_i - 1
                        SET prefix TO prefix + s parameter[p]
                        SET p TO p + 1
                    END WHILE
                END IF
                # build suffix as substring from pos_i + 1 to end
                SET q TO pos_i + 1
                WHILE q < LENGTH(s parameter)
                    SET suffix TO suffix + s parameter[q]
                    SET q TO q + 1
                END WHILE
                SET new_s TO prefix + candidate_char + suffix
                SET candidate_count TO max_partitions(new_s k parameter)
                IF candidate_count > max_parts THEN
                    SET max_parts TO candidate_count
                END IF
                SET idx_j TO idx_j + 1
            END WHILE
            SET pos_i TO pos_i + 1
        END WHILE
        RETURN max_parts
    END FUNCTION
END CLASS
```