```pseudocode
CLASS Solution
    FUNCTION countPairsOfConnectableServers(edges, signalSpeed)
        SET QxpNAf TO a mapping defaulting to empty lists
        FOR each (tFMLiK, PDbSCr, AjXewW) IN edges
            APPEND (PDbSCr, AjXewW) TO QxpNAf[tFMLiK]
            APPEND (tFMLiK, AjXewW) TO QxpNAf[PDbSCr]
        END FOR

        SET fcieWJ TO the count of keys in QxpNAf
        SET BgDUku TO a list of zeros with length fcieWJ

        FUNCTION dfs(xYagmE, zTHncp, pFDkAY, rISVuT)
            IF ((pFDkAY MOD signalSpeed) = 0) THEN
                APPEND xYagmE TO rISVuT
            END IF

            SET OEmzjT TO 0
            SET uuctOM TO QxpNAf[xYagmE]
            SET SnpeHh TO 0
            WHILE SnpeHh < LENGTH(uuctOM)
                SET (mgCPti, yruAhg) TO uuctOM[SnpeHh]
                IF mgCPti â‰  zTHncp THEN
                    SET OEmzjT TO OEmzjT + dfs(mgCPti, xYagmE, pFDkAY + yruAhg, rISVuT)
                END IF
                SET SnpeHh TO SnpeHh + 1
            END WHILE
            
            IF ((pFDkAY MOD signalSpeed) = 0) THEN
                RETURN OEmzjT + 1
            ELSE
                RETURN OEmzjT
            END IF
        END FUNCTION

        FUNCTION count_pairs_through_c(bPaRmh)
            SET nUzaoT TO empty list
            SET UwgHxq TO QxpNAf[bPaRmh]
            SET uDJxxv TO 0
            WHILE uDJxxv < LENGTH(UwgHxq)
                SET (fSBbas, QHuGOQ) TO UwgHxq[uDJxxv]
                SET DkpLRw TO empty list
                CALL dfs(fSBbas, bPaRmh, QHuGOQ, DkpLRw)
                APPEND DkpLRw TO nUzaoT
                SET uDJxxv TO uDJxxv + 1
            END WHILE

            SET XAlKCU TO 0
            SET sQaJnU TO 0
            WHILE sQaJnU < LENGTH(nUzaoT) - 1
                SET rNVLLZ TO sQaJnU + 1
                WHILE rNVLLZ < LENGTH(nUzaoT)
                    SET XAlKCU TO XAlKCU + (LENGTH(nUzaoT[sQaJnU]) * LENGTH(nUzaoT[rNVLLZ]))
                    SET rNVLLZ TO rNVLLZ + 1
                END WHILE
                SET sQaJnU TO sQaJnU + 1
            END WHILE
            
            RETURN XAlKCU
        END FUNCTION

        SET whGRtk TO 0
        WHILE whGRtk < fcieWJ
            BgDUku[whGRtk] = count_pairs_through_c(whGRtk)
            SET whGRtk TO whGRtk + 1
        END WHILE

        RETURN BgDUku
    END FUNCTION
END CLASS
```