```pseudocode
CLASS Solution
    FUNCTION shortestSubstrings(arr)
        DECLARE countMap AS DICTIONARY WITH DEFAULT 0
        DECLARE qXyzi AS INTEGER
        DECLARE yBwuj AS INTEGER
        DECLARE VplKd AS STRING
        DECLARE AWnqc AS STRING
        DECLARE VcPHe AS INTEGER
        DECLARE LtrAd AS INTEGER
        DECLARE zXoPq AS STRING
        DECLARE hRlTw AS STRING
        DECLARE resultList AS LIST
        SET resultList TO EMPTY LIST

        SET aBfmR TO 0
        WHILE aBfmR < LENGTH(arr)
            SET VcPHe TO LENGTH(arr[aBfmR])
            SET hRlTw TO arr[aBfmR]
            SET VplKd TO 0
            WHILE VplKd < VcPHe
                SET LtrAd TO VplKd + 1
                WHILE LtrAd <= VcPHe
                    SET zXoPq TO SUBSTRING(hRlTw, VplKd, LtrAd - 1)
                    countMap[zXoPq] = countMap[zXoPq] + 1
                    SET LtrAd TO LtrAd + 1
                END WHILE
                SET VplKd TO VplKd + 1
            END WHILE
            SET aBfmR TO aBfmR + 1
        END WHILE

        SET qXyzi TO 0
        WHILE qXyzi < LENGTH(arr)
            SET yBwuj TO LENGTH(arr[qXyzi])
            SET AWnqc TO arr[qXyzi]
            SET VplKd TO ""
            SET VcPHe TO 0
            WHILE VcPHe < yBwuj
                SET LtrAd TO VcPHe + 1
                WHILE LtrAd <= yBwuj
                    SET zXoPq TO SUBSTRING(AWnqc, VcPHe, LtrAd - 1)
                    IF countMap[zXoPq] = 1 THEN
                        IF (VplKd = "") OR (LENGTH(zXoPq) < LENGTH(VplKd)) OR ((LENGTH(zXoPq) = LENGTH(VplKd)) AND (zXoPq < VplKd)) THEN
                            SET VplKd TO zXoPq
                        END IF
                    END IF
                    SET LtrAd TO LtrAd + 1
                END WHILE
                SET VcPHe TO VcPHe + 1
            END WHILE
            APPEND VplKd TO resultList
            SET qXyzi TO qXyzi + 1
        END WHILE

        RETURN resultList
    END FUNCTION
END CLASS
```