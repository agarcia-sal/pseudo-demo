```  
CLASS Solution  
    FUNCTION numberOfWays(n integer parameter, x integer parameter, y integer parameter) RETURNS integer  
        SET kToMod TO 1000000000 + 7  
        SET arr TO list of size (n + (1)) WHERE each element is a list of size (x + (1)) filled with 0  
        SET arr[0][0] TO 1  
        SET counterA TO 1  
        WHILE counterA <= n  
            SET counterB TO 1  
            REPEAT  
                IF counterB > x THEN BREAK END IF  
                SET prevRowCurrCol TO arr[counterA - 1][counterB]  
                SET prevRowPrevCol TO arr[counterA - 1][counterB - 1]  
                SET termOne TO (prevRowCurrCol * counterB) MOD kToMod  
                SET termTwo TO (prevRowPrevCol * (x - (counterB - 1))) MOD kToMod  
                SET arr[counterA][counterB] TO (termOne + termTwo) MOD kToMod  
                SET counterB TO counterB + 1  
            UNTIL FALSE  
            SET counterA TO counterA + 1  
        END WHILE  
        SET accumulator TO 0  
        SET powerVal TO 1  
        FOR idx FROM 1 TO x DO  
            SET powerVal TO (powerVal * y) MOD kToMod  
            SET tempVal TO (arr[n][idx] * powerVal) MOD kToMod  
            SET accumulator TO (accumulator + tempVal) MOD kToMod  
        END FOR  
        RETURN accumulator  
    END FUNCTION  
END CLASS  
```