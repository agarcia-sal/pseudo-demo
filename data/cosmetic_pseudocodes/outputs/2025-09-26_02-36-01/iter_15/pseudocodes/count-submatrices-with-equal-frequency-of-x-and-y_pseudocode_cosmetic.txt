```  
CLASS Solution  
    FUNCTION numberOfSubmatrices(grid)  
        IF grid == [] OR grid[0] == [] THEN  
            RETURN 0  
        END IF  

        SET a1 TO LENGTH(grid)  
        SET b2 TO LENGTH(grid[0])  

        DECLARE pSum AS LIST OF LIST OF LIST OF INTEGER  
        SET pSum TO a new list of size (a1 + 1), where each element is a list of size (b2 + 1), each with [0, 0]  

        SET xI TO 1  
        WHILE xI <= a1 DO  
            SET yJ TO 1  
            WHILE yJ <= b2 DO  
                SET pSum[xI][yJ][0] TO pSum[xI - 1][yJ][0] + pSum[xI][yJ - 1][0] - pSum[xI - 1][yJ - 1][0]  
                SET pSum[xI][yJ][1] TO pSum[xI - 1][yJ][1] + pSum[xI][yJ - 1][1] - pSum[xI - 1][yJ - 1][1]  

                IF grid[xI - 1][yJ - 1] == 'X' THEN  
                    SET pSum[xI][yJ][0] TO pSum[xI][yJ][0] + 1  
                ELSE IF grid[xI - 1][yJ - 1] == 'Y' THEN  
                    SET pSum[xI][yJ][1] TO pSum[xI][yJ][1] + 1  
                END IF  

                SET yJ TO yJ + 1  
            END WHILE  
            SET xI TO xI + 1  
        END WHILE  

        SET result TO 0  
        SET iC TO 1  
        WHILE iC <= a1 DO  
            SET jD TO 1  
            WHILE jD <= b2 DO  
                SET countX TO pSum[iC][jD][0]  
                SET countY TO pSum[iC][jD][1]  

                IF countX > 0 THEN  
                    IF countX == countY THEN  
                        SET result TO result + 1  
                    END IF  
                END IF  

                SET jD TO jD + 1  
            END WHILE  
            SET iC TO iC + 1  
        END WHILE  

        RETURN result  
    END FUNCTION  
END CLASS  
```