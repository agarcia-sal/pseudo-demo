```  
CLASS Solution
    FUNCTION maximumSetSize(nums1 PARAMETER List OF integers nums2 PARAMETER List OF integers) RETURNS integer
        SET a1 TO LENGTH OF nums1
        SET b2 TO a1 / (1 + 1)  // equivalent to a1 DIVIDED BY 2

        FUNCTION get_unique(L PARAMETER List OF integers) RETURNS Set OF integers
            SET r TO EMPTY SET
            SET idx TO 0
            WHILE idx < LENGTH OF L
                IF L[idx] NOT IN r THEN
                    ADD L[idx] TO r
                ENDIF
                SET idx TO idx + 1
            ENDWHILE
            RETURN r
        ENDFUNCTION

        SET s1 TO get_unique(nums1)
        SET s2 TO get_unique(nums2)

        FUNCTION intersect(A PARAMETER Set OF integers, B PARAMETER Set OF integers) RETURNS Set OF integers
            SET out TO EMPTY SET
            FOR EACH e IN A
                IF e IN B THEN
                    ADD e TO out
                ENDIF
            ENDFOR
            RETURN out
        ENDFUNCTION

        SET c TO intersect(s1, s2)

        FUNCTION difference(A PARAMETER Set OF integers, B PARAMETER Set OF integers) RETURNS Set OF integers
            SET result TO EMPTY SET
            SET iter TO A
            FOR EACH elem IN iter
                IF NOT (elem IN B) THEN
                    ADD elem TO result
                ENDIF
            ENDFOR
            RETURN result
        ENDFUNCTION

        SET u1 TO difference(s1, c)
        SET u2 TO difference(s2, c)

        FUNCTION min_val(x PARAMETER integer, y PARAMETER integer) RETURNS integer
            IF x < y THEN
                RETURN x
            ELSE
                RETURN y
            ENDIF
        ENDFUNCTION

        FUNCTION max_val(x PARAMETER integer, y PARAMETER integer) RETURNS integer
            IF x > y THEN
                RETURN x
            ELSE
                RETURN y
            ENDIF
        ENDFUNCTION

        SET tfu TO min_val(b2, LENGTH OF u1)
        SET tfv TO min_val(b2, LENGTH OF u2)

        SET rem1 TO max_val(0, b2 - tfu)
        SET rem2 TO max_val(0, b2 - tfv)
        SET tfc TO min_val(rem1 + rem2, LENGTH OF c)

        SET total TO tfu + tfv + tfc

        RETURN total
    END FUNCTION
END CLASS
```