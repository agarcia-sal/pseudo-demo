```pseudocode
CLASS Solution
    FUNCTION getSum(nums)
        FUNCTION calc(nums)
            SET a TO LENGTH(nums)
            SET b TO ARRAY OF ZEROS OF SIZE a
            SET c TO ARRAY OF ZEROS OF SIZE a
            SET d TO EMPTY MAP WITH DEFAULT 0

            SET e TO 1
            WHILE e < a DO
                SET f TO nums[e - 1]
                SET prev_count TO 0
                IF d CONTAINS f THEN
                    SET prev_count TO d[f]
                END IF
                SET d[f] TO prev_count + 1
                SET b[e] TO d[f]
                SET e TO e + 1
            END WHILE

            SET d TO EMPTY MAP WITH DEFAULT 0

            SET g TO a - 2
            REPEAT
                IF g < 0 THEN BREAK END IF
                SET h TO nums[g + 1]
                SET prev_val TO 0
                IF d CONTAINS h THEN
                    SET prev_val TO d[h]
                END IF
                SET d[h] TO prev_val + 1
                SET c[g] TO d[h]
                SET g TO g - 1
            UNTIL FALSE

            SET total TO 0
            SET index TO 0
            WHILE index < a DO
                SET left_val TO b[index]
                SET right_val TO c[index]
                SET num_val TO nums[index]
                SET partial TO (left_val + right_val + (left_val * right_val)) * num_val
                SET total TO total + partial
                SET index TO index + 1
            END WHILE
            RETURN total MODULO ((10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10) + 7)
        END FUNCTION

        SET modulus TO (10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10) + 7
        SET varA TO calc(nums)

        REPEAT
            IF LENGTH(nums) <= 1 THEN BREAK END IF
            SET temp1 TO REMOVE LAST ELEMENT FROM nums
            INSERT temp1 AT POSITION 0 IN nums
        UNTIL TRUE

        SET varB TO calc(nums)

        SET sumAll TO 0
        FOR idx FROM 0 TO LENGTH(nums) - 1 DO
            SET sumAll TO sumAll + nums[idx]
        END FOR
        
        RETURN (varA + varB + sumAll) MODULO modulus
    END FUNCTION
END CLASS
```