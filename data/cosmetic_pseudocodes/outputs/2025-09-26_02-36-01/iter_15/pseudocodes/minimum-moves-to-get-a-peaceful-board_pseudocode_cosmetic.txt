```pseudocode
CLASS Solution
    FUNCTION minMoves(rooks)
        SET q TO SIZE(rooks)
        DEFINE FUNCTION absVal(x)
            IF x < 0 THEN RETURN -x ELSE RETURN x END IF
        END FUNCTION

        DEFINE FUNCTION sortByFirstElement(arr)
            IF LENGTH(arr) <= 1 THEN RETURN arr END IF
            SET pivot TO arr[0]
            SET leftPartition TO []
            SET rightPartition TO []
            FOR i FROM 1 TO LENGTH(arr) - 1
                IF arr[i][0] <= pivot[0] THEN
                    APPEND arr[i] TO leftPartition
                ELSE
                    APPEND arr[i] TO rightPartition
                END IF
            END FOR
            RETURN CONCATENATE(sortByFirstElement(leftPartition), [pivot], sortByFirstElement(rightPartition))
        END FUNCTION

        DEFINE FUNCTION sortBySecondElement(arr)
            IF LENGTH(arr) <= 1 THEN RETURN arr END IF
            SET pivot TO arr[0]
            SET leftSet TO []
            SET rightSet TO []
            SET j TO 1
            WHILE j < LENGTH(arr)
                IF arr[j][1] <= pivot[1] THEN
                    APPEND arr[j] TO leftSet
                ELSE
                    APPEND arr[j] TO rightSet
                END IF
                SET j TO j + 1
            END WHILE
            RETURN CONCATENATE(sortBySecondElement(leftSet), [pivot], sortBySecondElement(rightSet))
        END FUNCTION

        SET h TO sortByFirstElement(rooks)
        SET k TO sortBySecondElement(rooks)

        SET s TO 0
        SET v TO 0
        SET t TO 0

        WHILE t < q
            SET m TO h[t][0] - t
            IF m < 0 THEN
                SET m TO -m
            END IF
            SET s TO s + m
            SET t TO t + 1
        END WHILE
        
        SET x TO 0
        SET y TO 0

        WHILE y < q
            SET w TO k[y][1] - y
            IF w < 0 THEN
                SET w TO -w
            END IF
            SET x TO x + w
            SET y TO y + 1
        END WHILE

        RETURN s + x
    END FUNCTION
END CLASS
```