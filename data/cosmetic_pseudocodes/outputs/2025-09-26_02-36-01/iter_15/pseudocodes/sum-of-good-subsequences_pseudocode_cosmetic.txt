```  
CLASS Solution  
    FUNCTION sumOfGoodSubsequences(nums)  
        SET CONST_modulus TO 1_000_000_000 + 7  
        ASSIGN map_f TO empty map returning 0 for missing keys  
        ASSIGN map_g TO empty map returning 0 for missing keys  

        SET idx_i TO 0  
        WHILE idx_i < LENGTH(nums)  
            SET curr_val TO nums[idx_i]  

            map_g[curr_val] = map_g[curr_val] + 1  
            map_f[curr_val] = map_f[curr_val] + curr_val  

            SET tmp_calc TO (map_f[curr_val - 1] + map_g[curr_val - 1] * curr_val)  
            map_f[curr_val] = ((map_f[curr_val] + tmp_calc) % CONST_modulus)  

            map_g[curr_val] = (map_g[curr_val] + map_g[curr_val - 1]) % CONST_modulus  

            SET tmp_calc_2 TO (map_f[curr_val + 1] + map_g[curr_val + 1] * curr_val)  
            map_f[curr_val] = (map_f[curr_val] + tmp_calc_2) % CONST_modulus  

            map_g[curr_val] = (map_g[curr_val] + map_g[curr_val + 1]) % CONST_modulus  

            SET idx_i TO idx_i + 1  
        END WHILE  

        SET summation_result TO 0  
        SET iterator_vals TO list of all map_f values  
        SET idx_j TO 0  
        WHILE idx_j < LENGTH(iterator_vals)  
            summation_result = summation_result + iterator_vals[idx_j]  
            SET idx_j TO idx_j + 1  
        END WHILE  

        SET ret_val TO summation_result % CONST_modulus  
        RETURN ret_val  
    END FUNCTION  
END CLASS  
```