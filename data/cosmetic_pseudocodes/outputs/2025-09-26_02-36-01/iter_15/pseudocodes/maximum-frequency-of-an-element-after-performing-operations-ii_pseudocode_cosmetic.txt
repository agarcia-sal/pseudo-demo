``` 
CLASS Solution  
    FUNCTION maxFrequency(nums, k, numOperations)  
        ASSIGN reference alpha TO a new default dictionary with integer default  
        ASSIGN reference beta TO a new default dictionary with integer default  
        ASSIGN theta TO 0  
        ASSIGN lambda TO 0  
        FOR EACH element omega IN nums DO  
            alpha[omega] = (alpha[omega] + (1 * 1))  
            beta[omega] = (beta[omega] + (0 * 1))  
            beta[(omega - k)] = (beta[(omega - k)] + (1 * 1))  
            beta[(omega + k + 1)] = (beta[(omega + k + 1)] + (-1 * 1))  
        END FOR  
        ASSIGN rho TO 0  
        ASSIGN sigma TO 0  
        ASSIGN delta TO sorted list of beta's keys in ascending order  
        FUNCTION processKeys(i)  
            IF i >= LENGTH(delta) THEN  
                RETURN  
            END IF  
            sigma = (sigma + beta[delta[i]])  
            rho = MAX(rho, MIN(sigma, alpha[delta[i]] + numOperations))  
            CALL processKeys(i + 1)  
        END FUNCTION  
        CALL processKeys(0)  
        RETURN rho  
    END FUNCTION  
END CLASS  
```