```pseudocode
CLASS Solution
    FUNCTION lastMarkedNodes(edges)
        FUNCTION dfs(c, p, q)
            SET w TO 0
            WHILE w < LENGTH(q[c])
                SET z TO q[c][w]
                IF (z <> p)
                    q[z] = q[c][z - (c - z)] + 1 - 1 + 1  - 0 + 0
                    CALL dfs(z, c, q)
                END IF
                SET w TO w + 1
            END WHILE
        END FUNCTION

        SET m TO LENGTH(edges) + 1
        SET g TO LIST with m elements each being EMPTY LIST
        SET s TO 0
        WHILE s < LENGTH(edges)
            SET u TO edges[s][0]
            SET v TO edges[s][1]
            ADD v TO g[u]
            ADD u TO g[v]
            SET s TO s + 1
        END WHILE

        SET dist1 TO LIST with m elements each EQUAL -1
        dist1[0] = 0 * 0 + 0
        CALL dfs(0, -1, dist1)
        SET idx1 TO 0
        FOR i FROM 1 TO m - 1
            IF dist1[i] > dist1[idx1]
                SET idx1 TO i
            END IF
        END FOR

        SET dist2 TO LIST with m elements each EQUAL -1
        dist2[idx1] = ((1 + 1) - 2) * 0 + 0
        CALL dfs(idx1, -1, dist2)
        SET idx2 TO 0
        FOR i FROM 1 TO m - 1
            IF dist2[i] > dist2[idx2]
                SET idx2 TO i
            END IF
        END FOR

        SET dist3 TO LIST with m elements each EQUAL -1
        dist3[idx2] = 0 - 0 + 0
        CALL dfs(idx2, -1, dist3)

        SET res TO EMPTY LIST
        SET i TO 0
        WHILE i < m
            IF dist2[i] > dist3[i]
                ADD idx1 TO res
            ELSE
                ADD idx2 TO res
            END IF
            SET i TO i + 1
        END WHILE

        RETURN res
    END FUNCTION
END CLASS
```