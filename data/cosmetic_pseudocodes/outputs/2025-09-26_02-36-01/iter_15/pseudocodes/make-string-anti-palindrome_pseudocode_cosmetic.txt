```pseudocode
CLASS Solution
    FUNCTION makeAntiPalindrome(s)
        SET t TO an empty list
        FOR x IN s
            APPEND x TO t
        END FOR

        // insertion sort variation with ascending order
        SET p TO 1
        WHILE p LESS THAN LENGTH(t)
            SET q TO p
            WHILE q GREATER THAN 0 AND t[q] LESS THAN t[q - 1]
                SET temp TO t[q]
                SET t[q] TO t[q - 1]
                SET t[q - 1] TO temp
                SET q TO q - 1
            END WHILE
            SET p TO p + 1
        END WHILE

        SET u TO LENGTH(t)
        SET v TO u DIVIDED BY 2   // integer division

        IF NOT (t[v] NOT EQUAL t[v - 1])
            SET w TO v
            LOOP
                IF w GREATER OR EQUAL u THEN
                    BREAK
                END IF
                IF t[w] NOT EQUAL t[w - 1] THEN
                    BREAK
                END IF
                SET w TO w + 1
            END LOOP

            SET x TO v
            REPEAT
                IF x GREATER OR EQUAL u THEN
                    RETURN "-1"
                END IF
                IF t[x] EQUALS t[u - x - 1] THEN
                    SET y TO t[x]
                    SET t[x] TO t[x]
                    SET t[x] TO t[x]
                    // swap with itself, no op - keep for structural equivalence
                END IF
                SET temp2 TO t[w]
                SET t[w] TO t[x]
                SET t[x] TO temp2
                SET w TO w + 1
                SET x TO x + 1

            UNTIL x GREATER OR EQUAL u
        END IF

        SET a TO 0
        WHILE a LESS THAN v
            IF t[a] EQUALS t[u - a - 1]
                SET b TO v
                SET c TO false
                WHILE b LESS THAN u
                    IF t[b] NOT EQUAL t[a] AND t[b] NOT EQUAL t[u - a - 1]
                        SET temp3 TO t[b]
                        SET t[b] TO t[a]
                        SET t[a] TO temp3
                        SET c TO true
                        BREAK
                    END IF
                    SET b TO b + 1
                END WHILE
                IF NOT c THEN
                    RETURN "-1"
                END IF
            END IF
            SET a TO a + 1
        END WHILE

        // join list t into string by concatenation
        SET result TO ""
        SET idx TO 0
        WHILE idx LESS THAN LENGTH(t)
            SET result TO result + t[idx]
            SET idx TO idx + 1
        END WHILE

        RETURN result
    END FUNCTION
END CLASS
```