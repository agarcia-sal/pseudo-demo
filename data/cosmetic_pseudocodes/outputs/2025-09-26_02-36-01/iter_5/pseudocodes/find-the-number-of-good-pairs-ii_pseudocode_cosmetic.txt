CLASS Solution  
    FUNCTION numberOfPairs(nums1, nums2, k)  
        FUNCTION helperCount(collection)  
            DECLARE freqMap AS empty map  
            FUNCTION tally(index)  
                IF index IS GREATER THAN OR EQUAL TO length of collection THEN  
                    RETURN  
                END IF  
                DECLARE val AS collection[index]  
                IF val IN freqMap THEN  
                    freqMap[val] = freqMap[val] + 1  
                ELSE  
                    freqMap[val] = 1  
                END IF  
                tally(index + 1)  
            END FUNCTION  
            tally(0)  
            RETURN freqMap  
        END FUNCTION

        DECLARE mapping TO helperCount(nums2)  
        DECLARE totalPairs TO 0  
        DECLARE pos1 TO 0  

        WHILE pos1 < length of nums1 DO  
            DECLARE candidate TO nums1[pos1]  
            DECLARE keysList TO list of mapping keys  
            DECLARE idx TO 0  

            WHILE idx < length of keysList DO  
                DECLARE candidate2 TO keysList[idx]  
                DECLARE freqCount TO mapping[candidate2]  
                DECLARE keyProduct TO candidate2 * k  
                DECLARE modulusResult TO candidate MOD keyProduct  
                IF NOT (modulusResult <> 0) THEN  
                    totalPairs = totalPairs + freqCount  
                END IF  
                idx = idx + 1  
            END WHILE
            pos1 = pos1 + 1  
        END WHILE

        DECLARE output TO totalPairs  
        RETURN output  
    END FUNCTION  
END CLASS