CLASS Solution
    FUNCTION maxBottlesDrunk(numBottles numBottles numExchange numExchange)
        SET beverage_total TO 0
        SET spent_bottles TO 0

        FUNCTION exchangeLoop(bottles_remaining exchange_needed)
            IF NOT (bottles_remaining > 0) THEN
                RETURN (beverage_total, spent_bottles)
            ELSE
                SET beverage_total TO beverage_total + bottles_remaining
                SET spent_bottles TO spent_bottles + bottles_remaining

                FUNCTION innerExchangeLoop(current_empty current_num)
                    IF current_empty < current_num THEN
                        RETURN current_empty current_num
                    ELSE
                        SET new_empty TO current_empty - current_num
                        SET new_bottles TO current_num + 1
                        SET new_exchange TO current_num + 1
                        RETURN innerExchangeLoop(new_empty new_exchange), new_bottles
                    END IF
                END FUNCTION

                SET temp_empty, new_bottles_gained TO innerExchangeLoop(spent_bottles numExchange)
                SET spent_bottles TO temp_empty
                SET exchange_num TO numExchange
                SET numBottles TO new_bottles_gained

                RETURN exchangeLoop(numBottles exchange_num)
            END IF
        END FUNCTION

        SET beverage_total, spent_bottles TO exchangeLoop(numBottles numExchange)
        RETURN beverage_total
    END FUNCTION
END CLASS