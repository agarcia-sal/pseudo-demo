CLASS Solution
    FUNCTION countSubarrays(nums parameter LIST OF INTEGER, k parameter INTEGER) RETURNS INTEGER
        SET lengthNums TO 0
        SET cumulativeCount TO 0

        FUNCTION innerLoop(currentStart INTEGER, currentEnd INTEGER, currentAndValue INTEGER) RETURNS INTEGER
            IF currentEnd GREATER THAN OR EQUAL TO lengthNums THEN
                RETURN 0
            ELSE
                SET updatedAnd TO currentAndValue BITWISE AND nums[currentEnd]
                SET incrementValue TO 0
                IF updatedAnd EQUALS k THEN
                    SET incrementValue TO incrementValue PLUS 1
                END IF
                IF updatedAnd GREATER THAN OR EQUAL TO k THEN
                    RETURN incrementValue PLUS innerLoop(currentStart, currentEnd PLUS 1, updatedAnd)
                ELSE
                    RETURN incrementValue
                END IF
            END IF
        END FUNCTION

        SET lengthNums TO LENGTH OF nums
        SET indexPointer TO 0

        WHILE indexPointer LESS THAN lengthNums DO
            SET cumulativeCount TO cumulativeCount PLUS innerLoop(indexPointer, indexPointer, nums[indexPointer])
            SET indexPointer TO indexPointer PLUS 1
        END WHILE

        RETURN cumulativeCount
    END FUNCTION
END CLASS