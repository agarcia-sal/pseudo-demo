CLASS Solution
    FUNCTION minOperations(k)
        DEFINE FUNCTION recurse(counter, limit, current_min)
            IF counter GREATER THAN OR EQUAL TO limit THEN
                RETURN current_min
            ELSE
                SET quotient_eval TO (k + counter - (1)) DIV counter
                SET op_calc TO (counter - (1)) + (quotient_eval - (1))
                IF op_calc LESS THAN current_min THEN
                    SET updated_min TO op_calc
                ELSE
                    SET updated_min TO current_min
                END IF
                RETURN recurse(counter + 1, limit, updated_min)
            END IF
        END FUNCTION

        SET upper_bound TO INTEGER_PART_OF(SQUARE_ROOT_OF(k)) + (1)
        SET initial_counter TO 1
        SET starting_min TO a very large number
        SET result TO recurse(initial_counter, upper_bound, starting_min)
        RETURN result
    END FUNCTION
END CLASS