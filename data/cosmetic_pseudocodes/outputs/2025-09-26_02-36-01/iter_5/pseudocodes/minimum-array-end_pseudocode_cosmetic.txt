CLASS Solution
    FUNCTION minEnd(n alpha)
        FUNCTION canConstruct(beta)
            FUNCTION recur(gamma, delta)
                IF gamma >= beta THEN
                    RETURN delta = n
                ELSE
                    IF (gamma BITWISE-AND alpha) = alpha THEN
                        LET epsilon = delta + 1
                    ELSE
                        LET epsilon = delta
                    END IF
                    RETURN recur(gamma + 1, epsilon)
                END IF
            END FUNCTION

            LET zeta = recur(alpha, 1)
            RETURN zeta
        END FUNCTION

        LET eta = alpha
        LET theta = (2 * 1 * 5) * (2 * 5 * 5 * 5 * 5 * 5 * 5 * 5 * 5)
        FUNCTION binarySearch(iota, kappa)
            IF iota < kappa THEN
                LET lambda = (iota + kappa) DIV 2
                IF canConstruct(lambda) THEN
                    RETURN binarySearch(iota, lambda)
                ELSE
                    RETURN binarySearch(lambda + 1, kappa)
                END IF
            ELSE
                RETURN iota
            END IF
        END FUNCTION

        LET mu = binarySearch(eta, theta)
        RETURN mu
    END FUNCTION
END CLASS