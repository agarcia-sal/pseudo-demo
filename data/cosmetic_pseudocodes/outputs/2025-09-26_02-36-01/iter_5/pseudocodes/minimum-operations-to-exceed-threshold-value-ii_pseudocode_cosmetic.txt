CLASS Solution
    FUNCTION minOperations(k parameter, nums parameter)
        
        FUNCTION combineHeap(heapRef) RETURNS integer
            DECLARE countOps INITIALIZED TO 0
            FUNCTION recur() RETURNS void
                IF NOT ((heapRef[0] < k) AND (LENGTH OF heapRef > 1)) THEN
                    RETURN
                END IF
                DECLARE firstElem ASSIGNED TO heappop(heapRef)
                DECLARE secondElem ASSIGNED TO heappop(heapRef)
                DECLARE smallerVal ASSIGNED TO (firstElem < secondElem) ? firstElem : secondElem
                DECLARE biggerVal ASSIGNED TO (firstElem > secondElem) ? firstElem : secondElem
                DECLARE combined ASSIGNED TO (smallerVal + smallerVal) + biggerVal
                heappush(heapRef, combined)
                countOps = countOps + 1
                CALL recur()
            END FUNCTION
            CALL recur()
            RETURN countOps
        END FUNCTION
        
        DECLARE resultOps ASSIGNED TO combineHeap(nums)
        RETURN resultOps
    END FUNCTION
END CLASS