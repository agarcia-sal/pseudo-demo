CLASS Solution  
    FUNCTION countMatchingSubarrays(nums, pattern)  
        FUNCTION get_relationship(alpha, beta)  
            IF NOT (alpha GREATER THAN OR EQUAL TO beta)  
                RETURN 1  
            ELSE   
                IF (alpha EQUALS beta)  
                    RETURN 0  
                ELSE   
                    RETURN (-1)  
                END IF  
            END IF  
        END FUNCTION  

        SET length_nums TO 0  
        SET length_pattern TO 0  
        SET result_counter TO 0  

        length_nums = 0  
        WHILE length_nums LESS THAN LENGTH OF nums  
            SET length_nums TO length_nums PLUS 1  
        END WHILE  

        length_pattern = 0  
        WHILE length_pattern LESS THAN LENGTH OF pattern  
            SET length_pattern TO length_pattern PLUS 1  
        END WHILE  

        SET relations TO empty list  
        SET idx TO 0  
        WHILE idx NOT EQUAL TO (length_nums MINUS 1)  
            SET temp_relation TO get_relationship(nums[idx], nums[idx PLUS 1])  
            relations APPEND temp_relation  
            SET idx TO idx PLUS 1  
        END WHILE  

        FUNCTION sublist_equals(arr1, arr2, start_pos, length)  
            SET pos TO 0  
            WHILE pos LESS THAN length  
                IF NOT (arr1[start_pos PLUS pos] EQUALS arr2[pos])  
                    RETURN false  
                END IF  
                SET pos TO pos PLUS 1  
            END WHILE  
            RETURN true  
        END FUNCTION  

        SET checker_index TO 0  
        WHILE checker_index LESS THAN (length_nums MINUS length_pattern)  
            IF sublist_equals(relations, pattern, checker_index, length_pattern)  
                result_counter = result_counter PLUS 1  
            END IF  
            SET checker_index TO checker_index PLUS 1  
        END WHILE  

        RETURN result_counter  
    END FUNCTION  
END CLASS