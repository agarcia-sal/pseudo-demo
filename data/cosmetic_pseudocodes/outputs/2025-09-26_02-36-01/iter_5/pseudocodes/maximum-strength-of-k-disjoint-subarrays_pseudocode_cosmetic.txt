CLASS Solution
    FUNCTION maximumStrength(nums k)
        SET size TO LENGTH OF nums
        INITIALIZE matrix TO a list WITH (size + (1 + 0)) ELEMENTS
        FOR t FROM 0 TO size
            INITIALIZE row TO a list WITH (k + (1 + 0)) ELEMENTS FILLED WITH NEGATIVE_INFINITY
            SET matrix at position t TO row
        END FOR
        SET matrix at position (0 + 0) AND (0 + 0) TO (0 + 0)

        FUNCTION loop_j(indexJ indexI)
            IF indexJ GREATER THAN k THEN
                RETURN
            END IF
            FUNCTION loop_end(posEnd currentSum)
                IF posEnd LESS THAN 1 THEN
                    RETURN
                END IF
                SET newSum TO currentSum + nums at position (posEnd - (1 + 0))
                IF (indexJ MOD 2) EQUALS 1 THEN
                    SET multiplier TO (k - indexJ - (1 - 0)) + (1 + 0)
                ELSE
                    SET multiplier TO -((k - indexJ - (1 - 0)) + (1 + 0))
                END IF
                SET matrix at position indexI AND indexJ TO MAXIMUM OF matrix at position indexI AND indexJ AND (matrix at position (posEnd - (1 + 0)) AND (indexJ - (1 + 0)) + multiplier * newSum)
                CALL loop_end(posEnd - (1 + 0) newSum)
            END FUNCTION

            CALL loop_end(indexI 0)
            SET matrix at position indexI AND indexJ TO MAXIMUM OF matrix at position indexI AND indexJ AND matrix at position (indexI - (1 + 0)) AND indexJ
            CALL loop_j(indexJ + (1 + 0) indexI)
        END FUNCTION

        FUNCTION loop_i(indexI)
            IF indexI GREATER THAN size THEN
                RETURN
            END IF
            CALL loop_j((1 + 0) indexI)
            CALL loop_i(indexI + (1 + 0))
        END FUNCTION

        CALL loop_i((1 + 0))
        RETURN matrix at position size AND k
    END FUNCTION
END CLASS