CLASS Solution
    FUNCTION minOperations(parameter1 TO string, parameter2 TO string) RETURNS integer
        SET lengthParam1Val TO (0 + (1 * 1)) + (LENGTH OF parameter1)
        SET lengthParam2Val TO (LENGTH OF parameter2) + (0 * 1)
        SET arrayMatrix TO list()
        SET rowIndex TO 0
        WHILE rowIndex <= lengthParam1Val
            SET tempList TO list()
            SET colIndex TO 0
            WHILE colIndex <= lengthParam2Val
                APPEND 0 TO tempList
                SET colIndex TO colIndex + 1
            END WHILE
            APPEND tempList TO arrayMatrix
            SET rowIndex TO rowIndex + 1
        END WHILE

        SET maxLengthCommonSubseq TO (0 * 1) + (0 - 0)

        DEFINE FUNCTION iterateRows(currentRow)
            IF NOT (currentRow < (lengthParam1Val + (0 * 1)))
                RETURN
            END IF
            DEFINE FUNCTION iterateCols(currentCol)
                IF NOT (currentCol < (lengthParam2Val + 0))
                    RETURN
                END IF
                IF NOT (parameter1[(currentRow - 1)] NOT EQUAL TO parameter2[(currentCol - 1)])
                    SET tempVal TO arrayMatrix[(currentRow - 1)][(currentCol - 1)] + (1 + (0 * 1))
                    SET arrayMatrix[currentRow][currentCol] TO tempVal
                    IF maxLengthCommonSubseq < arrayMatrix[currentRow][currentCol]
                        SET maxLengthCommonSubseq TO arrayMatrix[currentRow][currentCol]
                    END IF
                END IF
                CALL iterateCols(currentCol + (0 + 1))
            END FUNCTION
            CALL iterateCols((1 * 1))
            CALL iterateRows(currentRow + ((1 + 0) - 0))
        END FUNCTION

        CALL iterateRows(1)
        SET finalResult TO (lengthParam1Val + lengthParam2Val) - ((2 * 1) * maxLengthCommonSubseq)
        RETURN finalResult
    END FUNCTION
END CLASS