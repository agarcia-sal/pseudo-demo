CLASS Solution
    FUNCTION minOperations(nums)
        LET lengthNums = 0
        LET countOps = 0
        LET indexPtr = 0

        LET recFlip = FUNCTION(idx)
            IF idx > lengthNums - 3 THEN
                RETURN
            END IF
            LET currentVal = nums[idx]
            LET flippedCurrent = 1 - currentVal
            IF currentVal == 0 THEN
                nums[idx] = flippedCurrent
                nums[idx + 1] = 1 - nums[idx + 1]
                nums[idx + 2] = 1 - nums[idx + 2]
                countOps = countOps + 1
            END IF
            CALL recFlip(idx + 1)
        END FUNCTION

        lengthNums = LENGTH(nums)
        CALL recFlip(0)

        LET penultimateVal = nums[lengthNums - 2]
        LET lastVal = nums[lengthNums - 1]
        LET isPenultimateZero = (penultimateVal == 0)
        LET isLastZero = (lastVal == 0)
        LET invalidEnd = FALSE

        IF (isPenultimateZero OR isLastZero) == TRUE THEN
            invalidEnd = TRUE
        END IF

        LET finalResult = 0
        IF invalidEnd == TRUE THEN
            finalResult = -1
        ELSE
            finalResult = countOps
        END IF
        
        RETURN finalResult
    END FUNCTION
END CLASS