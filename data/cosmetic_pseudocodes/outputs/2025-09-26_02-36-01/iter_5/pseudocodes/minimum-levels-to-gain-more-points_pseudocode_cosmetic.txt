CLASS Solution
    FUNCTION minimumLevels(possible)
        SET accumulated_total TO 0
        SET iterator_idx TO 0
        WHILE iterator_idx < (LENGTH(possible))
            SET current_val TO possible[iterator_idx]
            SET increment_val TO (current_val * 2) - 1
            SET accumulated_total TO accumulated_total + increment_val
            SET iterator_idx TO iterator_idx + 1
        END WHILE

        SET alice_score TO 0
        SET position_counter TO 0

        FUNCTION check_position(possible_list, pos, running_alice, running_total) RETURNS INTEGER
            IF NOT (pos < LENGTH(possible_list) - 1)
                RETURN -1
            END IF

            SET current_element TO possible_list[pos]
            SET alice_addition TO (current_element * 2) - 1
            SET new_alice TO running_alice + alice_addition
            SET total_subtraction TO (current_element * 2) - 1
            SET new_total TO running_total - total_subtraction

            IF new_alice > new_total
                RETURN pos + 1
            ELSE
                RETURN check_position(possible_list, pos + 1, new_alice, new_total)
            END IF
        END FUNCTION

        SET result TO check_position(possible, position_counter, alice_score, accumulated_total)
        RETURN result
    END FUNCTION
END CLASS