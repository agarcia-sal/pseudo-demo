CLASS Solution
    FUNCTION maxTotalReward(rewardValues)
        DEFINE FUNCTION accumulateFlags(index, flagAcc)
            IF NOT (index < LENGTH(rewardValues))
                RETURN flagAcc
            ELSE
                DEFINE currentVal AS rewardValues[index]
                DEFINE bitmask AS ((ONE << currentVal) - ONE) << currentVal
                RETURN accumulateFlags(index + ONE, flagAcc | (flagAcc & bitmask))
            END IF
        END FUNCTION

        DEFINE sortedUniqueValues AS LIST(SORT(SET(rewardValues)))
        DEFINE totalFlags AS accumulateFlags(ZERO, ONE)
        DEFINE resultVal AS BIT_LENGTH(totalFlags) - ONE
        RETURN resultVal
    END FUNCTION
END CLASS