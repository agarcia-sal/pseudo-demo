CLASS Solution
    FUNCTION minimumArea(grid)
        LET gridEmptyFlag BE (grid == [] OR grid[0] == [])
        LET resultArea BE 0
        IF NOT (NOT gridEmptyFlag)
            LET totalRows BE 0
            LET totalCols BE 0
            LET upperBoundRow BE +∞
            LET lowerBoundRow BE -∞
            LET leftBoundCol BE +∞
            LET rightBoundCol BE -∞

            FUNCTION scanRows(rowIndex)
                IF rowIndex > (LENGTH(grid) - 1)
                    RETURN NULL
                END IF
                FUNCTION scanCols(colIndex)
                    IF colIndex > (LENGTH(grid[0]) - 1)
                        RETURN NULL
                    END IF
                    LET currentElem BE grid[rowIndex][colIndex]
                    IF currentElem == 1
                        IF upperBoundRow > rowIndex
                            SET upperBoundRow TO rowIndex
                        END IF
                        IF lowerBoundRow < rowIndex
                            SET lowerBoundRow TO rowIndex
                        END IF
                        IF leftBoundCol > colIndex
                            SET leftBoundCol TO colIndex
                        END IF
                        IF rightBoundCol < colIndex
                            SET rightBoundCol TO colIndex
                        END IF
                    END IF
                    CALL scanCols(colIndex + 1)
                END FUNCTION
                CALL scanCols(0)
                CALL scanRows(rowIndex + 1)
            END FUNCTION

            CALL scanRows(0)

            LET rectHeight BE (lowerBoundRow - upperBoundRow) + 1
            LET rectWidth BE (rightBoundCol - leftBoundCol) + 1
            SET resultArea TO rectHeight * rectWidth
        END IF

        RETURN resultArea
    END FUNCTION
END CLASS