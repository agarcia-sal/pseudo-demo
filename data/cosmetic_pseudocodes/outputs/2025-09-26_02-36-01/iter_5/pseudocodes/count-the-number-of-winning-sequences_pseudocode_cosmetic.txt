CLASS Solution
    FUNCTION countWinningSequences(s)
        FUNCTION calc(a, b)
            IF a GREATER THAN b THEN
                IF a EQUALS two AND b EQUALS zero THEN
                    RETURN negative one
                ELSE
                    RETURN one
                END IF
            ELSE
                IF a EQUALS b THEN
                    RETURN zero
                ELSE
                    IF a EQUALS zero AND b EQUALS two THEN
                        RETURN one
                    ELSE
                        RETURN negative one
                    END IF
                END IF
            END IF
        END FUNCTION

        FUNCTION dfs(index, balance, last)
            IF (LENGTH(s) MINUS index) LESS THAN OR EQUAL TO balance THEN
                RETURN zero
            ELSE
                IF index GREATER THAN OR EQUAL TO LENGTH(s) THEN
                    IF balance LESS THAN zero THEN
                        RETURN one
                    ELSE
                        RETURN zero
                    END IF
                ELSE
                    SET total TO zero
                    SET iterator TO zero
                    WHILE iterator NOT GREATER THAN two DO
                        IF iterator NOT EQUAL TO last THEN
                            SET stepCalc TO calc(d[s[index]], iterator)
                            SET nextResult TO dfs(index PLUS one, balance PLUS stepCalc, iterator)
                            SET total TO total PLUS nextResult
                            SET total TO total MINUS (mod TIMES (total DIVIDED BY mod))
                        END IF
                        SET iterator TO iterator PLUS one
                    END WHILE
                    RETURN total
                END IF
            END IF
        END FUNCTION

        SET mod TO (one billion PLUS seven)
        SET d TO MAP WITH KEYS: 'F' -> zero, 'W' -> one, 'E' -> two
        SET answer TO dfs(zero, zero, negative one)
        CALL dfs.cache.clear()
        RETURN answer
    END FUNCTION
END CLASS