CLASS Solution
    FUNCTION numberOfAlternatingGroups(colors k)
        IF NOT (k GREATER THAN OR EQUAL TO 3)
            LET result = 0
        ELSE
            LET total_length = LENGTH(colors)
            LET duplicated_colors = CONCAT(colors, SLICE(colors, 0, k - 1))

            LET position = 0
            LET match_count = 0

            FUNCTION verifyAlternation(index current)
                IF current EQUALS k
                    RETURN true
                END IF

                LET current_char = duplicated_colors[index + current]
                LET previous_char = duplicated_colors[index + current - 1]
                IF current_char EQUALS previous_char
                    RETURN false
                ELSE
                    RETURN verifyAlternation(index, current + 1)
                END IF
            END FUNCTION

            WHILE position LESS THAN total_length
                LET alternating_check = verifyAlternation(position, 1)
                IF alternating_check EQUALS true
                    LET match_count = match_count + 1
                END IF
                LET position = position + 1
            END WHILE

            LET result = match_count
        END IF

        RETURN result
    END FUNCTION
END CLASS