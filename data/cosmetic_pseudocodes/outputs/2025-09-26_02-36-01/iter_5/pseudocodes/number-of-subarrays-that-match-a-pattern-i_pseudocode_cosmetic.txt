CLASS Solution

    FUNCTION countMatchingSubarrays(nums parameter, pattern parameter)
        LET lenNums BE LENGTH OF nums parameter
        LET lenPattern BE LENGTH OF pattern parameter
        LET totalMatches BE zero

        FUNCTION verifyMatch(startIndex, offset)
            IF offset EQUALS lenPattern THEN
                RETURN 1
            ELSE
                LET symbol BE pattern parameter[offset]
                LET currentVal BE nums parameter[startIndex + offset]
                LET nextVal BE nums parameter[startIndex + offset + 1]

                LET isMatch BE False

                IF symbol EQUALS 1 THEN
                    IF NOT (nextVal LESS THAN OR EQUAL TO currentVal) THEN
                        LET isMatch BE True
                    END IF
                ELSE IF symbol EQUALS 0 THEN
                    IF nextVal EQUALS currentVal THEN
                        LET isMatch BE True
                    END IF
                ELSE IF symbol EQUALS -1 THEN
                    IF NOT (nextVal GREATER THAN OR EQUAL TO currentVal) THEN
                        LET isMatch BE True
                    END IF
                END IF

                IF isMatch THEN
                    RETURN verifyMatch(startIndex, offset + 1)
                ELSE
                    RETURN 0
                END IF
            END IF
        END FUNCTION

        LET currentIndex BE zero
        WHILE currentIndex LESS THAN lenNums MINUS lenPattern
            LET currentMatchResult BE verifyMatch(currentIndex, zero)
            LET totalMatches BE totalMatches PLUS currentMatchResult
            LET currentIndex BE currentIndex PLUS 1
        END WHILE

        RETURN totalMatches
    END FUNCTION

END CLASS