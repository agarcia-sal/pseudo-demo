CLASS Solution
    FUNCTION maximumPoints(enemyEnergies currentEnergy)
        PROCEDURE sortAscending(arr)
            VARIABLE n SET TO LENGTH OF arr
            VARIABLE p SET TO n - 1
            WHILE p > 0
                VARIABLE q SET TO 0
                PROCEDURE loopInner()
                    IF q < p
                        IF arr[q] > arr[q + 1]
                            VARIABLE temp SET TO arr[q]
                            arr[q] = arr[q + 1]
                            arr[q + 1] = temp
                        END IF
                        q = q + 1
                        loopInner()
                    END IF
                END PROCEDURE
                loopInner()
                p = p - 1
            END WHILE
        END PROCEDURE

        CALL sortAscending(enemyEnergies)

        VARIABLE result SET TO 0
        VARIABLE threshold SET TO enemyEnergies[0]
        IF NOT (currentEnergy >= threshold)
            VARIABLE output SET TO 0
        ELSE
            VARIABLE index SET TO LENGTH OF enemyEnergies - 1

            FUNCTION recursion(i currentEnergies currentE)
                IF i < 0
                    RETURN currentE, 0
                ELSE
                    VARIABLE divisionResult SET TO (currentE - (currentE MOD currentEnergies[0])) / currentEnergies[0]
                    VARIABLE remainderResult SET TO currentE MOD currentEnergies[0]
                    VARIABLE nextEnergy SET TO remainderResult + currentEnergies[i]
                    VARIABLE newEnergy, accumPoints SET recursion(i - 1, currentEnergies, nextEnergy)
                    RETURN newEnergy, accumPoints + divisionResult
                END IF
            END FUNCTION

            VARIABLE finalEnergy, accum SET recursion(index, enemyEnergies, currentEnergy)
            VARIABLE output SET accum
        END IF
        RETURN output
    END FUNCTION
END CLASS