CLASS Solution  
    FUNCTION findWinningPlayer(players_skills, threshold)  
        FUNCTION dequeue_front(collection)  
            RETURN collection[0], collection[1 : LENGTH(collection)]  
        END FUNCTION  

        FUNCTION enqueue_back(collection, element)  
            RETURN collection + [element]  
        END FUNCTION  

        FUNCTION play_round(current_champion, contenders_list, consecutive_wins)  
            IF consecutive_wins >= threshold OR LENGTH(contenders_list) = 0 THEN  
                RETURN current_champion  
            ELSE  
                DECLARE challenger, remaining_contenders  
                challenger, remaining_contenders = dequeue_front(contenders_list)  

                IF players_skills[current_champion] > players_skills[challenger] THEN  
                    DECLARE updated_consecutive_wins  
                    updated_consecutive_wins = consecutive_wins + 1  
                    DECLARE updated_contenders  
                    updated_contenders = enqueue_back(remaining_contenders, challenger)  

                    RETURN play_round(current_champion, updated_contenders, updated_consecutive_wins)  
                ELSE  
                    DECLARE reset_wins  
                    reset_wins = 1  
                    DECLARE updated_contenders  
                    updated_contenders = enqueue_back(remaining_contenders, current_champion)  

                    RETURN play_round(challenger, updated_contenders, reset_wins)  
                END IF  
            END IF  
        END FUNCTION  

        DECLARE total_players  
        total_players = LENGTH(players_skills)  
        DECLARE lineup  
        SET lineup TO []  
        DECLARE idx  
        idx = 0  
        WHILE idx < total_players  
            SET lineup = lineup + [idx]  
            SET idx = idx + 1  
        END WHILE  

        DECLARE first_contender  
        DECLARE rest_of_contenders  
        first_contender, rest_of_contenders = dequeue_front(lineup)  

        DECLARE overall_winner  
        overall_winner = play_round(first_contender, rest_of_contenders, 0)  

        RETURN overall_winner  
    END FUNCTION  
END CLASS