CLASS Solution  
    FUNCTION compressedString(word)  
        DEFINE FUNCTION recurEncode(position, acc)  
            IF NOT (position < LENGTH(word)) THEN  
                RETURN acc  
            END IF  
            DEFINE currentChar AS word[position]  
            DEFINE tally AS zero  
            DEFINE FUNCTION countRepeats(idx, charNow, num)  
                IF NOT (idx < LENGTH(word) AND word[idx] = charNow) THEN  
                    RETURN num  
                END IF  
                IF num = 9 THEN  
                    RETURN num  
                END IF  
                RETURN countRepeats(idx + 1, charNow, num + 1)  
            END FUNCTION  
            SET tally TO countRepeats(position, currentChar, 0)  
            SET appendedSegment TO STRING(tally) + currentChar  
            RETURN recurEncode(position + tally, acc + appendedSegment)  
        END FUNCTION  
        SET finalResult TO recurEncode(0, "")  
        RETURN finalResult  
    END FUNCTION  
END CLASS