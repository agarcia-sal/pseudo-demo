```  
CLASS Solution
    FUNCTION getSmallestString(s parameter of type string k parameter of type integer) RETURNS string
        FUNCTION cyclic_distance(c1 parameter of type character c2 parameter of type character) RETURNS integer
            SET u TO (ASCII(c1) - ASCII(c2))
            SET v TO (-(ASCII(c1) - ASCII(c2)))
            SET w TO 26
            IF u < 0 THEN
                SET u TO -u
            END IF
            IF v < 0 THEN
                SET v TO -v
            END IF
            SET x TO u
            SET y TO w - u
            IF y <= x THEN
                RETURN y
            ELSE
                RETURN x
            END IF
        END FUNCTION

        SET a4 TO []
        SET e8 TO 0
        SET q0 TO LENGTH(s)

        LABEL loop_start:
            IF k > 0 THEN
                IF e8 < q0 THEN
                ELSE
                    GOTO loop_end
                END IF
            ELSE
                GOTO loop_end
            END IF

            SET z3 TO a4
            IF z3 = [] THEN
                FOR j9 FROM 0 TO q0 - 1 DO
                    APPEND s[j9] TO z3
                END FOR
                SET a4 TO z3
            END IF

            SET u7 TO a4[e8]
            IF u7 = 'a' THEN
                SET e8 TO e8 + 1
                GOTO loop_start
            END IF

            SET d5 TO cyclic_distance(a4[e8], 'a')

            IF d5 <= k THEN
                SET a4[e8] TO 'a'
                SET k TO k - d5
            ELSE
                FUNCTION char_from_int(i parameter of type integer) RETURNS character
                    RETURN CHAR(i)
                END FUNCTION

                SET c2 TO a4[e8]
                SET l4 TO ASCII(c2)
                SET m6 TO l4 - k
                SET a4[e8] TO char_from_int(m6)
                SET k TO 0
            END IF

            SET e8 TO e8 + 1
            GOTO loop_start

        LABEL loop_end:
        FUNCTION concat_chars(chars parameter of type list of character) RETURNS string
            FUNCTION helper(idx parameter of type integer) RETURNS string
                IF idx >= LENGTH(chars) THEN
                    RETURN ""
                ELSE
                    RETURN chars[idx] + helper(idx + 1)
                END IF
            END FUNCTION
            RETURN helper(0)
        END FUNCTION

        RETURN concat_chars(a4)
    END FUNCTION
END CLASS
```