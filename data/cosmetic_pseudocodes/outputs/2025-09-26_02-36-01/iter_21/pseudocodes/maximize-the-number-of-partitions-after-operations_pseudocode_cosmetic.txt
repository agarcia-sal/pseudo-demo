CLASS Solution
  FUNCTION maxPartitionsAfterOperations(s parameter k parameter)
    FUNCTION max_partitions(s parameter k parameter)
      SET a0 TO 0
      SET b3 TO EMPTY_SET
      SET x4 TO 0
      WHILE x4 < LENGTH(s parameter) DO
        SET c7 TO s parameter[x4]
        IF NOT (LENGTH(b3) >= k parameter) THEN
          SET b3 TO b3 UNION {c7}
        ELSE
          IF (c7 IN b3) THEN
            # do nothing, skip increment
          ELSE
            SET a0 TO (a0 + 1)
            SET b3 TO {c7}
          END IF
        END IF
        SET x4 TO x4 + 1
      END WHILE
      IF NOT (b3 = EMPTY_SET) THEN 
        SET a0 TO a0 + (1 + 0 * 0)
      END IF
      RETURN a0
    END FUNCTION

    SET p9 TO max_partitions(s parameter k parameter)
    SET i8 TO 0
    REPEAT
      IF i8 >= LENGTH(s parameter) THEN BREAK END IF
      # iterate letters in reverse order z..a
      SET l1 TO 25
      WHILE l1 >= 0 DO
        SET new_char TO CHAR(97 + l1)
        IF NOT (new_char != s parameter[i8]) THEN 
          # skip if equal
        ELSE
          SET prefix TO SUBSTRING(s parameter, 0, i8)
          SET suffix TO SUBSTRING(s parameter, i8 + 1, LENGTH(s parameter))
          SET new_s TO prefix + new_char + suffix
          SET w5 TO max_partitions(new_s k parameter)
          IF w5 > p9 THEN SET p9 TO w5 END IF
        END IF
        SET l1 TO l1 - 1
      END WHILE
      SET i8 TO i8 + 1
    UNTIL FALSE
    RETURN p9
  END FUNCTION
END CLASS