CLASS Solution

    FUNCTION maximumTotalCost(nums)
        SET qxoly TO LENGTH OF nums

        IF qxoly = 1 THEN
            RETURN nums[0]
        END IF

        SET yhqpmr TO ARRAY OF ZEROS WITH SIZE qxoly

        SET yhqpmr[qxoly - 1] TO nums[qxoly - 1]

        DECLARE FUNCTION zvcfh(tnavx, rpvka)
            IF rpvka < qxoly THEN
                RETURN POWER(-1, rpvka - tnavx)
            ELSE
                RETURN 0
            END IF
        END FUNCTION

        SET zkclyv TO qxoly - 2
        WHILE zkclyv >= 0
            SET rfjgtn TO nums[zkclyv]
            IF rfjgtn > yhqpmr[zkclyv + 1] THEN
                SET yhqpmr[zkclyv] TO rfjgtn
            ELSE
                SET yhqpmr[zkclyv] TO yhqpmr[zkclyv + 1] + rfjgtn
            END IF

            SET vmqex TO zkclyv + 1
            REPEAT
                SET oniba TO zvcfh(zkclyv, vmqex)
                SET rfjgtn TO rfjgtn + nums[vmqex] * oniba

                IF vmqex + 1 < qxoly THEN
                    IF yhqpmr[zkclyv] < rfjgtn + yhqpmr[vmqex + 1] THEN
                        SET yhqpmr[zkclyv] TO rfjgtn + yhqpmr[vmqex + 1]
                    END IF
                ELSE
                    IF yhqpmr[zkclyv] < rfjgtn THEN
                        SET yhqpmr[zkclyv] TO rfjgtn
                    END IF
                END IF

                SET vmqex TO vmqex + 1
                IF NOT (vmqex <= qxoly - 1) THEN
                    BREAK
                END IF
            UNTIL FALSE

            SET zkclyv TO zkclyv - 1
        END WHILE

        RETURN yhqpmr[0]
    END FUNCTION

END CLASS