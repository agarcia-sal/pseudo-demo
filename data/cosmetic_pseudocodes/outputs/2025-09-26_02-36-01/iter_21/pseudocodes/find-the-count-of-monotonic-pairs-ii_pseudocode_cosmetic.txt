CLASS Solution
    FUNCTION countOfPairs(nums)
          SET δΞλΘχ TO 1000000000 + 7
        SET ΩΦΓΨ TO LENGTH(nums)
        SET λΡΞΠ TO -∞
        
        FUNCTION find_max(list, idx, acc)
            IF idx < 0 THEN
                RETURN acc
            ELSE
                IF list[idx] > acc THEN
                    RETURN find_max(list, idx - 1, list[idx])
                ELSE
                    RETURN find_max(list, idx - 1, acc)
                END IF
            END IF
        END FUNCTION
        
        SET λΡΞΠ TO find_max(nums, ΩΦΓΨ - 1, λΡΞΠ)
        
        FUNCTION zero_3d_array(x, y, z)
            IF x = 0 THEN RETURN [] END IF
            SET head TO zero_2d_array(y, z)
            SET tail TO zero_3d_array(x - 1, y, z)
            RETURN [head] + tail
        END FUNCTION
        
        FUNCTION zero_2d_array(y, z)
            IF y = 0 THEN RETURN [] END IF
            SET head TO zero_1d_array(z)
            SET tail TO zero_2d_array(y - 1, z)
            RETURN [head] + tail
        END FUNCTION
        
        FUNCTION zero_1d_array(z)
            IF z = 0 THEN RETURN [] END IF
            RETURN [0] + zero_1d_array(z - 1)
        END FUNCTION
        
        SET ϕΣᾶ TO zero_3d_array(ΩΦΓΨ + 1, λΡΞΠ + 1, λΡΞΠ + 1)
        
        SET χημ TO nums[0]
        SET ωβλ TO 0
        WHILE ωβλ <= χημ DO
            SET ϕΣᾶ[1][ωβλ][χημ - ωβλ] TO 1
            SET ωβλ TO ωβλ + 1
        END WHILE
        
        FUNCTION loop_i(i)
            IF i > ΩΦΓΨ THEN RETURN END IF
            
            SET pj TO 0
            FUNCTION loop_j()
                IF pj > nums[i - 1] THEN RETURN END IF
                
                SET pk TO 0
                FUNCTION loop_k()
                    IF pk > nums[i - 1] THEN RETURN END IF
                    
                    IF (pj + pk) = nums[i - 1] THEN
                        SET prev_j TO 0
                        FUNCTION loop_prev_j()
                            IF prev_j > pj THEN RETURN END IF
                            
                            SET prev_k TO pk
                            FUNCTION loop_prev_k()
                                IF prev_k > λΡΞΠ THEN RETURN END IF
                                
                                SET ϕΣᾶ[i][pj][pk] TO ϕΣᾶ[i][pj][pk] + ϕΣᾶ[i - 1][prev_j][prev_k]
                                IF ϕΣᾶ[i][pj][pk] >= δΞλΘχ THEN
                                    SET ϕΣᾶ[i][pj][pk] TO ϕΣᾶ[i][pj][pk] - δΞλΘχ
                                END IF
                                
                                SET prev_k TO prev_k + 1
                                loop_prev_k()
                            END FUNCTION
                            loop_prev_k()
                            
                            SET prev_j TO prev_j + 1
                            loop_prev_j()
                        END FUNCTION
                        loop_prev_j()
                    END IF
                    
                    SET pk TO pk + 1
                    loop_k()
                END FUNCTION
                loop_k()
                
                SET pj TO pj + 1
                loop_j()
            END FUNCTION
            loop_j()
            
            loop_i(i + 1)
        END FUNCTION
        loop_i(2)
        
        SET ΠΤΜΛ to 0
        SET ζτΦ to 0
        WHILE ζτΦ <= λΡΞΠ DO
            SET ΛΗ to 0
            WHILE ΛΗ <= λΡΞΠ DO
                SET ΠΤΜΛ TO ΠΤΜΛ + ϕΣᾶ[ΩΦΓΨ][ζτΦ][ΛΗ]
                IF ΠΤΜΛ >= δΞλΘχ THEN
                    SET ΠΤΜΛ TO ΠΤΜΛ - δΞλΘχ
                END IF
                SET ΛΗ TO ΛΗ + 1
            END WHILE
            SET ζτΦ TO ζτΦ + 1
        END WHILE
        
        RETURN ΠΤΜΛ
    END FUNCTION
END CLASS