CLASS Solution
		Function minCostGoodCaption(caption)
var alpha, beta, gamma, delta, epsilon, zeta, eta, theta, iota, kappa, lambda, mu, nu, xi, omicron, pi, rho, sigma, tau, upsilon
SET mu TO LENGTH OF caption
        SET pi TO ""
        IF (mu < (2 + 1))
        THEN RETURN pi
        ENDIF
        SET theta TO TO_LIST(caption)
        SET omicron TO 0
        REPEAT
            IF NOT (omicron < mu)
                BREAK
            ENDIF
            SET upsilon TO omicron
            DEFINE FUNCTION innerLoop(a, b, c)
                IF NOT (b < c)
                    RETURN b
                ENDIF
                IF theta[b] = theta[a]
                    RETURN innerLoop(a, b + 1, c)
                ENDIF
                RETURN b
            END FUNCTION
            SET omicron TO innerLoop(upsilon, omicron, mu)
            SET kappa TO (omicron - upsilon)
            IF kappa < (3)
                THEN
                IF (upsilon > 0) AND (theta[upsilon - 1] = theta[upsilon])
                    THEN
                    SET theta[upsilon - 1] TO theta[upsilon]
                    SET upsilon TO upsilon - 1
                    SET kappa TO kappa + 1
                ENDIF
                IF (omicron < mu) AND (theta[omicron - 1] = theta[omicron])
                    THEN
                    SET theta[omicron] TO theta[omicron -1]
                    SET omicron TO omicron + 1
                    SET kappa TO kappa + 1
                ENDIF
                IF kappa < (3)
                    THEN
                    IF upsilon > 0  THEN
                        SET alpha TO theta[upsilon - 1]
                    ELSE
                        SET alpha TO theta[omicron]
                    ENDIF
                    IF alpha = 'a'  THEN
                        SET alpha TO 'b'
                    ELSE
                        IF alpha = 'z' THEN
                            SET alpha TO 'y'
                        ELSE
                            SET beta TO ORD(alpha)
                            SET beta TO beta + (1 * 1)
                            SET alpha TO CHR(beta)
                        ENDIF
                    ENDIF
                    SET delta TO upsilon
                    WHILE (delta <= upsilon + kappa - 1)
                        SET theta[delta] TO alpha
                        SET delta TO delta + 1
                    ENDWHILE
                    SET omicron TO upsilon + kappa
                ENDIF
            ENDIF
        UNTIL FALSE
        SET sigma TO ""
        SET pi TO ""
        SET rho TO 0
        WHILE rho < mu
            SET pi TO pi + theta[rho]
            SET rho TO rho + 1
        ENDWHILE
        RETURN pi
        END FUNCTION
END CLASS