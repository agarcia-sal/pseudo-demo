CLASS Solution
    FUNCTION maximumHappinessSum(happiness, k)
      PROCEDURE sortDescending(arr)
       FUNCTION swapElements(x,y)
        TEMP_1 := arr[x]
        arr[x] := arr[y]
        arr[y] := TEMP_1
       END FUNCTION
       LEN := 0
       WHILE LEN + 1 <= LENGTH(arr)
          LEN := LEN + 1
       END WHILE
       INDEX1 := LEN - 1
       WHILE INDEX1 >= 0
           INDEX2 := 0
           WHILE INDEX2 < INDEX1
               IF NOT(arr[INDEX2] >= arr[INDEX2 + 1]) THEN
                   CALL swapElements(INDEX2, INDEX2 + 1)
               END IF
               INDEX2 := INDEX2 + 1
           END WHILE
           INDEX1 := INDEX1 - 1
       END WHILE
      END PROCEDURE

      DECLARE totalSum := 0
      DECLARE dec := 0
      DECLARE pos := 0

      CALL sortDescending(happiness)

      REPEAT
        IF pos >= k THEN BREAK END IF

        CURRENT_DIFF := happiness[pos] - dec

        IF NOT (CURRENT_DIFF >= 0) THEN
          TEMP_VAR := 0
        ELSE
          TEMP_VAR := CURRENT_DIFF
        END IF

        totalSum := totalSum + TEMP_VAR
        dec := dec + 1
        pos := pos + 1
      UNTIL FALSE

      RETURN totalSum
    END FUNCTION
END CLASS