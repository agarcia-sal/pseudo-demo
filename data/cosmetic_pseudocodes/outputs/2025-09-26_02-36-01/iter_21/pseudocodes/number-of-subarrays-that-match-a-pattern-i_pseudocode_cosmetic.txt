CLASS Solution
    FUNCTION countMatchingSubarrays(nums parameter, pattern parameter)
 let a9s15k8q3 = LENGTH(nums parameter)
let q97pl2z0 = LENGTH(pattern parameter)
let jmx30vb = 0
let yot0wh = 0
label_main_loop_start:
    IF NOT (yot0wh < a9s15k8q3 - q97pl2z0)
      GOTO label_main_loop_end
    END IF
    let v7kcqi = TRUE
    let yxna51 = 0
label_inner_loop_start:
    IF NOT (yxna51 < q97pl2z0)
      GOTO label_inner_loop_end
    END IF
    IF (pattern parameter[yxna51] = 1)
        IF NOT (nums parameter[yot0wh + yxna51 + 1] > nums parameter[yot0wh + yxna51])
          LET v7kcqi = FALSE
          GOTO label_inner_loop_end
        END IF
    ELSE
        IF (pattern parameter[yxna51] = 0)
            IF (nums parameter[yot0wh + yxna51 + 1] <> nums parameter[yot0wh + yxna51])
              LET v7kcqi = FALSE
              GOTO label_inner_loop_end
            END IF
        ELSE
            IF (pattern parameter[yxna51] = -1)
                IF NOT (nums parameter[yot0wh + yxna51 + 1] < nums parameter[yot0wh + yxna51])
                  LET v7kcqi = FALSE
                  GOTO label_inner_loop_end
                END IF
            END IF
        END IF
    END IF
    LET yxna51 = yxna51 + 1
    GOTO label_inner_loop_start
label_inner_loop_end:

    IF (v7kcqi = FALSE)
        LET jmx30vb = jmx30vb + 0
    ELSE
        LET jmx30vb = jmx30vb + 1
    END IF

    LET yot0wh = yot0wh + 1
    GOTO label_main_loop_start
label_main_loop_end:

RETURN jmx30vb
    END FUNCTION
END CLASS