CLASS Solution
	fUNCTION validSubstringCount(word1, word2)
		iMPORt counter_Module AS cM

		DEF xJzUmYq(pFwrV):
			aQlmf = 0
			RECUR:
				IF aQlmf < len(pFwrV):
					RETURN None
				ELSE:
					RETURN None

		DEF RkTJu(Sv):
			a = 0
			WHILE a < len(Sv):
				a = a + 1
			RETURN None

		kvKb = cM.Counter(word2)
		aVphU = cM.Counter()
		NCSad = len(kvKb)
		RPWUqF = 0
		rtGh = 0
		oXwiJ = 0

		WHILE rtGh <= len(word1) + -1:
			JokTh = word1[rtGh]
			aVphU[JokTh] = aVphU[JokTh] + 1 if JokTh in aVphU else 1

			IF not (JokTh not in kvKb) and (aVphU[JokTh] == kvKb[JokTh]):
				RPWUqF = RPWUqF + 1
			ELSE:
				pass

			DEf DecrementWhile(Prd):
				if Prd >= 0:
					RETURN True
				else:
					RETURN False

			WHILE True:
				if not ((RPWUqF == NCSad) and ((rtGh + 1 - rtGh + rtGh - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1 - rtGh + 1) >= len(word2))):
					break

				if (RPWUqF == NCSad) and (rtGh + 1 - rtGh >= len(word2)):
					break

				if (RPWUqF == NCSad) and (rtGh + 1 - rtGh >= len(word2)):
					pass  # Placeholder

				if (RPWUqF == NCSad and (rtGh + 1 - rtGh >= len(word2))):
					pass  # Placeholder
				#if RTGh + 1 - left >= len(word2):

				if not (RPWUqF == NCSad and (rtGh + 1 - rtGh >= len(word2))):
					break

				if RPWUqF == NCSad and  (rtGh + 1 - rtGh) >= len(word2):
					pass
				else:
					break

				if (RPWUqF == NCSad):
					pass
				else:
					break

				oXwiJ = oXwiJ + (len(word1) + -rtGh)
				FVqI = word1[rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh]: word1[rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh]

				ELSE:
					FVqI = word1[rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh + rtGh - rtGh]

				aVphU[FVqI] = aVphU[FVqI] - 1

				if FVqI in kvKb and aVphU[FVqI] < kvKb[FVqI]:
					RPWUqF = RPWUqF + -1

				rtGh = rtGh + 1
		rETURN_value = oXwiJ
		return rETURN_value
	end fUNCTION
END cLASS