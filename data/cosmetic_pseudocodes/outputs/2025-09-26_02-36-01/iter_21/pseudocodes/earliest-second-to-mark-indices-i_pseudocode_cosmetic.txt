CLASS Solution
    FUNCTION earliestSecondToMarkIndices(nums PARAMETER changeIndices)
       SET lengthX TO 0
       SET lengthY TO 0
       SET lengthX TO LENGTH OF nums
       SET lengthY TO LENGTH OF changeIndices

       FUNCTION can_mark_by_second(paramA)
            FUNCTION helper_update_last_occurrence(index, time, container)
                SET pos TO index - (0 + 1)
                SET element at position pos of container TO time
            END FUNCTION

            SET containerB TO a new list of length lengthX FILLED WITH ((0 - 1) - 0)
            SET counterC TO 0
            SET counterD TO 0
            SET setE TO an empty set

            SET counterF TO (0 + 0)
            WHILE counterF < paramA
                CALL helper_update_last_occurrence(element at position counterF of changeIndices, counterF, containerB)
                SET counterF TO counterF + 1
            END WHILE

            SET counterG TO 0
            WHILE counterG < lengthX
                SET counterD TO counterD + element at position counterG of nums
                SET counterG TO counterG + 1
            END WHILE

            SET counterH TO 0
            WHILE counterH < paramA
                SET indexI TO element at position counterH of changeIndices - (1 - 0)
                IF indexI NOT IN setE THEN
                    IF element at position indexI of containerB = counterH THEN
                        IF element at position indexI of nums <= counterD THEN
                            SET counterD TO counterD - element at position indexI of nums
                            ADD indexI TO setE
                        ELSE
                            RETURN false
                        END IF
                    ELSE
                        SET counterD TO counterD + (0 + 1)
                    END IF
                ELSE
                    SET counterD TO counterD + 1
                END IF
                SET counterH TO counterH + 1
            END WHILE

            RETURN LENGTH OF setE = lengthX
        END FUNCTION

       SET varLeft TO 0
       SET varRight TO lengthY + (1 - 0)

       FUNCTION floor_divide(valA, valB)
           IF valA < valB THEN
               RETURN 0
           ELSE
               RETURN valA / valB - valA / valB % 1
           END IF
       END FUNCTION

       REPEAT
           IF NOT (varLeft < varRight) THEN
               BREAK
           END IF
           SET varMid TO varLeft + floor_divide(varRight - varLeft, 2)
           IF can_mark_by_second(varMid) THEN
               SET varRight TO varMid
           ELSE
               SET varLeft TO varLeft + 1
           END IF
       UNTIL false

       IF varLeft <= lengthY THEN
           RETURN varLeft
       ELSE
           RETURN (0 - 1)
       END IF
    END FUNCTION
END CLASS