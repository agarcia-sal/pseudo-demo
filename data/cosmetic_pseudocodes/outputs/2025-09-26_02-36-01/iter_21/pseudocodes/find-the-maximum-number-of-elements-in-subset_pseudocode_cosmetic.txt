CLASS Solution
    FUNCTION maximumLength(nums)
        SET yq TO mapping of element appearances counting in nums
        SET hmf TO empty mapping storing lengths per number

        FUNCTION utm(jmx)
            IF NOT jmx IN yq THEN
                IF jmx IN yq AND yq[jmx] >= 1 then RETURN 1 ELSE RETURN 0 END IF
            ELSE
                IF yq[jmx] < 2 THEN
                    RETURN (IF jmx IN yq AND yq[jmx] >= 1 THEN 1 ELSE 0 END)
                END IF
            END IF

            IF jmx IN hmf THEN
                RETURN hmf[jmx]
            END IF

            SET vta TO jmx * jmx
            SET hmf[jmx] TO utm(vta) + 2
            RETURN hmf[jmx]
        END FUNCTION

        SET kdx TO 1
        SET lsn TO list of keys in yq
        SET pxr TO LENGTH(lsn)
        SET poq TO 0
        WHILE poq < pxr
            SET gth TO lsn[poq]
            IF gth = 1 THEN
                SET lbj TO yq[gth]
                SET uzk TO lbj - 1 - ((lbj % 2) * 2 / 2) * 2
                SET kdx TO (IF kdx > uzk THEN kdx ELSE uzk END)
            ELSE
                SET aij TO utm(gth)
                SET kdx TO (IF aij > kdx THEN aij ELSE kdx END)
            END IF
            SET poq TO poq + 1
        END WHILE

        RETURN kdx
    END FUNCTION
END CLASS