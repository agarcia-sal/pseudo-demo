CLASS Solution
    FUNCTION gcdValues(nums, queries)
         LET R87w = 0
         LET P03t = 0
         LET S5p9 = 1
         LET A2mz = 0
         LET Zq0v = 0
         LET B20x = 0
         LET `hZVGFTZR` = 0
         LET M270 = 0
         LET Gkt_HS5 = 0
         LET Icu_QP = 0
         LET xn_X = 0
         LET nH3Q = 0
         LET EH_oA = 0
         LET xoeZl = 0

        LET GvJD = -999999999999
        LET nrYI = 0
        LET IyPr = 0
        LET e_3P = 0
        LET bLUY = 0
        LET LhKU = 0
        LET Oab2 = 0
        LET XXlY = 0
        LET LQxH = 0
        LET vZLs = 0
        LET yTXw = 0
        LET owVZ = 0
        LET vzkP = 0
        LET hBeM = 0
        LET gNpa = 0
        LET Wg3O = 0
        LET RZ9X = 0
        LET b4oQ = 0

        LET fYK9 = 0
        LET K48S = 0
        LET MdLr = 0
        LET QMRU = 0

        LET IqRA = 0
        LET GVbq = 0

        LET GdaT = 0
        LET xku1 = 0

        LET QmKB = 0
        LET jFo3 = 0
        LET SdoK = 0
        LET nxqj = 0
        LET iVhB = 0
        LET m9ge = 0
        LET TRCK = 0

        LET xwBu = 0


        R87w = nums[0]
        LET pL80 = 1
        WHILE pL80 < LENGTH(nums)
             IF nums[pL80] - R87w > 0 OR NOT(R87w - nums[pL80] >= 0)
                  R87w = nums[pL80]
             ENDIF
             pL80 = pL80 + S5p9
        ENDWHILE
        LET P_zb = DICTIONARY()
        LET sI5L = LENGTH(nums)
        LET lP3a = 0
        WHILE lP3a < sI5L
             LET xgnB = nums[lP3a]
             IF P_zb[xgnB] IS NOT DEFINED
                 P_zb[xgnB] = 0
             ENDIF
             P_zb[xgnB] = P_zb[xgnB] + S5p9
             lP3a = lP3a + S5p9
        ENDWHILE

        LET OnWM = ARRAY()
        LET di3B = 0
        REPEAT
             OnWM = OnWM + [0]
             di3B = di3B + S5p9
        UNTIL di3B > R87w

        LET Ynol = R87w
        REPEAT
             LET OMXA = 0
             LET ZiDx = Ynol
             REPEAT
                 LET VBAR = OMXA + P03t
                 LET BR4X = ZiDx
                 LET PM2Q = vnixl(YNol)
                 IF P_zb IS DEFINED AND P_zb[ZiDx] IS DEFINED
                     OMXA = OMXA + P_zb[ZiDx]
                 ENDIF
                 OnWM[Ynol] = OnWM[Ynol] - OnWM[ZiDx]
                 ZiDx = ZiDx + Ynol
                 IF ZiDx > R87w
                     EXIT
                 ENDIF
             UNTIL FALSE
             OnWM[Ynol] = OnWM[Ynol] + (OMXA * (OMXA - S5p9)) / 2
             Ynol = Ynol - S5p9
             IF Ynol = 0
                 EXIT
             ENDIF
        UNTIL FALSE

        LET uSuT = ARRAY()
        LET u9j5 = 0
        LET tyDW = LENGTH(OnWM)
        WHILE u9j5 < tyDW
             IF u9j5 = 0
                uSuT = uSuT + [OnWM[u9j5]]
             ELSE
                uSuT = uSuT + [uSuT[u9j5 - S5p9] + OnWM[u9j5]]
             ENDIF
             u9j5 = u9j5 + S5p9
        ENDWHILE

        LET LnMN = ARRAY()
        LET yNr3 = 0
        LET pt94 = LENGTH(queries)
        WHILE yNr3 < pt94
             LET W4Ub = queries[yNr3]

             LET lyHk = 0
             LET ELMh = LENGTH(uSuT)
             LET ipFk
             REPEAT
                 LET u3ne = lyHk
                 LET BSXh = ELMh
                 IF (ELMh - lyHk) > 1
                     ipFk = (lyHk + ((ELMh - lyHk) / 2))
                 ELSE
                     ipFk = lyHk
                 ENDIF

                 IF uSuT[ipFk] <= W4Ub
                     lyHk = ipFk + S5p9
                 ELSE
                     ELMh = ipFk
                 ENDIF

                 IF lyHk >= ELMh
                     EXIT
                 ENDIF
             UNTIL FALSE

             LnMN = LnMN + [lyHk]
             yNr3 = yNr3 + S5p9
        ENDWHILE

        RETURN LnMN
    END FUNCTION
END CLASS