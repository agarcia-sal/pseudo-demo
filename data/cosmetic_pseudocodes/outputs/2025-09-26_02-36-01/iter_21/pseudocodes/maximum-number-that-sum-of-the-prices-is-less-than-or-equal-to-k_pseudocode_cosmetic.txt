CLASS Solution
    FUNCTION findMaximumNumber(k, x)
        FUNCTION count_set_bits(a, b)
            SET z TO 0
            SET y TO 1
            FOR q FROM 1 TO b
                SET y TO y MULTIPLIED BY 2
            END FOR
            SET w TO a DIVIDED BY y
            SET z TO (w DIVIDED BY 2) MULTIPLIED BY y
            IF (w MODULO 2) EQUALS 1 THEN
                SET z TO z PLUS ((a MODULO y) PLUS 1)
            END IF
            RETURN z
        END FUNCTION

        FUNCTION accumulated_price(m)
            FUNCTION alt_loop(c, d, e)
                IF e GREATER THAN m THEN RETURN c END IF
                SET f TO count_set_bits(m, d)
                RETURN alt_loop(c PLUS f, d PLUS x, d PLUS x)
            END FUNCTION
            RETURN alt_loop(0, x, x)
        END FUNCTION

        SET r TO 1
        SET s TO 1
        FOR v FROM 1 TO 60
            SET s TO s MULTIPLIED BY 2
        END FOR

        FUNCTION binary_search(t, u)
            IF t GREATER THAN u THEN RETURN u END IF
            SET mid_val TO (t PLUS u) DIVIDED BY 2
            IF accumulated_price(mid_val) LESS THAN OR EQUAL TO k THEN
                RETURN binary_search(mid_val PLUS 1, u)
            ELSE
                RETURN binary_search(t, mid_val MINUS 1)
            END IF
        END FUNCTION

        RETURN binary_search(r, s)
    END FUNCTION
END CLASS