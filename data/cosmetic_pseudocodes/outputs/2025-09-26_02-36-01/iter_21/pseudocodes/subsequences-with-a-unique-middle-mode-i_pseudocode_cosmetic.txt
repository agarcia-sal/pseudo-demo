CLASS Solution
    FUNCTION subsequencesWithMiddleMode(nums)
        SET Rxy TO 1000000000 + 7
        SET Qa TO LENGTH(nums)
        IF NOT (Qa >= 5) THEN
            SET Vjz TO 0
            RETURN Vjz
        END IF
        SET Wfpi TO []
        CALL GenerateFiveCombs(nums, 0, [], Wfpi)

        SET Nkt TO 0

        SET Zdq TO 0
        WHILE Zdq < LENGTH(Wfpi)
            SET Uv ← Wfpi[Zdq]

            CALL CountFreq(Uv, Fkw)
            SET Kzx TO Uv[2]

            GET Fhx AS 0
            IF Kzx IN Fkw THEN
                SET Fhx ← Fkw[Kzx]
            END IF

            SET Toco TO TRUE

            SET Indx ← 0
            SET KeyList ← KEYS(Fkw)
            WHILE Indx < LENGTH(KeyList)
                SET Elm ← KeyList[Indx]
                SET Cnt ← Fkw[Elm]
                IF (Elm ≠ Kzx) AND (Cnt >= Fhx) THEN
                    SET Toco ← FALSE
                    BREAK
                END IF
                SET Indx ← Indx + 1
            END WHILE

            IF Toco THEN
                SET Nkt ← Nkt + 1
            END IF
            SET Zdq ← Zdq + 1
        END WHILE

        SET Yrt ← Nkt % Rxy
        RETURN Yrt
    END FUNCTION

    FUNCTION GenerateFiveCombs(arr, start, curr, result)
        IF LENGTH(curr) = 5 THEN
            APPEND curr TO result
            RETURN
        END IF

        IF start >= LENGTH(arr) THEN
            RETURN
        END IF

        CALL GenerateFiveCombs(arr, start + 1, curr, result)

        CALL GenerateFiveCombs(arr, start + 1, curr + [arr[start]], result)
    END FUNCTION

    FUNCTION CountFreq(lst, freqMap)
        SET freqMap TO EMPTY MAP
        SET idx ← 0
        REPEAT
            IF idx >= LENGTH(lst) THEN
                BREAK
            END IF
            SET v ← lst[idx]
            IF v IN freqMap THEN
                SET freqMap[v] ← freqMap[v] + 1
            ELSE
                SET freqMap[v] ← 0 + 1
            END IF
            SET idx ← idx + 1
        UNTIL FALSE
    END FUNCTION
END CLASS