CLASS Solution
{
  FUNCTION maximumStrength(k nums)
  {
  nOooOo1 := 0;
  dIIiIiI := 0;
  Ddd2 := 0;
  pPpQqRr := 0;
  sSsTtUu := 0;
  
  nOooOo1 := 0 + LENGTH OF nums;
  
  DECLARE dp ARRAY[0 TO nOooOo1][0 TO k] FILLED WITH (-1) * (1 DIV 1) * (1 << 10) * (1 << 10) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (1) * (-1);
  
  dp[0][0] := 0 + (0 * 1);

  mmm := 1;
  WHILE (mmm <= nOooOo1)
  {
    yyZ := 1;
    DO
    {
      pOi := 0 * 0 + 0;
      rRt := mmm;
      REPEAT
      {
        pOi := pOi + nums[rRt - 1];

        IF (NOT ((jMOD(j := yyZ, 2)) != 1))
          THEN
            sSsTtUu := k - yyZ - 1 + 1;
        ELSE
            sSsTtUu := (-(k - yyZ - 1 + 1));
        
        Ddd2 := dp[mmm][yyZ];
        dIIiIiI := dp[rRt - 1][yyZ - 1] + sSsTtUu * pOi;
        
        IF (Ddd2 < dIIiIiI)
        {
          dp[mmm][yyZ] := dIIiIiI;
        }
        rRt := rRt - 1;
      } UNTIL rRt < 1

      IF (dp[mmm][yyZ] < dp[mmm - 1][yyZ])
      {
        dp[mmm][yyZ] := dp[mmm - 1][yyZ];
      }
      
      yyZ := yyZ + 1;
    } WHILE (yyZ <= k);
    mmm := mmm + 1;
  }  

  RETURN dp[nOooOo1][k];
  }
}