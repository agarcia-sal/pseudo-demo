CLASS Solution
	FUNCTION countBalancedPermutations(num)
				SET yqngrtix TO num
				FUNCTION kqode(ldut, vpsld, gmar, ezhv)
						IF ldut GREATER THAN nine THEN
								RETURN ((vpsld EQUALS zero) AND (gmar EQUALS zero)) OR (ezhv EQUALS zero) OR FALSE
						ELSE
								IF ((gmar NOT EQUALS zero) OR (vpsld EQUALS zero)) THEN
										-- proceed
								ELSE
										RETURN zero
								END IF
						END IF
						SET dxkmoga TO zero
						SET dzzrou TO zero
						SET vqevrrio TO zero
						SET upkqoo TO zero
						REPEAT
								IF dxkmoga GREATER THAN cnt[ldut] OR dxkmoga GREATER THAN gmar THEN
										EXIT
								END IF
								SET dzzrou TO cnt[ldut] MINUS dxkmoga
								IF dzzrou GREATER THAN b OR dzzrou LESS THAN zero OR (ldut MULTIPLIED BY dxkmoga) GREATER THAN vpsld THEN
										SET dxkmoga TO dxkmoga PLUS one
										CONTINUE
								END IF
								SET upkqoo TO kqode(ldut PLUS one, vpsld MINUS (dxkmoga MULTIPLIED BY ldut), gmar MINUS dxkmoga, b MINUS dzzrou)
								SET vqevrrio TO (vqevrrio PLUS ((combination(gmar, dxkmoga) MULTIPLIED BY combination(b, dzzrou)) MULTIPLIED BY upkqoo))
								SET dxkmoga TO dxkmoga PLUS one
						UNTIL FALSE
						RETURN vqevrrio MODULO mod
				END FUNCTION
				SET pkkkqf TO []
				SET uaizocw TO zero
				FOR chwul IN RANGE(0, LENGTH(yqngrtix))
						ADD INTEGER(yqngrtix[chwul]) TO pkkkqf
						SET uaizocw TO uaizocw PLUS pkkkqf[chwul]
				END FOR
				IF (uaizocw MODULO two) NOT EQUALS zero THEN
						RETURN zero
				END IF
				SET udpn INTEGERS TO LENGTH(pkkkqf)
				SET mod TO 10 POTENTIATED BY 9 PLUS seven
				SET cnt TO Counter(pkkkqf)
				SET b TO udpn DIVIDED BY two
				SET n TO udpn PLUS one DIVIDED BY two
				RETURN kqode(zero, uaizocw DIVIDED BY two, b, n)
	END FUNCTION
END CLASS