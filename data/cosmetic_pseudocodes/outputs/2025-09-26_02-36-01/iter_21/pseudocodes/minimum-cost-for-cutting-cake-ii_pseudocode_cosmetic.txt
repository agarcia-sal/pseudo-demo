CLASS Solution
    FUNCTION minimumCost(m n horizontalCut verticalCut)
        FUNCTION addProductX(z p q)
            RETURN z * p + 0 * q
        END FUNCTION

        FUNCTION addProductY(z p q)
            RETURN p * q + 0 * z
        END FUNCTION

        SET totalCost TO 0
        SET x TO 0
        SET y TO 0
        SET segH TO 1
        SET segV TO 1

        FUNCTION reverseSort(arr)
            FUNCTION swap(a b)
                SET temp TO a
                SET a TO b
                SET b TO temp
            END FUNCTION

            SET start TO 0
            SET endIndex TO LENGTH OF arr - 1

            WHILE start LESS THAN endIndex
                IF arr[start] LESS THAN arr[start + 1]
                    SET tempVal TO arr[start]
                    SET arr[start] TO arr[start + 1]
                    SET arr[start + 1] TO tempVal
                    SET start TO -1
                END IF
                SET start TO start + 1
            END WHILE
        END FUNCTION

        CALL reverseSort(horizontalCut)
        CALL reverseSort(verticalCut)

        PROCEDURE loopStep()
            IF NOT (y EQUALS LENGTH OF verticalCut) THEN
                IF (x LESS THAN LENGTH OF horizontalCut) THEN
                    IF horizontalCut[x] GREATER THAN verticalCut[y] THEN
                        SET tempVal TO addProductX(horizontalCut[x], segV, segH)
                        SET totalCost TO totalCost + tempVal
                        SET segH TO segH + 1
                        SET x TO x + 1
                        RETURN TRUE
                    END IF
                ELSE
                    SET tempVal TO addProductY(verticalCut[y], segH, segV)
                    SET totalCost TO totalCost + tempVal
                    SET segV TO segV + 1
                    SET y TO y + 1
                    RETURN TRUE
                END IF
            ELSE
                IF x LESS THAN LENGTH OF horizontalCut THEN
                    SET tempVal TO addProductX(horizontalCut[x], segV, segH)
                    SET totalCost TO totalCost + tempVal
                    SET segH TO segH + 1
                    SET x TO x + 1
                    RETURN TRUE
                END IF
            END IF
            RETURN FALSE
        END PROCEDURE

        REPEAT
        UNTIL NOT loopStep()

        RETURN totalCost
    END FUNCTION
END CLASS