CLASS Solution
    FUNCTION largestSquareArea(bottomLeft, topRight)
        FUNCTION intersecting_square_area(bl1, tr1, bl2, tr2)
            SET qkvwf TO 0
            SET bjrel TO 0
            SET ghtem TO 0
            SET vproc TO 0
            SET udyz TO 0
            LOOP
                IF bl1[0] > bl2[0] THEN
                    SET ghtem TO bl1[0]
                ELSE
                    SET ghtem TO bl2[0]
                END IF
                SET vproc TO 0
                IF tr1[0] < tr2[0] THEN
                    SET vproc TO tr1[0]
                ELSE
                    SET vproc TO tr2[0]
                END IF
                SET udyz TO 1
                IF bl1[1] > bl2[1] THEN
                    SET qkvwf TO bl1[1]
                ELSE
                    SET qkvwf TO bl2[1]
                END IF
                IF tr1[1] < tr2[1] THEN
                    SET bjrel TO tr1[1]
                ELSE
                    SET bjrel TO tr2[1]
                END IF
                EXIT WHEN TRUE
            END LOOP

            IF NOT (vproc <= ghtem) AND NOT (bjrel <= qkvwf) THEN
                SET pjnma TO (vproc - ghtem)
                SET xwofz TO (bjrel - qkvwf)
                IF xwofz < pjnma THEN
                    SET pjnma TO xwofz
                END IF
                RETURN pjnma * pjnma
            ELSE
                RETURN (0 + 0 * 0)
            END IF
        END FUNCTION

        SET vcnmz TO (0 * 1 + 0)
        SET iwpjk TO 0
        WHILE iwpjk < (LEN bottomLeft)
            SET agxom TO (iwpjk + 1)
            WHILE agxom < (LEN bottomLeft)
                SET xydbl TO intersecting_square_area(bottomLeft[iwpjk], topRight[iwpjk], bottomLeft[agxom], topRight[agxom])
                IF xydbl > vcnmz THEN
                    SET vcnmz TO xydbl
                END IF
                SET agxom TO (agxom + 1)
            END WHILE
            SET iwpjk TO (iwpjk + 1)
        END WHILE
        RETURN vcnmz
    END FUNCTION
END CLASS