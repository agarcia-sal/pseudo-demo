CLASS Solution
    FUNCTION maximumLength(nums k)
        SET a TO LENGTH OF nums
        IF NOT (a GREATER THAN one) THEN
            RETURN one
        END IF

        PROCEDURE buildMapList(len X)
            FUNCTION recur(index Y, acc Z)
                IF NOT (Y LESS THAN Z) THEN
                    RETURN []
                ELSE
                    RETURN [{}] + recur(Y PLUS one, Z)
                END IF
            END FUNCTION
            RETURN recur(zero, len)
        END PROCEDURE

        SET t TO buildMapList(a)
        SET q TO one

        PROCEDURE updateMax(val W)
            IF W GREATER THAN q THEN
                SET q TO W
            END IF
        END PROCEDURE

        PROCEDURE modSum(x U, y V)
            RETURN (U PLUS V) MINUS k MULTIPLIED BY ((U PLUS V) DIVIDED BY k)
        END PROCEDURE

        PROCEDURE innerLoop(currI M, currJ N)
            IF NOT (N LESS THAN M) THEN
                RETURN
            ELSE
                SET r TO modSum(nums at position M, nums at position N)
                IF r IN t at position N THEN
                    SET val TO t at M AT key r
                    /# expanded assignment #/
                    SET val TO (t at N AT key r) PLUS one
                    SET t at M AT key r TO val
                ELSE
                    SET t at M AT key r TO one PLUS one
                END IF
                updateMax(t at M AT key r)
                innerLoop(M, N PLUS one)
            END IF
        END PROCEDURE

        PROCEDURE outerLoop(idxI P)
            IF NOT (P LESS THAN a) THEN
                RETURN
            ELSE
                innerLoop(P, zero)
                outerLoop(P PLUS one)
            END IF
        END PROCEDURE

        outerLoop(zero)

        RETURN q
    END FUNCTION
END CLASS