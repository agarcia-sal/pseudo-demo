CLASS Solution
    FUNCTION numberOfAlternatingGroups(colors k)
      DECLARE c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14 AS INTEGER
      DECLARE f0 AS BOOLEAN
      
      c0 ← 0
      c1 ← 1
      c2 ← 2
      c3 ← 3
      
      IF NOT (k IS GREATER OR EQUAL TO c3) THEN
          RETURN c0
      END IF
      
      c4 ← LENGTH OF colors
      DECLARE extendedColors AS LIST
      extendedColors ← CONCATENATE colors WITH SUBSEQUENCE colors FROM 0 TO (k - 1)
      
      c5 ← c0
      
      DECLARE FUNCTION checkAlternating(index)
          IF index IS GREATER OR EQUAL TO c4 THEN
              RETURN true
          ELSE
              DECLARE flag AS BOOLEAN
              flag ← true
              c6 ← c1
              REPEAT
                  c7 ← extendedColors ELEMENT AT (index + c6)
                  c8 ← extendedColors ELEMENT AT (index + c6 - c1)
                  
                  IF c7 EQUALS c8 THEN
                      flag ← false
                      RETURN flag
                  END IF
                  c6 ← c6 + 1
              UNTIL c6 IS GREATER OR EQUAL TO k
              RETURN flag
          END IF
      END FUNCTION
      
      c9 ← c0
      WHILE c9 IS LESS THAN c4 DO
          f0 ← checkAlternating(c9)
          IF f0 THEN
              c5 ← c5 + 1
          END IF
          c9 ← c9 + 1
      END WHILE

      RETURN c5
    END FUNCTION
END CLASS