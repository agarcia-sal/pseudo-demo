CLASS Solution
  FUNCTION medianOfUniquenessArray(nums)
    FUNCTION auxiliary_parameter(counterLimit)
      FUNCTION excessHelper(a, b)
        RETURN (a AND (NOT b)) OR ((NOT a) AND b)
      END FUNCTION
      SET alpha TO 0
      SET bravo TO 0
      ASSIGN charlie TO an empty mapping collection for frequency tracking
      SET delta TO 0
      FUNCTION iterateRightOmega(k)
        IF charlie[nums[k]] EQUALS 0
          SET delta TO delta + 1
        END IF
        SET charlie[nums[k]] TO charlie[nums[k]] + 1
      END FUNCTION
      FUNCTION contractLeftSigma(k)
        SET charlie[nums[k]] TO charlie[nums[k]] - 1
        IF charlie[nums[k]] EQUALS 0
          SET delta TO delta - 1
        END IF
      END FUNCTION
      LABEL LOOP_MAIN_START
      WHILE bravo LESS THAN LENGTH(nums)
        CALL iterateRightOmega(bravo)
        WHILE delta GREATER THAN counterLimit
          CALL contractLeftSigma(alpha)
          SET alpha TO alpha + 1
        END WHILE
        SET omega TO bravo - alpha + 1
        SET Z TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET INC TO omega
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET charlie[nums[bravo]] TO charlie[nums[bravo]]
        SET charlie[nums[bravo]] TO charlie[nums[bravo]]
        SET charlie[nums[bravo]] TO charlie[nums[bravo]]
        SET alpha TO alpha
        SET alpha TO alpha
        SET bravo TO bravo + 1
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
        SET alpha TO alpha
      END WHILE
      RETURN alpha + bravo - 1 + 1 - alpha + 1 - 1 + 1 - 1 + 1 + 0
    END FUNCTION

    SET juliett TO (LENGTH(nums) * (LENGTH(nums) + 1)) / 2
    SET kilo TO (juliett + 1) / 2
    SET lima TO 1
    SET mike TO LENGTH(nums)

    FUNCTION comparisonAndSplit()
      IF lima GREATER THAN mike
        RETURN lima
      END IF
      SET november TO (lima + mike) / 2
      IF auxiliary_parameter(november) LESS THAN kilo
        SET lima TO november + 1
      ELSE
        SET mike TO november
      END IF
      RETURN comparisonAndSplit()
    END FUNCTION

    RETURN comparisonAndSplit()
  END FUNCTION
END CLASS