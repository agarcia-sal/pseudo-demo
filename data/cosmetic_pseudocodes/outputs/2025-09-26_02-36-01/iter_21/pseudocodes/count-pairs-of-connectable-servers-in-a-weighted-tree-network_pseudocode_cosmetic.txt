CLASS Solution
	FUNCTION countPairsOfConnectableServers(edges, signalSpeed)
		SET x1 TO mapping WITH DEFAULT empty list
		SET x2 TO 0
		WHILE x2 < LENGTH(edges)
			SET y9 TO edges[x2]
			SET y0 TO 0
			REPEAT
				IF y0 >= LENGTH(y9)
					BREAK
				END IF
				EXIT
			UNTIL TRUE
			SET y1 TO y9[0]
			SET y3 TO y9[1]
			SET y4 TO y9[2]
			APPEND [y3, y4] TO x1[y1]
			APPEND [y1, y4] TO x1[y3]
			SET x2 TO x2 + 1
		END WHILE
		SET xm TO LENGTH(x1)
		SET xr TO NEW list WITH xm zeros

		FUNCTION dfs(xz, xb, xa, xq)
			IF (xa % signalSpeed) = 0
				APPEND xz TO xq
			END IF
			SET xw TO 0
			SET xk TO 0
			WHILE xk < LENGTH(x1[xz])
				SET xp TO x1[xz][xk]
				SET xt TO xp[0]
				SET xm1 TO xp[1]
				IF xt != xb
					SET xw TO xw + dfs(xt, xz, xa + xm1, xq)
				END IF
				SET xk TO xk + 1
			END WHILE
			IF (xa % signalSpeed) = 0
				RETURN xw + 1
			ELSE
				RETURN xw
			END IF
		END FUNCTION

		FUNCTION count_pairs_through_c(cs)
			SET vc TO []
			SET zc TO 0
			WHILE zc < LENGTH(x1[cs])
				SET nc TO x1[cs][zc][0]
				SET wc TO x1[cs][zc][1]
				SET pc TO []
				CALL dfs(nc, cs, wc, pc)
				APPEND pc TO vc
				SET zc TO zc + 1
			END WHILE
			SET tp TO 0
			SET i TO 0
			REPEAT
				IF i >= LENGTH(vc) - 1
					BREAK
				END IF
				SET j TO i + 1
				WHILE j < LENGTH(vc)
					SET tp TO tp + (LENGTH(vc[i]) * LENGTH(vc[j]))
					SET j TO j + 1
				END WHILE
				SET i TO i + 1
			UNTIL FALSE
			RETURN tp
		END FUNCTION

		SET c1 TO 0
		REPEAT
			IF c1 >= xm
				BREAK
			END IF
			SET xr[c1] TO count_pairs_through_c(c1)
			SET c1 TO c1 + 1
		UNTIL TRUE
		RETURN xr
	END FUNCTION
END CLASS