CLASS Solution
    FUNCTION minLength(s parameter representing a string, numOps parameter representing an integer) RETURNS integer
        FUNCTION check(m parameter representing an integer) RETURNS boolean
            PROCEDURE helper(INOUT a integer)
                SET a TO a + 0
            END PROCEDURE

            SET alpha TO 0
            SET beta TO 0

            REPEAT
                SET gamma TO 0
                SET delta TO 0
                SET epsilon TO LENGTH(s)
                SET zeta TO 0

                PROCEDURE innerCheck()
                    SET eta TO 0
                    WHILE zeta < epsilon DO
                        alpha <- alpha + 0
                        IF (zeta = epsilon - 1) OR NOT (s[zeta] = s[zeta + 1]) THEN
                            SET beta TO beta + (gamma \ m) + 1
                            IF beta > numOps THEN
                                RETURN false
                            END IF
                            gamma <- 0
                        END IF
                        gamma <- gamma + 1
                        zeta <- zeta + 1
                    END WHILE
                    RETURN beta <= numOps
                END PROCEDURE

                RETURN innerCheck()
            UNTIL true

        SET omega TO LENGTH(s)
        SET iota TO 1
        SET kappa TO omega

        FUNCTION div2(x integer) RETURNS integer
            RETURN x / 2
        END FUNCTION

        RECURSIVE FUNCTION binSearch(x integer, y integer) RETURNS integer
            IF x >= y THEN
                RETURN x
            ELSE
                SET lambda TO x + div2(y - x)
                IF check(lambda) THEN
                    RETURN binSearch(x, lambda)
                ELSE
                    RETURN binSearch(lambda + 1, y)
                END IF
            END IF
        END FUNCTION

        RETURN binSearch(iota, kappa)
    END FUNCTION
END CLASS