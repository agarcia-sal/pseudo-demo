CLASS Solution   
	 FUNCTION compressedString( word )  
	    SET  α TO 0  
	    SET  β  TO empty list  
	    :loop_1_pragma:   
	    IF α NOT LESS THAN LENGTH(word) THEN GOTO label_end_1   
	    SET  γ TO ELEMENT(word, α)  
	    SET  δ TO 0  
	    :loop_2_pragma:  
	    IF NOT (α LESS THAN LENGTH(word)) THEN GOTO label_end_2   
	    IF NOT (ELEMENT(word, α) EQUALS γ) THEN GOTO label_end_2   
	    SET δ TO δ PLUS 1  
	    SET α TO α PLUS 1  
	    IF δ EQUALS (4 PLUS 5) THEN GOTO label_end_2   
	    GOTO loop_2_pragma  
	    label_end_2:  
	    SET ε TO TO_STRING(δ) CONCAT γ  
	    APPEND ε TO β  
	    GOTO loop_1_pragma  
	    label_end_1:  
	    FUNCTION joinSequence(seq)  
	        SET ζ TO ""  
	        SET η TO 0  
	        :repeat_join:  
	        IF η EQUALS LENGTH(seq) THEN RETURN ζ  
	        SET ζ TO ζ CONCAT ELEMENT(seq, η)  
	        SET η TO η PLUS 1  
	        GOTO repeat_join  
	    END FUNCTION  
	    RETURN joinSequence(β)  
	 END FUNCTION  
END CLASS