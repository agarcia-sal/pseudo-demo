CLASS Solution
    FUNCTION maxHammingDistances(nums LIST OF INTEGER m INTEGER) RETURNS LIST OF INTEGER
      FUNCTION calculateDifference(a STRING b STRING) RETURNS INTEGER
           SET c TO 0
           SET d TO 0
           REPEAT
               IF NOT (a[d] = b[d]) THEN
                   SET c TO c + 1
               END IF
               SET d TO d + 1
           UNTIL d = LENGTH(a)
           RETURN c
      END FUNCTION
      
      SET e TO []
      
      FUNCTION convertToBinary(value INTEGER) RETURNS STRING
          SET f TO ""
          SET g TO value
          WHILE LENGTH(f) < m
              SET h TO (g % 2) + CHAR(48)
              SET f TO h + f
              SET g TO g / 2
          END WHILE
          RETURN f
      END FUNCTION
      
      SET i TO 0
      WHILE i < LENGTH(nums)
          APPEND convertToBinary(nums[i]) TO e
          SET i TO i + 1
      END WHILE
      
      SET j TO []
      SET k TO 0
      REPEAT
          SET l TO 0
          SET m_var TO 0
          WHILE l < LENGTH(nums)
              IF NOT (k = l) THEN
                  SET n TO calculateDifference(e[k], e[l])
                  IF n > m_var THEN
                      SET m_var TO n
                  END IF
              END IF
              SET l TO l + 1
          END WHILE
          APPEND m_var TO j
          SET k TO k + 1
      UNTIL k = LENGTH(nums)
      
      RETURN j
    END FUNCTION
END CLASS