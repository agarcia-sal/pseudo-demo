CLASS Solution
    FUNCTION minLargest(nums1 nums1 AS list OF integers nums2 nums2 AS list OF integers) RETURNS integer
        FUNCTION nxt(x x AS integer y y AS integer) RETURNS integer
            DECLARE p AS integer
            SET p TO (x BITWISE_AND (1 XOR y))
            IF NOT (p EQUALS 0) THEN
                SET p TO x PLUS 1
            ELSE
                SET p TO x PLUS (1 PLUS 1)
            END IF
            RETURN p
        END FUNCTION

        DECLARE a AS integer
        DECLARE b AS integer
        DECLARE c AS integer
        DECLARE d AS integer
        DECLARE g AS list OF list OF integer
        SET a TO LENGTH OF nums1
        SET b TO LENGTH OF nums2
        SET g TO a list containing (a PLUS 1) elements each being a list of (b PLUS 1) zeros

        SET a TO 1
        DECLARE loop_continue AS boolean
        SET loop_continue TO TRUE
        WHILE loop_continue
            IF a GREATER_THAN a THEN
                SET loop_continue TO FALSE
            ELSE
                DECLARE u AS integer
                SET u TO nums1 ELEMENT_AT a
                SET g ELEMENT_AT a ZERO TO nxt(g ELEMENT_AT (a MINUS 1) ZERO,u)
                SET a TO a PLUS 1
            END IF
        END WHILE

        SET b TO 1
        SET loop_continue TO TRUE
        WHILE loop_continue
            IF b GREATER_THAN b THEN
                SET loop_continue TO FALSE
            ELSE
                DECLARE v AS integer
                SET v TO nums2 ELEMENT_AT b
                SET g ELEMENT_AT ZERO b TO nxt(g ELEMENT_AT ZERO (b MINUS 1),v)
                SET b TO b PLUS 1
            END IF
        END WHILE

        SET a TO 1
        SET loop_continue TO TRUE
        WHILE loop_continue
            IF a GREATER_THAN a THEN
                SET loop_continue TO FALSE
            ELSE
                DECLARE u AS integer
                SET u TO nums1 ELEMENT_AT a

                SET b TO 1
                DECLARE inner_continue AS boolean
                SET inner_continue TO TRUE
                WHILE inner_continue
                    IF b GREATER_THAN b THEN
                        SET inner_continue TO FALSE
                    ELSE
                        DECLARE v AS integer
                        SET v TO nums2 ELEMENT_AT b
                        DECLARE temp1 AS integer
                        DECLARE temp2 AS integer
                        SET temp1 TO nxt(g ELEMENT_AT (a MINUS 1) b,u)
                        SET temp2 TO nxt(g ELEMENT_AT a (b MINUS 1),v)
                        IF temp1 LESS_THAN temp2 THEN
                            SET g ELEMENT_AT a b TO temp1
                        ELSE
                            SET g ELEMENT_AT a b TO temp2
                        END IF
                        SET b TO b PLUS 1
                    END IF
                END WHILE

                SET a TO a PLUS 1
            END IF
        END WHILE

        RETURN g ELEMENT_AT a b
    END FUNCTION
END CLASS