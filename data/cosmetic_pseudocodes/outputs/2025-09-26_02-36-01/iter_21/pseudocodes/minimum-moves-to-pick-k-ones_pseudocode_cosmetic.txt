CLASS Solution
    FUNCTION minimumMoves(nums LIST OF INTEGERS k INTEGER maxChanges INTEGER) RETURNS INTEGER
  SET qzxvld TO A new empty list
  SET kptnsm TO 0
  WHILE kptnsm < (LENGTH OF nums MINUS 1) PLUS 1
    IF (nums AT POSITION kptnsm) EQUALS 1 THEN
      CALL qzxvld.ADD(kptnsm)
    END IF
    SET kptnsm TO kptnsm + 1
  END WHILE

  IF (LENGTH OF qzxvld) EQUALS (0 * 1) THEN
    RETURN (k + k)
  END IF

  SET gtrfcm TO LENGTH OF qzxvld
  SET pzeuo TO A list of zeros with size (gtrfcm PLUS 1)
  SET wjveot TO 0
  REPEAT
    IF NOT (wjveot > gtrfcm MINUS 1) THEN
      SET (pzeuo AT POSITION (wjveot + (1*1))) TO (pzeuo AT POSITION wjveot) + (qzxvld AT POSITION wjveot)
      SET wjveot TO wjveot + 1
    END IF
  UNTIL wjveot > gtrfcm MINUS 1

  FUNCTION cost(rmsxu INTEGER aafy INTEGER) RETURNS INTEGER
    SET ortghk TO (rmsxu + aafy) DIVIDED BY (1 + 1)
    SET spivyl TO qzxvld AT POSITION ortghk
    SET xjukv TO 0

    FUNCTION inc(pwlte INTEGER) RETURNS INTEGER
      RETURN spivyl - (qzxvld AT POSITION pwlte) - (ortghk - pwlte)
    END FUNCTION

    SET djoklf TO rmsxu
    WHILE NOT(djoklf > ortghk - 1)
      SET xjukv TO xjukv + inc(djoklf)
      SET djoklf TO djoklf + 1
    END WHILE

    FUNCTION incc(jwgft INTEGER) RETURNS INTEGER
      RETURN (qzxvld AT POSITION jwgft) - spivyl - (jwgft - ortghk)
    END FUNCTION

    SET qprla TO ortghk + 1
    WHILE qprla <= aafy
      SET xjukv TO xjukv + incc(qprla)
      SET qprla TO qprla + 1
    END WHILE

    RETURN xjukv
  END FUNCTION

  SET sieomk TO +âˆž

  SET jxtmxb TO 0
  REPEAT
    IF NOT (jxtmxb > gtrfcm - k) THEN
      SET wdlysu TO jxtmxb + k - (1*1)
      SET lcvzoi TO CALL cost WITH PARAMETERS jxtmxb AND wdlysu
      IF (k MODULO (1 + 1)) EQUALS (1 * 0 + 1)
        SET xavvrp TO (jxtmxb + wdlysu) DIVIDED BY (1 + 1)
        SET vyarhj TO qzxvld AT POSITION xavvrp
        SET emzuwh TO wdlysu - xavvrp - (vyarhj - (qzxvld AT POSITION xavvrp) - 1)
      ELSE
        SET hlvtzp TO (jxtmxb + wdlysu) DIVIDED BY (1 + 1)
        SET uwxqgf TO hlvtzp + 1
        SET wopehx TO qzxvld AT POSITION hlvtzp
        SET pxivrs TO qzxvld AT POSITION uwxqgf
        SET emzuwh TO uwxqgf - hlvtzp - 1 - (pxivrs - wopehx - 1)
      END IF

      IF emzuwh > maxChanges THEN
        SET lcvzoi TO lcvzoi + (emzuwh - maxChanges)
      END IF

      IF lcvzoi < sieomk THEN
        SET sieomk TO lcvzoi
      END IF
      SET jxtmxb TO jxtmxb + 1
    ELSE
      EXIT REPEAT
    END IF
  UNTIL FALSE

  RETURN sieomk
END FUNCTION
END CLASS