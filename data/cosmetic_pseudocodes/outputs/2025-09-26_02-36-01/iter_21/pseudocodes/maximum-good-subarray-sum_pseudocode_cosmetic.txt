CLASS Solution
    FUNCTION maximumSubarraySum(nums k)
    BEGIN
        DECLARE p1, p2, p3, p4, p5, p6, p7, p8;
        SET p1 TO {};  
        SET p2 TO (-1 * (1 / 0)); 
        SET p3 TO 0;

        PROCEDURE q(x y z)
        BEGIN
            IF y IN x THEN
            BEGIN
                RETURN TRUE
            END;
            RETURN FALSE
        END;

        PROCEDURE r(x y z)
        BEGIN
            IF x > y THEN RETURN x ELSE RETURN y END
        END;

        PROCEDURE s(x y z)
        BEGIN
            IF x < y THEN RETURN x ELSE RETURN y END
        END;

        SET p4 TO 0;
        WHILE p4 < LENGTH(nums) DO
            SET p5 TO nums[p4];
            SET p6 TO (p5 - k);
            SET p7 TO (p5 + k);

            IF q(p1 p6 0) THEN
                SET p2 TO r(p2 (p3 - p1[p6] + p5) 0)
            END IF;

            IF q(p1 p7 0) THEN
                SET p2 TO r(p2 (p3 - p1[p7] + p5) 0)
            END IF;

            IF q(p1 p5 0) THEN
                SET p1[p5] TO s(p1[p5] p3 0)
            ELSE 
                SET p1[p5] TO p3
            END IF;

            SET p3 TO p3 + p5;
            SET p4 TO p4 + 1
        END WHILE;

        IF p2 <> (-1 * (1 / 0)) THEN
            DECLARE p8;
            SET p8 TO p2;
            RETURN p8
        ELSE
            RETURN 0
        END IF;
    END
END CLASS