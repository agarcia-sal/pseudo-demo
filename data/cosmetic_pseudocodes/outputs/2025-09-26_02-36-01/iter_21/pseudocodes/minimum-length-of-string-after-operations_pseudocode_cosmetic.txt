CLASS Solution
  FUNCTION minimumLength(s)
       DEFINE f1 AS FUNCTION(a)
         IF a - 2 * (a / 2) = 1 THEN RETURN true ELSE RETURN false ENDIF
       END FUNCTION

       DEFINE f2 AS FUNCTION(a)
         IF a - 2 * (a / 2) = 0 AND NOT (a = 0) THEN RETURN true ELSE RETURN false ENDIF
       END FUNCTION

       DEFINE gatherVals AS FUNCTION(mapInput)
         IF mapInput = 0 THEN RETURN [] ENDIF
         RETURN gatherVals(mapInput / 2) + [mapInput MOD 2]
       END FUNCTION

       SET bqk TO 0
       SET utl TO 0
       SET jvr TO 0
       SET cnt TO Counter(s)
       SET cjp TO cnt.values()
       SET ekc TO 0

       :repeat_loop
       IF ekc >= length(cjp) THEN GOTO end_loop ENDIF
       SET valAtIndex TO cjp[ekc]

       IF f1(valAtIndex) THEN
         SET bqk TO bqk + 1
       ELSE IF f2(valAtIndex) THEN
         SET utl TO utl + 2
       ENDIF

       SET ekc TO ekc + 1
       GOTO repeat_loop
       :end_loop

       SET resu TO bqk + utl
       RETURN resu
  END FUNCTION
END CLASS