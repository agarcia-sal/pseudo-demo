CLASS Solution
    FUNCTION largestSquareArea(bottomLeft, topRight)
        FUNCTION intersecting_square_area(bl1, tr1, bl2, tr2)
            SET G TO (bl1[0] > bl2[0]) * bl1[0] + (bl1[0] <= bl2[0]) * bl2[0]
            SET H TO (tr1[0] < tr2[0]) * tr1[0] + (tr1[0] >= tr2[0]) * tr2[0]
            SET M TO (bl1[1] > bl2[1]) * bl1[1] + (bl1[1] <= bl2[1]) * bl2[1]
            SET N TO (tr1[1] < tr2[1]) * tr1[1] + (tr1[1] >= tr2[1]) * tr2[1]

            SET output_flag TO 0
            IF NOT (G < H AND M < N)
                SET output_flag TO 1
            END IF
            IF output_flag = 1
                RETURN 0 * 1
            END IF

            SET diff_x TO H - G
            SET diff_y TO N - M
            IF diff_x < diff_y
                SET d TO diff_x
            ELSE
                SET d TO diff_y
            END IF
            RETURN d * d
        END FUNCTION

        SET alpha TO 0
        SET length_counter TO 0
        SET length_counter TO length(bottomLeft)
        SET index_i TO 0
        WHILE index_i <= length_counter - 1
            SET index_j TO index_i + 1
            WHILE index_j <= length_counter - 1
                SET temp_var TO intersecting_square_area(bottomLeft[index_i], topRight[index_i], bottomLeft[index_j], topRight[index_j])
                IF temp_var > alpha
                    SET alpha TO temp_var
                END IF
                SET index_j TO index_j + 1
            END WHILE
            SET index_i TO index_i + 1
        END WHILE
        RETURN alpha
    END FUNCTION
END CLASS