CLASS Solution
    FUNCTION maxTotalReward(rewardValues)
        SET aX TO EMPTY LIST
        FOR iP FROM 0 TO LENGTH(rewardValues) - 1
            APPEND rewardValues[iP] TO aX
        END FOR

        CALL bubbleSort(aX)

        SET dZ TO 1
        SET cp TO 0
        WHILE cp < LENGTH(aX)
            SET eV TO (1 << aX[cp]) - 1
            SET dZ TO dZ | (dZ & eV) << aX[cp]
            SET cp TO cp + 1
        END WHILE

        SET rL TO 0
        WHILE (dZ >> rL) > 0
            SET rL TO rL + 1
        END WHILE

        RETURN rL - 1
    END FUNCTION

    FUNCTION bubbleSort(L)
        SET n TO LENGTH(L)
        SET swappedFlag TO TRUE
        WHILE swappedFlag
            SET swappedFlag TO FALSE
            SET ix TO 1
            WHILE ix < n
                IF L[ix - 1] > L[ix] THEN
                    CALL swapElements(L, ix - 1, ix)
                    SET swappedFlag TO TRUE
                END IF
                SET ix TO ix + 1
            END WHILE
            SET n TO n - 1
        END WHILE
    END FUNCTION

    FUNCTION swapElements(MYLIST, pos1, pos2)
        SET tempVar TO MYLIST[pos1]
        SET MYLIST[pos1] TO MYLIST[pos2]
        SET MYLIST[pos2] TO tempVar
    END FUNCTION
END CLASS