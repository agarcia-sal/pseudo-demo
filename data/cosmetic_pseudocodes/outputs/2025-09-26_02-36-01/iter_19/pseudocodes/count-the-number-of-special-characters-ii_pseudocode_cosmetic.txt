CLASS Solution
    FUNCTION numberOfSpecialChars(inputString)
        SET mappingStart TO empty collection of key value pairs
        SET mappingEnd TO empty collection of key value pairs
        SET idxCounter TO 0
        WHILE idxCounter < LENGTH(inputString)
            SET currentChar TO CHAR_AT(inputString, idxCounter)
            IF NOT EXISTS mappingStart[currentChar]
                ASSIGN mappingStart[currentChar] = idxCounter
            END IF
            ASSIGN mappingEnd[currentChar] = idxCounter
            SET idxCounter TO idxCounter + 1
        END WHILE
        SET specialCharCount TO 0
        SET alphaLow TO [‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘j’, ‘k’, ‘l’, ‘m’, ‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘w’, ‘x’, ‘y’, ‘z’]
        SET alphaUp TO [‘A’, ‘B’, ‘C’, ‘D’, ‘E’, ‘F’, ‘G’, ‘H’, ‘I’, ‘J’, ‘K’, ‘L’, ‘M’, ‘N’, ‘O’, ‘P’, ‘Q’, ‘R’, ‘S’, ‘T’, ‘U’, ‘V’, ‘W’, ‘X’, ‘Y’, ‘Z’]

        FUNCTION isKeyPresent(collection, key)
            RETURN EXISTS collection[key]
        END FUNCTION

        FUNCTION getValue(collection, key)
            RETURN collection[key]
        END FUNCTION

        SET posLow TO 0
        REPEAT
            IF posLow >= LENGTH(alphaLow)
                BREAK
            END IF
            SET lowCh TO alphaLow[posLow]
            SET posUp TO 0
            REPEAT
                IF posUp >= LENGTH(alphaUp)
                    BREAK
                END IF
                SET upCh TO alphaUp[posUp]
                IF isKeyPresent(mappingEnd, lowCh) AND isKeyPresent(mappingStart, upCh)
                   AND getValue(mappingEnd, lowCh) < getValue(mappingStart, upCh)
                    SET specialCharCount TO specialCharCount + 1
                END IF
                SET posUp TO posUp + 1
            END REPEAT
            SET posLow TO posLow + 1
        END REPEAT

        RETURN specialCharCount
    END FUNCTION
END CLASS