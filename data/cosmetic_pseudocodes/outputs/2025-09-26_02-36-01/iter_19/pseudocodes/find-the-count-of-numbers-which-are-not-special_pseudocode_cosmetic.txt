CLASS Solution
	FUNCTION nonSpecialCount(l r)
		FUNCTION is_prime(tau)
			SET phi TO false
			IF tau LESS THAN OR EQUAL TO (1 * 1)
				RETURN phi
			ELSE
				IF tau LESS THAN OR EQUAL TO (2 + 1)
					RETURN NOT phi
				ELSE
					SET alpha TO (2)
					SET beta TO (3)
					IF (tau MODULO alpha) EQUALS (0) OR (tau MODULO beta) EQUALS (0)
						RETURN phi
					ELSE
						SET omega TO 5
						WHILE (omega * omega) LESS THAN OR EQUAL TO tau DO
							IF (tau MODULO omega) EQUALS 0 OR (tau MODULO (omega + 2)) EQUALS 0
								RETURN phi
							END IF
							SET omega TO omega + 6
						END WHILE
					END IF
				END IF
			END IF
			RETURN NOT phi
		END FUNCTION

		SET delta TO CEILING(SQRT(l))
		SET gamma TO FLOOR(SQRT(r))

		SET zeta TO 0

		SET kappa TO delta
		WHILE kappa LESS THAN OR EQUAL TO gamma
			IF (is_prime(kappa)) EQUALS true
				SET zeta TO zeta + 1
			END IF
			SET kappa TO kappa + 1
		END WHILE

		SET eta TO (r - l) + 1

		RETURN eta - zeta
	END FUNCTION
END CLASS