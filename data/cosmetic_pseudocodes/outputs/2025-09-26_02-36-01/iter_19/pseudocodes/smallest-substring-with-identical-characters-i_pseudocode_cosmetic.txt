CLASS Solution
    FUNCTION minLength(s parameter, numOps parameter)
        
        FUNCTION longest_uniform_substring(s parameter)
            SET omega TO 0
            SET delta TO 1
            SET lambda TO 1
            WHILE lambda < LENGTH(s)
                IF s[lambda] = s[lambda - delta] THEN
                    SET delta TO delta + 1
                ELSE
                    IF omega < delta THEN
                        SET omega TO delta
                    END IF
                    SET delta TO 1
                END IF
                SET lambda TO lambda + 1
            END WHILE
            SET zeta TO omega > delta
            IF zeta THEN RETURN omega ELSE RETURN delta END IF
        END FUNCTION
        
        SET alpha TO LENGTH(s)
        SET beta TO 1 << LENGTH(s)
        SET kappa TO 0
        WHILE kappa < beta
            IF (COUNT_BITS_SET(kappa) > numOps) THEN
                SET kappa TO kappa + 1
                CONTINUE
            END IF

            SET mu TO TO_LIST(s)
            SET nu TO 0
            WHILE nu < LENGTH(s)
                IF ((kappa & (1 << nu)) != 0) THEN
                    IF mu[nu] = '0' THEN
                        SET mu[nu] TO '1'
                    ELSE
                        SET mu[nu] TO '0'
                    END IF
                END IF
                SET nu TO nu + 1
            END WHILE

            SET pi TO longest_uniform_substring(mu)
            IF alpha > pi THEN
                SET alpha TO pi
            END IF
            SET kappa TO kappa + 1
        END WHILE
        
        RETURN alpha
    END FUNCTION

    FUNCTION COUNT_BITS_SET(x parameter)
        SET acc TO 0
        SET temp TO x
        WHILE temp != 0
            SET acc TO acc + (temp & 1)
            SET temp TO temp >> 1
        END WHILE
        RETURN acc
    END FUNCTION
END CLASS