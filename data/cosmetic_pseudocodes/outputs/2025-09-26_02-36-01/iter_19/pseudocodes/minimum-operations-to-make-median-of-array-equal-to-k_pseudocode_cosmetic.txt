CLASS Solution
	FUNCTION minOperationsToMakeMedianK(balloons cube)
		DEFINE ascending_flag AS true
		bubble_sort(balloons, ascending_flag)
		DEFINE total_count AS LENGTH OF balloons
		DEFINE pivot_position AS total_count DIV 2

		DEFINE count_operations AS 0

		DEFINE current_element AS balloons[pivot_position]
		DEFINE target_val AS cube

		IF current_element == target_val THEN
			RETURN 0
		END IF

		IF current_element < target_val THEN
			REPEAT
				ADD (target_val - balloons[pivot_position]) TO count_operations
				pivot_position = pivot_position + 1
				IF pivot_position >= total_count THEN
					EXIT REPEAT
				END IF
			UNTIL balloons[pivot_position] >= target_val
		ELSE
			REPEAT
				count_operations = count_operations + (balloons[pivot_position] - target_val)
				pivot_position = pivot_position - 1
				IF pivot_position < 0 THEN
					EXIT REPEAT
				END IF
			UNTIL balloons[pivot_position] <= target_val
		END IF

		RETURN count_operations
	END FUNCTION

	SUB bubble_sort(list, ascending)
		DEFINE swapped AS true
		DEFINE end_index AS LENGTH OF list - 1
		WHILE swapped
			swapped = false
			DEFINE current_index AS 0
			WHILE current_index < end_index
				IF (ascending AND list[current_index] > list[current_index + 1]) OR (NOT ascending AND list[current_index] < list[current_index + 1]) THEN
					DEFINE temp AS list[current_index]
					list[current_index] = list[current_index + 1]
					list[current_index + 1] = temp
					swapped = true
				END IF
				current_index = current_index + 1
			END WHILE
			end_index = end_index - 1
		END WHILE
	END SUB
END CLASS