CLASS Solution
    FUNCTION maxScore(grid)
        FUNCTION backtrack(index, visited, accumulator)
            IF NOT (index < LENGTH(grid)) THEN
                IF NOT (max_sum <= accumulator) THEN
                    max_sum <- accumulator
                END IF
                RETURN
            END IF
            backtrack(index + 1, visited, accumulator)
            FOR element IN grid[index]
                IF NOT (element IN visited) THEN
                    visited <- visited UNION {element}
                    backtrack(index + 1, visited, accumulator + element)
                    visited <- visited - {element}
                END IF
            END FOR
        END FUNCTION

        FOR container IN grid
            tmp_list <- []
            FOR item IN container
                tmp_list <- [item] + tmp_list
            END FOR
            container <- tmp_list
            container <- container SORTED BY (a, b) -> b - a
        END FOR

        max_sum <- 0
        backtrack(0, {}, 0)
        RETURN max_sum
    END FUNCTION
END CLASS