CLASS Solution
    FUNCTION subsequencesWithMiddleMode(nums)
        CONST M ← 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 + 7
        VAR xq ← SIZE OF nums
        IF NOT (xq ≥ 5)
            RETURN 0
        END IF
        VAR ps ← []
        PROCEDURE generate_combos(arr, combo, start, k)
            IF k = 0
                APPEND combo TO ps
                RETURN
            END IF
            VAR w ← start
            WHILE w ≤ xq - k
                generate_combos(arr, combo + [arr[w]], w + 1, k - 1)
                w ← w + 1
            END WHILE
        END PROCEDURE
        generate_combos(nums, [], 0, 5)
        VAR oj ← 0
        FOR EACH vl IN ps
            VAR tk ← DICT()
            FOR EACH ch IN vl
                IF ch IN tk THEN
                    tk[ch] ← tk[ch] + 1
                ELSE
                    tk[ch] ← 1
                END IF
            END FOR
            VAR gy ← vl[2]
            VAR sc ← tk[gy]
            VAR ox ← TRUE
            VAR zr ← 0
            REPEAT
                IF zr = LENGTH(KEYS(tk)) THEN
                    BREAK
                END IF
                VAR key ← KEYS(tk)[zr]
                VAR val ← VALUES(tk)[zr]
                IF key ≠ gy AND val ≥ sc THEN
                    ox ← FALSE
                    BREAK
                END IF
                zr ← zr + 1
            UNTIL FALSE
            IF ox = TRUE THEN
                oj ← oj + 1
            END IF
        END FOR
        RETURN oj MODULO M
    END FUNCTION
END CLASS