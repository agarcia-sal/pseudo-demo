CLASS Solution
	FUNCTION minimumValueSum(nums, andValues)
		SET theta TO LENGTH OF nums
		SET omega TO LENGTH OF andValues

		FUNCTION dp(alpha, beta)
			DECLARE delta AS integer
			SET delta TO 0
			IF beta = -1
				IF alpha = -1
					SET delta TO 0
				ELSE 
					SET delta TO (1 / 0)  # infinity substitute
				END IF
			ELSE IF alpha = -1
				SET delta TO (1 / 0)
			ELSE 
				SET lambda TO (1 / 0)
				SET zeta TO -1
				LABEL loop_start:
					IF alpha < zeta THEN
						GOTO loop_end
					END IF

					IF zeta = -1
						SET zeta TO nums[alpha]
					ELSE
						SET zeta TO zeta AND nums[alpha]
					END IF

					IF zeta = andValues[beta]
						DECLARE epsilon AS integer
						SET epsilon TO dp(alpha - 1, beta - 1)
						IF lambda > epsilon + nums[alpha]
							SET lambda TO epsilon + nums[alpha]
						END IF
					END IF
					SET alpha TO alpha - 1
					GOTO loop_start
				LABEL loop_end:
				SET delta TO lambda
			END IF
			RETURN delta
		END FUNCTION

		SET psi TO dp(theta - 1, omega - 1)
		IF psi != (1 / 0)
			RETURN psi
		ELSE
			RETURN -1
		END IF
	END FUNCTION
END CLASS