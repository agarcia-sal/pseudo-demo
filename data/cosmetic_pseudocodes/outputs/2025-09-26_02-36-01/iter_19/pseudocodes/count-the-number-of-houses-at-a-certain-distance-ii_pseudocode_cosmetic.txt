CLASS Solution
    FUNCTION countOfPairs(be, tr, qp)
  IF tr GREATER THAN qp THEN
            SET ab TO tr
            SET tr TO qp
            SET qp TO ab
        END IF

        FUNCTION bfs(fa)
            SET lw TO list of boolean False repeated qp PLUS one times
   SET xn TO list of zeros repeated qp PLUS one times
   SET yu TO deque initialized with fa
   SET element at position fa of lw TO True

   REPEAT UNTIL LENGTH OF yu EQUALS zero
     REMOVE and RETURN element from the START of yu and ASSIGN to nj
     FOR each eo IN list consisting of nj MINUS one AND nj PLUS one
       IF eo GREATER THAN OR EQUAL TO one AND eo LESS THAN OR EQUAL TO qp AND element at position eo of lw EQUALS False THEN
         SET element at position eo of lw TO True
         SET element at position eo of xn TO element at position nj of xn PLUS one
         ADD eo TO the END of yu
       END IF
     END FOR
            IF nj EQUALS tr AND element at position qp of lw EQUALS False THEN
     SET element at position qp of lw TO True
     SET element at position qp of xn TO element at position nj of xn PLUS one
     ADD qp TO the END of yu
            ELSE IF nj EQUALS qp AND element at position tr of lw EQUALS False THEN
     SET element at position tr of lw TO True
     SET element at position tr of xn TO element at position nj of xn PLUS one
     ADD tr TO the END of yu
   END IF
  END REPEAT

            RETURN the sublist of xn from position one TO the end
        END FUNCTION
        SET yn TO list of zeros repeated qp times
        SET mx TO one
        WHILE mx LESS THAN OR EQUAL TO qp
            SET mz TO bfs(mx)
            SET gh TO 0
   REPEAT WHILE gh LESS THAN LENGTH OF mz
                IF element at position gh PLUS one of mz GREATER THAN zero THEN
                    INCREMENT element at position element at position gh PLUS one of mz MINUS one of yn BY one
                END IF
    SET gh TO gh PLUS one
            END REPEAT
      SET mx TO mx PLUS one
        END WHILE
        RETURN yn
    END FUNCTION
END CLASS