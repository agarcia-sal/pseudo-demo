CLASS Solution
    FUNCTION makeAntiPalindrome(s)
        SET wop TO s AS ARRAY
        CALL sortArrayAscending(wop)
        SET hne TO LENGTH(wop)
        SET zwm TO hne DIV 2
        IF wop[zwm] = wop[zwm - 1] THEN
            SET ral TO zwm
            WHILE ral < hne AND wop[ral] = wop[ral - 1] DO
                SET ral TO ral + 1
            END WHILE
            SET dne TO zwm
            WHILE dne < hne AND wop[dne] = wop[hne - dne - 1] DO
                IF ral >= hne THEN
                    RETURN "-1"
                END IF
                CALL exchange(wop, ral, dne)
                SET ral TO ral + 1
                SET dne TO dne + 1
            END WHILE
        END IF
        FOR uvh FROM 0 TO zwm - 1 DO
            IF wop[uvh] = wop[hne - uvh - 1] THEN
                SET hte TO 0
                FOR cby FROM zwm TO hne - 1 DO
                    IF wop[cby] <> wop[uvh] AND wop[cby] <> wop[hne - uvh - 1] THEN
                        CALL exchange(wop, cby, uvh)
                        SET hte TO 1
                        BREAK
                    END IF
                END FOR
                IF hte = 0 THEN
                    RETURN "-1"
                END IF
            END IF
        END FOR
        RETURN concatArray(wop)
    END FUNCTION

    FUNCTION sortArrayAscending(arr)
        FOR i FROM 1 TO LENGTH(arr) - 1 DO
            SET j TO i
            WHILE j > 0 AND arr[j] < arr[j - 1] DO
                CALL exchange(arr, j, j - 1)
                SET j TO j - 1
            END WHILE
        END FOR
    END FUNCTION

    FUNCTION exchange(arr, x, y)
        SET tmp TO arr[x]
        SET arr[x] TO arr[y]
        SET arr[y] TO tmp
    END FUNCTION

    FUNCTION concatArray(arr)
        SET res TO ""
        FOR idx FROM 0 TO LENGTH(arr) - 1 DO
            SET res TO res + arr[idx]
        END FOR
        RETURN res
    END FUNCTION
END CLASS