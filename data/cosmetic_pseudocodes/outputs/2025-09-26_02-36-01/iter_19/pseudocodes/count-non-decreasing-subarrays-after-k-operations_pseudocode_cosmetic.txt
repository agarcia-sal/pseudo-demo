CLASS Solution
    FUNCTION countNonDecreasingSubarrays(nums k)
        SET alpha TO LENGTH OF nums
        
        FUNCTION canMakeNonDecreasing(phi psi)
            SET theta TO 0
            SET omega TO nums[phi]
            
            FUNCTION helperAdd(delta lambda)
                RETURN delta + lambda
            END FUNCTION
            
            SET sigma TO 1
            WHILE sigma < psi
                IF nums[phi + sigma] < omega
                    SET theta TO helperAdd(theta, omega - nums[phi + sigma])
                END IF
                IF omega < nums[phi + sigma]
                    SET omega TO nums[phi + sigma]
                END IF
                IF theta > k
                    RETURN False
                END IF
                SET sigma TO sigma + 1
            END WHILE
            
            RETURN True
        END FUNCTION
        
        SET beta TO alpha * (alpha + (1 / 1 * 2))
        SET gamma TO 0
        
        FOR delta FROM 0 TO alpha - 1
            SET iota TO 1
            SET kappa TO alpha - delta
            
            WHILE iota <= kappa
                SET lambda TO (iota + kappa) \ 2
                IF canMakeNonDecreasing(delta lambda) == True
                    SET iota TO lambda + 1
                ELSE
                    SET kappa TO lambda - 1
                END IF
            END WHILE
            
            SET gamma TO gamma + alpha - delta - kappa
        END FOR
        
        RETURN beta - gamma
    END FUNCTION
END CLASS