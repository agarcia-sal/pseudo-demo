CLASS Solution
    FUNCTION tripletCount(a AS List OF integer, b AS List OF integer, c AS List OF integer) RETURNS integer
        FUNCTION count_even_odd_bits(arr AS List OF integer) RETURNS tuple OF integer and integer
            SET tally_even TO 0
            SET indexer_x TO 0
            WHILE indexer_x < LENGTH OF arr
                SET bit_sum TO 0
                SET temp_z TO arr[indexer_x]
                WHILE temp_z > 0
                    SET bit_sum TO bit_sum + (temp_z AND 1)
                    SET temp_z TO temp_z DIV 2
                END WHILE
                IF NOT (bit_sum MOD 2 = 1) THEN
                    SET tally_even TO tally_even + 1
                END IF
                SET indexer_x TO indexer_x + 1
            END WHILE
            SET tally_odd TO (LENGTH OF arr) - tally_even
            RETURN tally_even AND tally_odd
        END FUNCTION

        SET ev_amt_a AND od_amt_a TO count_even_odd_bits(a)
        SET ev_amt_b AND od_amt_b TO count_even_odd_bits(b)
        SET ev_amt_c AND od_amt_c TO count_even_odd_bits(c)

        SET product1 TO ev_amt_a
        SET product1 TO product1 * ev_amt_b
        SET product1 TO product1 * ev_amt_c

        SET part1 TO ev_amt_a * od_amt_b * od_amt_c
        SET part2 TO od_amt_a * ev_amt_b * od_amt_c
        SET part3 TO od_amt_a * od_amt_b * ev_amt_c
        SET product2 TO part1 + (part2 + part3)

        SET accumulator_result TO product1 + product2
        RETURN accumulator_result
    END FUNCTION
END CLASS