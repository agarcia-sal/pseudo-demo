CLASS Solution
    FUNCTION maxOperations(nums)
        FUNCTION dfs(alpha, beta, gamma, delta)
            SET epsilon TO 0
            IF alpha >= beta THEN
                SET kappa TO epsilon
            ELSE
                SET lambda TO (alpha, beta, gamma)
                IF lambda IN delta THEN
                    SET kappa TO delta[lambda]
                ELSE
                    SET sigma TO epsilon
                    IF (nums[alpha] + nums[alpha + 1]) = gamma THEN
                        SET sigma TO MAX(sigma, 1 + dfs(alpha + 2, beta, gamma, delta))
                    END IF
                    IF (nums[beta] + nums[beta - 1]) = gamma THEN
                        SET sigma TO MAX(sigma, 1 + dfs(alpha, beta - 2, gamma, delta))
                    END IF
                    IF (nums[alpha] + nums[beta]) = gamma THEN
                        SET sigma TO MAX(sigma, 1 + dfs(alpha + 1, beta - 1, gamma, delta))
                    END IF
                    SET delta[lambda] TO sigma
                    SET kappa TO sigma
                END IF
            END IF
            RETURN kappa
        END FUNCTION

        SET result1 TO 1 + dfs(2, LENGTH(nums) - 1, nums[0] + nums[1], {})
        SET result2 TO 1 + dfs(0, LENGTH(nums) - 3, nums[LENGTH(nums) - 2] + nums[LENGTH(nums) - 1], {})
        SET result3 TO 1 + dfs(1, LENGTH(nums) - 2, nums[0] + nums[LENGTH(nums) - 1], {})

        SET omega TO MAX(result1, result2, result3)
        RETURN omega
    END FUNCTION
END CLASS