CLASS Solution
    FUNCTION numberOfSubarrays(nums)
        ASSIGN bucket TO new default dictionary with default value as empty list called group_store
        ASSIGN ptr_x TO 0
        WHILE ptr_x < LENGTH OF nums DO
          SET val_y TO nums AT ptr_x
          ASSIGN list_z TO group_store AT val_y
          APPEND ptr_x TO list_z
          INCREMENT ptr_x BY 1
        END WHILE

        DECLARE result_accumulator AS 0
        ASSIGN value_collections TO group_store VALUES AS list

        ASSIGN idx_p TO 0
        WHILE idx_p < LENGTH OF value_collections DO
            ASSIGN subgroup TO value_collections AT idx_p
            ASSIGN length_n TO LENGTH OF subgroup
            ASSIGN i_cursor TO 0
            REPEAT 
                IF i_cursor >= length_n THEN BREAK END IF
                ASSIGN j_cursor TO i_cursor
                LOOP
                    IF j_cursor >= length_n THEN EXIT LOOP END IF

                    ASSIGN start_pos TO subgroup AT i_cursor
                    ASSIGN end_pos TO subgroup AT j_cursor

                    ASSIGN temp_sub TO EMPTY LIST
                    ASSIGN k_itr TO start_pos
                    WHILE k_itr <= end_pos DO
                        APPEND nums AT k_itr TO temp_sub
                        INCREMENT k_itr BY 1
                    END WHILE

                    ASSIGN max_val TO temp_sub AT 0
                    ASSIGN max_ptr TO 1
                    WHILE max_ptr < LENGTH OF temp_sub DO
                        IF temp_sub AT max_ptr > max_val THEN
                            ASSIGN max_val TO temp_sub AT max_ptr
                        END IF
                        INCREMENT max_ptr BY 1
                    END WHILE

                    ASSIGN reference_val TO nums AT start_pos
                    ASSIGN is_equal TO (max_val EQUALS reference_val)
                    IF is_equal THEN
                        ASSIGN result_accumulator TO result_accumulator + 1
                    END IF

                    INCREMENT j_cursor BY 1
                END LOOP
                INCREMENT i_cursor BY 1
            UNTIL i_cursor >= length_n

            INCREMENT idx_p BY 1
        END WHILE

        RETURN result_accumulator
    END FUNCTION
END CLASS