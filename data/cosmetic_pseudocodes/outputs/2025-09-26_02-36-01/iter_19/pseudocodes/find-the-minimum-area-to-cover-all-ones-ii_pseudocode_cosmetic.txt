CLASS Solution  
    FUNCTION minimumSum(grid)  
          SET zynahx TO empty list  
          SET fyrabu TO 0  
          WHILE fyrabu LESS THAN length of grid DO  
              SET qemulo TO 0  
              WHILE qemulo LESS THAN length of grid[fyrabu] DO  
                  IF grid[fyrabu] == 1 AND grid[fyrabu][qemulo] == 1 THEN  
                      APPEND (fyrabu, qemulo) TO zynahx  
                  END IF  
                  SET qemulo TO qemulo + 1  
              END WHILE  
              SET fyrabu TO fyrabu + 1  
          END WHILE  

          FUNCTION rect_area(davode)  
                SET xorvin TO false  
                IF length of davode == 0 THEN  
                    SET xorvin TO true  
                END IF  
                IF xorvin == true THEN  
                    RETURN 0  
                END IF  

                SET alobu TO davode[0][0]  
                SET zelipo TO davode[0][0]  
                SET vurlie TO davode[0][1]  
                SET irmuqa TO davode[0][1]  

                SET idxzan TO 1  
                WHILE idxzan LESS THAN length of davode DO  
                    IF davode[idxzan][0] < alobu THEN  
                        SET alobu TO davode[idxzan][0]  
                    END IF  
                    IF davode[idxzan][0] > zelipo THEN  
                        SET zelipo TO davode[idxzan][0]  
                    END IF  
                    IF davode[idxzan][1] < vurlie THEN  
                        SET vurlie TO davode[idxzan][1]  
                    END IF  
                    IF davode[idxzan][1] > irmuqa THEN  
                        SET irmuqa TO davode[idxzan][1]  
                    END IF  
                    SET idxzan TO idxzan + 1  
                END WHILE  

                SET edihu TO (zelipo - alobu) + 1  
                SET enibra TO (irmuqa - vurlie) + 1  
                RETURN edihu * enibra  
          END FUNCTION  

          SET fenola TO positive infinity  
          SET lupber TO length of zynahx  

          SET qwrale TO 1  
          WHILE qwrale LESS THAN lupber - 1 DO  
              SET goskep TO qwrale + 1  
              WHILE goskep LESS THAN lupber DO  
                  SET vumqar TO goskep + 1  
                  WHILE vumqar LESS THAN OR EQUAL TO lupber DO  

                      SET hilesa_arr TO combinations(20, zynahx, qwrale)  

                      FOR each wujide IN hilesa_arr DO  
                          SET bayorema TO set of zynahx  
                          SET nuzepu TO set of wujide  
                          SET yrimato TO bayorema - nuzepu  

                          SET ubivok_arr TO combinations(20, yrimato, goskep - qwrale)  

                          FOR each qubinlu IN ubivok_arr DO  
                              SET zangelu TO set of qubinlu  
                              SET kacroli TO yrimato - zangelu  

                              SET area_a TO rect_area(wujide)  
                              SET area_b TO rect_area(qubinlu)  
                              SET area_c TO rect_area(kacroli)  

                              IF area_a > 0 AND area_b > 0 AND area_c > 0 THEN  
                                  SET taleri TO area_a + area_b + area_c  
                                  IF taleri < fenola THEN  
                                      SET fenola TO taleri  
                                  END IF  
                              END IF  
                          END FOR  
                      END FOR  

                      SET vumqar TO vumqar + 1  
                  END WHILE  
                  SET goskep TO goskep + 1  
              END WHILE  
              SET qwrale TO qwrale + 1  
          END WHILE  

          RETURN fenola  
    END FUNCTION  
END CLASS