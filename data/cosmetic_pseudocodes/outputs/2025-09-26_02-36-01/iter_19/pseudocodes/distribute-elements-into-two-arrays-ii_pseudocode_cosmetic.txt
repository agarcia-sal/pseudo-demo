CLASS Solution
  FUNCTION resultArray(nums)
    SET xqvfwk TO NEW LIST CONTAINING nums[0]
    SET zleqtv TO NEW LIST CONTAINING nums[1]
    SET gcdner TO NEW LIST CONTAINING nums[0]
    SET vumrfp TO NEW LIST CONTAINING nums[1]

    FUNCTION greaterCount(loc, dsmk)
      FUNCTION bsearchRight(arrg, valm, low, high)
        IF low >= high THEN RETURN low END IF
        SET midx TO (low + high) / 2
        IF arrg[midx] <= valm THEN
          RETURN bsearchRight(arrg, valm, midx+1, high)
        ELSE
          RETURN bsearchRight(arrg, valm, low, midx)
        END IF
      END FUNCTION
      
      SET pzx TO bsearchRight(loc, dsmk, 0, LENGTH(loc))
      RETURN LENGTH(loc) - pzx
    END FUNCTION

    SET nhdzm TO LENGTH(nums)
    SET mwi TO 2
    WHILE mwi <= nhdzm - 1 DO
      SET jbntu TO nums[mwi]
      SET vkokp TO greaterCount(gcdner, jbntu)
      SET hqfna TO greaterCount(vumrfp, jbntu)
      
      IF vkokp > hqfna THEN
        xqvfwk.APPEND(jbntu)
        # Insert jbntu into gcdner in sorted order
        SET lft TO 0
        SET rgt TO LENGTH(gcdner)
        WHILE lft < rgt DO
          SET med TO (lft + rgt) / 2
          IF gcdner[med] <= jbntu THEN
            SET lft TO med + 1
          ELSE
            SET rgt TO med
          END IF
        END WHILE
        gcdner.INSERT(lft, jbntu)
      ELSE
        IF vkokp < hqfna THEN
          zleqtv.APPEND(jbntu)
          SET aafp TO 0
          SET bnhq TO LENGTH(vumrfp)
          WHILE aafp < bnhq DO
            SET cwp TO (aafp + bnhq) / 2
            IF vumrfp[cwp] <= jbntu THEN
              SET aafp TO cwp + 1
            ELSE
              SET bnhq TO cwp
            END IF
          END WHILE
          vumrfp.INSERT(aafp, jbntu)
        ELSE
          IF LENGTH(xqvfwk) <= LENGTH(zleqtv) THEN
            xqvfwk.APPEND(jbntu)
            SET mfva TO 0
            SET cqa TO LENGTH(gcdner)
            WHILE mfva < cqa DO
              SET kyr TO (mfva + cqa) / 2
              IF gcdner[kyr] <= jbntu THEN
                SET mfva TO kyr + 1
              ELSE
                SET cqa TO kyr
              END IF
            END WHILE
            gcdner.INSERT(mfva, jbntu)
          ELSE
            zleqtv.APPEND(jbntu)
            SET rlm TO 0
            SET dxr TO LENGTH(vumrfp)
            WHILE rlm < dxr DO
              SET snp TO (rlm + dxr) / 2
              IF vumrfp[snp] <= jbntu THEN
                SET rlm TO snp + 1
              ELSE
                SET dxr TO snp
              END IF
            END WHILE
            vumrfp.INSERT(rlm, jbntu)
          END IF
        END IF
      END IF
      SET mwi TO mwi + 1
    END WHILE

    SET syclt TO NEW LIST
    FOR i FROM 0 TO LENGTH(xqvfwk) - 1
      syclt.APPEND(xqvfwk[i])
    END FOR
    FOR i FROM 0 TO LENGTH(zleqtv) - 1
      syclt.APPEND(zleqtv[i])
    END FOR

    RETURN syclt
  END FUNCTION
END CLASS