CLASS Solution
    FUNCTION maxFrequency(nums, k, numOperations)
        ASSIGN reference alphaMap TO a new default dictionary with integer default
        ASSIGN reference betaMap TO a new default dictionary with integer default
        INITIALIZE idx TO 0
        WHILE idx < LENGTH(nums)
            ASSIGN currentVal TO nums[idx]
            alphaMap[currentVal] = alphaMap[currentVal] + 1
            betaMap[currentVal] = betaMap[currentVal] + 0
            betaMap[currentVal - k] = betaMap[currentVal - k] + 1
            betaMap[currentVal + (k + 1)] = betaMap[currentVal + (k + 1)] + (-1)
            idx = idx + 1
        END WHILE
        ASSIGN result TO 0
        ASSIGN cumulativeSum TO 0
        ASSIGN keysSorted TO SORT(KEYS(betaMap))
        ASSIGN iterationIdx TO 0
        WHILE iterationIdx < LENGTH(keysSorted)
            ASSIGN keyVal TO keysSorted[iterationIdx]
            cumulativeSum = cumulativeSum + betaMap[keyVal]
            ASSIGN candidate TO MINIMUM(cumulativeSum, (alphaMap[keyVal] + numOperations))
            result = MAXIMUM(result, candidate)
            iterationIdx = iterationIdx + 1
        END WHILE
        RETURN result
    END FUNCTION
END CLASS