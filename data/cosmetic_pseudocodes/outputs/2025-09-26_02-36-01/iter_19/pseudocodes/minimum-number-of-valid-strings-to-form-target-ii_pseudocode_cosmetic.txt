CLASS Solution
    FUNCTION minValidStrings(words, target)
    	DECLARE prefixSet AS empty set
    	FUNCTION addPrefixes(word)
    		helperVar1 = 1
    		WHILE helperVar1 <= LENGTH word
    			prefixSet.ADD(SUBSTRING(word, 1, helperVar1))
    			helperVar1 = helperVar1 + 1
    		END WHILE
    	END FUNCTION

    	FOR each element IN words
    		addPrefixes(element)
    	END FOR

    	totalLen = LENGTH target
    	dynArray = ARRAY(totalLen + 1)
    	indexer = 0
    	WHILE indexer <= totalLen
    		dynArray[indexer] = +∞
    		indexer = indexer + 1
    	END WHILE

    	dynArray[0] = 0

    	iVal = 1
    	REPEAT
    		jVal = 1
    		WHILE jVal <= iVal
    			substrPiece = SUBSTRING(target, jVal, iVal)
    			IF prefixSet.CONTAINS(substrPiece) THEN
    				tempVal = dynArray[jVal - 1] + 1
    				IF tempVal < dynArray[iVal] THEN
    					dynArray[iVal] = tempVal
    				END IF
    			END IF
    			jVal = jVal + 1
    		END WHILE
    		iVal = iVal + 1
    	UNTIL iVal > totalLen

    	RETURN_VALUE = -1
    	IF dynArray[totalLen] <> +∞ THEN
    		RETURN_VALUE = dynArray[totalLen]
    	END IF

    	RETURN RETURN_VALUE
    END FUNCTION
END CLASS