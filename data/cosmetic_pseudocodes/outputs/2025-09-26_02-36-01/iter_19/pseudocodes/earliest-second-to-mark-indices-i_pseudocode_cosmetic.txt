CLASS Solution
    FUNCTION earliestSecondToMarkIndices(nums PARAMETER changeIndices)
        SET alpha TO the LENGTH OF nums
        SET beta TO the LENGTH OF changeIndices

        FUNCTION can_mark_by_second(omega)
            SET gamma TO a list of size alpha FILLED WITH negative one
            SET delta TO zero
            WHILE delta < omega
                SET zeta TO (element at position delta of changeIndices) MINUS one
                SET element at position zeta of gamma TO delta
                SET delta TO delta PLUS one
            END WHILE

            SET sigma TO zero
            FOR idx FROM zero TO alpha MINUS one
                SET sigma TO sigma PLUS element at position idx of nums
            END FOR

            SET theta TO zero
            SET epsilon TO an empty set

            SET kappa TO zero
            WHILE kappa < omega
                SET lambda TO (element at position kappa of changeIndices) MINUS one
                IF NOT (lambda IN epsilon) THEN
                    IF (element at position lambda of gamma) EQUALS kappa THEN
                        IF element at position lambda of nums <= theta THEN
                            SET theta TO theta MINUS element at position lambda of nums
                            ADD lambda TO epsilon
                        ELSE
                            RETURN False
                        END IF
                    ELSE
                        SET theta TO theta PLUS one
                    END IF
                ELSE
                    SET theta TO theta PLUS one
                END IF
                SET kappa TO kappa PLUS one
            END WHILE

            RETURN (the LENGTH OF epsilon) EQUALS alpha
        END FUNCTION

        SET mu TO zero
        SET nu TO beta PLUS one

        REPEAT
            SET psi TO (mu PLUS nu) DIVIDED BY two USING INTEGER DIVISION
            IF can_mark_by_second(psi) THEN
                SET nu TO psi
            ELSE
                SET mu TO mu PLUS one
            END IF
        UNTIL mu IS NOT LESS THAN nu

        IF mu <= beta THEN
            RETURN mu
        ELSE
            RETURN negative one
        END IF
    END FUNCTION
END CLASS