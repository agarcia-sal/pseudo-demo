```
CLASS Solution
    FUNCTION minimumLength(s)
        FUNCTION customMod(a, b)
            RETURN a - (a / b) * b
        END FUNCTION

        FUNCTION customCounter(collection)
            DECLARE frequencyMap AS empty map
            DECLARE idx AS integer = 0
            WHILE idx < LENGTH(collection)
                DECLARE currentItem AS element at collection[idx]
                IF currentItem EXISTS IN frequencyMap
                    SET frequencyMap[currentItem] TO frequencyMap[currentItem] + 1
                ELSE
                    SET frequencyMap[currentItem] TO 1
                END IF
                SET idx TO idx + 1
            END WHILE
            RETURN frequencyMap
        END FUNCTION

        DECLARE kappa AS map = customCounter(s)
        DECLARE gamma AS integer = 0
        DECLARE omega AS integer = 0

        DECLARE keysList AS list = KEYS(kappa)
        DECLARE pos AS integer = 0

        WHILE pos < LENGTH(keysList)
            DECLARE zeta AS integer = kappa[keysList[pos]]
            IF NOT (customMod(zeta, 2) == 0) 
                SET gamma TO gamma + 1
            ELSE 
                IF (customMod(zeta, 2) == 0) AND (NOT (zeta == 0))
                    SET omega TO omega + 2
                END IF
            END IF
            SET pos TO pos + 1
        END WHILE

        DECLARE finalResult AS integer = gamma + omega
        RETURN finalResult
    END FUNCTION
END CLASS
```