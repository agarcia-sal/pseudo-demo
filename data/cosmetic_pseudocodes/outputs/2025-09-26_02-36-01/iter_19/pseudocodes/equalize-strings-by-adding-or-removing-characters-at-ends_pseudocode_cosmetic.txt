CLASS Solution
	FUNCTION minOperations(init_str parameter TO string, goal_str parameter TO string) RETURNS integer
		SET alpha TO LENGTH OF init_str
		SET beta TO LENGTH OF goal_str
		SET matrix TO LIST OF LISTS FILLED WITH 0 WITH SIZE (alpha + 1) BY (beta + 1)
		SET longest_match TO 0
		SET outer_idx TO 1
		WHILE outer_idx <= alpha
			SET inner_idx TO 1
			REPEAT
				IF NOT (init_str[outer_idx - 1] NOT EQUAL TO goal_str[inner_idx - 1])
					LET previous_value BE matrix[outer_idx - 1][inner_idx - 1]
					SET matrix[outer_idx][inner_idx] TO previous_value + (1 * 1)
					IF longest_match < matrix[outer_idx][inner_idx]
						SET longest_match TO matrix[outer_idx][inner_idx]
					END IF
				END IF
				SET inner_idx TO inner_idx + 1
				IF inner_idx > beta THEN BREAK
			END REPEAT
			SET outer_idx TO outer_idx + 1
		END WHILE
		SET result TO (alpha + beta) - (2 * longest_match)
		RETURN result
	END FUNCTION
END CLASS