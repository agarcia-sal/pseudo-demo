CLASS Solution
    FUNCTION tripletCount(a AS List OF integer, b AS List OF integer, c AS List OF integer) RETURNS integer
        FUNCTION count_even_odd_bits(arr AS List OF integer) RETURNS tuple OF integer and integer
            SET total_evens TO 0
            SET idx TO 0
            WHILE idx < LENGTH(arr)
                SET current_number TO arr[idx]
                SET bit_ones TO 0
                SET temp TO current_number
                WHILE temp > 0
                    SET bit_ones TO bit_ones + (temp BITWISE_AND 1)
                    SET temp TO temp DIV 2
                END WHILE
                IF (bit_ones BITWISE_AND 1) = 0 THEN
                    total_evens TO total_evens + 1
                END IF
                SET idx TO idx + 1
            END WHILE
            SET total_odds TO LENGTH(arr) - total_evens
            RETURN total_evens, total_odds
        END FUNCTION

        SET even_a, odd_a TO count_even_odd_bits(a)
        SET even_b, odd_b TO count_even_odd_bits(b)
        SET even_c, odd_c TO count_even_odd_bits(c)

        SET product_even_all TO even_a * even_b * even_c
        SET sum_case2_part1 TO even_a * odd_b * odd_c
        SET sum_case2_part2 TO odd_a * even_b * odd_c
        SET sum_case2_part3 TO odd_a * odd_b * even_c
        SET aggregate_case2 TO sum_case2_part1 + sum_case2_part2 + sum_case2_part3

        SET final_count TO product_even_all + aggregate_case2
        RETURN final_count
    END FUNCTION
END CLASS