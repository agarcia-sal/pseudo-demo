CLASS Solution
  FUNCTION minimumValueSum(nums, andValues)
     LET lenNums := SIZE(nums)
     LET lenAnds := SIZE(andValues)

     FUNCTION dp(idx1, idx2)
        IF idx2 IS -1 THEN
           IF idx1 IS -1 THEN
              RETURN 0
           END IF
           RETURN 10^15
        END IF
        IF idx1 IS -1 THEN
           RETURN 10^15
        END IF

        LET bestValue := 10^15
        LET aggAnd := -1
        LET pos := idx1
        WHILE pos >= -1 DO
           IF aggAnd = -1 THEN
              aggAnd := nums[pos]
           ELSE
              aggAnd := aggAnd BITWISE_AND nums[pos]
           END IF

           IF aggAnd EQUALS andValues[idx2] THEN
              LET candidate := dp(pos - 1, idx2 - 1) + nums[idx1]
              IF candidate < bestValue THEN
                 bestValue := candidate
              END IF
           END IF
           pos := pos - 1
        END WHILE

        RETURN bestValue
     END FUNCTION

     LET answer := dp(lenNums - 1, lenAnds - 1)
     IF answer < 10^15 THEN
        RETURN answer
     ELSE
        RETURN -1
     END IF
  END FUNCTION
END CLASS