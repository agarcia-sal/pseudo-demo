CLASS Solution  
    FUNCTION maximumSubarraySum(nums k)  
        DECLARE prefixSumsMap AS map  
        ASSIGN maxVal TO (0 SUBTRACT 1) MULTIPLIED BY (2 RAISED TO 63) MINUS 1  
        ASSIGN prefixTotal TO 0  
        
        SET index TO 0  
        WHILE index LESS THAN LENGTH OF nums  
            ASSIGN val TO nums[index]  
            ASSIGN targetMinus TO val MINUS k  
            IF prefixSumsMap HAS_KEY targetMinus THEN  
                ASSIGN candidate TO prefixTotal MINUS prefixSumsMap[targetMinus] PLUS val  
                maxVal = IF maxVal GREATER THAN candidate THEN maxVal ELSE candidate  
            END IF  
  
            ASSIGN targetPlus TO val PLUS k  
            IF prefixSumsMap HAS_KEY targetPlus THEN  
                ASSIGN candidateAlt TO prefixTotal MINUS prefixSumsMap[targetPlus] PLUS val  
                maxVal = IF maxVal GREATER THAN candidateAlt THEN maxVal ELSE candidateAlt  
            END IF  
  
            IF prefixSumsMap HAS_KEY val THEN  
                IF prefixSumsMap[val] GREATER THAN prefixTotal THEN  
                    prefixSumsMap[val] = prefixTotal  
                END IF  
            ELSE  
                prefixSumsMap[val] = prefixTotal  
            END IF  
            
            prefixTotal += val  
            index += 1  
        END WHILE  
  
        IF maxVal NOT EQUAL TO ((0 SUBTRACT 1) MULTIPLIED BY (2 RAISED TO 63) MINUS 1) THEN  
            RETURN maxVal  
        ELSE  
            RETURN 0  
        END IF  
    END FUNCTION  
END CLASS