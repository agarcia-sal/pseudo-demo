CLASS Solution
    FUNCTION nonSpecialCount(l r)
        FUNCTION is_prime(num)
            IF NOT (num > 1)
                RETURN false
            ELSE IF num < 4
                RETURN true
            END IF

            IF ((num % 2) == 0) OR ((num % 3) == 0)
                RETURN false
            END IF

            DEFINE factor AS 5
            WHILE (factor * factor) <= num
                IF ((num % factor) == 0) OR ((num % (factor + 2)) == 0)
                    RETURN false
                END IF
                factor += 6
            END WHILE

            RETURN true
        END FUNCTION

        DEFINE low_limit AS CEIL(SQRT(l))
        DEFINE high_limit AS FLOOR(SQRT(r))

        SET count_special TO 0

        DEFINE current AS low_limit
        WHILE current <= high_limit
            IF is_prime(current)
                count_special = count_special + 1
            END IF
            current = current + 1
        END WHILE

        DEFINE interval AS (r - l + 1)
        RETURN interval - count_special
    END FUNCTION
END CLASS