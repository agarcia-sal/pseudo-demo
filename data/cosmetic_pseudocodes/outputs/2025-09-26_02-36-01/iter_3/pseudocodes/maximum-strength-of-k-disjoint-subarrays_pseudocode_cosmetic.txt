CLASS Solution
    FUNCTION maximumStrength(nums k)
        ASSIGN length TO 0
        WHILE length < LENGTH OF nums
            length ← length + 1
        END WHILE

        INITIALIZE matrix dp WITH dimensions (length + 1) BY (k + 1)
        FOR row FROM 0 TO length
            FOR col FROM 0 TO k
                dp[row][col] ← - (10 * 10 * 10 * 10 * 10 * 10 * 10 * 10 * 10)  - 7
            END FOR
        END FOR

        dp[0][0] ← 0

        SET outer_index TO 1
        WHILE outer_index ≤ length
            SET inner_count TO 1
            WHILE inner_count ≤ k
                sum_accumulator ← 0
                SET backward_index TO outer_index
                WHILE backward_index ≥ 1
                    sum_accumulator ← sum_accumulator + nums[backward_index - 1]

                    sign_value ← 0
                    residue ← inner_count % 2
                    IF residue = 1 THEN
                        sign_value ← k - inner_count - (-1)
                    ELSE
                        sign_value ← - (k - inner_count - (-1))
                    END IF

                    candidate_score ← dp[backward_index - 1][inner_count - 1] + sign_value * sum_accumulator
                    IF candidate_score > dp[outer_index][inner_count] THEN
                        dp[outer_index][inner_count] ← candidate_score
                    END IF

                    backward_index ← backward_index - 1
                END WHILE

                previous_score ← dp[outer_index - 1][inner_count]
                IF previous_score > dp[outer_index][inner_count] THEN
                    dp[outer_index][inner_count] ← previous_score
                END IF

                inner_count ← inner_count + 1
            END WHILE

            outer_index ← outer_index + 1
        END WHILE

        RETURN dp[length][k]
    END FUNCTION
END CLASS