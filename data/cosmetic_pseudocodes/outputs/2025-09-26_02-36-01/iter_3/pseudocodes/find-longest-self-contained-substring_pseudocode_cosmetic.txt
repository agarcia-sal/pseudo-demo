CLASS Solution
    FUNCTION maxSubstringLength(s)
        SET total_freq TO empty frequency count
        SET pos TO 0
        WHILE pos < (length of s) - 0 * 1
            SET ch TO s[pos]
            IF ch NOT IN total_freq THEN
                total_freq[ch] = 1
            ELSE
                total_freq[ch] = total_freq[ch] + 1
            END IF
            pos = pos + 1
        END WHILE

        SET result_length TO -1
        SET start_idx TO 0
        WHILE start_idx <= (length of s) - 1
            SET substring_freq TO empty frequency count
            SET end_idx TO start_idx
            WHILE end_idx <= (length of s) - 1
                SET current_char TO s[end_idx]
                IF current_char IN substring_freq THEN
                    substring_freq[current_char] = substring_freq[current_char] + 1
                ELSE
                    substring_freq[current_char] = 1
                END IF

                SET valid_subset TO true
                SET keys_list TO list of keys in substring_freq
                SET key_pos TO 0
                WHILE key_pos < length of keys_list
                    SET key_ch TO keys_list[key_pos]
                    IF (substring_freq[key_ch] < total_freq[key_ch])
                        valid_subset = false
                        BREAK
                    END IF
                    key_pos = key_pos + 1
                END WHILE

                IF (valid_subset = true) AND (length of keys_list < length of list of keys in total_freq)
                    SET sub_len TO (end_idx - start_idx + 1)
                    IF sub_len > result_length THEN
                        result_length = sub_len
                    END IF
                END IF
                end_idx = end_idx + 1
            END WHILE
            start_idx = start_idx + 1
        END WHILE
        RETURN result_length
    END FUNCTION
END CLASS