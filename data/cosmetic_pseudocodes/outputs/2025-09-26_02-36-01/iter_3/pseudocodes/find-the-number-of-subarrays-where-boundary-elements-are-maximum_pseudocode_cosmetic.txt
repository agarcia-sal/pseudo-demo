CLASS Solution
    FUNCTION numberOfSubarrays(nums)
        LET mapping = new default dictionary with list default
        LET position = 0
        LET length = size of nums
        WHILE position < length
            LET value = nums[position]
            LET bucket = mapping[value]
            bucket append position
            position = position + 1
        END WHILE

        LET total_count = 0
        LET groups = mapping values as iterable
        LET group_iter = groups iterator
        LET next_group = group_iter next element or none
        WHILE next_group IS NOT none
            LET seq = next_group
            LET size_seq = length of seq
            LET i = 0
            WHILE i < size_seq
                LET j = i
                WHILE j < size_seq
                    LET start_index = seq[i]
                    LET end_index = seq[j]
                    LET subarr_length = end_index - start_index + 1
                    LET subarr = empty list
                    LET k = 0
                    WHILE k < subarr_length
                        subarr append nums[start_index + k]
                        k = k + 1
                    END WHILE

                    LET max_value = subarr[0]
                    LET pos_max = 1
                    WHILE pos_max < length of subarr
                        IF NOT (subarr[pos_max] <= max_value)
                            max_value = subarr[pos_max]
                        END IF
                        pos_max = pos_max + 1
                    END WHILE

                    LET first_elem = nums[start_index]
                    IF max_value == first_elem
                        total_count = total_count + 1
                    END IF

                    j = j + 1
                END WHILE
                i = i + 1
            END WHILE
            next_group = group_iter next element or none
        END WHILE

        RETURN total_count
    END FUNCTION
END CLASS