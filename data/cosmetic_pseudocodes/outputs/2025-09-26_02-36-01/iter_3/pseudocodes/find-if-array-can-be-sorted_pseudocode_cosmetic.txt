CLASS Solution
    FUNCTION canSortArray(nums)
        FUNCTION count_set_bits(n)
            VARIABLE bit_count IS 0
            VARIABLE x IS n
            WHILE x NOT EQUAL 0
                bit_count IS bit_count PLUS (x BITWISE_AND 1)
                x IS x RIGHT_SHIFT 1
            END WHILE
            RETURN bit_count
        END FUNCTION

        VARIABLE length_nums IS LENGTH OF nums
        VARIABLE sorted_nums IS EMPTY LIST
        FOR index FROM 0 TO length_nums - 1
            APPEND nums[index] TO sorted_nums
        END FOR
        CALL sorted_nums SORT IN ASCENDING ORDER

        VARIABLE pass IS 0
        WHILE pass LESS_THAN length_nums
            VARIABLE pos IS 0
            WHILE pos LESS_THAN length_nums - 1
                VARIABLE left_bits IS count_set_bits(nums[pos])
                VARIABLE right_bits IS count_set_bits(nums[pos + 1])
                IF (left_bits EQUALS right_bits) AND (nums[pos] GREATER_THAN nums[pos + 1])
                    VARIABLE holder IS nums[pos]
                    nums[pos] IS nums[pos + 1]
                    nums[pos + 1] IS holder
                END IF
                pos IS pos PLUS 1
            END WHILE
            pass IS pass PLUS 1
        END WHILE

        RETURN (nums IS EQUAL TO sorted_nums)
    END FUNCTION
END CLASS