CLASS Solution
    FUNCTION minChanges(nums k)
        SET tally TO array filled with zeros, length k plus 2
        SET lengthNums TO LENGTH(nums)
        SET pointer TO 0
        WHILE pointer < lengthNums DIV 2
            SET firstNum TO nums[pointer]
            SET secondNum TO nums[lengthNums - pointer - 1]
            IF NOT (firstNum <= secondNum)
                SET tempVal TO firstNum
                SET firstNum TO secondNum
                SET secondNum TO tempVal
            END IF
            ADD 1 TO tally[0]
            SUBTRACT 1 FROM tally[secondNum - firstNum]
            ADD 1 TO tally[secondNum - firstNum + 1]
            SUBTRACT 1 FROM tally[MAXIMUM(secondNum, k - firstNum) + 1]
            ADD 1 TO tally[MAXIMUM(secondNum, k - firstNum) + 2]
            SET pointer TO pointer + 1
        END WHILE
        SET runningSum TO 0
        SET minResult TO positive infinity
        SET index TO 0
        WHILE index < LENGTH(tally)
            SET runningSum TO runningSum + tally[index]
            IF runningSum < minResult
                SET minResult TO runningSum
            END IF
            INCREMENT index BY 1
        END WHILE
        RETURN minResult
    END FUNCTION
END CLASS