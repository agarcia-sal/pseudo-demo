CLASS Solution
    FUNCTION maxScore(grid)
        LET rowCount BE LENGTH OF grid
        LET colCount BE LENGTH OF grid[0]
        
        LET dpMatrix BE EMPTY LIST
        LET idxRow BE 0
        WHILE idxRow < rowCount
            LET tempRow BE EMPTY LIST
            LET idxCol BE 0
            WHILE idxCol < colCount
                tempRow APPEND +∞
                idxCol ← idxCol + 1
            END WHILE
            dpMatrix APPEND tempRow
            idxRow ← idxRow + 1
        END WHILE

        dpMatrix[0][0] ← grid[0][0]

        LET colIter BE 1
        WHILE colIter < colCount
            LET leftMin BE dpMatrix[0][colIter - 1]
            LET currGridVal BE grid[0][colIter]
            dpMatrix[0][colIter] ← IF leftMin < currGridVal THEN leftMin ELSE currGridVal
            colIter ← colIter + 1
        END WHILE

        LET rowIter BE 1
        WHILE rowIter < rowCount
            LET aboveMin BE dpMatrix[rowIter - 1][0]
            LET currGridVal BE grid[rowIter][0]
            dpMatrix[rowIter][0] ← IF aboveMin < currGridVal THEN aboveMin ELSE currGridVal
            rowIter ← rowIter + 1
        END WHILE

        LET maxAchievedScore BE -∞

        LET i BE 1
        WHILE i < rowCount
            LET j BE 1
            WHILE j < colCount
                LET fromUp BE dpMatrix[i - 1][j]
                LET fromLeft BE dpMatrix[i][j - 1]
                LET minPrevVal BE fromUp
                IF fromLeft < fromUp THEN minPrevVal ← fromLeft
                LET currentGridValue BE grid[i][j]
                dpMatrix[i][j] ← minPrevVal
                LET diffVal BE currentGridValue - dpMatrix[i][j]
                IF diffVal > maxAchievedScore THEN maxAchievedScore ← diffVal
                j ← j + 1
            END WHILE
            i ← i + 1
        END WHILE

        RETURN maxAchievedScore
    END FUNCTION
END CLASS