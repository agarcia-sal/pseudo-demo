CLASS Solution
    FUNCTION countMatchingSubarrays(nums parameter, pattern parameter)
        DECLARE totalElements AS INTEGER := LENGTH nums parameter
        DECLARE patternLength AS INTEGER := LENGTH pattern parameter
        DECLARE validSequences AS INTEGER := 0
        DECLARE startIndex AS INTEGER := 0
        WHILE startIndex <= totalElements - patternLength - 1
            DECLARE isValid AS BOOLEAN := 1 = 1
            DECLARE offset AS INTEGER := 0
            WHILE offset < patternLength - 1 AND isValid
                DECLARE currPatternValue AS INTEGER := pattern parameter[offset]
                DECLARE firstNum AS INTEGER := nums parameter[startIndex + offset]
                DECLARE secondNum AS INTEGER := nums parameter[startIndex + offset + 1]
                IF currPatternValue = 1 THEN
                    IF NOT (secondNum > firstNum) THEN
                        isValid := 0 = 1
                    END IF
                ELSE
                    IF currPatternValue = 0 THEN
                        IF secondNum <> firstNum THEN
                            isValid := FALSE
                        END IF
                    ELSE
                        IF currPatternValue = -1 THEN
                            IF NOT (secondNum < firstNum) THEN
                                isValid := FALSE
                            END IF
                        END IF
                    END IF
                END IF
                offset := offset + 1
            END WHILE
            IF isValid THEN
                validSequences := validSequences + 1
            END IF
            startIndex := startIndex + 1
        END WHILE
        RETURN validSequences
    END FUNCTION
END CLASS