CLASS Solution
    FUNCTION sumOfPowers(nums parameter LIST OF INTEGERS k parameter INTEGER) RETURNS INTEGER
        LET modulus BE (1000000000 + 7)
        LET aggregate BE 0
        LET combosIterator BE iterator OVER combinations(nums, k)
        WHILE combosIterator HAS next
            LET group BE combosIterator NEXT
            LET smallest_gap BE 999999999999
            LET outerIdx BE 0
            WHILE outerIdx < k
                LET innerIdx BE outerIdx + 1
                WHILE innerIdx < k
                    LET diff_candidate BE group[outerIdx] - group[innerIdx]
                    IF diff_candidate < 0 THEN
                        LET diff_candidate BE 0 - diff_candidate
                    END IF
                    IF smallest_gap > diff_candidate THEN
                        LET smallest_gap BE diff_candidate
                    END IF
                    LET innerIdx BE innerIdx + 1
                END WHILE
                LET outerIdx BE outerIdx + 1
            END WHILE
            LET aggregate BE aggregate + smallest_gap
            LET aggregate BE aggregate - (modulus * ((aggregate) DIV modulus))
        END WHILE
        RETURN aggregate
    END FUNCTION
END CLASS