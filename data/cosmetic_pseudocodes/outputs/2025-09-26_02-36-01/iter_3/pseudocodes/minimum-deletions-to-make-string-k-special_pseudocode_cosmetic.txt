CLASS Solution  
    FUNCTION minimumDeletions(word, k)  
        LET char_counts BE a dictionary mapping characters in word to zero  
        LET i BE 0  
        WHILE i LESS THAN length of word DO  
            LET current_char BE word[i]  
            IF current_char IN char_counts THEN  
                SET char_counts[current_char] TO char_counts[current_char] PLUS 1  
            ELSE  
                SET char_counts[current_char] TO 1  
            END IF  
            INCREMENT i BY 1  
        END WHILE  
        LET counts_list BE empty list  
        LET itr BE iterator over char_counts.values()  
        WHILE true DO  
            TRY  
                LET val BE next element from itr  
                CALL counts_list.append(val)  
            EXCEPT StopIteration  
                BREAK  
            END TRY  
        END WHILE  
        CALL counts_list.sort()  
        LET min_del BE 10 POWER 1000  
        LET pos BE 0  
        WHILE pos LESS THAN length of counts_list DO  
            LET max_freq ALREADY_SET_TO counts_list[pos] PLUS k  
            LET total_del BE 0  
            LET idx BE pos PLUS 1  
            WHILE idx LESS THAN length of counts_list DO  
                LET freq_val BE counts_list[idx]  
                IF freq_val GREATER THAN max_freq THEN  
                    SET total_del TO total_del PLUS freq_val MINUS max_freq  
                END IF  
                INCREMENT idx BY 1  
            END WHILE  
            LET front_idx BE 0  
            WHILE front_idx LESS THAN pos DO  
                SET total_del TO total_del PLUS counts_list[front_idx]  
                INCREMENT front_idx BY 1  
            END WHILE  
            IF total_del LESS THAN min_del THEN  
                SET min_del TO total_del  
            END IF  
            INCREMENT pos BY 1  
        END WHILE  
        RETURN min_del  
    END FUNCTION  
END CLASS