CLASS Solution
    FUNCTION maxPointsInsideSquare(points s)
        LET total_points := LENGTH points
        LET highest_count := 0
        LET index_i := 0
        WHILE index_i < total_points
            LET current_x := s[index_i][0]
            LET current_y := s[index_i][1]
            LET max_side := (IF current_x < 0 THEN -current_x ELSE current_x)
            LET abs_y := (IF current_y < 0 THEN -current_y ELSE current_y)
            IF max_side < abs_y THEN
                max_side := abs_y
            END IF
            LET identifiers := {}
            LET square_ok := 1 = 1
            LET index_j := 0
            WHILE index_j < total_points
                LET coord_x := s[index_j][0]
                LET coord_y := s[index_j][1]
                LET within_x := NOT (coord_x > max_side OR coord_x < -max_side)
                LET within_y := NOT (coord_y > max_side OR coord_y < -max_side)
                IF within_x AND within_y THEN
                    LET current_tag := s[index_j]
                    IF identifiers CONTAINS current_tag THEN
                        square_ok := false
                        BREAK
                    ELSE
                        identifiers[current_tag] := 1
                    END IF
                END IF
                index_j += 1
            END WHILE
            IF square_ok THEN
                LET count_entries := LENGTH keys(identifiers)
                highest_count := (IF highest_count > count_entries THEN highest_count ELSE count_entries)
            END IF
            index_i += 1
        END WHILE
        RETURN highest_count
    END FUNCTION
END CLASS