CLASS Solution
	FUNCTION minimumDifference(nums k)
		FUNCTION bitwise_or_of_subarray(start end)
			SET accumulator TO 0
			SET index TO start
			WHILE index <= end
				LET accumulator = accumulator BITWISE_OR nums AT index
				SET index TO index + 1
			END WHILE
			RETURN accumulator
		END FUNCTION

		LET count TO LENGTH OF nums
		LET minimum_gap TO 1E9 + 7		// representing a very large number instead of infinity

		SET left TO 0
		WHILE left < count
			LET aggregate_or TO 0
			LET right TO left
			WHILE right < count
				LET aggregate_or = aggregate_or BITWISE_OR (nums AT right)
				LET difference TO k - aggregate_or
				IF difference < 0
					SET difference TO -difference
				END IF
				IF difference < minimum_gap
					SET minimum_gap TO difference
				END IF
				IF minimum_gap EQUALS 0
					RETURN 0
				END IF
				SET right TO right + 1
			END WHILE
			ADD left 1
		END WHILE
		RETURN minimum_gap
	END FUNCTION
END CLASS