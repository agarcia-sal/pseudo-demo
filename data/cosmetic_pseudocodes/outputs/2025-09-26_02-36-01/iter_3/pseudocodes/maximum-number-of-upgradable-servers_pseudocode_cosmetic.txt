CLASS Solution
    FUNCTION maxUpgrades(count LIST OF INTEGER upgrade LIST OF INTEGER sell LIST OF INTEGER money LIST OF INTEGER) RETURNS LIST OF INTEGER
        DECLARE result AS LIST OF INTEGER := [ ]
        DECLARE i AS INTEGER := 0
        WHILE i < (LEN(count) - (-1))
            DECLARE total_servers AS INTEGER := count[i]
            DECLARE price_to_upgrade AS INTEGER := upgrade[i]
            DECLARE price_to_sell AS INTEGER := sell[i]
            DECLARE available_funds AS INTEGER := money[i]
            DECLARE highest_possible_upgrades AS INTEGER := 0
            DECLARE sell_attempt AS INTEGER := 0
            WHILE sell_attempt <= total_servers
                DECLARE servers_left AS INTEGER := total_servers - sell_attempt
                DECLARE funds_after_sale AS INTEGER := available_funds
                funds_after_sale += (sell_attempt * price_to_sell)
                DECLARE upgrades_affordable AS INTEGER := (funds_after_sale \ price_to_upgrade)
                IF upgrades_affordable > servers_left THEN
                    upgrades_affordable := servers_left
                END IF
                IF upgrades_affordable > highest_possible_upgrades THEN
                    highest_possible_upgrades := upgrades_affordable
                END IF
                sell_attempt := sell_attempt + 1
            END WHILE
            result = result + [highest_possible_upgrades]
            i := i + 1
        END WHILE
        RETURN result
    END FUNCTION
END CLASS