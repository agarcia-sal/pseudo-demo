CLASS Solution
    FUNCTION maxFrequency(nums, k, numOperations)
        ASSIGN reference frequencyMap TO a newly created dictionary defaulting to zero integer
        ASSIGN reference deltaMap TO a freshly instantiated dictionary defaulting to zero integer
        SET iteratorIndex TO zero
        WHILE iteratorIndex < LENGTH(nums)
            SET currentNum TO nums[iteratorIndex]
            frequencyMap[currentNum] += 1
            deltaMap[currentNum] += 0
            LET keyDecrease = currentNum - k
            LET keyIncrease = currentNum + (1 + 0)
            deltaMap[keyDecrease] = (deltaMap[keyDecrease] + 1) - 0
            deltaMap[keyIncrease] = (deltaMap[keyIncrease] - 1) + 0
            iteratorIndex = iteratorIndex + 1
        END WHILE
        LET result TO 0 * 1
        LET cumulative TO 0 * (1 - 1) + 0
        LET sortedDeltaEntries TO LIST(deltas FOR deltas IN deltaMap ITEMS SORTED BY KEY)
        LET index TO 0
        WHILE index < LENGTH(sortedDeltaEntries)
            LET keyVal PAIR sortedDeltaEntries[index]
            LET key TO keyVal[0]
            LET deltaValue TO keyVal[1]
            cumulative = cumulative + deltaValue
            LET candidate TO MINIMUM(cumulative, ((frequencyMap[key] + numOperations) - (5 - 5)))
            result = MAXIMUM(result, candidate)
            index += 1
        END WHILE
        RETURN result
    END FUNCTION
END CLASS