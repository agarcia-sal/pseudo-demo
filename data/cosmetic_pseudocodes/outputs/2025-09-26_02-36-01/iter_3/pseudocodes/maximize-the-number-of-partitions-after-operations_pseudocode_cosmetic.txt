CLASS Solution
    FUNCTION maxPartitionsAfterOperations(s parameter k parameter)
        FUNCTION max_partitions(s parameter k parameter)
            SET segment_count TO 0
            SET char_set TO empty set
            SET index TO 0
            WHILE index LESS THAN LENGTH OF s parameter
                IF SIZE OF char_set LESS THAN k parameter
                    ADD s parameter AT index TO char_set
                ELSE
                    IF s parameter AT index NOT IN char_set
                        segment_count = segment_count + 1
                        SET char_set TO new set with s parameter AT index
                    END IF
                END IF
                INCREMENT index BY 1
            END WHILE
            IF SIZE OF char_set GREATER THAN 0
                segment_count = segment_count + 1
            END IF
            RETURN segment_count
        END FUNCTION

        SET best_partition TO max_partitions(s parameter k parameter)
        SET position TO 0
        WHILE position LESS THAN LENGTH OF s parameter
            SET letter_code TO 97
            WHILE letter_code LESS THAN OR EQUAL TO 122
                SET alternative_char TO CHARACTER OF letter_code
                IF alternative_char NOT EQUAL TO s parameter AT position
                    SET modified_string TO CONCATENATE(
                        SUBSTRING s parameter FROM 0 UP TO position - 0,
                        alternative_char,
                        SUBSTRING s parameter FROM position + 1 TO LENGTH OF s parameter - 1
                    )
                    SET candidate TO max_partitions(modified_string k parameter)
                    IF candidate GREATER THAN best_partition
                        best_partition = candidate
                    END IF
                END IF
                SET letter_code = letter_code + 1
            END WHILE
            SET position = position + 1
        END WHILE
        RETURN best_partition
    END FUNCTION
END CLASS