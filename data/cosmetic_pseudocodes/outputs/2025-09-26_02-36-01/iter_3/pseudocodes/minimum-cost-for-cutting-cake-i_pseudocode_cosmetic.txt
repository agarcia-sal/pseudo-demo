CLASS Solution
    FUNCTION minimumCost(m n horizontalCut verticalCut)
        SET totalCost TO 0
        SET idxH TO 0
        SET idxV TO 0
        SET countH TO 1
        SET countV TO 1

        SET reversedHC TO empty list
        FOR k FROM LENGTH(horizontalCut) - 1 DOWNTO 0
            APPEND horizontalCut[k] TO reversedHC
        END FOR

        SET reversedVC TO empty list
        FOR k FROM LENGTH(verticalCut) - 1 DOWNTO 0
            APPEND verticalCut[k] TO reversedVC
        END FOR

        WHILE idxH < m - 1 OR idxV < n - 1
            IF idxV = n - 1 OR (idxH < m - 1 AND reversedHC[idxH] > reversedVC[idxV])
                SET val TO reversedHC[idxH]
                SET addVal TO 0
                SET tempCount TO 0
                FOR c FROM 1 TO countV
                    SET addVal TO addVal + val
                    SET tempCount TO tempCount + 1
                END FOR
                SET totalCost TO totalCost + addVal
                SET countH TO countH + 1
                SET idxH TO idxH + 1
            ELSE
                SET val TO reversedVC[idxV]
                SET addVal TO 0
                SET tempCount TO 0
                FOR c FROM 1 TO countH
                    SET addVal TO addVal + val
                    SET tempCount TO tempCount + 1
                END FOR
                SET totalCost TO totalCost + addVal
                SET countV TO countV + 1
                SET idxV TO idxV + 1
            END IF
        END WHILE
        RETURN totalCost
    END FUNCTION
END CLASS