CLASS Solution
    FUNCTION minimizeStringValue(s)
        IMPORT Counter from a collections utility

        LET counts_map BE Counter applied on s
        IF counts_map HAS key '?' THEN
            DELETE counts_map['?']
        END IF

        LET positions_of_qm BE empty array []
        LET idx TO 0
        WHILE idx < LENGTH(s)
            LET ch BE CHARACTER AT s idx
            IF ch = '?' THEN
                APPEND idx TO positions_of_qm
            END IF
            idx INCREMENT BY 1
        END WHILE

        LET replacements BE []
        LET alphabet BE ARRAY OF CHARACTERS FROM 'a' TO 'z'
        FOR pos IN positions_of_qm
            LET least_count TO +âˆž
            LET candidate_char TO NULL
            LET alpha_idx TO 0
            WHILE alpha_idx < LENGTH(alphabet)
                LET letter BE alphabet[alpha_idx]
                LET current_count BE 0
                IF counts_map HAS key letter THEN
                    current_count = counts_map[letter]
                END IF
                IF current_count < least_count THEN
                    candidate_char = letter
                    least_count = current_count
                END IF
                alpha_idx = alpha_idx + 1
            END WHILE
            APPEND candidate_char TO replacements
            IF counts_map HAS key candidate_char THEN
                counts_map[candidate_char] = counts_map[candidate_char] + 1
            ELSE
                counts_map[candidate_char] = 1
            END IF
        END FOR

        replacements = SORTED VERSION OF replacements IN ascending order

        LET char_array BE EMPTY LIST
        LET pointer TO 0
        WHILE pointer < LENGTH(s)
            APPEND CHARACTER AT s pointer TO char_array
            pointer = pointer + 1
        END WHILE

        LET rep_index TO 0
        FOR EACH pos IN positions_of_qm DO
            char_array[pos] = replacements[rep_index]
            rep_index = rep_index + 1
        END FOR

        LET result_string TO EMPTY STRING
        LET idx TO 0
        WHILE idx < LENGTH(char_array)
            result_string = result_string CONCAT char_array[idx]
            idx = idx + 1
        END WHILE

        RETURN result_string
    END FUNCTION
END CLASS