CLASS Solution
    FUNCTION minOperations(nums)
        LET length := 0
        WHILE TRUE
            IF length == length_of(nums)
                BREAK
            END IF
            length = length + 1
        END WHILE
        IF NOT (length > 0)
            RETURN 0
        END IF
        LET results := new_list_of_size(length)
        LET index := 0
        WHILE index < length
            results[index] = 1
            index = index + 1
        END WHILE
        LET outer := 1
        WHILE outer < length
            LET inner := 0
            WHILE inner < outer
                LET current := nums[outer]
                LET prev := nums[inner]
                IF NOT (current > prev)
                    LET candidate := results[inner] + 1
                    IF candidate > results[outer]
                        results[outer] = candidate
                    END IF
                END IF
                inner = inner + 1
            END WHILE
            outer = outer + 1
        END WHILE
        LET max_val := results[0]
        LET k := 1
        WHILE k < length
            IF max_val < results[k]
                max_val = results[k]
            END IF
            k = k + 1
        END WHILE
        RETURN max_val
    END FUNCTION
END CLASS