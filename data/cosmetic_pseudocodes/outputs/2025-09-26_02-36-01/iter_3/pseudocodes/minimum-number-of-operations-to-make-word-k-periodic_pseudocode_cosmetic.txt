CLASS Solution
    FUNCTION minimumOperationsToMakeKPeriodic(word parameter k)
        LET total_length BE 0
        total_length += LENGTH(word)
        LET slices BE EMPTY COLLECTION
        LET start_pos BE 0
        WHILE start_pos < total_length
            LET end_pos BE start_pos + k - 1
            LET current_slice BE SUBSTRING(word, start_pos, end_pos)
            slices = slices + [current_slice]
            start_pos += k
        END WHILE
        LET frequency_map BE EMPTY MAP
        FOR EACH segment IN slices
            LET old_freq BE 0
            IF segment IN frequency_map THEN
                old_freq = frequency_map[segment]
            END IF
            frequency_map[segment] = old_freq + 1
        END FOR
        LET highest_freq BE 0
        FOR EACH count IN frequency_map.VALUES()
            IF count > highest_freq THEN
                highest_freq = count
            END IF
        END FOR
        LET output_value BE LENGTH(slices) - highest_freq
        RETURN output_value
    END FUNCTION
END CLASS