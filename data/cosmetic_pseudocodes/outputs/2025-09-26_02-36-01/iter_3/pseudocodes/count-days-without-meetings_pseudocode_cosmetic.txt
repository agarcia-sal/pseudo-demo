CLASS Solution  
    FUNCTION countDays(days, meetings)  
        LET sortedMeetings ← meetings  
        INITIALIZE index ← 0  
        WHILE index LESS THAN LENGTH(sortedMeetings) - 1  
            LET j ← 0  
            WHILE j LESS THAN LENGTH(sortedMeetings) - index - 1  
                IF sortedMeetings[j][0] GREATER THAN sortedMeetings[j + 1][0] THEN  
                    LET temp ← sortedMeetings[j]  
                    SET sortedMeetings[j] ← sortedMeetings[j + 1]  
                    SET sortedMeetings[j + 1] ← temp  
                END IF  
                INCREMENT j BY 1  
            END WHILE  
            INCREMENT index BY 1  
        END WHILE  
        LET dayCursor ← 1  
        LET freeDayCount ← 0  
        LET i ← 0  
        WHILE i LESS THAN LENGTH(sortedMeetings)  
            LET meetingPair ← sortedMeetings[i]  
            LET beginDay ← meetingPair[0]  
            LET finishDay ← meetingPair[1]  
            IF (dayCursor) LESS THAN (beginDay) THEN  
                LET gap ← beginDay - dayCursor  
                SET freeDayCount ← freeDayCount + gap  
            END IF  
            IF (dayCursor) GREATER THAN finishDay THEN  
                ; NO CHANGE TO dayCursor  
            ELSE  
                SET dayCursor ← finishDay + 1  
            END IF  
            INCREMENT i BY 1  
        END WHILE  
        IF dayCursor IS LESS THAN OR EQUAL TO days THEN  
            LET remainder ← (days - dayCursor) + 1  
            SET freeDayCount ← freeDayCount + remainder  
        END IF  
        RETURN freeDayCount  
    END FUNCTION  
END CLASS