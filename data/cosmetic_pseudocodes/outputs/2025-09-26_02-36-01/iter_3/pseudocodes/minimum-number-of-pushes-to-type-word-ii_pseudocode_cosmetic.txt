CLASS Solution
    FUNCTION minimumPushes(word)
        SET char_counts TO empty map
        SET idx TO 0
        WHILE idx < LENGTH(word)
            SET ch TO word[idx]
            IF ch EXISTS IN char_counts
                SET char_counts[ch] TO char_counts[ch] PLUS 1
            ELSE
                SET char_counts[ch] TO 1
            END IF
            SET idx TO idx PLUS 1
        END WHILE
        SET counts_list TO EMPTY LIST
        FOR each key IN char_counts KEYS
            APPEND char_counts[key] TO counts_list
        END FOR
        SET descending_counts TO EMPTY LIST
        WHILE LENGTH(counts_list) > 0
            SET max_val TO counts_list[0]
            SET max_idx TO 0
            SET pos TO 1
            WHILE pos < LENGTH(counts_list)
                IF counts_list[pos] > max_val
                    SET max_val TO counts_list[pos]
                    SET max_idx TO pos
                END IF
                SET pos TO pos PLUS 1
            END WHILE
            APPEND max_val TO descending_counts
            REMOVE counts_list[max_idx]
        END WHILE
        SET total_presses TO 0
        SET current_key_press TO 1
        SET pressed_keys_count TO 0
        SET i TO 0
        WHILE i < LENGTH(descending_counts)
            SET frequency TO descending_counts[i]
            SET product TO 0
            SET multiplier TO current_key_press
            REPEAT
                SET product TO product PLUS frequency
                SET multiplier TO multiplier MINUS 1
            UNTIL multiplier = 0
            SET total_presses TO total_presses PLUS product
            SET pressed_keys_count TO pressed_keys_count PLUS 1
            IF pressed_keys_count = (4 + 4)
                SET pressed_keys_count TO 0
                SET current_key_press TO current_key_press PLUS 1
            END IF
            SET i TO i PLUS 1
        END WHILE
        RETURN total_presses
    END FUNCTION
END CLASS