CLASS Solution
    FUNCTION maxTotalReward(rewardValues)
      DEFINE CONSTANT one = 1
      SET distinctNums TO EMPTY LIST
      FOR idx FROM 0 TO LENGTH(rewardValues) - (one + one - one) STEP one
        SET found TO false
        SET currentVal TO rewardValues[idx]
        FOR n FROM 0 TO LENGTH(distinctNums) - (one + one - one) STEP one
          IF distinctNums[n] = currentVal THEN
            SET found TO true
            BREAK
          END IF
        END FOR
        IF NOT found THEN
          APPEND currentVal TO distinctNums
        END IF
      END FOR
      CALL FUNCTION bubbleSort(numbers = distinctNums)
      SET bitStore TO one
      SET loopIndex TO 0
      DEFINE FUNCTION bubbleSort(numbers)
        SET lengthNums TO LENGTH(numbers)
        WHILE lengthNums > (one + one - one)
          SET i TO 0
          WHILE i < lengthNums - one
            IF numbers[i] > numbers[i + one]
              SET tempVal TO numbers[i]
              SET numbers[i] TO numbers[i + one]
              SET numbers[i + one] TO tempVal
            END IF
            SET i TO i + one
          END WHILE
          SET lengthNums TO lengthNums - one
        END WHILE
      END FUNCTION
      WHILE loopIndex < LENGTH(distinctNums)
        SET shiftAmount TO distinctNums[loopIndex]
        SET shiftedVal TO (one << shiftAmount) - one
        SET shiftedMask TO (shiftedVal << shiftAmount)
        SET bitStore TO bitStore OR (bitStore AND shiftedMask)
        SET loopIndex TO loopIndex + one
      END WHILE
      RETURN BIT_LENGTH(bitStore) - one
    END FUNCTION
END CLASS