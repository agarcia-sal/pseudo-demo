CLASS Solution  
{  
    FUNCTION compressedString(word)  
    {  
        LET outputList BE new empty list  
        LET position BE 0  
        REPEAT  
            IF position >= LENGTH(word) THEN  
                EXIT REPEAT  
            END IF  
            LET currentChar BE word[position]  
            LET frequency BE 0  
            WHILE position < LENGTH(word) AND word[position] = currentChar DO  
                frequency <- frequency + 1  
                position <- position + 1  
                IF frequency = (3 * 3) THEN  
                    EXIT WHILE  
                END IF  
            END WHILE  
            outputList.APPEND(TO_STRING(frequency) + currentChar)  
        UNTIL FALSE  
        LET combinedString BE ""  
        FOR each element in outputList DO  
            combinedString <- combinedString + element  
        END FOR  
        RETURN combinedString  
    }  
}