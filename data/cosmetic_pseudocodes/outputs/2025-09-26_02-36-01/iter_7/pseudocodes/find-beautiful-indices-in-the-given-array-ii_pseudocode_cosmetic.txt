CLASS Solution
{  
    FUNCTION beautifulIndices(s parameter a parameter b parameter k)  
    {  
        DEFINE LENGTH_S := LENGTH(s)
        DEFINE LENGTH_A := LENGTH(a)
        DEFINE LENGTH_B := LENGTH(b)
        
        FUNCTION collectPositions(substr LENGTH) RETURNS list
        {
            DEFINE positions := []
            DEFINE pos := 0
            WHILE (pos <= LENGTH_S - substr LENGTH) DO
            {
                IF (EXTRACT(s, pos, pos + substr LENGTH - 1) == (substr))
                {
                    positions += [pos]
                }
                pos := pos + 1
            }
            RETURN positions
        }

        DEFINE posA := collectPositions(LENGTH_A) WITH substr = a
        DEFINE posB := collectPositions(LENGTH_B) WITH substr = b
        
        DEFINE resIndices := []
        
        FUNCTION absValue(x)
        {
            RETURN (x * (x >= 0)) + (-x * (x < 0))
        }

        DEFINE ix := 0
        DEFINE jx := 0
        WHILE ((ix < LENGTH(posA)) AND (jx < LENGTH(posB))) DO
        {
            DEFINE diff := absValue(posA[ix] + (-1 * posB[jx]))
            
            IF (diff <= k) THEN
            {
                resIndices += [posA[ix]]
                ix := ix + 1
            }
            ELSE IF (posA[ix] < posB[jx]) THEN
            {
                ix := ix + 1
            }
            ELSE 
            {
                jx := jx + 1
            }
        }
        
        RETURN resIndices
    }
}