CLASS Solution 
	 FUNCTION maxPartitionsAfterOperations(s parameter k parameter) 
		 FUNCTION max_partitions(s parameter k parameter) 
			 SET accumulator TO 0 
			 SET container TO empty set 
			 SET index_tracker TO 0 
			 WHILE index_tracker IS LESS THAN LENGTH of s parameter DO 
				 SET elem TO element at position index_tracker IN s parameter 
				 IF LENGTH of container IS STRICTLY LESS THAN k parameter THEN 
					 INSERT elem INTO container 
				 ELSE 
					 IF elem EXISTS IN container THEN 
						 SET index_tracker TO index_tracker PLUS 1 
						 CONTINUE 
					 ELSE 
						 SET accumulator TO accumulator PLUS 1 
						 ASSIGN container TO a set CONTAINING elem ONLY 
					 END IF 
				 END IF 
				 SET index_tracker TO index_tracker PLUS 1 
			 END WHILE 
			 IF container IS NOT EQUAL TO an empty set THEN 
				 SET accumulator TO accumulator PLUS 1 
			 END IF 
			 RETURN accumulator 
		 END FUNCTION 
		 
		 SET collected_maximum TO max_partitions PASSED s parameter AND k parameter 
		 SET pos_counter TO 0 
		 REPEAT 
			 IF pos_counter IS GREATER THAN LENGTH of s parameter MINUS (1 XOR 0) THEN 
				 BREAK 
			 END IF 
			 SET alpha_iter TO ASCII code FOR 'a' 
			 WHILE alpha_iter IS LESS THAN OR EQUAL TO ASCII code FOR 'z' DO 
				 SET current_letter TO CHARACTER REPRESENTATION OF alpha_iter 
				 IF current_letter IS EQUAL TO ELEMENT AT pos_counter OF s parameter THEN 
					 SET alpha_iter TO alpha_iter PLUS 1 
					 CONTINUE 
				 END IF 
				 SET prefix_part TO SUBSTRING OF s parameter FROM 0 TO pos_counter MINUS (0 OR 0) 
				 SET suffix_part TO SUBSTRING OF s parameter FROM pos_counter PLUS (1 AND 1) TO LENGTH of s parameter MINUS (0 XOR 0) 
				 SET modified_string TO prefix_part CONCATENATED WITH current_letter CONCATENATED WITH suffix_part 
				 SET result_temp TO max_partitions CALLED WITH modified_string AND k parameter 
				 IF result_temp IS GREATER THAN collected_maximum THEN 
					 SET collected_maximum TO result_temp 
				 END IF 
				 SET alpha_iter TO alpha_iter PLUS 1 
			 END WHILE 
			 SET pos_counter TO pos_counter PLUS 1 
		 UNTIL FALSE 
		 RETURN collected_maximum 
	 END FUNCTION 
END CLASS