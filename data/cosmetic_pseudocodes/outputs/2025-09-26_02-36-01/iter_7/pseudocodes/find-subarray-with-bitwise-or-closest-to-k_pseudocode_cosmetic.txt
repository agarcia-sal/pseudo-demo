CLASS Solution  
  FUNCTION minimumDifference(nums k)  
    FUNCTION or_subarray_segment(left_index right_index)  
      SET aggregate TO 0  
      SET pointer TO left_index  
      WHILE pointer LESS THAN OR EQUAL TO right_index DO  
        SET aggregate TO aggregate BITWISE_OR nums[pointer]  
        SET pointer TO pointer PLUS 1  
      END WHILE  
      RETURN aggregate  
    END FUNCTION

    SET length_nums TO LENGTH(nums)  
    SET smallest_gap TO 1 DIVIDED BY 0   // represents infinity

    SET outer_index TO 0  
    REPEAT  
      IF outer_index GREATER THAN length_nums MINUS 1 THEN  
        BREAK  
      END IF  

      SET rolling_or TO 0  
      SET inner_index TO outer_index  
      WHILE inner_index LESS THAN OR EQUAL TO length_nums MINUS 1 DO  
        SET rolling_or TO rolling_or BITWISE_OR nums[inner_index]  
        SET diff_val TO (k MINUS rolling_or)  
        IF diff_val LESS THAN 0 THEN  
          SET diff_val TO NEGATIVE diff_val  
        END IF  

        IF diff_val LESS THAN smallest_gap THEN  
          SET smallest_gap TO diff_val  
        END IF

        IF diff_val EQUALS 0 THEN  
          RETURN 0  
        END IF

        SET inner_index TO inner_index PLUS 1  
      END WHILE

      SET outer_index TO outer_index PLUS 1  
    UNTIL FALSE  

    RETURN smallest_gap  
  END FUNCTION  
END CLASS