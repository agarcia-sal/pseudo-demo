CLASS Solution  
  FUNCTION minOrAfterOperations(nums k)  
    FUNCTION canAchieve(target_or k)  
      SET mask_accumulator TO -1  
      SET ops_count TO 0  
      SET idx TO 0  
      WHILE idx < LENGTH(nums)  
        SET value TO nums[idx]  
        IF mask_accumulator = -1 THEN  
          SET mask_accumulator TO value  
        ELSE  
          SET mask_accumulator TO mask_accumulator BITWISE_AND value  
        END IF  
        IF (mask_accumulator BITWISE_AND target_or) = 0 THEN  
          SET mask_accumulator TO -1  
        ELSE  
          SET ops_count TO ops_count + 1  
          IF ops_count > k THEN  
            RETURN false  
          END IF  
        END IF  
        SET idx TO idx + 1  
      END WHILE  
      RETURN true  
    END FUNCTION  

    SET ALL_BITS_TO_ONE TO (1 << 30) - 1  
    SET final_val TO ALL_BITS_TO_ONE  
    SET bit_index TO 0  

    REPEAT  
      IF bit_index >= 30 THEN  
        BREAK  
      END IF  
      SET single_bit TO 1 << bit_index  
      IF (final_val BITWISE_AND single_bit) = 0 THEN  
        SET bit_index TO bit_index + 1  
        CONTINUE  
      END IF  
      SET inverted_val TO final_val BITWISE_AND (NOT single_bit)  
      SET test_val TO inverted_val  

      SET can_make TO canAchieve(test_val k)  
      IF can_make THEN  
        SET final_val TO test_val  
      END IF  
      SET bit_index TO bit_index + 1  
    UNTIL false  

    RETURN final_val  
  END FUNCTION  
END CLASS