CLASS Solution
    FUNCTION maxScore(points, m)
         FUNCTION isPossible(minVal, m)
          SET countMoves TO 0
          SET prevCount TO 0
          SET idx TO 0
          WHILE idx < LENGTH(points)
            SET currPoint TO points[idx]
            SET calcReq TO CEIL( (minVal + currPoint - 1) / currPoint )
            IF (calcReq - prevCount) < 0 THEN
              SET calcReq TO 0
            ELSE
              SET calcReq TO calcReq - prevCount
            END IF
            IF calcReq > 0 THEN
              SET countMoves TO countMoves + (calcReq * 2 - 1)
              SET prevCount TO calcReq - 1
            ELSE
              IF (idx + 1) < LENGTH(points) THEN
                SET countMoves TO countMoves + 1
                SET prevCount TO 0
              END IF
            END IF
            IF countMoves > m THEN
              RETURN False
            END IF
            SET idx TO idx + 1
          END WHILE
          RETURN True
         END FUNCTION

        SET low TO 0
        SET upperBound TO (((m + 1) \ 2) * points[0]) + 1

        SET high TO upperBound

        WHILE low < high
          SET midPoint TO ((low + high + 1) \ 2)
          IF isPossible(midPoint, m) THEN
            SET low TO midPoint
          ELSE
            SET high TO midPoint - 1
          END IF
        END WHILE

      RETURN low
    END FUNCTION
END CLASS