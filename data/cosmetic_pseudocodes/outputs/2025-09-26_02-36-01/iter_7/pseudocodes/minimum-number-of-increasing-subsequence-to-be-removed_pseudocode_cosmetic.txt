CLASS Solution  
    FUNCTION minOperations(nums)  
        LET lengthVar BE LENGTH(nums)  
        IF NOT (lengthVar > 0) THEN  
            RETURN 0  
        END IF  
        LET dpArray BE A LIST WITH lengthVar ELEMENTS EACH INITIALIZED TO 1  
        DEFINE FUNC processIndex(currentIdx, comparatorIdx, acc)  
            IF comparatorIdx < 0 THEN  
                RETURN acc  
            ELSE IF nums[currentIdx] <= nums[comparatorIdx] THEN  
                LET updatedValue BE MAX(dpArray[currentIdx], dpArray[comparatorIdx] + 1)  
                SET acc TO updatedValue  
                RETURN processIndex(currentIdx, comparatorIdx - 1, acc)  
            ELSE  
                RETURN processIndex(currentIdx, comparatorIdx - 1, acc)  
            END IF  
        END FUNC  
        LET currentIndex BE 1  
        WHILE currentIndex < lengthVar DO  
            LET maxVal BE processIndex(currentIndex, currentIndex - 1, dpArray[currentIndex])  
            SET dpArray[currentIndex] TO maxVal  
            SET currentIndex TO currentIndex + 1  
        END WHILE  
        LET resultVal BE dpArray[0]  
        LET iteratorVar BE 1  
        WHILE iteratorVar < lengthVar DO  
            IF dpArray[iteratorVar] > resultVal THEN  
                SET resultVal TO dpArray[iteratorVar]  
            END IF  
            SET iteratorVar TO iteratorVar + 1  
        END WHILE  
        RETURN resultVal  
    END FUNCTION  
END CLASS