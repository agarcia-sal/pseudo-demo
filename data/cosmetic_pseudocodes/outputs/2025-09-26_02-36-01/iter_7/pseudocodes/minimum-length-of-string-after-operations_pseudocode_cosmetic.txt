CLASS Solution
    FUNCTION minimumLength(s)
        DEFINE function countOccurrences(inputStr) RETURNS map
            SET freqMap TO empty map
            DEFINE index TO zero
            WHILE index LESS THAN LENGTH of inputStr DO
                DEFINE currentChar TO inputStr[index]
                IF currentChar NOT IN freqMap THEN
                    SET freqMap[currentChar] TO 1
                ELSE
                    SET freqMap[currentChar] TO freqMap[currentChar] PLUS 1
                END IF
                INCREMENT index BY 1
            END WHILE
            RETURN freqMap
        END FUNCTION

        SET charCounts TO countOccurrences(s)
        SET oddCategorySum TO 0
        SET evenCategorySum TO 0

        DEFINE keyList TO list of KEYS in charCounts
        DEFINE iterIdx TO LENGTH of keyList MINUS 1

        WHILE iterIdx GREATER THAN OR EQUAL TO 0 DO
            SET currentCount TO charCounts[keyList[iterIdx]]
            IF currentCount MODULO 2 NOT EQUAL TO 0 THEN
                SET oddCategorySum TO oddCategorySum PLUS 1
            ELSE
                IF currentCount MODULO 2 EQUALS 0 AND currentCount NOT EQUALS 0 THEN
                    SET evenCategorySum TO evenCategorySum PLUS 2
                END IF
            END IF
            DECREMENT iterIdx BY 1
        END WHILE

        SET finalResult TO oddCategorySum PLUS evenCategorySum
        RETURN finalResult
    END FUNCTION
END CLASS