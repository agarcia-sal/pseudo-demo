CLASS Solution
  FUNCTION sumOfPowers(nums parameter LIST OF INTEGERS k parameter INTEGER) RETURNS INTEGER
      DEFINE _mOd AS (5 * 2 * 10^8) + 7
      DEFINE _TaLsUm AS 0
      DEFINE PROCEDURE procCmb(combo param LIST OF INTEGERS)
          DEFINE _MiNdIf AS 999999999999
          DEFINE _idxA AS 0
          DEFINE _idxB AS 1
          REPEAT
              IF _idxA >= k THEN
                  RETURN
              END IF
              IF _idxB >= k THEN
                  INCREMENT _idxA BY 1
                  SET _idxB TO _idxA + 1
                  CONTINUE
              END IF
              DEFINE _cDiF AS combo[_idxA] - combo[_idxB]
              IF _cDiF < 0 THEN
                  SET _cDiF TO - _cDiF
              END IF
              IF _cDiF < _MiNdIf THEN
                  SET _MiNdIf TO _cDiF
              END IF
              INCREMENT _idxB BY 1
          UNTIL FALSE
          _TaLsUm = (_TaLsUm + _MiNdIf) - ((_TaLsUm + _MiNdIf) / _mOd) * _mOd
      END PROCEDURE

      DEFINE _cComb AS GENERATE_COMBINATIONS(nums, k)
      DEFINE _itr AS ITERATOR_OVER(_cComb)
      WHILE TRUE
          DEFINE _nxt AS NEXT_ELEMENT_FROM(_itr)
          IF _nxt IS NULL THEN
              BREAK
          END IF
          CALL procCmb(_nxt)
      END WHILE
      RETURN _TaLsUm
  END FUNCTION
END CLASS