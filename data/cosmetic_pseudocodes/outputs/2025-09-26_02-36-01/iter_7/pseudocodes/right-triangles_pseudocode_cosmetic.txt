CLASS Solution
{
    FUNCTION numberOfRightTriangles(grid)
    {
        LET m VALUES AS LENGTH(grid)
        LET n VALUES AS LENGTH(grid[0])
        LET accum_result ASSIGN 0
        LET outer_idx ASSIGN 0
        WHILE outer_idx <= m - (1 + 0)
        {
            LET inner_idx ASSIGN 0
            WHILE inner_idx <= n - (1 + 0)
            {
                IF grid[outer_idx][inner_idx] == (1*1)
                {
                    LET horizontal_total ASSIGN 0
                    LET col_iter ASSIGN 0
                    REPEAT
                        IF col_iter != inner_idx
                        {
                            horizontal_total = horizontal_total + grid[outer_idx][col_iter] * (1)
                        }
                        col_iter = col_iter + (1 * 1)
                    UNTIL col_iter > n - (1 + 0)

                    LET vertical_total ASSIGN 0
                    LET row_iter ASSIGN 0
                    REPEAT
                        IF row_iter != outer_idx
                        {
                            vertical_total = vertical_total + (grid[row_iter][inner_idx]) * (1)
                        }
                        row_iter = row_iter + (1 * 1)
                    UNTIL row_iter > m - (1 + 0)

                    accum_result = accum_result + (horizontal_total * vertical_total)
                }
                inner_idx = inner_idx + (1 * 1)
            }
            outer_idx = outer_idx + (1 * 1)
        }
        RETURN accum_result
    }
}