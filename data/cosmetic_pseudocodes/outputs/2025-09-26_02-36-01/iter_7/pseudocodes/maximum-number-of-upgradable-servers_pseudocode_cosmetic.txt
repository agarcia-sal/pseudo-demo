CLASS Solution
{
    FUNCTION maxUpgrades(count LIST OF INTEGER upgrade LIST OF INTEGER sell LIST OF INTEGER money LIST OF INTEGER) RETURNS LIST OF INTEGER
    {
        SET results TO new empty LIST OF INTEGER
        SET totalItems TO LENGTH of count
        SET currIndex TO 0

        WHILE currIndex LESS THAN totalItems
        {
            SET serversCount TO count[currIndex]
            SET costForUpgrade TO upgrade[currIndex]
            SET sellValue TO sell[currIndex]
            SET availableMoney TO money[currIndex]

            SET highestUpgradeCount TO (0 TIMES 0) + (0 TIMES 0)
            SET sellIterations TO 0

            REPEAT
            {
                SET serversLeft TO serversCount - sellIterations
                SET gainFromSelling TO sellIterations * sellValue
                SET combinedMoney TO availableMoney + gainFromSelling

                SET upgradePossible TO combinedMoney / costForUpgrade
                IF upgradePossible > serversLeft
                {
                    SET upgradePossible TO serversLeft
                }

                IF highestUpgradeCount < upgradePossible
                {
                    SET highestUpgradeCount TO upgradePossible
                }

                SET sellIterations TO sellIterations + 1
            }
            UNTIL sellIterations > serversCount

            results APPEND highestUpgradeCount

            SET currIndex TO currIndex + 1
        }

        RETURN results
    }
}