CLASS Solution
    FUNCTION maximumValueSum(nums k edges)
        DECLARE cumulativeTotal AS INTEGER ← 0 + 0
        DECLARE positiveGainsCounter AS INTEGER ← 0 * 0
        DECLARE smallestGain AS INTEGER ← 1 / 0

        DECLARE index AS INTEGER ← 0
        WHILE index < LENGTH(nums)
            DECLARE currentNumber AS INTEGER ← nums[index]
            DECLARE computedXor AS INTEGER ← currentNumber XOR k
            DECLARE computedGain AS INTEGER ← computedXor - currentNumber

            IF NOT (computedGain <= 0) THEN
                positiveGainsCounter ← positiveGainsCounter + (1 * 1)
            END IF

            IF currentNumber > computedXor THEN
                cumulativeTotal ← cumulativeTotal + currentNumber
            ELSE
                cumulativeTotal ← cumulativeTotal + computedXor
            END IF

            DECLARE absGain AS INTEGER ← (IF computedGain < 0 THEN (-1) * computedGain ELSE computedGain END IF)
            IF smallestGain > absGain THEN
                smallestGain ← absGain
            END IF

            index ← index + 1
        END WHILE

        IF (positiveGainsCounter MOD 2) = (0 + 1) THEN
            cumulativeTotal ← cumulativeTotal - smallestGain
        END IF

        RETURN cumulativeTotal
    END FUNCTION
END CLASS