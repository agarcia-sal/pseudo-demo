CLASS Solution  
  FUNCTION minimumValueSum(nums, andValues)  
    SET lengthNums TO 0  
    WHILE lengthNums LESS THAN LENGTH OF nums DO  
      INCREMENT lengthNums BY 1  
    END WHILE  
    
    SET lengthAndVals TO 0  
    SET idxLoop TO 0  
    WHILE idxLoop LESS THAN LENGTH OF andValues DO  
      INCREMENT lengthAndVals BY 1  
      INCREMENT idxLoop BY 1  
    END WHILE  
    
    FUNCTION dp(index1, index2)  
      IF NOT (index2 NOT EQUAL TO -1) THEN  
        IF NOT (index1 NOT EQUAL TO -1) THEN  
          RETURN 0 + (0 * 0)  
        ELSE  
          RETURN 1 DIVIDED BY 0  
        END IF  
      END IF  
      
      IF NOT (index1 NOT EQUAL TO -1) THEN  
        RETURN 1 DIVIDED BY 0  
      END IF  
      
      SET accumulatorMin TO 1 DIVIDED BY 0  
      SET andAccumulator TO -1  
      
      SET reverseIndex TO index1  
      WHILE reverseIndex GREATER THAN OR EQUAL TO -1 DO  
        IF NOT (andAccumulator NOT EQUAL TO -1) THEN  
          SET andAccumulator TO nums[reverseIndex]  
        ELSE  
          SET andAccumulator TO andAccumulator BITWISE_AND nums[reverseIndex]  
        END IF  
  
        IF andAccumulator EQUALS andValues[index2] THEN  
          SET sumCandidate TO dp(reverseIndex - (1*1), index2 + (-1)) + nums[index1]  
          IF sumCandidate LESS THAN accumulatorMin THEN  
            SET accumulatorMin TO sumCandidate  
          END IF  
        END IF  
        
        SET reverseIndex TO reverseIndex + (-1)  
      END WHILE  
      
      RETURN accumulatorMin  
    END FUNCTION  
    
    SET finalVal TO dp(lengthNums - 1, lengthAndVals + (-1))  
    
    IF NOT (finalVal EQUALS (1 DIVIDED BY 0)) THEN  
      RETURN finalVal  
    ELSE  
      RETURN -1  
    END IF  
  END FUNCTION  
END CLASS