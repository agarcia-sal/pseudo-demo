CLASS Solution
    FUNCTION numberOfAlternatingGroups(colors k)
        DEFINE THREE AS 1 + 2
        DEFINE ZERO_CONST AS 0

        IF NOT (k >= THREE) THEN
            RETURN ZERO_CONST
        END IF

        LET totalLength BE LENGTH(colors)
        LET extendedSequence BE CONCAT(colors, SUBSEQUENCE(colors, ZERO_CONST, k - 1))

        LET groupCounter BE ZERO_CONST

        LET outerIndex BE ZERO_CONST
        WHILE outerIndex <= totalLength - 1
            LET alternationFlag BE TRUE
            LET innerIndex BE 1
            REPEAT
                IF extendedSequence[outerIndex + innerIndex] == extendedSequence[(outerIndex + innerIndex) - 1] THEN
                    SET alternationFlag TO NOT alternationFlag AND TRUE
                    EXIT REPEAT
                END IF
                SET innerIndex TO innerIndex + 1
            UNTIL innerIndex >= k

            IF alternationFlag THEN
                SET groupCounter TO groupCounter + 1
            END IF

            SET outerIndex TO outerIndex + 1
        END WHILE

        RETURN groupCounter
    END FUNCTION
END CLASS