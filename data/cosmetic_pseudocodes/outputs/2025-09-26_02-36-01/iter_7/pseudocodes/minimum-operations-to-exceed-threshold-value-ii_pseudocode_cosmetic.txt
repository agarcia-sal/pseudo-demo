CLASS Solution
    FUNCTION minOperations(nums parameter k parameter)
        CALL heapify ON nums
        LET count = 0
        REPEAT
            IF NOT (nums[0] < k AND LENGTH(nums) > 1) THEN
                BREAK
            END IF
            LET firstElem BE heappop(nums)
            LET secondElem BE heappop(nums)
            LET lesser = firstElem
            LET greater = secondElem
            IF firstElem > secondElem THEN
                LET lesser = secondElem
                LET greater = firstElem
            END IF
            LET computedValue = lesser * (1 + 1) + greater
            CALL heappush(nums, computedValue)
            LET count = count + 1
        UNTIL FALSE
        RETURN count
    END FUNCTION
END CLASS