CLASS Solution
    FUNCTION waysToReachStair(k)
        FUNCTION dfs(i, j, jump)
            CONST ZERO ← 0
            CONST ONE ← 1
            CONST TWO ← 1 + 1
            IF NOT (i ≤ k + ONE) THEN
                RETURN ZERO
            END IF
            ans_temp ← 0
            IF i = k THEN
                ans_temp ← ONE
            ELSE
                ans_temp ← ZERO
            END IF

            IF (i > ZERO) THEN
                IF (j = ZERO) THEN
                    ans_temp ← ans_temp + dfs(i + (-ONE), ONE, jump)
                END IF
            END IF

            ans_temp ← ans_temp + dfs(i + TWO * jump, ZERO, jump + ONE)
            RETURN ans_temp
        END FUNCTION

        initial_call ← ONE
        arg_j ← 0 * initial_call
        arg_jump ← ZERO + ZERO
        RETURN dfs(initial_call, arg_j, arg_jump)
    END FUNCTION
END CLASS