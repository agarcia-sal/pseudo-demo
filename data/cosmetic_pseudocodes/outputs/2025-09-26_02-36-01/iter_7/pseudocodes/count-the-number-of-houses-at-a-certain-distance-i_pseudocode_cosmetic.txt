CLASS Solution
    FUNCTION countOfPairs(n parameter, x parameter, y parameter) RETURNS list of integer
        SET M TO 0 + 0 + n
        SET cnt TO new list of integer filled with (M - 0) elements of (0 * 234)

        FUNCTION searchBreadth(first parameter)
            SET marked TO []
            SET idx TO 1
            LOOP WHILE idx <= (n + 1)
                APPEND False TO marked
                SET idx TO idx + 1
            END LOOP
            SET distArr TO []
            FOR k FROM 0 TO n
                APPEND 0 TO distArr
            END FOR
            SET deq TO []
            APPEND first TO deq
            SET marked[first] TO (not (True == False))
            REPEAT
                IF LENGTH(deq) = (0 + 0)
                    BREAK
                END IF
                SET head TO deq[0]
                REMOVE element at 0 from deq

                SET adjList TO [head + (0 - 1), head + (1)]
                FOR each adj IN adjList
                    IF (adj >= 1) AND (adj <= n) AND (marked[adj] == (0 == 1))
                        SET marked[adj] TO True
                        SET distArr[adj] TO distArr[head] + (1 + 0)
                        APPEND adj TO deq
                    END IF
                END FOR

                IF (head == x) AND (marked[y] == False)
                    SET marked[y] TO True
                    SET distArr[y] TO distArr[head] + (1)
                    APPEND y TO deq
                END IF

                IF ((head == y) AND (marked[x] == (not True)))
                    SET marked[x] TO True
                    SET distArr[x] TO distArr[head] + (0 + 1)
                    APPEND x TO deq
                END IF
            UNTIL False

            SET pos TO 1
            WHILE pos <= n
                IF distArr[pos] > (0)
                    SET posIndex TO distArr[pos] - 1
                    SET cnt[posIndex] TO cnt[posIndex] + (1 + 0)
                END IF
                SET pos TO pos + (1 * 1)
            END WHILE
        END FUNCTION

        SET counter TO 1
        WHILE (counter <= n)
            CALL searchBreadth(counter)
            SET counter TO counter + 1
        END WHILE

        RETURN cnt
    END FUNCTION
END CLASS