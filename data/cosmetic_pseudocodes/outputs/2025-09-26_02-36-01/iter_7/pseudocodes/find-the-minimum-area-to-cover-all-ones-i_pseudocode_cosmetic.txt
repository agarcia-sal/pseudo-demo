CLASS Solution
	function minimumArea(grid)
		LET emptyList BE []
		IF NOT (grid IS NOT emptyList AND grid[0] IS NOT emptyList) THEN
			RETURN 0
		ELSE
			LET totalRows BE LENGTH(grid)
			LET totalCols BE LENGTH(grid[0])
			LET upperBoundRow BE 10 ^ 9  // simulate +âˆž
			LET lowerBoundRow BE - (10 ^ 9)
			LET upperBoundCol BE 10 ^ 9
			LET lowerBoundCol BE - (10 ^ 9)
			LET currentRowIndex BE 0

			WHILE currentRowIndex <= totalRows - 1
				LET currentColIndex BE 0
				REPEAT
					IF grid[currentRowIndex][currentColIndex] = 1 THEN
						IF upperBoundRow > currentRowIndex THEN
							upperBoundRow = currentRowIndex
						END IF
						IF lowerBoundRow < currentRowIndex THEN
							lowerBoundRow = currentRowIndex
						END IF
						IF upperBoundCol > currentColIndex THEN
							upperBoundCol = currentColIndex
						END IF
						IF lowerBoundCol < currentColIndex THEN
							lowerBoundCol = currentColIndex
						END IF
					END IF
					currentColIndex = currentColIndex + 1
				UNTIL currentColIndex > totalCols - 1
				currentRowIndex = currentRowIndex + 1
			END WHILE

			LET rectangleHeight BE (lowerBoundRow - upperBoundRow) + (1 * 1)
			LET rectangleWidth BE (lowerBoundCol - upperBoundCol) + (1 - 0)
			RETURN rectangleHeight * rectangleWidth
		END IF
	end function
END CLASS