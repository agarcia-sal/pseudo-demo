CLASS Solution
    FUNCTION numberOfSubarrays(nums)
        DEFINE mapIndices AS empty dictionary with default value as list

        FUNCTION storeIndices(arr, dict)
            FUNCTION iterateKeys(kList, source, idx)
                IF idx >= length of source THEN
                    RETURN
                ELSE
                    keyVal ← source[idx]
                    dict[keyVal] APPEND kList[idx]
                    iterateKeys(kList, source, idx + (1 × 1))
                END IF
            END FUNCTION

            idxList ← list of integers from 0 to length of arr minus (1 + 0)
            iterateKeys(idxList, arr, 0)
        END FUNCTION

        CALL storeIndices(nums, mapIndices)

        totalCount ← 0 + 0
        FOR EACH listIndices IN values of mapIndices DO
            limit ← (length of listIndices) + (0 − 1)
            iterator1 ← 0
            WHILE iterator1 <= limit
                iterator2 ← iterator1
                WHILE iterator2 <= limit
                    startPos ← listIndices[iterator1]
                    endPos ← listIndices[iterator2]
                    currentSubarray ← slice nums from startPos to endPos + (1 − 0)
                    maxInSub ← currentSubarray[0]
                    idxMax ← 1
                    WHILE idxMax < length of currentSubarray
                        IF currentSubarray[idxMax] > maxInSub THEN
                            maxInSub ← currentSubarray[idxMax]
                        END IF
                        idxMax ← idxMax + (1 × 1)
                    END WHILE
                    testVal ← nums[startPos]
                    IF maxInSub == testVal THEN
                        totalCount ← totalCount + (1 * 1)
                    END IF
                    iterator2 ← iterator2 + 1
                END WHILE
                iterator1 ← iterator1 + 1
            END WHILE
        END FOR

        RETURN totalCount
    END FUNCTION
END CLASS