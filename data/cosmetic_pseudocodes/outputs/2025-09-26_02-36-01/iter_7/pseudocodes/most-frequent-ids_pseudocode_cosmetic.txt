CLASS Solution  
    FUNCTION mostFrequentIDs(nums PARAMETER, freq PARAMETER)  
        SET counts TO dictionary defaulting to integer zero  
        SET heap_storage TO empty list  
        SET output_list TO empty list  
        
        FUNCTION upkeepHeap()  
            WHILE ( (heap_storage IS NOT empty) AND ((- (heap_storage[0][0])) != counts[heap_storage[0][1]]) )  
                REMOVE heap_storage[0]  
            END WHILE  
        END FUNCTION  
        
        DEFINE index1 AS 0  
        DEFINE size AS LENGTH(nums)  
        REPEAT UNTIL index1 == size  
            SET current_number TO nums[index1]  
            SET increment_value TO freq[index1]  
            counts[current_number] = counts[current_number] + increment_value  
            
            SET heap_entry TO ( -(counts[current_number]), current_number )  
            INSERT heap_entry INTO heap_storage  
            
            CALL upkeepHeap()  
            
            IF heap_storage IS NOT empty THEN  
                SET top_element TO heap_storage[0]  
                APPEND ( -top_element[0] ) TO output_list  
            ELSE  
                APPEND (0) TO output_list  
            END IF  
            
            SET index1 TO index1 + 1  
        END REPEAT  
        
        RETURN output_list  
    END FUNCTION  
END CLASS