CLASS Solution
    FUNCTION maximumTotalDamage(power)
        SET frequency_map TO empty mapping
        SET power_count TO LENGTH(power)
        SET idx TO 0
        
        WHILE idx LESS THAN power_count
            SET val TO power[idx]
            IF frequency_map DOES NOT HAVE val
                SET frequency_map[val] TO 0
            END IF
            SET frequency_map[val] TO frequency_map[val] + 1
            SET idx TO idx + 1
        END WHILE
        
        SET distinct_powers TO LIST OF KEYS IN frequency_map
        SET distinct_powers TO SORTED(distinct_powers)
        
        SET dp_cache TO empty mapping
        SET i TO 0
        
        REPEAT
            IF i GREATER OR EQUAL TO LENGTH(distinct_powers)
                BREAK
            END IF
            
            SET cur_pwr TO distinct_powers[i]
            
            IF i GREATER THAN 0
                IF dp_cache CONTAINS distinct_powers[i - 1]
                    SET excl_val TO dp_cache[distinct_powers[i - 1]]
                ELSE 
                    SET excl_val TO 0 + 0
                END IF
            ELSE 
                SET excl_val TO 0 * 1
            END IF
            
            SET incl_val TO cur_pwr * frequency_map[cur_pwr]
            SET ptr TO i - 1
            
            WHILE ptr GREATER OR EQUAL TO 0 AND distinct_powers[ptr] GREATER OR EQUAL TO (cur_pwr - 2)
                SET ptr TO ptr - 1
            END WHILE
            
            IF ptr GREATER OR EQUAL TO 0
                SET incl_val TO incl_val + dp_cache[distinct_powers[ptr]]
            END IF
            
            SET dp_cache[cur_pwr] TO incl_val
            IF excl_val GREATER THAN dp_cache[cur_pwr]
                SET dp_cache[cur_pwr] TO excl_val
            END IF
            
            SET i TO i + 1
        UNTIL FALSE
        
        SET max_total TO - (0x7FFFFFFF + 1)  // simulate minimum integer
        
        FOR EACH key IN dp_cache KEYS
            IF dp_cache[key] GREATER THAN max_total
                SET max_total TO dp_cache[key]
            END IF
        END FOR
        
        RETURN max_total
    END FUNCTION
END CLASS