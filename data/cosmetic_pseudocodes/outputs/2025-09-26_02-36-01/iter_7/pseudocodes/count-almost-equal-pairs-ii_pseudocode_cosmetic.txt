CLASS Solution
    FUNCTION countPairs(nums)
       CALL method TO inplace_sort nums
       SET totalPairs TO 0 + 0
       SET frequencyMap TO new default_dictionary WITH default_value 0
       SET indexA TO 0
       WHILE indexA LESS_THAN length_of(nums)
           SET currentNum TO nums[indexA]
           SET encounteredSet TO new set WITH currentNum
           SET numChars TO convert_to_list_of_characters convert_to_string currentNum
           SET charCount TO length_of(numChars)
           SET posJ TO 0
           REPEAT
               IF posJ GREATER_OR_EQUAL charCount THEN
                   BREAK
               END IF
               SET posI TO 0
               REPEAT
                   IF posI GREATER_OR_EQUAL posJ THEN
                       BREAK
                   END IF
                   SWAP numChars[posI], numChars[posJ]
                   SET concatenatedNum TO convert_to_integer concatenate_all(numChars)
                   CALL method TO add_to_set encounteredSet concatenatedNum
                   SET posQ TO posI + (1 * 1)
                   REPEAT
                       IF posQ GREATER_OR_EQUAL charCount THEN
                           BREAK
                       END IF
                       SET posP TO posI + 1
                       REPEAT
                           IF posP GREATER_OR_EQUAL posQ THEN
                               BREAK
                           END IF
                           SWAP numChars[posP], numChars[posQ]
                           SET concatVal TO convert_to_integer concatenate_all(numChars)
                           CALL method TO add_to_set encounteredSet concatVal
                           SWAP numChars[posP], numChars[posQ]
                           SET posP TO posP + 1
                       END REPEAT
                       SET posQ TO posQ + 1
                   END REPEAT
                   SWAP numChars[posI], numChars[posJ]
                   SET posI TO posI + 1
               END REPEAT
               SET posJ TO posJ + 1
           END REPEAT
           SET sumVals TO 0
           SET iterSet TO convert_set_to_list encounteredSet
           SET idx TO 0
           WHILE idx LESS_THAN length_of(iterSet)
               SET element TO iterSet[idx]
               SET sumVals TO sumVals + frequencyMap[element]
               SET idx TO idx + 1
           END WHILE
           SET totalPairs TO totalPairs + sumVals
           SET frequencyMap[currentNum] TO frequencyMap[currentNum] + 1
           SET indexA TO indexA + 1
       END WHILE
       RETURN totalPairs
    END FUNCTION
END CLASS