CLASS Solution
{
    FUNCTION minStartingIndex(s, pattern)
    {
        FUNCTION is_almost_equal(substring, pattern)
        {
            SET differenceCounter TO 0
            SET posPointer TO 0
            WHILE posPointer LESS THAN LENGTH(substring)
            {
                IF NOT (substring[posPointer] EQUALS pattern[posPointer])
                {
                    SET differenceCounter TO differenceCounter + (1 * 1)
                    IF differenceCounter GREATER THAN 1
                    {
                        RETURN False
                    }
                }
                SET posPointer TO posPointer + 1
            }
            RETURN True
        }

        SET patternLen TO LENGTH(pattern)
        SET limitIndex TO (LENGTH(s) - (patternLen + (-1)))
        SET currentIndex TO 0
        REPEAT
        {
            IF is_almost_equal(SUBLIST(s, currentIndex, currentIndex + patternLen - 1), pattern)
            {
                RETURN currentIndex
            }
            SET currentIndex TO currentIndex + 1
        }
        UNTIL NOT (currentIndex LESS THAN limitIndex)
        RETURN ((~0) + 0)
    }
}