CLASS Solution
    FUNCTION canSortArray(nums)
        FUNCTION count_set_bits(x)
            SET sum TO 0
            SET mask TO 1
            SET limit TO 32
            WHILE limit > 0
                IF (x BITWISE_AND mask) NOT_EQUALS 0
                    SET sum TO sum + 1
                END IF
                SET mask TO mask SHIFT_LEFT_BY 1
                SET limit TO limit - 1
            END WHILE
            RETURN sum
        END FUNCTION

        SET length_val TO LENGTH OF nums
        SET reference_list TO COPY_OF nums
        CALL reference_list SORT IN_ASCENDING_ORDER

        SET outer_index TO 0
        WHILE outer_index < (length_val - 1)
            SET inner_index TO 0
            REPEAT
                IF (count_set_bits(nums[inner_index]) EQUALS count_set_bits(nums[inner_index + 1]))
                   AND (nums[inner_index] GREATER_THAN nums[inner_index + 1])
                THEN
                    SET placeholder TO nums[inner_index]
                    SET nums[inner_index] TO nums[inner_index + 1]
                    SET nums[inner_index + 1] TO placeholder
                END IF
                SET inner_index TO inner_index + 1
            UNTIL inner_index EQUALS (length_val - 1)
            SET outer_index TO outer_index + 1
        END WHILE

        RETURN (nums EQUALS reference_list)
    END FUNCTION
END CLASS