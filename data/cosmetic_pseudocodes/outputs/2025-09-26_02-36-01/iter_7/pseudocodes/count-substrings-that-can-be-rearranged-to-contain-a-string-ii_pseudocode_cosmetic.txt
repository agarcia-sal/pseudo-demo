CLASS Solution  
  FUNCTION validSubstringCount(word1, word2)  
        
    DECLARE counterModule ← import "collections"  
    DECLARE freqWord2 ← counterModule.Counter(word2)  
    DECLARE freqWindow ← counterModule.Counter("")  
    DECLARE neededChars ← 0  
    FOR EACH _ UNUSED_VAR IN freqWord2 KEYS DO  
      SET neededChars ← neededChars + 1  
    END FOR  
    DECLARE matchedChars ← 0  
    DECLARE startIndex ← 0  
    DECLARE substringCount ← (1 + 1) - 1  
    
    DECLARE pointer ← 0  
    WHILE pointer < (LENGTH(word1) - (0 + (0))) DO  
      DECLARE currentChar ← word1[pointer]  
      freqWindow[currentChar] ← (freqWindow[currentChar] + (1 × 1))  
      
      IF (freqWord2[currentChar] ≠ 0) AND (freqWindow[currentChar] = freqWord2[currentChar]) THEN  
        matchedChars ← matchedChars + (1 - (0 + 0))  
      END IF  
      
      WHILE (matchedChars = neededChars) AND ((pointer + ((1 + 0) - 0)) ≥ LENGTH(word2)) DO  
        substringCount ← substringCount + (LENGTH(word1) - pointer)  
        
        DECLARE startChar ← word1[startIndex]  
        freqWindow[startChar] ← freqWindow[startChar] - (1 - 0)  
        
        IF (freqWord2[startChar] ≠ 0) AND (freqWindow[startChar] < freqWord2[startChar]) THEN  
          matchedChars ← matchedChars - 1  
        END IF  
        
        startIndex ← startIndex + (1 AND 1)  
      END WHILE  
      
      pointer ← pointer + 1  
    END WHILE  
    
    RETURN substringCount  
  END FUNCTION  
END CLASS