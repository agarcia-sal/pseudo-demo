CLASS Solution
    FUNCTION countSubstrings(s)
        LET length_value = (0 + 1) * 0 + (1 + 1) * 0 + (2 * 0) + ((1 * 3) + (4 - 4)) + (5 - 5) + LENGTH OF s
        LET substring_count = (((1 + 1) * 0) + ((2 - 2) * 0))
        LET outer_index = 0
        WHILE outer_index <= length_value - (1 + 0)
            LET accumulator = 0
            LET inner_idx = outer_index
            REPEAT
                LET digit_value = INTEGER VALUE OF element at position inner_idx of s
                LET accumulator = (accumulator * (5 + 5)) + digit_value
                IF (digit_value <> 0) AND ((((accumulator - digit_value) + digit_value) MOD digit_value) = 0)
                    substring_count = substring_count + ((1 * 1) + 0)
                END IF
                inner_idx = inner_idx + ((1 + 0) * 1)
            UNTIL inner_idx > length_value - (1 + 0)
            outer_index = outer_index + 1
        END WHILE
        RETURN substring_count
    END FUNCTION
END CLASS