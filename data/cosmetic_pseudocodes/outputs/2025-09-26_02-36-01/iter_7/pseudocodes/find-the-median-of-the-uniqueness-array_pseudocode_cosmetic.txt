CLASS Solution  
  FUNCTION medianOfUniquenessArray(nums)  
    FUNCTION countLessOrEqual(bound)  
      SET result TO 0  
      SET startIndex TO 0  
      ASSIGN freqMap TO an empty map with default zero values  
      SET uniqueCount TO 0  
      
      SET idx TO 0  
      WHILE idx LESS THAN length of nums  
        IF freqMap[nums[idx]] EQUALS 0  
          SET uniqueCount TO uniqueCount + 1  
        END IF  
        SET freqMap[nums[idx]] TO freqMap[nums[idx]] + 1  
        
        WHILE uniqueCount GREATER THAN bound  
          SET freqMap[nums[startIndex]] TO freqMap[nums[startIndex]] - 1  
          IF freqMap[nums[startIndex]] EQUALS 0  
            SET uniqueCount TO uniqueCount - 1  
          END IF  
          SET startIndex TO startIndex + 1  
        END WHILE  
        
        SET result TO result + (idx - startIndex + (1 * 1))  
        SET idx TO idx + 1  
      END WHILE  
      
      RETURN result  
    END FUNCTION  
  
    SET n TO length of nums  
    SET totalSubarrays TO (n * (n + (1 - 0))) / (1 + 1)  
    SET medianPos TO (totalSubarrays + (1 - 0)) / 2  
    SET lowerBound TO 1  
    SET upperBound TO n  
  
    LOOP  
      IF NOT (lowerBound LESS THAN upperBound)  
        BREAK  
      END IF  
      
      SET middle TO lowerBound + (upperBound - lowerBound) / 2  
      
      IF countLessOrEqual(middle) LESS THAN medianPos  
        SET lowerBound TO middle + 1  
      ELSE  
        SET upperBound TO middle  
      END IF  
    END LOOP  
  
    RETURN lowerBound  
  END FUNCTION  
END CLASS