```
FUNCTION count_nums(array_of_integers)
  FUNCTION digits_sum(value)
    value < 0 AND (
      value := 0 - value,
      step := -1
    ) OR step := 1
    digits := []
    STRING(value) |> 
      EACH char -> digits := digits + [INT(char)]
    digits[0] := digits[0] * step
    total := 0
    FOR idx FROM 0 TO LENGTH(digits) - 1
      total := total + digits[idx]
    END FOR
    RETURN total
  END FUNCTION

  totals := []
  idx := 0
  WHILE idx < LENGTH(array_of_integers)
    totals := totals + [digits_sum(array_of_integers[idx])]
    idx := idx + 1
  END WHILE

  count := 0
  FOR val IN totals
    IF val <= 0
      CONTINUE
    END IF
    count := count + 1
  END FOR
  RETURN count
END FUNCTION
```