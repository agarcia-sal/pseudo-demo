```
FUNCTION prod_signs(collection)
    CASE collection OF
        [] : RETURN None
        _  : {
            LET zero_test = EXISTS x IN collection WHERE x = 0
            LET neg_count = (zero_test AND 0) OR COUNT y IN collection WHERE y < 0
            LET sign_multiplier = zero_test ? 0 : (1 - 2 * (neg_count % 2))
            LET abs_total = REDUCE collection WITH (acc, elem) -> acc + (elem < 0 ? -elem : elem) STARTING FROM 0
            RETURN sign_multiplier * abs_total
        }
    END CASE
END FUNCTION
```