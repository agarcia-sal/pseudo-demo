```
FUNCTION sort_third(list_input)
	list_out := []
	INDEX := 0
	WHILE INDEX < LENGTH(list_input)
		list_out.APPEND(list_input[INDEX])
		INDEX := INDEX + 1
	END WHILE

	extracted := []
	CURR := 0
	WHILE CURR < LENGTH(list_out)
		(CURR MOD 3 = 0) AND extracted.APPEND(list_out[CURR])
		CURR := CURR + 1
	END WHILE

	sorted_segment := []
	WHILE LENGTH(extracted) > 0
		min_val := extracted[0]
		INDEX_MIN := 0
		POS := 1
		WHILE POS < LENGTH(extracted)
			(extracted[POS] < min_val) AND (min_val := extracted[POS]; INDEX_MIN := POS)
			POS := POS + 1
		END WHILE
		sorted_segment.APPEND(min_val)
		extracted.REMOVE_AT(INDEX_MIN)
	END WHILE

	REPLACE_COUNTER := 0
	FOR K := 0 TO LENGTH(list_out) - 1
		(K MOD 3 = 0) AND (list_out[K] := sorted_segment[REPLACE_COUNTER]; REPLACE_COUNTER := REPLACE_COUNTER + 1)
	END FOR

	RETURN list_out
END FUNCTION
```