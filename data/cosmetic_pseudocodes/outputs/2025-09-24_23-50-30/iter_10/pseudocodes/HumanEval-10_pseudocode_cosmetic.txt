```
FUNCTION is_palindrome(input_string)
	recurse_check := FUNCTION(text, left, right)
		WHEN left >= right RETURN TRUE
		WHEN text[left] NOT EQUAL text[right] RETURN FALSE
		ELSE RETURN recurse_check(text, left + 1, right - 1)
	END FUNCTION
	RETURN recurse_check(input_string, 0, LENGTH(input_string) - 1)
END FUNCTION

FUNCTION make_palindrome(input_string)
	RETURN 
		IF LENGTH(input_string) == 0 THEN ""
		ELSE
			search_start := 0
			LOOP
				sub_check := SUBSTRING(input_string, search_start, LENGTH(input_string))
				WHEN is_palindrome(sub_check) BREAK
				search_start := search_start + 1
			END LOOP
			concatenate := input_string + REVERSE(SUBSTRING(input_string, 0, search_start))
			RETURN concatenate
	END IF
END FUNCTION
```