```
FUNCTION minPath(grid, k)
n ← LENGTH(grid)
bound ← (n * n) + 1
FOR alpha IN 0 TO n - 1 DO
   FOR beta IN 0 TO n - 1 DO
      WHEN grid[alpha][beta] = 1:
         neighbors ← []
         alpha > 0        AND neighbors.APPEND(grid[alpha - 1][beta])
         beta > 0         AND neighbors.APPEND(grid[alpha][beta - 1])
         alpha < n - 1    AND neighbors.APPEND(grid[alpha + 1][beta])
         beta < n - 1     AND neighbors.APPEND(grid[alpha][beta + 1])
         bound ← MIN(neighbors)
   END FOR
END FOR
output ← []
FOR idx FROM 0 TO k - 1 DO
   output.APPEND((idx % 2 = 0) ? 1 : bound)
END FOR
RETURN output
END FUNCTION
```