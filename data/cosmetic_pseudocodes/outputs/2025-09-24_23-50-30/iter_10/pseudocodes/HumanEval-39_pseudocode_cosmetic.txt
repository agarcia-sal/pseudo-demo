```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_q)
        integer_r = 2
        IF integer_q LESS THAN 2 THEN RETURN False
        WHILE integer_r LESS OR EQUAL TO (MIN( (mathematical_functions_module.sqrt(integer_q)) FLOOR + 1, integer_q - 1 ))
            IF (integer_q MOD integer_r) EQUALS 0
                RETURN False
            integer_r = integer_r + 1
        RETURN True
    END FUNCTION

    fibonacci_seq = [0, 1]

    LOOP forever_do
        fibonacci_seq ADD (fibonacci_seq[SIZE(fibonacci_seq) - 1] + fibonacci_seq[SIZE(fibonacci_seq) - 2])
        IF is_prime(fibonacci_seq[SIZE(fibonacci_seq) - 1])
            integer_n = integer_n - 1
        IF integer_n EQUALS 0 THEN BREAK
    RETURN fibonacci_seq[SIZE(fibonacci_seq) - 1]
END FUNCTION
```