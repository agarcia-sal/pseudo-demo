```
FUNCTION check_dict_case(dictionary_input)
    FUNCTION iterate_keys(index_param, state_param)
        IF index_param â‰¥ LENGTH OF dictionary_input KEYS THEN
            RETURN state_param
        ELSE
            SET current_key TO GET ELEMENT AT dictionary_input KEYS[index_param]
            IF NOT (current_key INSTANCEOF STRING) THEN
                RETURN "mixed"
            ELSE
                SELECT state_param
                    CASE "start":
                        IF current_key EQUALS current_key TOUPPER() AND current_key NOT EQUALS current_key TOLOWER() THEN
                            RETURN iterate_keys(index_param + 1, "upper")
                        ELSE IF current_key EQUALS current_key TOLOWER() AND current_key NOT EQUALS current_key TOUPPER() THEN
                            RETURN iterate_keys(index_param + 1, "lower")
                        ELSE
                            RETURN "mixed"
                        END IF
                    CASE "upper":
                        IF current_key EQUALS current_key TOUPPER() AND current_key NOT EQUALS current_key TOLOWER() THEN
                            RETURN iterate_keys(index_param + 1, "upper")
                        ELSE
                            RETURN "mixed"
                        END IF
                    CASE "lower":
                        IF current_key EQUALS current_key TOLOWER() AND current_key NOT EQUALS current_key TOUPPER() THEN
                            RETURN iterate_keys(index_param + 1, "lower")
                        ELSE
                            RETURN "mixed"
                        END IF
                    DEFAULT:
                        RETURN "mixed"
                END SELECT
            END IF
        END IF
    END FUNCTION

    IF LENGTH OF dictionary_input KEYS = 0 THEN
        RETURN False
    ELSE
        SET final_state TO iterate_keys(0, "start")
        RETURN (final_state = "upper") OR (final_state = "lower")
    END IF
END FUNCTION
```