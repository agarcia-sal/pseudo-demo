```
FUNCTION odd_count(sequence_of_texts)
	result_container ← []
	
	INDEX ← 0
	WHILE INDEX < LENGTH(sequence_of_texts)
		CURRENT_TEXT ← sequence_of_texts[INDEX]
		
		DEFINE count_odd_digits_recursive(pos, acc)
			IF pos = LENGTH(CURRENT_TEXT)
				RETURN acc
			ELSE
				digit_value ← INTEGER_VALUE_OF(CURRENT_TEXT[pos])
				NEW_ACC ← acc + ( (digit_value AND 1) = 1 ? 1 : 0 )
				RETURN count_odd_digits_recursive(pos + 1, NEW_ACC)
			ENDIF
		END
		
		tally ← count_odd_digits_recursive(0, 0)
		
		message_pieces ← [ "the number of odd elements ", STRINGIFY(tally), "n the str", STRINGIFY(tally), "ng ", STRINGIFY(tally), " of the ", STRINGIFY(tally), "nput." ]
		result_container := result_container + [ CONCATENATE(message_pieces) ]
		
		INDEX ← INDEX + 1
	ENDWHILE
	
	RETURN result_container
END FUNCTION
```