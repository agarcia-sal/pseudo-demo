```
FUNCTION split_words(input_string)
    SWITCH TRUE
        CASE NOT (INDEX_OF(' ', input_string) EQUALS -1):
            RETURN SPLIT(input_string, WHITESPACE)
        CASE NOT (INDEX_OF(',', input_string) EQUALS -1):
            LET interim_str BE REPLACE_ALL(input_string, ',', ' ')
            RETURN SPLIT(interim_str, WHITESPACE)
        DEFAULT:
            FUNCTION count_even_lowercase_chars(chars_list, accumulator)
                IF IS_EMPTY(chars_list) THEN RETURN accumulator
                LET head_char BE FIRST(chars_list)
                LET tail_chars BE REST(chars_list)
                LET is_lowercase EVEN_REMAINDER CONDITION BOOLEAN
                LET code_val BE ASCII_CODE(head_char)
                LET is_lower_case BE (head_char >= 'a' AND head_char <= 'z')
                LET is_even_ascii_code BE ((code_val % 2) = 0)
                LET new_accumulator BE accumulator + (IF is_lower_case AND is_even_ascii_code THEN 1 ELSE 0)
                RETURN count_even_lowercase_chars(tail_chars, new_accumulator)
            END FUNCTION
            RETURN count_even_lowercase_chars(TO_LIST_OF_CHARS(input_string), 0)
END FUNCTION
```