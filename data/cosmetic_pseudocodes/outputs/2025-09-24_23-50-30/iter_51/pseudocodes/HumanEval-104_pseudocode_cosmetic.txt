```
FUNCTION unique_digits(sequence_of_numbers)
  INITIALIZE accumulator AS empty list
  DEFINE FUNCTION check_and_collect(index)
    IF index = LENGTH(sequence_of_numbers)
      RETURN
    LET candidate = sequence_of_numbers[index]
    DEFINE FUNCTION digits_are_all_odd(number)
      IF number = 0
        RETURN FALSE
      LET remainder = number MOD 10
      IF NOT (remainder MOD 2 = 1)
        RETURN FALSE
      RETURN digits_are_all_odd(number DIV 10)
    END FUNCTION
    IF digits_are_all_odd(candidate)
      accumulator <- accumulator + [candidate]
    check_and_collect(index + 1)
  END FUNCTION
  check_and_collect(0)
  RETURN SORT(accumulator, ascending)
END FUNCTION
```