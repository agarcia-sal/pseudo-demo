```
FUNCTION encode(inputText)
    DEFINE vowelsSet AS "AEIOUaeiou"
    DEFINE replaceMap AS EMPTY DICTIONARY
    FUNCTION buildMap(chars, idx)
        IF idx EQUALS LENGTH(chars) THEN RETURN
        SET char TO chars[idx]
        SET replaceMap[char] TO CHARACTER(ASCII_CODE(char) + 2)
        CALL buildMap(chars, idx + 1)
    END FUNCTION
    CALL buildMap(vowelsSet, 0)

    FUNCTION swapCaseRecursive(str, pos)
        IF pos EQUALS LENGTH(str) THEN RETURN EMPTY STRING
        SET currentChar TO str[pos]
        SET swappedChar TO (IF currentChar IS UPPERCASE THEN TO_LOWERCASE(currentChar) ELSE TO_UPPERCASE(currentChar))
        RETURN swappedChar + swapCaseRecursive(str, pos + 1)
    END FUNCTION

    SET transformedText TO swapCaseRecursive(inputText, 0)

    FUNCTION replaceChars(str, idx)
        IF idx IS EQUAL TO LENGTH(str) THEN RETURN EMPTY STRING
        SET currentChar TO str[idx]
        SET replacedChar TO (IF currentChar IN vowelsSet THEN replaceMap[currentChar] ELSE currentChar)
        RETURN replacedChar + replaceChars(str, idx + 1)
    END FUNCTION

    RETURN replaceChars(transformedText, 0)
END FUNCTION
```