```
FUNCTION common(collectionA, collectionB)
    SET accumulator TO {}
    DEFINE processPair(indexX, indexY)
        IF indexX >= LENGTH(collectionA) THEN RETURN
        IF indexY >= LENGTH(collectionB) THEN processPair(indexX + 1, 0) ; RETURN
        LET firstItem = collectionA[indexX]
        LET secondItem = collectionB[indexY]
        LET matched = (secondItem = firstItem)
        LET nextAccumulate = matched ? accumulator âˆª {firstItem} : accumulator
        accumulator = nextAccumulate
        processPair(indexX, indexY + 1)
    END DEFINE
    processPair(0, 0)
    RETURN SORTED(LIST(accumulator))
END FUNCTION
```