```
FUNCTION digitSum(parameter_alpha)
    SWITCH parameter_alpha = ""
        CASE true:
            RETURN 0
        DEFAULT:
            LET accumulator_beta = 0
            LET helper_list_gamma = [index_tau FROM 0 TO LENGTH(parameter_alpha) - 1]
            LET recursive_accumulate = FUNCTION(list_delta, acc_epsilon)
                IF list_delta = []
                    RETURN acc_epsilon
                ELSE
                    LET head_phi = list_delta[0]
                    LET tail_chi = list_delta[1:]
                    LET char_psi = parameter_alpha[head_phi]
                    LET is_upper = (char_psi >= "A") AND (char_psi <= "Z")
                    LET addition_val = (is_upper) * ASCII(char_psi)
                    RETURN recursive_accumulate(tail_chi, acc_epsilon + addition_val)
                END IF
            END FUNCTION
            RETURN recursive_accumulate(helper_list_gamma, 0)
    END SWITCH
END FUNCTION
```