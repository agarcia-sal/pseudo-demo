```
FUNCTION skjkasdkd(recipient)
    FUNCTION isPrime(value)
        FUNCTION loop(divisor, limit)
            IF divisor >= limit THEN RETURN True END IF
            IF value MOD divisor = 0 THEN RETURN False END IF
            RETURN loop(divisor + 1, limit)
        END FUNCTION
        RETURN loop(2, FLOOR(SQRT(value)) + 1)
    END FUNCTION

    SET highest_prime TO 0
    SET position TO 0

    LOOP_START:
        IF NOT (position < LENGTH(recipient)) THEN GOTO LOOP_END END IF
        SET candidate TO recipient[position]
        IF (candidate > highest_prime) AND (isPrime(candidate) = True) THEN
            SET highest_prime TO candidate
        END IF
        SET position TO position + 1
        GOTO LOOP_START
    LOOP_END:

    SET digit_sum TO 0
    SET digits_str TO TO_STRING(highest_prime)

    FUNCTION accumulate_digits(iterator, acc)
        IF iterator >= LENGTH(digits_str) THEN RETURN acc END IF
        RETURN accumulate_digits(iterator + 1, acc + TO_INTEGER(digits_str[iterator]))
    END FUNCTION

    RETURN accumulate_digits(0, 0)
END FUNCTION
```