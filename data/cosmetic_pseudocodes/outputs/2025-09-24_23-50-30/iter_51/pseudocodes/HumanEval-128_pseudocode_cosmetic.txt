```
FUNCTION prod_signs(input_list)
  SWITCH
    CASE LENGTH(input_list) = 0:
      RETURN None
  END SWITCH

  FUNCTION check_zero(lst, idx)
    IF idx = LENGTH(lst) THEN
      RETURN False
    ELSE
      RETURN (lst[idx] = 0) OR check_zero(lst, idx + 1)
    END IF
  END FUNCTION

  IF check_zero(input_list, 0) THEN
    LET result_sign = 0
  ELSE
    FUNCTION neg_count(lst, pos, acc)
      IF pos = LENGTH(lst) THEN
        RETURN acc
      ELSE
        RETURN neg_count(lst, pos + 1, acc + ((lst[pos] < 0) ? 1 : 0))
      END IF
    END FUNCTION
    LET negatives = neg_count(input_list, 0, 0)
    LET power_val = negatives
    LET result_sign = (-1) ^ power_val
  END IF

  FUNCTION total_abs(lst, i, total)
    IF i = LENGTH(lst) THEN
      RETURN total
    ELSE
      RETURN total_abs(lst, i + 1, total + (lst[i] < 0 ? -lst[i] : lst[i]))
    END IF
  END FUNCTION

  LET magnitude_sum = total_abs(input_list, 0, 0)
  RETURN result_sign * magnitude_sum
END FUNCTION
```