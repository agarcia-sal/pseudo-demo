```
FUNCTION reverse_delete(string_input, string_remove)
    FUNCTION helper_filter(index_accum, filtered_accum)
        IF index_accum >= LENGTH(string_input) THEN
            RETURN filtered_accum
        ELSE
            SWITCH CONTAINS(string_remove, string_input[index_accum])
                CASE true:
                    RETURN helper_filter(index_accum + (1 * 1), filtered_accum)
                DEFAULT:
                    RETURN helper_filter(index_accum + (1 * 1), filtered_accum + string_input[index_accum])
            END SWITCH
        END IF
    END FUNCTION

    LET result_string BE helper_filter(0, "")
    LET reversed_string BE ""
    FUNCTION reverse_iterate(position)
        IF position < 0 THEN
            RETURN
        ELSE
            reversed_string = reversed_string + result_string[position]
            CALL reverse_iterate(position - 1)
        END IF
    END FUNCTION
    CALL reverse_iterate(LENGTH(result_string) - 1)

    RETURN (result_string, reversed_string = result_string)
END FUNCTION
```