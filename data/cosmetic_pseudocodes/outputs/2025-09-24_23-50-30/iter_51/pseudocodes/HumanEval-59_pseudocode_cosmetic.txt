```
FUNCTION largest_prime_factor(q)
    FUNCTION is_prime(r)
        IF NOT(r >= 2) THEN
            RETURN False
        ELSE
            RETURN prime_check_helper(2)

        FUNCTION prime_check_helper(s)
            IF s >= r THEN
                RETURN True
            ELSE
                IF (r MOD s) = 0 THEN
                    RETURN False
                ELSE
                    RETURN prime_check_helper(s + 1)
            ENDIF
        ENDFUNCTION
    ENDFUNCTION

    FUNCTION factor_iter(t, current_largest)
        IF t > q THEN
            RETURN current_largest
        ELSE
            RETURN factor_iter(t + 1, ( ((q MOD t) = 0) AND is_prime(t) ) ? ( (current_largest > t) ? current_largest : t ) : current_largest )
        ENDIF
    ENDFUNCTION

    RETURN factor_iter(2, 1)
ENDFUNCTION
```