```
FUNCTION sort_even(elements_list)
    FUNCTION extract_indices(src_list, start_idx, acc)
        IF start_idx >= LENGTH(src_list)
            RETURN acc
        RETURN extract_indices(src_list, start_idx + 2, acc + [src_list[start_idx]])
    END FUNCTION

    SET evens = extract_indices(elements_list, 0, [])
    SET odds = extract_indices(elements_list, 1, [])

    FUNCTION insertion_sort(arr, i)
        IF i >= LENGTH(arr)
            RETURN arr
        SET key = arr[i]
        FUNCTION insert_pos(j)
            IF j < 0 OR arr[j] <= key
                SET arr = arr[0..j] + [key] + arr[j+1..i-1] + arr[i+1..]
                RETURN arr
            RETURN insert_pos(j - 1)
        END FUNCTION
        SET arr = insert_pos(i - 1)
        RETURN insertion_sort(arr, i + 1)
    END FUNCTION

    SET sorted_evens = insertion_sort(evens, 1)

    FUNCTION interleave_lists(list_a, list_b, acc, idx)
        IF idx >= LENGTH(list_b)
            RETURN acc
        RETURN interleave_lists(list_a, list_b, acc + [list_a[idx], list_b[idx]], idx + 1)
    END FUNCTION

    SET merged = interleave_lists(sorted_evens, odds, [], 0)

    IF LENGTH(sorted_evens) - LENGTH(odds) > 0
        SET merged = merged + [sorted_evens[-1]]

    RETURN merged
END FUNCTION
```