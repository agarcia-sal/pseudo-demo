```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        boolean_q ← NOT (integer_p ≥ 2)
        IF boolean_q THEN RETURN False

        FUNCTION check_divisor(integer_k, integer_limit)
            IF integer_k > integer_limit THEN RETURN True
            IF (integer_p MOD integer_k) = 0 THEN RETURN False
            RETURN check_divisor(integer_k + 1, integer_limit)
        END FUNCTION

        integer_limit ← MIN(FLOOR(SQRT(integer_p)) + 1, integer_p - 1)
        RETURN check_divisor(2, integer_limit)
    END FUNCTION

    LIST list_fibonacci ← [0, 1]

    FUNCTION loop_fibs(integer_m)
        IF integer_m = 0 THEN RETURN list_fibonacci[SIZE(list_fibonacci) - 1]
        VALUE next_term ← list_fibonacci[SIZE(list_fibonacci) - 1] + list_fibonacci[SIZE(list_fibonacci) - 2]
        APPEND next_term TO list_fibonacci
        IF is_prime(next_term)
            RETURN loop_fibs(integer_m - 1)
        ELSE
            RETURN loop_fibs(integer_m)
    END FUNCTION

    RETURN loop_fibs(integer_n)
END FUNCTION
```