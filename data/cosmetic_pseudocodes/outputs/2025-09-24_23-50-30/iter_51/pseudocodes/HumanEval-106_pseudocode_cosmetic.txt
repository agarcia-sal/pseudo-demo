```
FUNCTION f(integer_n)
    FUNCTION compute_sum(accumulator, limit, cursor)
        RETURN (cursor > limit) 
            ? accumulator 
            : compute_sum(accumulator + cursor, limit, cursor + 1)
    END FUNCTION

    FUNCTION compute_product(accumulator, limit, cursor)
        RETURN (cursor > limit) 
            ? accumulator 
            : compute_product(accumulator * cursor, limit, cursor + 1)
    END FUNCTION

    SET output_collection TO []
    
    FUNCTION process_index(current_index)
        IF current_index > integer_n THEN
            RETURN
        ELSE 
            SET value TO (current_index MOD 2 = 0) 
                ? compute_product(1, current_index, 1) 
                : compute_sum(0, current_index, 1)
            APPEND value TO output_collection
            process_index(current_index + 1)
        END IF
    END FUNCTION

    process_index(1)

    RETURN output_collection
END FUNCTION
```