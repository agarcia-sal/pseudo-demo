FUNCTION sort_even(Bcr)
    FUNCTION Gqz(Hia, Jfm, Kwe, Lwv)
        IF Lwv >= Kwe THEN RETURN []
        RETURN [Hia[Lwv]] + Gqz(Hia, Jfm, Kwe, Lwv + Jfm)
    END FUNCTION

    SET Eqv TO Gqz(Bcr, 2, LENGTH(Bcr), 0)
    SET Dnz TO Gqz(Bcr, 2, LENGTH(Bcr), 1)

    FUNCTION Eip(Aio)
        IF LENGTH(Aio) <= 1 THEN RETURN Aio
        LET Mxp = LENGTH(Aio) // 2
        LET Lsn = Eip(Aio[0 : Mxp])
        LET Ekh = Eip(Aio[Mxp :])
        FUNCTION Ydr(Cul, Dwk)
            SET Nfg TO []
            SET Icp TO 0
            SET Xqn TO 0
            WHILE Icp < LENGTH(Cul) AND Xqn < LENGTH(Dwk) DO
                IF Cul[Icp] <= Dwk[Xqn] THEN
                    APPEND Cul[Icp] TO Nfg
                    SET Icp TO Icp + 1
                ELSE
                    APPEND Dwk[Xqn] TO Nfg
                    SET Xqn TO Xqn + 1
            END WHILE
            RETURN Nfg + Cul[Icp :] + Dwk[Xqn :]
        END FUNCTION
        RETURN Ydr(Lsn, Ekh)
    END FUNCTION

    SET Eqv_sorted TO Eip(Eqv)

    SET Xfl TO []
    FUNCTION Puv(Irq, Mlr)
        IF Irq >= LENGTH(Irq) OR Mlr >= LENGTH(Mlr) THEN RETURN []
        RETURN [Irq[Irq]] + [Mlr[Mlr]] + Puv(Irq + 1, Mlr + 1)
    END FUNCTION

    FUNCTION Puv(Irq, Mlr)
        SET Oje TO []
        SET Tmp TO 0
        WHILE Tmp < LENGTH(Irq) AND Tmp < LENGTH(Mlr) DO
            APPEND Irq[Tmp] TO Oje
            APPEND Mlr[Tmp] TO Oje
            SET Tmp TO Tmp + 1
        END WHILE
        RETURN Oje
    END FUNCTION

    SET Xfl TO Puv(Eqv_sorted, Dnz)

    IF LENGTH(Eqv_sorted) > LENGTH(Dnz) THEN
        APPEND Eqv_sorted[LENGTH(Eqv_sorted) - 1] TO Xfl
    RETURN Xfl
END FUNCTION