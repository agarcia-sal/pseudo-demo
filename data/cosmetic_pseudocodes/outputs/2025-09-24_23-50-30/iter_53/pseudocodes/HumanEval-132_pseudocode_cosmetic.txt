FUNCTION is_nested(arbitrary_string)
    SET beginnings TO []
    SET ends TO []
    SET cursor TO 0
    WHILE cursor < LENGTH(arbitrary_string)
        IF arbitrary_string[cursor] = '[' THEN
            APPEND cursor TO beginnings
        ELSE
            APPEND cursor TO ends
        ENDIF
        INCREMENT cursor BY 1
    ENDWHILE
    SET rev_ends TO []
    SET i TO LENGTH(ends) - 1
    WHILE i >= 0
        APPEND ends[i] TO rev_ends
        DECREMENT i BY 1
    ENDWHILE
    SET tally TO 0
    SET pointer TO 0
    SET limit TO LENGTH(rev_ends)
    FOR EACH element IN beginnings
        IF pointer < limit AND element < rev_ends[pointer] THEN
            INCREMENT tally BY 1
            INCREMENT pointer BY 1
        ENDIF
    ENDFOR
    RETURN tally >= 2
END FUNCTION