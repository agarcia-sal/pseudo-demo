FUNCTION sort_numbers(parameter_alpha)
  SET variable_bravo TO DICTIONARY {
    'zero': 0,
    'one': 1,
    'two': 2,
    'three': 3,
    'four': 4,
    'five': 5,
    'six': 6,
    'seven': 7,
    'eight': 8,
    'nine': 9
  }
  FUNCTION helper_charlie(input_delta, accumulator_echo)
    IF input_delta IS EMPTY THEN
      RETURN accumulator_echo
    ELSE
      SET current_foxtrot TO FIRST ELEMENT OF input_delta
      SET rest_golf TO SUBLIST OF input_delta FROM SECOND ELEMENT TO END
      IF current_foxtrot = '' THEN
        RETURN helper_charlie(rest_golf, accumulator_echo)
      ELSE
        RETURN helper_charlie(rest_golf, accumulator_echo + [current_foxtrot])
      END IF
    END IF
  END FUNCTION
  SET variable_hotel TO helper_charlie(SPLIT parameter_alpha BY ' ', [])
  FUNCTION compare_india(juliet, kilo)
    IF variable_bravo[juliet] < variable_bravo[kilo] THEN
      RETURN true
    ELSE
      RETURN false
    END IF
  END FUNCTION
  FUNCTION merge_sort_lima(mike)
    IF LENGTH OF mike <= 1 THEN
      RETURN mike
    END IF
    SET midpoint_november TO INTEGER_DIVISION(LENGTH OF mike, 2)
    FUNCTION merge_oscarr(papa, quebec)
      SET result_romeo TO []
      SET index_sierra TO 0
      SET index_tango TO 0
      WHILE index_sierra < LENGTH OF papa AND index_tango < LENGTH OF quebec DO
        IF compare_india(papa[index_sierra], quebec[index_tango]) THEN
          APPEND papa[index_sierra] TO result_romeo
          SET index_sierra TO index_sierra + 1
        ELSE
          APPEND quebec[index_tango] TO result_romeo
          SET index_tango TO index_tango + 1
        END IF
      END WHILE
      APPEND SUBLIST OF papa FROM index_sierra TO END TO result_romeo
      APPEND SUBLIST OF quebec FROM index_tango TO END TO result_romeo
      RETURN result_romeo
    END FUNCTION
    SET left_uniform TO merge_sort_lima(SUBLIST OF mike FROM 0 TO midpoint_november)
    SET right_victor TO merge_sort_lima(SUBLIST OF mike FROM midpoint_november TO END)
    RETURN merge_oscarr(left_uniform, right_victor)
  END FUNCTION
  SET variable_whiskey TO merge_sort_lima(variable_hotel)
  SET variable_xray TO ''
  FOR charlie_yankee FROM 0 TO LENGTH OF variable_whiskey - 1 DO
    SET variable_xray TO variable_xray + variable_whiskey[charlie_yankee]
    IF charlie_yankee < LENGTH OF variable_whiskey - 1 THEN
      SET variable_xray TO variable_xray + ' '
    END IF
  END FOR
  RETURN variable_xray
END FUNCTION