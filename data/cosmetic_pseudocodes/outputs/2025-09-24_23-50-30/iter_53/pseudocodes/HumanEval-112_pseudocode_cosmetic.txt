FUNCTION reverse_delete(param_x, param_y)
    DEFINE FUNCTION helper(queue_m, set_n, acc_o)
        IF LENGTH(queue_m) = 0 THEN
            RETURN acc_o
        ELSE
            DEFINE var_p AS HEAD(queue_m)
            DEFINE var_q AS TAIL(queue_m)
            RETURN helper(var_q, set_n, IF var_p IN set_n THEN acc_o ELSE CONCATENATE acc_o WITH var_p)
        ENDIF
    END FUNCTION

    DEFINE var_r AS helper(param_x, param_y, EMPTY_STRING)
    DEFINE var_s AS var_r
    DEFINE var_t AS LENGTH(var_s)
    DEFINE var_u AS 0
    DEFINE var_v AS TRUE

    WHILE var_u < var_t DO
        IF var_s[var_u] â‰  var_s[var_t - var_u - 1] THEN
            SET var_v TO FALSE
            BREAK
        ENDIF
        SET var_u TO var_u + 1
    ENDWHILE

    RETURN TUPLE(var_r, var_v)
END FUNCTION