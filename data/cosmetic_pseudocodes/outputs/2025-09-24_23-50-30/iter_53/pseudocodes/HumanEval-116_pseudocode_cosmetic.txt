FUNCTION sort_array(alpha)
  FUNCTION count_ones(beta, gamma)
    SET gamma TO 0
    FOR delta IN SPLIT(beta, "")
      SET gamma TO gamma + (delta = "1" ? 1 : 0)
    END FOR
    RETURN gamma
  END FUNCTION

  SET epsilon TO array_of_integers
  SET zeta TO LENGTH(epsilon)
  SET eta TO 0
  WHILE eta < zeta - 1 DO
    SET theta TO 0
    WHILE theta < zeta - eta - 1 DO
      IF epsilon[theta] > epsilon[theta + 1] THEN
        SET iota TO epsilon[theta]
        SET epsilon[theta] TO epsilon[theta + 1]
        SET epsilon[theta + 1] TO iota
      END IF
      SET theta TO theta + 1
    END WHILE
    SET eta TO eta + 1
  END WHILE

  FUNCTION recursive_sort(kappa, lambda)
    IF kappa >= LENGTH(lambda) - 1 THEN
      RETURN lambda
    END IF

    FUNCTION inner_loop(mu, nu, xi)
      IF nu >= LENGTH(lambda) - mu - 1 THEN
        RETURN xi
      ELSE
        IF count_ones(TO_BINARY_STRING(xi[nu]), 0) > count_ones(TO_BINARY_STRING(xi[nu + 1]), 0) THEN
          SET rho TO xi[nu]
          SET xi[nu] TO xi[nu + 1]
          SET xi[nu + 1] TO rho
        END IF
        RETURN inner_loop(mu, nu + 1, xi)
      END IF
    END FUNCTION

    RETURN recursive_sort(kappa + 1, inner_loop(kappa, 0, lambda))
  END FUNCTION

  RETURN recursive_sort(0, epsilon)
END FUNCTION