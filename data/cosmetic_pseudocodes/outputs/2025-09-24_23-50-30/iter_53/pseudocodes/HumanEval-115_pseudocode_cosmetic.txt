FUNCTION max_fill(original_grid, max_capacity)
    IMPORT math
    DEFINE FUNCTION compute_row_total(row_collection, acc)
        IF row_collection IS EMPTY THEN
            RETURN acc
        ELSE
            RETURN compute_row_total(tail_of row_collection, acc + head_of row_collection)
        END IF
    END FUNCTION
    DEFINE FUNCTION ceil_division_list(matrix, divisor, index, acc_list)
        IF index >= LENGTH_OF matrix THEN
            RETURN acc_list
        ELSE
            LET row_sum = compute_row_total(matrix[index], 0)
            LET ceil_result = math ceiling(row_sum / divisor)
            RETURN ceil_division_list(matrix, divisor, index + 1, acc_list + [ceil_result])
        END IF
    END FUNCTION
    LET ceiling_values = ceil_division_list(original_grid, max_capacity, 0, [])
    DEFINE FUNCTION sum_elements(elements, total)
        IF elements IS EMPTY THEN
            RETURN total
        ELSE
            RETURN sum_elements(tail_of elements, total + head_of elements)
        END IF
    END FUNCTION
    RETURN sum_elements(ceiling_values, 0)
END FUNCTION