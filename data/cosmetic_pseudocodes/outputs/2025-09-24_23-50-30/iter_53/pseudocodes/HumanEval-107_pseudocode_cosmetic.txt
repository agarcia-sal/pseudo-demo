FUNCTION even_odd_palindrome(t)
    FUNCTION is_palindrome(s)
        FUNCTION reverse_string(x, idx, result)
            IF idx < 0 THEN
                RETURN result
            ELSE
                RETURN reverse_string(x, idx - 1, result + x[idx])
            END IF
        END FUNCTION

        SET str_repr TO STRING REPRESENTATION OF s
        SET reversed_repr TO reverse_string(str_repr, LENGTH(str_repr) - 1, "")
        RETURN (str_repr = reversed_repr)
    END FUNCTION

    FUNCTION loop_counter(current, limit, cnt_even, cnt_odd)
        IF current > limit THEN
            RETURN (cnt_even, cnt_odd)
        ELSE
            IF (current MOD 2 = 1) THEN
                IF is_palindrome(current) THEN
                    RETURN loop_counter(current + 1, limit, cnt_even, cnt_odd + 1)
                ELSE
                    RETURN loop_counter(current + 1, limit, cnt_even, cnt_odd)
                END IF
            ELSE
                IF is_palindrome(current) THEN
                    RETURN loop_counter(current + 1, limit, cnt_even + 1, cnt_odd)
                ELSE
                    RETURN loop_counter(current + 1, limit, cnt_even, cnt_odd)
                END IF
            END IF
        END IF
    END FUNCTION

    RETURN loop_counter(1, t, 0, 0)
END FUNCTION