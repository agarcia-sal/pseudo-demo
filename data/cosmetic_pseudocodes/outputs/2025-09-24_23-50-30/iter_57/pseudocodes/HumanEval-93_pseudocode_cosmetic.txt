```
FUNCTION encode(inputData)
	vowelsSet := "aeiouAEIOU"
	trans := EMPTY DICTIONARY
	INDEX := 0
	WHILE INDEX < LENGTH(vowelsSet) DO
		currChar := CHAR_AT(vowelsSet, INDEX)
		trans[currChar] := CHAR(ASCII(currChar) + 2)
		INDEX := INDEX + 1
	END WHILE
	swapped := ""
	POS := 0
	WHILE POS < LENGTH(inputData) DO
		ch := CHAR_AT(inputData, POS)
		IF (ch >= "a" AND ch <= "z") OR (ch >= "A" AND ch <= "Z") THEN
			IF ch >= "a" AND ch <= "z" THEN
				swapped := swapped + TO_UPPER(ch)
			ELSE
				swapped := swapped + TO_LOWER(ch)
			END IF
		ELSE
			swapped := swapped + ch
		END IF
		POS := POS + 1
	END WHILE
	result := ""
	ITER := 0
	WHILE ITER < LENGTH(swapped) DO
		sym := CHAR_AT(swapped, ITER)
		IF NOT (sym IN vowelsSet) THEN
			result := result + sym
		ELSE
			result := result + trans[sym]
		END IF
		ITER := ITER + 1
	END WHILE
	RETURN result
END FUNCTION
```