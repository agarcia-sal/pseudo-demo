```
FUNCTION unique_digits(list_of_positive_integers)
  DECLARE collected_odd_digit_elements AS empty list
  DECLARE iterator_index AS 0

  WHILE iterator_index < LENGTH(list_of_positive_integers)
    DECLARE current_integer_element AS list_of_positive_integers[iterator_index]

    DECLARE digit_string AS STRING(current_integer_element)
    DECLARE digit_index AS 0
    DECLARE are_all_digits_odd AS TRUE

    WHILE digit_index < LENGTH(digit_string) AND are_all_digits_odd
      DECLARE current_digit_char AS digit_string[digit_index]
      DECLARE digit_value AS INTEGER(current_digit_char)

      IF NOT (digit_value MOD 2 = 1)
        SET are_all_digits_odd TO FALSE
      END IF

      SET digit_index TO digit_index + 1
    END WHILE

    IF are_all_digits_odd = TRUE
      APPEND current_integer_element TO collected_odd_digit_elements
    END IF

    SET iterator_index TO iterator_index + 1
  END WHILE

  RETURN SORT(collected_odd_digit_elements)
END FUNCTION
```