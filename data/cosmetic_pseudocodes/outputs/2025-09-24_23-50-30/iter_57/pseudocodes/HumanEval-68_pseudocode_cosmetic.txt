```
FUNCTION pluck(collection)
    DECLARE FUNCTION find_minimum_and_index(items, idx, min_val, min_pos)
        IF idx >= LENGTH OF items THEN
            RETURN (min_val, min_pos)
        ELSE
            DECLARE current_element = items[idx]
            IF current_element < min_val THEN
                RETURN find_minimum_and_index(items, idx + 1, current_element, idx)
            ELSE
                RETURN find_minimum_and_index(items, idx + 1, min_val, min_pos)
            END IF
        END IF
    END FUNCTION

    DECLARE filtered = []
    DECLARE pointer = 0
    WHILE pointer < LENGTH OF collection DO
        DECLARE candidate = collection[pointer]
        IF candidate % 2 = 0 THEN
            APPEND candidate TO filtered
        END IF
        SET pointer = pointer + 1
    END WHILE

    IF LENGTH OF filtered = 0 THEN
        RETURN []
    END IF

    DECLARE min_even_index = 0
    DECLARE min_even_value = filtered[0]

    (min_even_value, min_even_index) = find_minimum_and_index(filtered, 1, filtered[0], 0)

    DECLARE actual_index = 0
    DECLARE search_pos = 0
    WHILE search_pos < LENGTH OF collection DO
        IF collection[search_pos] = min_even_value THEN
            SET actual_index = search_pos
            BREAK
        END IF
        SET search_pos = search_pos + 1
    END WHILE

    RETURN [min_even_value, actual_index]
END FUNCTION
```