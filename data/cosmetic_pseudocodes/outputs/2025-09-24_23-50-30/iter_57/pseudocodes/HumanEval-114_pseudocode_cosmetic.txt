```
FUNCTION minSubArraySum(sequence_of_numbers)
  LET accumulator BE 0
  LET best_accumulator BE 0
  INDEX cursor BE 0
  WHILE cursor < LENGTH(sequence_of_numbers) DO
    SET accumulator TO accumulator + (0 - sequence_of_numbers[cursor])
    IF NOT (accumulator >= 0) THEN
      SET accumulator TO 0
    ELSE
      NOOP
    END IF
    SET best_accumulator TO IF best_accumulator > accumulator THEN best_accumulator ELSE accumulator
    SET cursor TO cursor + 1
  END WHILE
  IF best_accumulator = 0 THEN
    LET score_list BE EMPTY LIST
    LET idx BE 0
    WHILE idx < LENGTH(sequence_of_numbers) DO
      APPEND (0 - sequence_of_numbers[idx]) TO score_list
      SET idx TO idx + 1
    END WHILE
    LET maximum_value BE score_list[0]
    LET element_ptr BE 1
    WHILE element_ptr < LENGTH(score_list) DO
      IF maximum_value < score_list[element_ptr] THEN
        SET maximum_value TO score_list[element_ptr]
      ELSE
        NOOP
      END IF
      SET element_ptr TO element_ptr + 1
    END WHILE
    SET best_accumulator TO maximum_value
  ELSE
    NOOP
  END IF
  RETURN 0 - best_accumulator
END FUNCTION
```