```
FUNCTION find_closest_elements(collection_of_values)
  VAR pair_closest := NULL
  VAR distance_min := NULL

  VAR outer_index := 0
  WHILE outer_index < LENGTH(collection_of_values) DO
    VAR outer_value := collection_of_values[outer_index]
    VAR inner_index := 0
    WHILE inner_index < LENGTH(collection_of_values) DO
      VAR inner_value := collection_of_values[inner_index]

      IF NOT (outer_index = inner_index) THEN
        IF distance_min IS NULL THEN
          distance_min := ABS(outer_value - inner_value)
          pair_closest := SORT((outer_value, inner_value))
        ELSE
          VAR candidate_distance := ABS(outer_value - inner_value)
          IF candidate_distance < distance_min THEN
            distance_min := candidate_distance
            pair_closest := SORT((outer_value, inner_value))
          END IF
        END IF
      END IF

      inner_index := inner_index + 1
    END WHILE

    outer_index := outer_index + 1
  END WHILE

  RETURN pair_closest
END FUNCTION
```