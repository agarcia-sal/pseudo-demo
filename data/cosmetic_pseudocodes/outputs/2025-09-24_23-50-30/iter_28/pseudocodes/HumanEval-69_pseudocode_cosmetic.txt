```
FUNCTION search(numbers_collection)
    SET zeros_tracker TO list_with_size(length_of(maximum_in(numbers_collection)) + 1) FILLED_WITH 0
    PROCEDURE count_occurrences(position)
        WHEN position > length_of(numbers_collection) RETURN
        LET current_element = element_at(numbers_collection, position)
        LET count_before = element_at(zeros_tracker, current_element)
        set_element_at(zeros_tracker, current_element, count_before + 1)
        count_occurrences(position + 1)
    END PROCEDURE
    count_occurrences(1)
    VARIABLE result_indicator IS -1
    VARIABLE iterator_index IS 1
    WHILE iterator_index ≤ length_of(zeros_tracker) - 1
        SWITCH (element_at(zeros_tracker, iterator_index) ≥ iterator_index)
            CASE true:
                result_indicator ← iterator_index
            DEFAULT:
                NO_OP
        END SWITCH
        iterator_index ← iterator_index + 1
    END WHILE
    RETURN result_indicator
END FUNCTION
```