```
FUNCTION is_sorted(sequence)
    FUNCTION count_occurrences(arr, idx, acc)
        IF idx >= LENGTH(arr) THEN
            RETURN acc
        ELSE
            SET key TO arr[idx]
            IF key IN acc THEN
                SET acc[key] TO acc[key] + 1
            ELSE
                SET acc[key] TO 1
            END IF
            RETURN count_occurrences(arr, idx + 1, acc)
        END IF
    END FUNCTION

    FUNCTION any_value_exceeds_two(map, keys, i)
        IF i >= LENGTH(keys) THEN
            RETURN False
        ELSE
            RETURN (map[keys[i]] > 2) OR any_value_exceeds_two(map, keys, i + 1)
        END IF
    END FUNCTION

    FUNCTION is_non_decreasing(arr, pos)
        IF pos >= LENGTH(arr) THEN
            RETURN True
        ELSE
            RETURN (arr[pos - 1] <= arr[pos]) AND is_non_decreasing(arr, pos + 1)
        END IF
    END FUNCTION

    SET frequency_map TO count_occurrences(sequence, 0, {})
    SET keys_list TO sequence

    SWITCH
        CASE any_value_exceeds_two(frequency_map, keys_list, 0) == True:
            RETURN False
        CASE is_non_decreasing(sequence, 1) == True:
            RETURN True
        DEFAULT:
            RETURN False
    END SWITCH
END FUNCTION
```