```
FUNCTION minSubArraySum(array_of_nums)
    SET curr_total TO 0
    SET max_total TO 0

    FUNCTION loop(index, curr_total_inner, max_total_inner)
        IF index >= LENGTH(array_of_nums)
            RETURN max_total_inner
        ELSE
            SET curr_total_updated TO curr_total_inner + (-1 * array_of_nums[index])
            SET curr_total_clamped TO (curr_total_updated < 0) ? 0 : curr_total_updated
            SET max_total_next TO (max_total_inner > curr_total_clamped) ? max_total_inner : curr_total_clamped
            RETURN loop(index + 1, curr_total_clamped, max_total_next)
        END IF
    END FUNCTION

    SET max_total TO loop(0, curr_total, max_total)

    SWITCH max_total
        CASE 0:
            FUNCTION map_negatives(i, acc)
                IF i >= LENGTH(array_of_nums)
                    RETURN acc
                ELSE
                    RETURN map_negatives(i + 1, (acc > (-1 * array_of_nums[i])) ? acc : (-1 * array_of_nums[i]))
                END IF
            END FUNCTION
            SET max_total TO map_negatives(0, -1111111111)
    END SWITCH

    SET min_total TO -1 * max_total

    RETURN min_total
END FUNCTION
```