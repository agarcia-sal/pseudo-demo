```
FUNCTION string_xor(string_p, string_q)
    FUNCTION inner_xor(char_m, char_n)
        SWITCH char_m = char_n
            CASE TRUE: RETURN '0'
            CASE FALSE: RETURN '1'
        END SWITCH
    END FUNCTION

    FUNCTION fold_xor(pair_list, acc_str)
        IF pair_list = EMPTY LIST
            RETURN acc_str
        ELSE
            LET head_pair BE pair_list[0]
            LET tail_pairs BE pair_list[1:]
            LET new_acc BE acc_str + inner_xor(head_pair[0], head_pair[1])
            RETURN fold_xor(tail_pairs, new_acc)
    END FUNCTION

    LET zipped_pairs BE LIST()
    FOR index FROM 0 TO (MIN(LENGTH(string_p), LENGTH(string_q)) - 1)
        zipped_pairs = zipped_pairs + [(string_p[index], string_q[index])]
    RETURN fold_xor(zipped_pairs, "")
END FUNCTION
```