```
FUNCTION prime_fib(integer_q)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_r)
        FUNCTION check_divisor(integer_x, integer_y)
            SWITCH FALSE 
                CASE integer_y < 2:
                    RETURN False
                CASE integer_x > integer_y - 1:
                    RETURN True
                CASE integer_y MODULO integer_x != 0:
                    RETURN check_divisor(integer_x + 1, integer_y)
                CASE integer_y MODULO integer_x == 0:
                    RETURN False
        RETURN check_divisor(2, integer_r)
    END FUNCTION

    SET list_alpha TO [0, 1]

    FUNCTION next_fib(list_beta)
        RETURN list_beta APPENDED WITH (list_beta[LENGTH(list_beta) - 1] + list_beta[LENGTH(list_beta) - 2])
    END FUNCTION

    FUNCTION helper(counter, fib_list)
        IF NOT(counter > 0)
            RETURN fib_list[LENGTH(fib_list) - 1]
        SET extended_fib TO next_fib(fib_list)
        SET new_count TO counter - (IF is_prime(extended_fib[LENGTH(extended_fib) - 1]) THEN 1 ELSE 0)
        RETURN helper(new_count, extended_fib)
    END FUNCTION

    RETURN helper(integer_q, list_alpha)
END FUNCTION
```