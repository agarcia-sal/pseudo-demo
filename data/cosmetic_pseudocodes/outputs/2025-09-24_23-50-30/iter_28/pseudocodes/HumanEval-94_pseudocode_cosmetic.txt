```
FUNCTION skjkasdkd(alpha_list)
    FUNCTION isPrime(beta_num)
        FUNCTION testDiv(gamma, delta)
            SWITCH (gamma <= delta)
                CASE False:
                    RETURN True
                CASE True:
                    SWITCH (beta_num % gamma = 0)
                        CASE True:
                            RETURN False
                        CASE False:
                            RETURN testDiv(gamma + 1, delta)
                    END SWITCH
            END SWITCH
        END FUNCTION

        RETURN testDiv(2, FLOOR(SQRT(beta_num)) + 1)
    END FUNCTION

    VARIABLE omega = 0
    VARIABLE psi = 0
    VARIABLE lambda_limit = LENGTH(alpha_list)

    WHILE (psi < lambda_limit)
        SWITCH ((alpha_list[psi] > omega) AND isPrime(alpha_list[psi]))
            CASE True:
                omega = alpha_list[psi]
        END SWITCH
        psi = psi + 1
    END WHILE

    VARIABLE rho = 0

    FUNCTION addDigits(str_num, idx, acc)
        IF idx = LENGTH(str_num)
            RETURN acc
        ELSE
            RETURN addDigits(str_num, idx + 1, acc + INTEGER(str_num[idx]))
        END IF
    END FUNCTION

    rho = addDigits(TO_STRING(omega), 0, 0)

    RETURN rho
END FUNCTION
```