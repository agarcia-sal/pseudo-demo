```
FUNCTION find_closest_elements(input_sequence)
    SET result_pair TO None
    SET best_diff TO None

    FUNCTION loop_outer(pos_outer)
        IF pos_outer >= LENGTH OF input_sequence
            RETURN
        END IF
        FUNCTION loop_inner(pos_inner)
            IF pos_inner >= LENGTH OF input_sequence
                RETURN
            END IF
            SET cond_check TO NOT (pos_outer = pos_inner)
            SELECT cond_check
                CASE false: 
                    ; 
                CASE true:
                    SET curr_diff TO ABSOLUTE VALUE OF (input_sequence[pos_outer] MINUS input_sequence[pos_inner])
                    SELECT best_diff IS None
                        CASE true:
                            SET best_diff TO curr_diff
                            SET result_pair TO (MINIMUM OF input_sequence[pos_outer], input_sequence[pos_inner], 
                                               MAXIMUM OF input_sequence[pos_outer], input_sequence[pos_inner])
                        CASE false:
                            IF curr_diff LESS THAN best_diff
                                SET best_diff TO curr_diff
                                SET result_pair TO (MINIMUM OF input_sequence[pos_outer], input_sequence[pos_inner], 
                                                   MAXIMUM OF input_sequence[pos_outer], input_sequence[pos_inner])
                            END IF
                    END SELECT
            END SELECT
            CALL loop_inner(pos_inner + 1)
        END FUNCTION
        CALL loop_inner(0)
        CALL loop_outer(pos_outer + 1)
    END FUNCTION

    CALL loop_outer(0)
    RETURN result_pair
END FUNCTION
```