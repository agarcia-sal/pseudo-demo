```
FUNCTION is_multiply_prime(omega)
  FUNCTION is_prime(zeta)
    FUNCTION check_divisor(beta, gamma)
      IF gamma > beta - 1 THEN
        RETURN True
      SWITCH (beta MOD gamma) != 0
        CASE True: 
          RETURN check_divisor(beta, gamma + 1)
        CASE False:
          RETURN False
    RETURN check_divisor(zeta, 2)

  FUNCTION loop_i(mu)
    IF mu > 100 THEN
      RETURN False

    FUNCTION loop_j(nu)
      IF nu > 100 THEN
        RETURN loop_i(mu + 1)

      FUNCTION loop_k(xi)
        IF xi > 100 THEN
          RETURN loop_j(nu + 1)

        RETURN ((not is_prime(xi)) and loop_k(xi + 1)) or
               ((is_prime(xi) and ((mu * nu * xi) == omega)) or loop_k(xi + 1))

      RETURN (not is_prime(nu) and loop_j(nu + 1)) or loop_k(2)

    RETURN (not is_prime(mu) and loop_i(mu + 1)) or loop_j(2)

  RETURN loop_i(2)
END FUNCTION
```