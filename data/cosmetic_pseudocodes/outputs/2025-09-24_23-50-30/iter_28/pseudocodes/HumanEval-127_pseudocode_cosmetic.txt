```
FUNCTION intersection(alpha, beta)
    FUNCTION is_prime(delta)
        SWITCH (delta)
            CASE 0:
            CASE 1:
                RETURN False
            CASE 2:
                RETURN True
            DEFAULT:
                BREAK
        END SWITCH

        PROCEDURE check_divisor(counter, limit)
            IF counter EQUALS limit THEN
                RETURN True
            END IF
            IF delta MOD counter EQUALS 0 THEN
                RETURN False
            END IF
            RETURN check_divisor(counter + 1, limit)
        END PROCEDURE

        RETURN check_divisor(2, (delta + (-1)))
    END FUNCTION

    SET lower_bound TO (alpha[0] >= beta[0]) ? alpha[0] : beta[0]
    SET upper_bound TO (alpha[1] <= beta[1]) ? alpha[1] : beta[1]
    SET length_overlap TO upper_bound - lower_bound

    IF (length_overlap > 0) AND (is_prime(length_overlap) = True) THEN
        RETURN "YES"
    ELSE
        RETURN "NO"
    END IF
END FUNCTION
```