```
FUNCTION unique_digits(parameter_alpha)
    SET collection_beta TO new empty sequence
    DEFINE FUNCTION helper_gamma(index_delta)
        IF NOT (index_delta < LENGTH(parameter_alpha)) THEN
            RETURN
        ELSE
            SET element_epsilon TO parameter_alpha[index_delta]
            DEFINE FUNCTION all_digits_eta(position_theta, value_iota)
                IF NOT (position_theta < LENGTH(value_iota)) THEN
                    RETURN true
                ELSE
                    SET digit_kappa TO INTEGER(value_iota[position_theta])
                    IF NOT ((digit_kappa % 2) = 0) THEN
                        RETURN all_digits_eta(position_theta + 1, value_iota)
                    ELSE
                        RETURN false
                    END IF
                END IF
            END FUNCTION
            IF (all_digits_eta(0, TO_STRING(element_epsilon))) = true THEN
                collection_beta = collection_beta + [element_epsilon]
            END IF
            helper_gamma(index_delta + 1)
        END IF
    END FUNCTION
    helper_gamma(0)
    SET sorted_lambda TO EMPTY LIST
    WHILE LENGTH(collection_beta) > 0 DO
        SET min_mu TO collection_beta[0]
        FOR EACH item_nu IN collection_beta DO
            IF item_nu < min_mu THEN
                min_mu = item_nu
            END IF
        END FOR
        sorted_lambda = sorted_lambda + [min_mu]
        SET temp_xi TO EMPTY LIST
        FOR EACH elem_omicron IN collection_beta DO
            IF NOT (elem_omicron = min_mu) THEN
                temp_xi = temp_xi + [elem_omicron]
            END IF
        END FOR
        collection_beta = temp_xi
    END WHILE
    RETURN sorted_lambda
END FUNCTION
```