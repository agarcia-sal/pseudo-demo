```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        DECLARE string_form AS STRING = TO_STRING(number)
        DECLARE reversed_form AS STRING = ""
        FOR idx FROM LENGTH(string_form) DOWNTO 1 STEP -1
            reversed_form = CONCAT(reversed_form, CHAR_AT(string_form, idx))
        END FOR
        RETURN reversed_form = string_form
    END FUNCTION

    DECLARE odd_palindromes AS INTEGER = 0
    DECLARE even_palindromes AS INTEGER = 0
    DECLARE current AS INTEGER = 1

    WHILE current <= n
        IF is_palindrome(current)
            SWITCH current % 2
                CASE 0:
                    even_palindromes = even_palindromes + 1
                    BREAK
                CASE 1:
                    odd_palindromes = odd_palindromes + 1
                    BREAK
            END SWITCH
        END IF
        current = current + 1
    END WHILE

    RETURN (even_palindromes, odd_palindromes)
END FUNCTION
```