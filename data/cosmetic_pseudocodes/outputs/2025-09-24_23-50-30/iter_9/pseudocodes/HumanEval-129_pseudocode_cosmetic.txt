```
FUNCTION minPath(grid, k)
 n := LENGTH(grid)
 limit := n * n + 1
 FOR alpha FROM 0 TO n - 1 DO
  FOR beta FROM 0 TO n - 1 DO
   IF grid[alpha][beta] = 1 THEN
    neighbors := []
    IF alpha > 0 THEN
     neighbors := CONCAT(neighbors, [grid[alpha - 1][beta]])
    END IF
    IF beta > 0 THEN
     neighbors := CONCAT(neighbors, [grid[alpha][beta - 1]])
    END IF
    IF alpha < n - 1 THEN
     neighbors := CONCAT(neighbors, [grid[alpha + 1][beta]])
    END IF
    IF beta < n - 1 THEN
     neighbors := CONCAT(neighbors, [grid[alpha][beta + 1]])
    END IF
    limit := MIN(neighbors)
   END IF
  END FOR
 END FOR
 output := []
 count := 0
 WHILE count < k DO
  IF (count - 2 * (count // 2)) = 0 THEN
   output := output + [1]
  ELSE
   output := output + [limit]
  END IF
  count := count + 1
 END WHILE
 RETURN output
END FUNCTION
```