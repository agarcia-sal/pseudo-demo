```
FUNCTION anti_shuffle(parameter_one)
  VAR container_of_segments = []
  VAR indexer = 0
  LOOP WHILE indexer < LENGTH(parameter_one)
    IF parameter_one[indexer] = ' '
      THEN indexer = indexer + 1 CONTINUE
    END IF
    VAR segment = ""
    VAR walker = indexer
    WHILE walker < LENGTH(parameter_one) AND parameter_one[walker] â‰  ' '
      segment = segment + parameter_one[walker]
      walker = walker + 1
    END WHILE
    container_of_segments.ADD(segment)
    indexer = walker
  END LOOP

  VAR container_of_permuted = MAP(container_of_segments, FUNCTION(segment) 
    VAR character_bucket = []
    FOR EACH item IN segment
      character_bucket.APPEND(item)
    END FOR
    character_bucket = character_bucket.SORT_BY_ASCENDING_CODE()
    RETURN character_bucket.JOIN_TO_STRING()
  END FUNCTION)

  VAR output_container = ""
  FOR i FROM 0 TO LENGTH(container_of_permuted) - 1
    output_container = output_container + container_of_permuted[i]
    IF i < LENGTH(container_of_permuted) - 1
      THEN output_container = output_container + " "
    END IF
  END FOR

  RETURN output_container
END FUNCTION
```