```
FUNCTION intersection(interval1, interval2)
  FUNCTION is_prime(number)
    SWITCH 
      CASE number = 0 OR number = 1:
        RETURN False
      CASE number = 2:
        RETURN True
      DEFAULT:
        VAR divisor ← 2
        WHILE divisor < number
          IF 0 = (number MOD divisor)
            RETURN False
          ENDIF
          divisor ← divisor + 1
        ENDWHILE
        RETURN True
    ENDSWITCH
  ENDFUNCTION

  VAR start_point ← (interval1[0] > interval2[0]) ? interval1[0] : interval2[0]
  VAR end_point ← (interval1[1] < interval2[1]) ? interval1[1] : interval2[1]
  VAR length_overlap ← end_point - start_point
  IF length_overlap <= 0 OR NOT is_prime(length_overlap)
    RETURN "NO"
  ELSE
    RETURN "YES"
  ENDIF
ENDFUNCTION
```