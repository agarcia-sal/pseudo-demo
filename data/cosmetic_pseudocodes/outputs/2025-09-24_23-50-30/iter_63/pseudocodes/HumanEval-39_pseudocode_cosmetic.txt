```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        SWITCH
            CASE integer_p < 2:
                RETURN False
            DEFAULT:
                SET map_divisors TO {}
                FOR integer_j FROM 2 TO (INTEGER_PART(SQUARE_ROOT(integer_p)) + 1)
                    IF integer_j < integer_p THEN
                        ADD integer_j TO map_divisors WITH VALUE True
                FOR each candidate_key IN KEYS(map_divisors)
                    IF (integer_p MOD candidate_key) = 0 THEN
                        RETURN False
                RETURN True
    END FUNCTION

    SET array_seq TO [0, 1]

    FUNCTION generate_next():
        SET last_index TO LENGTH(array_seq) - 1
        RETURN array_seq[last_index] + array_seq[last_index - 1]

    WHILE (TRUE)
        SET next_value TO generate_next()
        APPEND next_value TO array_seq
        IF is_prime(next_value) THEN
            integer_n ← integer_n - 1
        IF (integer_n = 0) THEN
            RETURN next_value
END FUNCTION
```