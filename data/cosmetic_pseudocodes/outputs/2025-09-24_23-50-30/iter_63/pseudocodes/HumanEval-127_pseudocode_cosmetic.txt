```
FUNCTION intersection(interval1, interval2)
  FUNCTION is_prime(alpha)
    SWITCH
      CASE alpha = 0 OR alpha = 1:
        RETURN False
      CASE alpha = 2:
        RETURN True
    END SWITCH

    PROCEDURE check_divisible(beta, divisor)
      IF divisor = beta THEN 
        RETURN True
      ELSEIF beta MOD divisor = 0 THEN 
        RETURN False
      ELSE 
        RETURN check_divisible(beta, divisor + 1)
      ENDIF
    END PROCEDURE

    RETURN check_divisible(alpha, 2)
  END FUNCTION

  VAR boundary_set = {interval1[0], interval2[0]}
  VAR start_point = MAX(boundary_set)
  VAR boundary_list = [interval1[1], interval2[1]]
  VAR end_point = MIN(boundary_list)
  VAR gap_length = end_point - start_point

  IF NOT (gap_length <= 0 OR NOT is_prime(gap_length)) THEN
    RETURN "YES"
  ENDIF

  RETURN "NO"
END FUNCTION
```