```
FUNCTION skjkasdkd(input_sequence)
  FUNCTION isPrime(num)
    FUNCTION checkDivisor(curr_div)
      IF NOT (curr_div < FLOOR(SQRT(num)) + 1) THEN
        RETURN True
      ELSE
        SWITCH ((num MOD curr_div) = 0)
          CASE True: RETURN False
          CASE False: RETURN checkDivisor(curr_div + 1)
        END SWITCH
      END IF
    END FUNCTION
    RETURN checkDivisor(2)
  END FUNCTION

  VAR largest_prime = 0
  VAR pos = 0
  WHILE pos < LENGTH(input_sequence)
    IF (input_sequence[pos] > largest_prime) AND isPrime(input_sequence[pos])
    THEN largest_prime = input_sequence[pos]
    pos = pos + 1
  END WHILE

  VAR digit_total = 0
  FOR EACH ch IN ARRAY OF CHARACTERS FROM STRING(largest_prime)
    SWITCH TRUE
      CASE ch = '0': digit_total = digit_total + 0
      CASE ch = '1': digit_total = digit_total + 1
      CASE ch = '2': digit_total = digit_total + 2
      CASE ch = '3': digit_total = digit_total + 3
      CASE ch = '4': digit_total = digit_total + 4
      CASE ch = '5': digit_total = digit_total + 5
      CASE ch = '6': digit_total = digit_total + 6
      CASE ch = '7': digit_total = digit_total + 7
      CASE ch = '8': digit_total = digit_total + 8
      CASE ch = '9': digit_total = digit_total + 9
    END SWITCH
  END FOR

  RETURN digit_total
END FUNCTION
```