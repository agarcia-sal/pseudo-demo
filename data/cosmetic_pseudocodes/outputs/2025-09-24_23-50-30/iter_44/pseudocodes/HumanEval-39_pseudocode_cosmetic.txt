```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_q)
        IF NOT (integer_q GREATER THAN OR EQUAL TO 2)
            RETURN False
        SET integer_r TO 2
        SET integer_s TO (MIN((FLOOR(SQUARE_ROOT(integer_q)) + 1), (integer_q - 1)))
        WHILE integer_r LESS THAN OR EQUAL TO integer_s
            IF (integer_q MODULO integer_r) IS 0 THEN
                RETURN False
            SET integer_r TO integer_r + 1
        RETURN True
    END FUNCTION

    SET list_g TO [0, 1]

    DEFINE FUNCTION iterate_fib(countdown)
        IF countdown IS 0 THEN
            RETURN list_g[ LENGTH(list_g) - 1 ]
        SET next_val TO list_g[ LENGTH(list_g) - 1 ] + list_g[ LENGTH(list_g) - 2 ]
        EXTEND list_g BY [next_val]
        IF is_prime(next_val)
            RETURN iterate_fib(countdown - 1)
        ELSE
            RETURN iterate_fib(countdown)
    END FUNCTION

    RETURN iterate_fib(integer_n)
END FUNCTION
```