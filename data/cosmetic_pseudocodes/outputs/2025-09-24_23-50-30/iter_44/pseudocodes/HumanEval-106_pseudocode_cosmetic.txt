```
FUNCTION f(param_x)
  LET output_seq BE []
  
  FUNCTION accumulate_factorial(current_k, limit_p, product_acc)
    IF current_k > limit_p THEN
      RETURN product_acc
    ELSE
      RETURN accumulate_factorial(current_k + 1, limit_p, product_acc * current_k)
    END IF
  END FUNCTION
  
  FUNCTION accumulate_sum(current_m, limit_n, total_acc)
    IF current_m > limit_n THEN
      RETURN total_acc
    ELSE
      RETURN accumulate_sum(current_m + 1, limit_n, total_acc + current_m)
    END IF
  END FUNCTION
  
  FUNCTION process_index(index_v)
    IF NOT (index_v MOD 2 <> 0) THEN
      LET factorial_result BE accumulate_factorial(1, index_v, 1)
      output_seq APPEND factorial_result
    ELSE
      LET summation_result BE accumulate_sum(1, index_v, 0)
      output_seq APPEND summation_result
    END IF
  END FUNCTION
  
  FUNCTION iterate_loop(counter_z)
    IF counter_z > param_x THEN
      RETURN
    ELSE
      process_index(counter_z)
      iterate_loop(counter_z + 1)
    END IF
  END FUNCTION
  
  iterate_loop(1)
  
  RETURN output_seq
END FUNCTION
```