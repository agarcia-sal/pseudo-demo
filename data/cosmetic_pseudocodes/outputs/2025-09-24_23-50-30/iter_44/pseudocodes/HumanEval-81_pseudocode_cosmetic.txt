```
FUNCTION numerical_letter_grade(parameter_array)
    LET accumulator_array BE []
    
    FUNCTION classify_recursively(index)
        IF index >= LENGTH(parameter_array)
            RETURN
        LET temp_value BE parameter_array[index]
        SWITCH TRUE
            CASE temp_value == 4.0:
                accumulator_array = accumulator_array + ["A+"]
            CASE temp_value > 3.7:
                accumulator_array = accumulator_array + ["A"]
            CASE temp_value > 3.3:
                accumulator_array = accumulator_array + ["A-"]
            CASE temp_value > 3.0:
                accumulator_array = accumulator_array + ["B+"]
            CASE temp_value > 2.7:
                accumulator_array = accumulator_array + ["B"]
            CASE temp_value > 2.3:
                accumulator_array = accumulator_array + ["B-"]
            CASE temp_value > 2.0:
                accumulator_array = accumulator_array + ["C+"]
            CASE temp_value > 1.7:
                accumulator_array = accumulator_array + ["C"]
            CASE temp_value > 1.3:
                accumulator_array = accumulator_array + ["C-"]
            CASE temp_value > 1.0:
                accumulator_array = accumulator_array + ["D+"]
            CASE temp_value > 0.7:
                accumulator_array = accumulator_array + ["D"]
            CASE temp_value > 0.0:
                accumulator_array = accumulator_array + ["D-"]
            DEFAULT:
                accumulator_array = accumulator_array + ["E"]
        classify_recursively(index + 1)
    
    classify_recursively(0)
    RETURN accumulator_array
END FUNCTION
```