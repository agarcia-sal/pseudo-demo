```
FUNCTION minSubArraySum(sequence_of_values)
    LET accumulator = 0
    LET peak_value = 0

    DEFINE FUNCTION process_elements(index, current_sum, current_max)
        IF index = LENGTH(sequence_of_values) THEN
            RETURN current_max
        ELSE
            LET updated_sum = current_sum + (0 - sequence_of_values[index])
            LET reset_sum = IF updated_sum < 0 THEN 0 ELSE updated_sum
            LET updated_max = IF reset_sum > current_max THEN reset_sum ELSE current_max
            RETURN process_elements(index + 1, reset_sum, updated_max)
        END IF
    END FUNCTION

    LET peak_value = process_elements(0, accumulator, peak_value)

    IF peak_value = 0 THEN
        LET inverted_values = [0 - v FOR v IN sequence_of_values]
        LET peak_value = inverted_values[0]
        FOR i FROM 1 TO LENGTH(inverted_values) - 1
            IF inverted_values[i] > peak_value THEN
                peak_value = inverted_values[i]
            END IF
        END FOR
    END IF

    LET result = 0 - peak_value
    RETURN result
END FUNCTION
```