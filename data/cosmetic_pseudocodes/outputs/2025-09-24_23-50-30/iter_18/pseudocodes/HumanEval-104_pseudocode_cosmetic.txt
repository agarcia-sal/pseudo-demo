```
FUNCTION unique_digits(collection_of_positive_numbers)
    SET accumulator TO empty array
    SET index TO 0
    WHILE index < LENGTH(collection_of_positive_numbers)
        SET candidate TO collection_of_positive_numbers[index]
        SET digit_index TO 0
        SET has_even_digit TO FALSE
        WHILE digit_index < LENGTH(STRING(candidate))
            SET digit_char TO STRING(candidate)[digit_index]
            SET digit_value TO INTEGER(digit_char)
            IF (digit_value div 2) * 2 = digit_value
                SET has_even_digit TO TRUE
                BREAK
            ENDIF
            SET digit_index TO digit_index + 1
        ENDWHILE
        IF NOT has_even_digit
            accumulator = accumulator + [candidate]
        ENDIF
        SET index TO index + 1
    ENDWHILE
    SET sorted_result TO empty array
    WHILE LENGTH(accumulator) > 0
        SET min_value TO accumulator[0]
        SET pos TO 0
        SET scan TO 1
        WHILE scan < LENGTH(accumulator)
            IF accumulator[scan] < min_value
                SET min_value TO accumulator[scan]
                SET pos TO scan
            ENDIF
            SET scan TO scan + 1
        ENDWHILE
        sorted_result = sorted_result + [min_value]
        accumulator = accumulator[0:pos] + accumulator[(pos+1):LENGTH(accumulator)]
    ENDWHILE
    RETURN sorted_result
END FUNCTION
```