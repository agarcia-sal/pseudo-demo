```
FUNCTION prod_signs(list_of_values)
    IF NOT (LENGTH of list_of_values > 0) THEN
        RETURN None
    END IF

    DECLARE sign_result
    DECLARE neg_count = 0

    FOR index FROM 0 TO LENGTH of list_of_values - 1
        DECLARE current_value = list_of_values[index]
        IF current_value = 0 THEN
            sign_result = 0
            BREAK
        END IF
        IF current_value < 0 THEN
            neg_count = neg_count + 1
        END IF
    END FOR

    IF sign_result IS UNDEFINED THEN
        DECLARE power = 1
        FOR iterate FROM 1 TO neg_count DO
            power = power * (-1)
        END FOR
        sign_result = power
    END IF

    DECLARE abs_sum = 0
    DECLARE idx = 0

    WHILE idx < LENGTH of list_of_values DO
        abs_sum = abs_sum + (list_of_values[idx] * (list_of_values[idx] >= 0) + (-list_of_values[idx]) * (list_of_values[idx] < 0))
        idx = idx + 1
    END WHILE

    RETURN sign_result * abs_sum
END FUNCTION
```