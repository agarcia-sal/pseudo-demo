```
FUNCTION sort_third(list_input)
    SET cloned_collection TO []
    SET index_pointer TO 0
    WHILE index_pointer < LENGTH(list_input)
        APPEND list_input[index_pointer] TO cloned_collection
        SET index_pointer TO index_pointer + 1
    END WHILE

    SET position_counter TO 0
    SET holder_map TO DICTIONARY()
    WHILE position_counter < LENGTH(cloned_collection)
        IF (position_counter DIV 3) * 3 = position_counter THEN
            SET holder_map[position_counter] = cloned_collection[position_counter]
        END IF
        SET position_counter TO position_counter + 1
    END WHILE

    SET keys_list TO []
    SET key_index TO 0
    FOR EACH key IN holder_map
        APPEND key TO keys_list
        SET key_index TO key_index + 1
    END FOR

    SET values_list TO []
    FOR EACH key IN keys_list
        APPEND holder_map[key] TO values_list
    END FOR

    # Insertion sort to order values_list ascending
    SET i_outer TO 1
    WHILE i_outer < LENGTH(values_list)
        SET temp_val TO values_list[i_outer]
        SET i_inner TO i_outer - 1
        WHILE i_inner >= 0 AND temp_val < values_list[i_inner]
            SET values_list[i_inner + 1] TO values_list[i_inner]
            SET i_inner TO i_inner - 1
        END WHILE
        SET values_list[i_inner + 1] TO temp_val
        SET i_outer TO i_outer + 1
    END WHILE

    # Assign back sorted values to cloned_collection at keys_list positions
    SET assign_index TO 0
    WHILE assign_index < LENGTH(keys_list)
        SET cloned_collection[keys_list[assign_index]] TO values_list[assign_index]
        SET assign_index TO assign_index + 1
    END WHILE

    RETURN cloned_collection
END FUNCTION
```