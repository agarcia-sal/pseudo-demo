```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET abs_value TO integer_value
        SET sign_flag TO 1
        IF NOT (integer_value < 0) THEN
            // no change to abs_value or sign_flag
        ELSE
            SET abs_value TO (-1) * integer_value
            SET sign_flag TO (-1)
        END IF

        SET digit_chars TO SPLIT(TO_STRING(abs_value), "")
        SET transformed_digits TO NEW ARRAY OF LENGTH LENGTH(digit_chars)
        SET index_dummy TO 0
        WHILE index_dummy < LENGTH(digit_chars)
            SET transformed_digits[index_dummy] TO TO_INTEGER(digit_chars[index_dummy])
            SET index_dummy TO index_dummy + 1
        END WHILE

        transformed_digits[0] = transformed_digits[0] * sign_flag

        SET total_sum TO 0
        SET idx_cursor TO 0
        WHILE idx_cursor < LENGTH(transformed_digits)
            SET total_sum TO total_sum + transformed_digits[idx_cursor]
            SET idx_cursor TO idx_cursor + 1
        END WHILE

        RETURN total_sum
    END FUNCTION

    SET digit_sums_dict TO NEW DICTIONARY
    SET idx_counter TO 0
    WHILE idx_counter < LENGTH(array_of_integers)
        SET current_elem TO array_of_integers[idx_counter]
        SET digit_sums_dict[idx_counter] TO digits_sum(current_elem)
        SET idx_counter TO idx_counter + 1
    END WHILE

    SET positive_sum_count TO 0
    SET keys_list TO KEYS(digit_sums_dict)
    SET key_iterator TO 0
    WHILE key_iterator < LENGTH(keys_list)
        SET k TO keys_list[key_iterator]
        IF NOT(digit_sums_dict[k] <= 0) THEN
            SET positive_sum_count TO positive_sum_count + 1
        END IF
        SET key_iterator TO key_iterator + 1
    END WHILE

    RETURN positive_sum_count
END FUNCTION
```