```
FUNCTION encode(message)
    SET swapCaseChars TO EMPTY ARRAY
    FOR position FROM 0 TO LENGTH(message) - 1 DO
        SET currentChar TO message[position]
        IF currentChar IS UPPERCASE THEN
            SET swapCaseChars[position] TO LOWERCASE(currentChar)
        ELSE
            SET swapCaseChars[position] TO UPPERCASE(currentChar)
    END FOR

    SET vowelsDict TO EMPTY DICTIONARY
    FOR EACH char IN ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'] DO
        SET asciiVal TO ASCII_VALUE(char)
        SET vowelsDict[char] TO CHARACTER_FROM_ASCII(asciiVal + 2)
    END FOR

    SET resultBuilder TO EMPTY ARRAY
    SET indexCounter TO 0
    WHILE indexCounter < LENGTH(swapCaseChars) DO
        SET ch TO swapCaseChars[indexCounter]
        IF vowelsDict CONTAINS_KEY ch THEN
            APPEND vowelsDict[ch] TO resultBuilder
        ELSE
            APPEND ch TO resultBuilder
        END IF
        INCREMENT indexCounter BY 1
    END WHILE

    RETURN CONCATENATE_ALL_ELEMENTS(resultBuilder)
END FUNCTION
```