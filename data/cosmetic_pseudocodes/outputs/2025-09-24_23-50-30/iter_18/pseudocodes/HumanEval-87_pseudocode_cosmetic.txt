```
FUNCTION get_row(two_dimensional_list, target_integer)
    LET matches_dict BE EMPTY DICTIONARY
    SET outer_index TO 0
    WHILE outer_index LESS THAN LENGTH(two_dimensional_list)
        LET current_row ARRAY BE two_dimensional_list AT outer_index
        LET inner_index TO 0
        WHILE inner_index LESS THAN LENGTH(current_row)
            IF NOT (current_row AT inner_index NOT EQUAL target_integer)
                SET matches_dict[outer_index, inner_index] = TRUE
            END IF
            SET inner_index TO inner_index + 1
        END WHILE
        SET outer_index TO outer_index + 1
    END WHILE

    LET pair_list ARRAY BE EMPTY
    FOR EACH key IN matches_dict
        APPEND key TO pair_list
    END FOR

    LET sorted_by_second ARRAY BE EMPTY
    LET idx_to_second ARRAY BE EMPTY
    LET i TO 0
    WHILE i LESS THAN LENGTH(pair_list)
        SET idx_to_second AT i TO pair_list AT i AT 1
        SET i TO i + 1
    END WHILE

    LET indices_sorted_by_second ARRAY BE EMPTY
    LET j TO 0
    WHILE j LESS THAN LENGTH(idx_to_second)
        LET k TO 0
        WHILE k LESS THAN LENGTH(idx_to_second) MINUS 1
            IF idx_to_second AT k LESS THAN idx_to_second AT k + 1
                LET temp TO idx_to_second AT k
                SET idx_to_second AT k TO idx_to_second AT k + 1
                SET idx_to_second AT k + 1 TO temp
                LET temp_key TO pair_list AT k
                SET pair_list AT k TO pair_list AT k + 1
                SET pair_list AT k + 1 TO temp_key
            END IF
            SET k TO k + 1
        END WHILE
        SET j TO j + 1
    END WHILE

    LET sorted_array ARRAY BE pair_list
    LET m TO 0
    WHILE m LESS THAN LENGTH(sorted_array)
        LET n TO 0
        WHILE n LESS THAN LENGTH(sorted_array) MINUS 1
            IF sorted_array AT n AT 0 GREATER THAN sorted_array AT n + 1 AT 0
                LET buffer TO sorted_array AT n
                SET sorted_array AT n TO sorted_array AT n + 1
                SET sorted_array AT n + 1 TO buffer
            END IF
            SET n TO n + 1
        END WHILE
        SET m TO m + 1
    END WHILE

    RETURN sorted_array
END FUNCTION
```