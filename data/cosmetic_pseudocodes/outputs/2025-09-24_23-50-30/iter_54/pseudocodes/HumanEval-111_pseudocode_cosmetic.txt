```
FUNCTION histogram(input_data)
  VAR result_map := {}
  VAR symbols := SPLIT input_data BY ' '
  VAR max_val := 0

  FUNCTION find_maximum(index, current_max)
    IF index >= LENGTH(symbols)
      RETURN current_max
    VAR current_symbol := symbols[index]
    VAR count := 0
    VAR idx := 0
    WHILE idx < LENGTH(symbols)
      IF symbols[idx] = current_symbol
        count := count + 1
      idx := idx + 1
    IF current_symbol <> '' AND count > current_max
      RETURN find_maximum(index + 1, count)
    ELSE
      RETURN find_maximum(index + 1, current_max)
  END FUNCTION

  max_val := find_maximum(0, 0)

  PROCEDURE fill_dictionary(position)
    IF position >= LENGTH(symbols)
      RETURN
    VAR current_symbol := symbols[position]
    VAR occurrences := 0
    VAR cursor := 0
    WHILE cursor < LENGTH(symbols)
      IF symbols[cursor] = current_symbol
        occurrences := occurrences + 1
      cursor := cursor + 1
    IF occurrences = max_val
      result_map[current_symbol] := max_val
    fill_dictionary(position + 1)
  END PROCEDURE

  IF max_val > 0 THEN fill_dictionary(0)

  RETURN result_map
END FUNCTION
```