```
FUNCTION max_fill(grid, capacity)
    IMPORT math
    PROCEDURE accumulate_rows(idx, acc) RETURNS NUMBER
        IF idx >= LENGTH(grid) THEN
            RETURN acc
        ELSE
            RETURN accumulate_rows(idx + 1, acc + SUM(grid[idx]))
        END IF
    END PROCEDURE

    PROCEDURE ceiling_division(val) RETURNS NUMBER
        RETURN math.ceil(val / capacity)
    END PROCEDURE

    PROCEDURE sum_ceilings(idx, total) RETURNS NUMBER
        IF idx >= LENGTH(grid) THEN
            RETURN total
        ELSE
            RETURN sum_ceilings(idx + 1, total + ceiling_division(SUM(grid[idx])))
        END IF
    END PROCEDURE

    RETURN sum_ceilings(0, 0)
END FUNCTION
```