```
FUNCTION f(integer_n)
    FUNCTION helper(accumulator, counter, boundary)
        IF counter > boundary THEN
            RETURN accumulator
        ELSE
            RETURN helper(accumulator * counter, counter + 1, boundary)
        END IF
    END FUNCTION

    FUNCTION helper_sum(accumulator_sum, counter_sum, boundary_sum)
        IF counter_sum > boundary_sum THEN
            RETURN accumulator_sum
        ELSE
            RETURN helper_sum(accumulator_sum + counter_sum, counter_sum + 1, boundary_sum)
        END IF
    END FUNCTION

    SET collection TO []

    FUNCTION loop(index)
        IF index > integer_n THEN
            RETURN
        ELSE
            IF index % 2 = 0 THEN
                SET val TO helper(1, 1, index)
                collection APPEND val
            ELSE
                SET val_alt TO helper_sum(0, 1, index)
                collection APPEND val_alt
            END IF
            loop(index + 1)
        END IF
    END FUNCTION

    loop(1)
    RETURN collection
END FUNCTION
```