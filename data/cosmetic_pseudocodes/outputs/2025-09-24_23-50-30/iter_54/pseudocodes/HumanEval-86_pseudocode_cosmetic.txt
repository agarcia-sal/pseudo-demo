```
FUNCTION anti_shuffle(input_string)
    FUNCTION process_word_list(words, index, accum)
        IF index < LENGTH(words) THEN
            LET current_word ← GET(words, index)
            LET chars_list ← TO_ARRAY(current_word)
            LET sorted_chars ← MERGE_SORT_ASC(chars_list)
            LET sorted_word ← CONCATENATE(sorted_chars)
            RETURN process_word_list(words, index + 1, APPEND(accum, sorted_word))
        ELSE
            RETURN accum
        END IF
    END FUNCTION

    LET word_array ← SPLIT(input_string, " ")
    LET sorted_words_array ← process_word_list(word_array, 0, EMPTY_LIST())
    LET final_string ← REDUCE(sorted_words_array, "", FUNCTION(acc, w) RETURN IF acc == "" THEN w ELSE acc + " " + w END)
    RETURN final_string
END FUNCTION
```