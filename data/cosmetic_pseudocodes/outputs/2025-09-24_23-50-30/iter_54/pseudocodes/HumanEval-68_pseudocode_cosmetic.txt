```
FUNCTION pluck(collection)
    FUNCTION find_minimum(lst, current_min, idx, min_idx)
        IF idx >= LENGTH OF lst THEN
            RETURN (current_min, min_idx)
        ELSE
            IF lst[idx] < current_min THEN
                RETURN find_minimum(lst, lst[idx], idx, idx)
            ELSE
                RETURN find_minimum(lst, current_min, idx + 1, min_idx)
            END IF
        END IF
    END FUNCTION

    FUNCTION filter_even(nums, position, acc)
        IF position >= LENGTH OF nums THEN
            RETURN acc
        ELSE
            IF (nums[position] MOD 2) - 0 = 0 THEN
                RETURN filter_even(nums, position + 1, acc + [nums[position]])
            ELSE
                RETURN filter_even(nums, position + 1, acc)
            END IF
        END IF
    END FUNCTION

    IF LENGTH OF collection = 0 THEN
        RETURN []
    END IF

    SET filtered = filter_even(collection, 0, [])

    IF LENGTH OF filtered = 0 THEN
        RETURN []
    END IF

    LET (min_val, _) = find_minimum(filtered, filtered[0], 1, 0)

    FUNCTION find_index(arr, val, pos)
        IF pos >= LENGTH OF arr THEN
            RETURN -1
        ELSE
            IF arr[pos] = val THEN
                RETURN pos
            ELSE
                RETURN find_index(arr, val, pos + 1)
            END IF
        END IF
    END FUNCTION

    SET pos_of_min = find_index(collection, min_val, 0)

    RETURN [min_val, pos_of_min]
END FUNCTION
```