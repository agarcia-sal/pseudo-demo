```
FUNCTION prod_signs(input_list)
    FUNCTION has_zero(lst, idx)
        IF idx == LENGTH(lst)
            RETURN false
        ELSE IF lst[idx] == 0
            RETURN true
        ELSE
            RETURN has_zero(lst, idx + 1)
        END IF
    END FUNCTION

    FUNCTION count_negatives(lst, idx, acc)
        IF idx == LENGTH(lst)
            RETURN acc
        ELSE IF lst[idx] < 0
            RETURN count_negatives(lst, idx + 1, acc + 1)
        ELSE
            RETURN count_negatives(lst, idx + 1, acc)
        END IF
    END FUNCTION

    FUNCTION absolute_sum(lst, idx, acc_sum)
        IF idx == LENGTH(lst)
            RETURN acc_sum
        ELSE
            SET current_abs TO (lst[idx] >= 0) * lst[idx] + (lst[idx] < 0) * (0 - lst[idx])
            RETURN absolute_sum(lst, idx + 1, acc_sum + current_abs)
        END IF
    END FUNCTION

    IF LENGTH(input_list) == 0
        RETURN None
    END IF

    IF has_zero(input_list, 0)
        SET sign_val TO 0
    ELSE
        SET neg_count TO count_negatives(input_list, 0, 0)
        SET sign_val TO (1 + (-2) * (neg_count % 2))
    END IF

    SET magnitude_sum TO absolute_sum(input_list, 0, 0)
    RETURN sign_val * magnitude_sum
END FUNCTION
```