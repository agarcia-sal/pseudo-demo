```
FUNCTION is_nested(strng)
    LET open_positions BE empty list
    LET close_positions BE empty list
    LET pos_iter BE 0
    WHILE pos_iter < LENGTH(strng)
        IF strng[pos_iter] = '[' THEN
            APPEND pos_iter TO open_positions
        ELSE
            APPEND pos_iter TO close_positions
        END IF
        SET pos_iter TO pos_iter + 1
    END WHILE

    DEFINE REVERSE_LIST(lst)
        LET left_idx BE 0
        LET right_idx BE LENGTH(lst) - 1
        WHILE left_idx < right_idx
            LET temp_var BE lst[left_idx]
            SET lst[left_idx] TO lst[right_idx]
            SET lst[right_idx] TO temp_var
            SET left_idx TO left_idx + 1
            SET right_idx TO right_idx - 1
        END WHILE
        RETURN NULL
    END

    CALL REVERSE_LIST(close_positions)

    LET matched_count BE 0
    LET close_idx BE 0
    LET max_close_idx BE LENGTH(close_positions)
    
    FOR EACH open_idx IN open_positions
        IF close_idx < max_close_idx AND open_idx < close_positions[close_idx] THEN
            SET matched_count TO matched_count + 1
            SET close_idx TO close_idx + 1
        END IF
    END FOR

    RETURN matched_count >= 2
END FUNCTION
```