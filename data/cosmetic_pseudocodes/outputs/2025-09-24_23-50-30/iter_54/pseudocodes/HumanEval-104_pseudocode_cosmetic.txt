```
FUNCTION unique_digits(sequence_of_positive_numbers)
   DEFINE recursive_check_odd_digits(current_number) AS
      IF current_number = 0 THEN
         RETURN true
      ELSE
         LET last_digit BE current_number MOD 10
         IF NOT (last_digit MOD 2 = 1) THEN
            RETURN false
         ELSE
            RETURN recursive_check_odd_digits(current_number DIV 10)
         END IF
      END IF
   END DEFINE

   LET accumulator BE empty list
   FOR index FROM 0 TO LENGTH(sequence_of_positive_numbers) - 1 DO
      LET number_at_index BE sequence_of_positive_numbers[index]
      IF recursive_check_odd_digits(number_at_index) THEN
         APPEND number_at_index TO accumulator
      END IF
   END FOR

   RETURN accumulator SORTED ascending
END FUNCTION
```