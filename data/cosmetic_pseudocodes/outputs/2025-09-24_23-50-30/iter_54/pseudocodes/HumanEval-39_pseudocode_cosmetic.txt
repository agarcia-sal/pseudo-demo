```
FUNCTION prime_fib(input_number)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(test_value)
        IF NOT (test_value >= 2)
            RETURN False

        FUNCTION check_divisor(divisor)
            IF divisor > (INTEGER_PART( mathematical_functions_module.sqrt(test_value) ) + 1) OR divisor >= test_value
                RETURN True
            ELSE IF (test_value % divisor) == 0
                RETURN False
            ELSE
                RETURN check_divisor(divisor + 1)
        END FUNCTION

        RETURN check_divisor(2)
    END FUNCTION

    SET sequence TO [0, 1]

    FUNCTION find_prime_fib(counter)
        SET next_value TO sequence[-1] + sequence[-2]
        sequence.APPEND(next_value)
        IF is_prime(next_value)
            SET counter TO counter - 1
            IF counter == 0
                RETURN next_value
            ELSE
                RETURN find_prime_fib(counter)
        ELSE
            RETURN find_prime_fib(counter)
    END FUNCTION

    RETURN find_prime_fib(input_number)
END FUNCTION
```