```
FUNCTION fibfib(integer_n)
    SWITCH integer_n
        CASE 0, 1:
            RETURN 0
        CASE 2:
            RETURN 1
    END SWITCH
    DEFINE FUNCTION helper(counter, memo_map)
        WHILE counter <= integer_n DO
            LET value = memo_map[counter - 1] + memo_map[counter - 2] + memo_map[counter - 3]
            memo_map[counter] := value
            counter := counter + 1
        END WHILE
        RETURN memo_map[integer_n]
    END FUNCTION
    LET initial_cache := {0: 0, 1: 0, 2: 1}
    RETURN helper(3, initial_cache)
END FUNCTION
```