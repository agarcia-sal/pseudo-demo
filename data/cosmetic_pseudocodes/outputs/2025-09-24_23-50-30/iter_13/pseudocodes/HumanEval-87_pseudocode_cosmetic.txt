```
FUNCTION get_row(two_dimensional_list, target_integer)
    DECLARE found_positions AS MAP FROM INTEGER TO SET OF INTEGER
    DECLARE row_counter AS INTEGER
    SET row_counter TO 0
    WHILE row_counter LESS THAN LENGTH OF two_dimensional_list
        DECLARE col_counter AS INTEGER
        SET col_counter TO 0
        WHILE col_counter LESS THAN LENGTH OF two_dimensional_list[row_counter]
            IF two_dimensional_list[row_counter][col_counter] = target_integer THEN
                IF found_positions CONTAINS KEY row_counter THEN
                    INSERT col_counter INTO found_positions[row_counter]
                ELSE
                    SET found_positions[row_counter] TO SET WITH col_counter
                END IF
            END IF
            ADD 1 TO col_counter
        END WHILE
        ADD 1 TO row_counter
    END WHILE

    DECLARE result_list AS LIST OF TUPLE
    SET result_list TO EMPTY LIST
    FOR EACH row_key IN SORTED KEYS OF found_positions ASCENDING
        FOR EACH col_value IN SORTED VALUES of found_positions[row_key] DESCENDING
            APPEND (row_key, col_value) TO result_list
        END FOR
    END FOR

    RETURN result_list
END FUNCTION
```