```
FUNCTION numerical_letter_grade(grade_collection)
    PROCEDURE map_grades(grades, index, result_accum)
        IF index EQUALS LENGTH(grades)
            RETURN result_accum
        ELSE
            SET current_value TO grades[index]
            SET code_map TO 
                CASE
                    WHEN current_value EQUALS 4.0 THEN "A+"
                    WHEN current_value GREATER THAN 3.7 THEN "A"
                    WHEN current_value GREATER THAN 3.3 THEN "A-"
                    WHEN current_value GREATER THAN 3.0 THEN "B+"
                    WHEN current_value GREATER THAN 2.7 THEN "B"
                    WHEN current_value GREATER THAN 2.3 THEN "B-"
                    WHEN current_value GREATER THAN 2.0 THEN "C+"
                    WHEN current_value GREATER THAN 1.7 THEN "C"
                    WHEN current_value GREATER THAN 1.3 THEN "C-"
                    WHEN current_value GREATER THAN 1.0 THEN "D+"
                    WHEN current_value GREATER THAN 0.7 THEN "D"
                    WHEN current_value GREATER THAN 0.0 THEN "D-"
                    ELSE "E"
                END CASE
            RETURN map_grades(grades, index + 1, result_accum + [code_map])
    END PROCEDURE

    RETURN map_grades(grade_collection, 0, [])
END FUNCTION
```