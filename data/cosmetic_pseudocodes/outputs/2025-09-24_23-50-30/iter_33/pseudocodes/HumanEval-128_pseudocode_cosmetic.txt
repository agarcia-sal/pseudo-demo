```
FUNCTION prod_signs(array_of_integers)
    DEFINE FUNCTION has_zero(elements, idx)
        IF idx EQUALS LENGTH OF elements
            RETURN FALSE
        ELSE
            RETURN (elements[idx] EQUALS 0) OR has_zero(elements, idx + 1)
        END IF
    END FUNCTION

    DEFINE FUNCTION count_negatives(elements, idx, acc)
        IF idx EQUALS LENGTH OF elements
            RETURN acc
        ELSE
            RETURN count_negatives(elements, idx + 1, acc + (elements[idx] < 0 ? 1 : 0))
        END IF
    END FUNCTION

    DEFINE FUNCTION sum_abs(elements, idx, acc)
        IF idx EQUALS LENGTH OF elements
            RETURN acc
        ELSE
            RETURN sum_abs(elements, idx + 1, acc + (elements[idx] < 0 ? -elements[idx] : elements[idx]))
        END IF
    END FUNCTION

    IF array_of_integers EQUALS EMPTY_LIST
        RETURN None
    ELSE
        IF has_zero(array_of_integers, 0)
            LET product_sign = 0
        ELSE
            LET negatives_count = count_negatives(array_of_integers, 0, 0)
            LET product_sign = 1
            FOR i FROM 1 TO negatives_count DO
                product_sign = -product_sign
            END FOR
        END IF
        LET total_magnitude = sum_abs(array_of_integers, 0, 0)
        RETURN product_sign * total_magnitude
    END IF
END FUNCTION
```