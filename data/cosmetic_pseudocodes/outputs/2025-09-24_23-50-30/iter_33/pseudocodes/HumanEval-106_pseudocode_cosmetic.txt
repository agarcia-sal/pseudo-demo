```
FUNCTION f(parameter_m)
    SET accumulator_X TO []
    SET counter_P TO 1
    WHILE counter_P <= parameter_m
        SWITCH (counter_P MOD 2 = 0)
            CASE true:
                SET product_Q TO 1
                SET iterator_R TO 1
                WHILE iterator_R <= counter_P
                    SET product_Q TO product_Q * iterator_R
                    SET iterator_R TO iterator_R + 1
                END WHILE
                APPEND product_Q TO accumulator_X
            CASE false:
                SET sum_S TO 0
                SET index_T TO 1
                WHILE index_T <= counter_P
                    SET sum_S TO sum_S + index_T
                    SET index_T TO index_T + 1
                END WHILE
                APPEND sum_S TO accumulator_X
        END SWITCH
        SET counter_P TO counter_P + 1
    END WHILE
    RETURN accumulator_X
END FUNCTION
```