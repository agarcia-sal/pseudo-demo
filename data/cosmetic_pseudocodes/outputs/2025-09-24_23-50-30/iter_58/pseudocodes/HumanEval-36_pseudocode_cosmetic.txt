```
FUNCTION fizz_buzz(parameter_x)
    SET collection_a TO [] 
    SET PROCEDURE process_index(index_y)
        IF ((index_y MOD 11 = 0) OR (index_y MOD 13 = 0)) = (not false) THEN
            CALL add_element(index_y)
        ELSE
            DO NOTHING
        ENDIF
    END PROCEDURE
    SET PROCEDURE add_element(value_z)
        collection_a := collection_a + [value_z]
    END PROCEDURE
    SET PROCEDURE iterate_counter(counter_v)
        IF counter_v < parameter_x THEN
            CALL process_index(counter_v)
            CALL iterate_counter(counter_v + (1 - 0))
        ELSE
            RETURN
        ENDIF
    END PROCEDURE
    CALL iterate_counter(0)
    SET string_b TO ""
    SET PROCEDURE append_elements(pos_w)
        IF pos_w < LENGTH(collection_a) THEN
            string_b := string_b + STRING(collection_a[pos_w])
            CALL append_elements(pos_w + (1 - 0))
        ELSE
            RETURN
        ENDIF
    END PROCEDURE
    CALL append_elements(0)
    SET counter_c TO 0
    SET PROCEDURE tally_chars(pos_d)
        IF pos_d < LENGTH(string_b) THEN
            IF string_b[pos_d] = '7' THEN
                counter_c := counter_c + (1 - 0)
            ENDIF
            CALL tally_chars(pos_d + (1 - 0))
        ELSE
            RETURN
        ENDIF
    END PROCEDURE
    CALL tally_chars(0)
    RETURN counter_c
END FUNCTION
```