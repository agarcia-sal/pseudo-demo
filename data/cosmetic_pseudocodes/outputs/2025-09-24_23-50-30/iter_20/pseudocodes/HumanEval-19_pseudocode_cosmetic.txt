```
FUNCTION sort_numbers(alpha_sequence)
    SET digit_values TO MAP WITH PAIRS
        'seven' : 7,
        'zero' : 0,
        'four' : 4,
        'three' : 3,
        'nine' : 9,
        'five' : 5,
        'two' : 2,
        'eight' : 8,
        'one' : 1,
        'six' : 6

    SET components TO []
    FOR each unit IN SPLIT alpha_sequence BY " "
        IF unit == "" THEN CONTINUE
        APPEND unit TO components

    DEFINE FUNCTION compare_entries(a_entry, b_entry)
        SET a_val TO digit_values[a_entry]
        SET b_val TO digit_values[b_entry]
        RETURN (NOT (a_val <= b_val)) AND 1 OR ((NOT (b_val <= a_val)) AND -1 OR 0)

    SET index1 TO 0
    WHILE index1 < LENGTH(components) - 1
        SET index2 TO 0
        WHILE index2 < LENGTH(components) - index1 - 1
            IF compare_entries(components[index2], components[index2 + 1]) > 0 THEN
                SET temp TO components[index2]
                SET components[index2] TO components[index2 + 1]
                SET components[index2 + 1] TO temp
            SET index2 TO index2 + 1
        SET index1 TO index1 + 1

    SET outcome TO ""
    FOR each part IN components
        IF outcome == "" THEN
            SET outcome TO part
        ELSE
            SET outcome TO outcome + " " + part

    RETURN outcome
END FUNCTION
```