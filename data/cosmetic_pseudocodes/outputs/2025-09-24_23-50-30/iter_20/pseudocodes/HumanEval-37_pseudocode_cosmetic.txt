```
FUNCTION sort_even(array_input)
    SET delta TO 2
    SET first_subset TO EMPTY LIST
    SET second_subset TO EMPTY LIST
    SET counter_one TO 0
    WHILE counter_one < LENGTH OF array_input
        APPEND array_input AT counter_one TO first_subset
        SET counter_one TO counter_one + delta
    SET counter_two TO 1
    WHILE counter_two < LENGTH OF array_input
        APPEND array_input AT counter_two TO second_subset
        SET counter_two TO counter_two + delta
    CALL bubble_sort(first_subset)
    SET combined_result TO EMPTY LIST
    SET index_pair TO 0
    WHILE index_pair < LENGTH OF second_subset
        APPEND first_subset AT index_pair TO combined_result
        APPEND second_subset AT index_pair TO combined_result
        SET index_pair TO index_pair + 1
    IF NOT (LENGTH OF first_subset <= LENGTH OF second_subset)
        APPEND first_subset AT (LENGTH OF first_subset - 1) TO combined_result
    RETURN combined_result

FUNCTION bubble_sort(list_param)
    SET n TO LENGTH OF list_param
    REPEAT
        SET swapped_flag TO false
        SET iterator_var TO 1
        WHILE iterator_var < n
            IF NOT (list_param AT (iterator_var - 1) <= list_param AT iterator_var)
                SET temp_var TO list_param AT (iterator_var - 1)
                SET list_param AT (iterator_var - 1) TO list_param AT iterator_var
                SET list_param AT iterator_var TO temp_var
                SET swapped_flag TO true
            SET iterator_var TO iterator_var + 1
        SET n TO n - 1
    UNTIL swapped_flag IS false
END FUNCTION
```