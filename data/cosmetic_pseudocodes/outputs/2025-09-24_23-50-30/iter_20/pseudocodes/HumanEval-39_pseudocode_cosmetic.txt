```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        SET boolean_flag TO True
        IF NOT (integer_p GREATER OR EQUAL TO 2)
            SET boolean_flag TO False
        ELSE
            SET integer_z TO 2
            WHILE boolean_flag AND integer_z NOT GREATER THAN (MINIMUM OF (FLOOR(SQUARE_ROOT(integer_p)) + 1) AND (integer_p - 1))
                IF integer_p MODULO integer_z EQUALS 0
                    SET boolean_flag TO False
                SET integer_z TO integer_z + 1
        RETURN boolean_flag
    END FUNCTION

    SET collection_seq TO [0, 1]

    REPEAT
        SET integer_a TO collection_seq[LENGTH(collection_seq) - 1]
        SET integer_b TO collection_seq[LENGTH(collection_seq) - 2]
        SET integer_c TO integer_a + integer_b
        ADD integer_c TO collection_seq
        IF is_prime(integer_c)
            SET integer_n TO integer_n - 1
        IF NOT (integer_n NOT EQUAL TO 0)
            RETURN integer_c
END FUNCTION
```