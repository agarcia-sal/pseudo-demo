```
FUNCTION fizz_buzz(integer_n)
    SET accumulated_set TO set()
    
    FUNCTION collect(dividend, limit, container)
        SET index TO 0
        WHILE index < limit
            IF (index MOD dividend) == 0
                container = container UNION {index}
            END IF
            SET index TO index + 1
        END WHILE
        RETURN container
    END FUNCTION

    accumulated_set = collect(11, integer_n, accumulated_set)
    accumulated_set = collect(13, integer_n, accumulated_set)
    
    SET assembled_string TO ""
    FOR element IN accumulated_set
        SET assembled_string TO assembled_string + TO_STRING(element)
    END FOR

    FUNCTION count_characters(target_string, target_char)
        SET accumulator TO 0
        SET pointer TO 0
        WHILE pointer < LENGTH(target_string)
            IF target_string[pointer] == target_char THEN
                accumulator = accumulator + 1
            END IF
            SET pointer TO pointer + 1
        END WHILE
        RETURN accumulator
    END FUNCTION

    RETURN count_characters(assembled_string, '7')
END FUNCTION
```