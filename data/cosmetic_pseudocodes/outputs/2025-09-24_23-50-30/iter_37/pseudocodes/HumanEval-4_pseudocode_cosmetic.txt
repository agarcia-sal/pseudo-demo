```
FUNCTION mean_absolute_deviation(sequence)
    DEFINE compute_mean(items) RETURNS number
        RETURN (REDUCE((a, b) -> a + b, items, 0)) / (COUNT(items))
    END

    DEFINE absolute_differences(items, average) RETURNS list of number
        RETURN MAP(items, (element) -> IF element < average THEN average - element ELSE element - average)
    END

    LET average_val BE compute_mean(sequence)
    LET deviations BE absolute_differences(sequence, average_val)
    LET total_deviation BE REDUCE((x, y) -> x + y, deviations, 0)
    LET mad_result BE total_deviation / COUNT(sequence)

    RETURN mad_result
END FUNCTION
```