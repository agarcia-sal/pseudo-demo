```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(value)
        SET str_val TO CONVERT value TO STRING
        SET rev_str TO EMPTY STRING
        SET idx TO LENGTH(str_val) - 1
        WHILE idx >= 0
            SET rev_str TO rev_str + str_val[idx]
            DECREMENT idx BY 1
        END WHILE
        RETURN (str_val = rev_str)
    END FUNCTION

    SET count_ev TO 0
    SET count_od TO 0

    FUNCTION process_number(k)
        IF k > n THEN RETURN
        IF (k % 2 != 0) AND is_palindrome(k) THEN
            SET count_od TO count_od + 1
        ELSE IF (k % 2 = 0) AND is_palindrome(k) THEN
            SET count_ev TO count_ev + 1
        END IF
        CALL process_number(k + 1)
    END FUNCTION

    CALL process_number(1)

    RETURN (count_ev, count_od)
END FUNCTION
```