```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        VAR multiplier_sign ← 1
        SWITCH
            CASE integer_value < 0:
                integer_value ← integer_value * (-1)
                multiplier_sign ← (-1)
        END SWITCH
        VAR chars_list ← SPLIT(STRINGIFY(integer_value))
        VAR digits_list ← MAP each character IN chars_list TO TO_INTEGER(character)
        IF multiplier_sign = (-1)
            digits_list[0] ← digits_list[0] * multiplier_sign
        END IF
        VAR total ← REDUCE addition OVER digits_list STARTING AT 0
        RETURN total
    END FUNCTION

    VAR sums_collection ← []
    VAR index ← 0
    WHILE index < LENGTH(array_of_integers)
        sums_collection APPEND digits_sum(array_of_integers[index])
        index ← index + 1
    END WHILE

    VAR positive_sums ← []
    FOR EACH value IN sums_collection
        IF value > 0
            positive_sums APPEND value
        END IF
    END FOR

    RETURN LENGTH(positive_sums)
END FUNCTION
```