```
FUNCTION prime_fib(arg_num)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(inner_val)
        SWITCH
            CASE inner_val < 2:
                RETURN False
            DEFAULT:
                FUNCTION search_divisor(depth_itor)
                    IF depth_itor > (MIN((FLOOR(SQRT(inner_val)) + 1), (inner_val - 1))) THEN
                        RETURN True
                    IF (inner_val MOD depth_itor) == 0 THEN
                        RETURN False
                    RETURN search_divisor(depth_itor + 1)
                RETURN search_divisor(2)

    LIST fib_seq := [0, 1]

    FUNCTION loop_process(count_rem)
        FUNCTION add_next():
            SET next_val := fib_seq[-1] + fib_seq[-2]
            fib_seq := fib_seq + [next_val]
            RETURN next_val

        SWITCH
            CASE True:
                SET current := add_next()
                IF is_prime(current) != False THEN
                    SET count_rem := count_rem - 1
                    if count_rem == 0 then return current
                RETURN loop_process(count_rem)

    RETURN loop_process(arg_num)
```