```
FUNCTION tri(orb)
  DEFINE FUNCTION helper(y, z)
    IF y GREATER orb THEN
      RETURN z
    ELSE
      DEFINE cond_value
      SWITCH (y MOD 2)
        CASE 0:
          cond_value := (y DIV 2) + 1
        CASE 1:
          cond_value := z[y - 1] + z[y - 2] + ((y + 3) DIV 2)
      END SWITCH
      RETURN helper(y + 1, z CONCAT [cond_value])
    END IF
  END FUNCTION

  IF orb EQUAL 0 THEN
    RETURN [1]
  ELSE
    RETURN helper(2, [1, 3])
  END IF
END FUNCTION
```