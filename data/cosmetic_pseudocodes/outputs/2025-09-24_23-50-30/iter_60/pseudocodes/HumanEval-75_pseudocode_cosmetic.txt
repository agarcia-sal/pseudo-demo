```
FUNCTION is_multiply_prime(xq)
    FUNCTION is_prime(bw)
        FUNCTION loop_prim(yk)
            IF yk GREATER_OR_EQUAL bw
                RETURN True
            SWITCH (bw MODULO yk = 0)
                CASE True
                    RETURN False
                CASE False
                    RETURN loop_prim(yk + 1)
        RETURN loop_prim(2)
    END FUNCTION
    
    FUNCTION loop_i(xv)
        IF xv GREATER 100
            RETURN False
        SWITCH (NOT is_prime(xv))
            CASE True
                RETURN loop_i(xv + 1)
            CASE False
                FUNCTION loop_j(kp)
                    IF kp GREATER 100
                        RETURN loop_i(xv + 1)
                    SWITCH (NOT is_prime(kp))
                        CASE True
                            RETURN loop_j(kp + 1)
                        CASE False
                            FUNCTION loop_k(uv)
                                IF uv GREATER 100
                                    RETURN loop_j(kp + 1)
                                SWITCH (NOT is_prime(uv))
                                    CASE True
                                        RETURN loop_k(uv + 1)
                                    CASE False
                                        SWITCH (xv * kp * uv = xq)
                                            CASE True
                                                RETURN True
                                            CASE False
                                                RETURN loop_k(uv + 1)
                            RETURN loop_k(2)
                RETURN loop_j(2)
    RETURN loop_i(2)
END FUNCTION
```