```
FUNCTION separate_paren_groups(alpha)
    DEFINE recurse(beta, gamma, delta, epsilon):
        IF epsilon IS EMPTY
            IF delta = 0 THEN
                RETURN beta
            ELSE
                RETURN beta
            END IF
        ELSE
            DEFINE zeta = FIRST(epsilon)
            DEFINE eta = REST(epsilon)
            IF zeta = '(' THEN
                SET theta = delta + (1 * 1)
                SET iota = gamma + [zeta]
                RETURN recurse(beta, iota, theta, eta)
            ELSE IF zeta = ')' THEN
                SET kappa = delta - (1 * 1)
                SET lambda = gamma + [zeta]
                IF kappa = 0 THEN
                    SET mu = beta + [CONCAT(lambda)]
                    RETURN recurse(mu, [], kappa, eta)
                ELSE
                    RETURN recurse(beta, lambda, kappa, eta)
                END IF
            ELSE
                RETURN recurse(beta, gamma, delta, eta)
            END IF
        END IF
    END DEFINE
    RETURN recurse([], [], 0, alpha)
END FUNCTION
```