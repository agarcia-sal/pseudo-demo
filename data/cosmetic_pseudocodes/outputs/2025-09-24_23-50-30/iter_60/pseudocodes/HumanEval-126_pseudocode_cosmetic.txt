```
FUNCTION is_sorted(param_alpha)
  DECLARE var_beta AS dictionary WITH keys FROM param_alpha AND values 0
  PROCEDURE proc_gamma(idx_delta)
    IF idx_delta EQUALS LENGTH(param_alpha) THEN
      RETURN
    END IF
    var_beta[param_alpha[idx_delta]] <- var_beta[param_alpha[idx_delta]] + 1
    proc_gamma(idx_delta + 1)
  END PROCEDURE
  proc_gamma(0)

  PROCEDURE proc_eta(lst_theta, idx_iota, acc_kappa)
    IF idx_iota EQUALS LENGTH(lst_theta) THEN
      RETURN acc_kappa
    END IF
    IF NOT (var_beta[lst_theta[idx_iota]] <= 2) THEN
      RETURN False
    END IF
    proc_eta(lst_theta, idx_iota + 1, acc_kappa)
  END PROCEDURE
  DECLARE var_lambda AS proc_eta(param_alpha, 0, True)
  IF var_lambda EQUALS False THEN
    RETURN False
  END IF

  PROCEDURE proc_mu(arr_nu, idx_xi, flag_omicron)
    IF idx_xi EQUALS LENGTH(arr_nu) THEN
      RETURN flag_omicron
    END IF
    IF NOT (arr_nu[idx_xi - 1] <= arr_nu[idx_xi]) THEN
      flag_omicron <- False
    END IF
    proc_mu(arr_nu, idx_xi + 1, flag_omicron)
  END PROCEDURE
  RETURN proc_mu(param_alpha, 1, True)
END FUNCTION
```