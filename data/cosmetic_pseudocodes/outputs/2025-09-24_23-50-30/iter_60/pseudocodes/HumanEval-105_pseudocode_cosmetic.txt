```
FUNCTION by_length(spectrum)
	TYPE map TO {
		ONE: 1,
		TWO: 2,
		THREE: 3,
		FOUR: 4,
		FIVE: 5,
		SIX: 6,
		SEVEN: 7,
		EIGHT: 8,
		NINE: 9
	}
	TYPE dict_strings TO {
		1: "One",
		2: "Two",
		3: "Three",
		4: "Four",
		5: "Five",
		6: "Six",
		7: "Seven",
		8: "Eight",
		9: "Nine"
	}

	PROCEDURE recursive_map_transform(internal_list, accum)
		IF internal_list == EMPTY LIST THEN
			RETURN accum
		ELSE
			SET idx TO HEAD(internal_list)
			SET tail_list TO TAIL(internal_list)
			IF idx IN dict_strings THEN
				RETURN recursive_map_transform(tail_list, APPEND(accum, dict_strings[idx]))
			ELSE
				RETURN recursive_map_transform(tail_list, accum)
			END IF
		END IF
	END PROCEDURE

	PROCEDURE quicksort_desc(unsorted_arr)
		IF unsorted_arr == EMPTY LIST THEN
			RETURN EMPTY LIST
		ELSE
			SET first_element TO HEAD(unsorted_arr)
			SET rest TO TAIL(unsorted_arr)
			SET greater_to_eq TO FILTER rest WITH (x) -> x >= first_element
			SET less_than TO FILTER rest WITH (x) -> x < first_element
			RETURN CONCAT(quicksort_desc(greater_to_eq), [first_element], quicksort_desc(less_than))
		END IF
	END PROCEDURE

	RETURN recursive_map_transform(quicksort_desc(spectrum), [])
END FUNCTION
```