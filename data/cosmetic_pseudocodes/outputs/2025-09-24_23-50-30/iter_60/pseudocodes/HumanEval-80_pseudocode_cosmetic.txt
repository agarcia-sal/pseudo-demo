```
FUNCTION is_happy(xyZ)
  DEFINE tailRecursion(etaP, oLuQ)
    CASE oLuQ >= LENGTH OF etaP - 2 OF
      True: RETURN True
      False:
        DEFINE aBvW = (etaP[oLuQ] = etaP[oLuQ + 1]) OR (etaP[oLuQ + 1] = etaP[oLuQ + 2]) OR (etaP[oLuQ] = etaP[oLuQ + 2])
        SWITCH aBvW
          CASE True: RETURN False
          CASE False: RETURN tailRecursion(etaP, oLuQ + 1)
        END SWITCH
    END CASE
  END DEFINE

  IF LENGTH OF xyZ < 3 THEN RETURN False ELSE RETURN tailRecursion(xyZ, 0)
END FUNCTION
```