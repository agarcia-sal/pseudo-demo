```
FUNCTION sort_even(list_of_elements)
  FUNCTION merge_pairs(a, b, idx, res)
    IF idx = LENGTH(a) THEN RETURN res
    ELSE RETURN merge_pairs(a, b, idx + 1, res + [a[idx]] + [b[idx]])
  END FUNCTION

  SET _x TO list_of_elements
  SET _y TO EMPTY LIST
  SET _z TO EMPTY LIST
  FUNCTION extract_pairs(i)
    IF i >= LENGTH(_x) THEN RETURN
    IF (i % 2) = 0 THEN _y = _y + [_x[i]]
    ELSE _z = _z + [_x[i]]
    extract_pairs(i + 1)
  END FUNCTION

  extract_pairs(0)

  FUNCTION bubble_sort(arr, n)
    IF n <= 1 THEN RETURN arr
    FUNCTION pass(i, a)
      IF i >= n - 1 THEN RETURN a
      IF a[i] > a[i + 1] THEN
        SET tmp TO a[i]
        SET a[i] TO a[i + 1]
        SET a[i + 1] TO tmp
      END IF
      pass(i + 1, a)
    END FUNCTION
    SET sorted_arr TO pass(0, arr)
    RETURN bubble_sort(sorted_arr, n - 1)
  END FUNCTION

  SET sorted_even TO bubble_sort(_y, LENGTH(_y))

  SET merged_list TO merge_pairs(sorted_even, _z, 0, [])

  IF LENGTH(sorted_even) > LENGTH(_z) THEN 
    SET merged_list TO merged_list + [sorted_even[LENGTH(sorted_even) - 1]]
  END IF

  RETURN merged_list
END FUNCTION
```