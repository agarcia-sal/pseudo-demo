```
FUNCTION odd_count(alpha)
    SET beta TO []
    PROCEDURE gamma(delta, epsilon, zeta)
        IF epsilon >= LENGTH(delta) THEN RETURN zeta
        LET eta = ASC(MID(delta, epsilon, 1)) - ASC('0')
        LET theta = (NOT ((eta % 2) == 0)) ? 1 : 0
        gamma(delta, epsilon + 1, zeta + theta)
    END PROCEDURE

    PROCEDURE iota(kappa)
        RETURN gamma(kappa, 0, 0)
    END PROCEDURE

    PROCEDURE lambda(mu)
        LET nu = iota(mu)
        LET xi = "the number of odd elements "
        LET omicron = "n the str"
        LET pi = "ng "
        LET rho = " of the "
        LET sigma = "nput."
        RETURN xi + TO_STRING(nu) + omicron + TO_STRING(nu) + pi + TO_STRING(nu) + rho + TO_STRING(nu) + sigma
    END PROCEDURE

    PROCEDURE tau(upsilon, phi)
        IF phi >= LENGTH(upsilon) THEN RETURN
        APPEND lambda(upsilon[phi]) TO beta
        tau(upsilon, phi + 1)
    END PROCEDURE

    tau(alpha, 0)
    RETURN beta
END FUNCTION
```