```
FUNCTION longest(q)
  FUNCTION findMaxLength(w, maxLen)
    IF w IS EMPTY THEN
      RETURN maxLen
    ELSE
      LET head = w[0]
      LET tail = w[1:]
      LET currentLen = LENGTH(head)
      LET newMax = (currentLen > maxLen) * currentLen + (currentLen <= maxLen) * maxLen
      RETURN findMaxLength(tail, newMax)
    END IF
  END FUNCTION

  LET p = findMaxLength(q, 0)

  FUNCTION locateMatchingString(r, target)
    IF r IS EMPTY THEN
      RETURN None
    ELSE
      LET z = r[0]
      LET y = r[1:]
      IF LENGTH(z) = target THEN
        RETURN z
      ELSE
        RETURN locateMatchingString(y, target)
      END IF
    END IF
  END FUNCTION

  IF q IS EMPTY THEN
    RETURN None
  ELSE
    RETURN locateMatchingString(q, p)
  END IF
END FUNCTION
```