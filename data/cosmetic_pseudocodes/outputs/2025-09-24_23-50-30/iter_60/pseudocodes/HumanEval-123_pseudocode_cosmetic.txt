```
FUNCTION get_odd_collatz(p)
  PROCEDURE loop(q, r)
    SWITCH TRUE
      CASE q <= 1:
        RETURN r
      CASE q MODULO 2 = 0:
        RETURN loop(q DIVIDED BY 2, r)
      CASE OTHERWISE:
        RETURN loop(q MULTIPLIED BY 3 PLUS 1, r APPENDED_WITH q MULTIPLIED BY 3 PLUS 1)
    END SWITCH
  END PROCEDURE

  SWITCH p MODULO 2 = 0
    CASE TRUE:
      LET s <- []
    CASE FALSE:
      LET s <- [p]
  END SWITCH
  
  LET t <- loop(p, s)
  
  PROCEDURE quicksort(u)
    IF LENGTH(u) <= 1 THEN
      RETURN u
    ELSE
      LET pivot <- u[0]
      LET left <- quicksort([x FOR x IN u AFTER 0 WHERE x < pivot])
      LET right <- quicksort([x FOR x IN u AFTER 0 WHERE x >= pivot])
      RETURN left + [pivot] + right
    END IF
  END PROCEDURE

  RETURN quicksort(t)
END FUNCTION
```