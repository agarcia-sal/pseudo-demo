```
FUNCTION unique(inputCollection)
    tempSet := EMPTY_HASH_COLLECTION
    FOR index FROM 0 TO LENGTH(inputCollection) - 1 DO
        tempSet[ inputCollection[index] ] := TRUE
    END FOR
    accumulator := EMPTY_ARRAY
    FOR key IN tempSet KEYS DO
        APPEND key TO accumulator
    END FOR
    DEFINE recursiveSort(arr, start, end)
        IF start >= end THEN RETURN END IF
        pivotIndex := start
        pivotValue := arr[pivotIndex]
        left := start + 1
        right := end
        WHILE left <= right DO
            IF arr[left] > pivotValue THEN
                SWAP arr[left], arr[right]
                right := right - 1
            ELSE
                left := left + 1
            END IF
        END WHILE
        SWAP arr[pivotIndex], arr[right]
        recursiveSort(arr, start, right - 1)
        recursiveSort(arr, right + 1, end)
    END DEFINE
    recursiveSort(accumulator, 0, LENGTH(accumulator) - 1)
    RETURN accumulator
END FUNCTION
```