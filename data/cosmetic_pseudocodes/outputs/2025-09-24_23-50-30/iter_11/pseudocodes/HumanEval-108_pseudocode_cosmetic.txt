```
FUNCTION count_nums(arr)
  FUNCTION digits_sum(num)
    sign_flag ← 1
    IF NOT (num >= 0) THEN
      sign_flag ← -1
      num ← 0 - num
    END IF

    digits_str ← STRINGIFY num
    digits_arr ← EMPTY ARRAY
    FOR i FROM 0 TO LENGTH OF digits_str - 1 DO
      digits_arr APPEND INTEGER OF digits_str[i]
    END FOR
    digits_arr[0] ← digits_arr[0] * sign_flag

    total ← 0
    idx ← 0
    WHILE idx < LENGTH OF digits_arr DO
      total ← total + digits_arr[idx]
      idx ← idx + 1
    END WHILE
    RETURN total
  END FUNCTION

  sums ← EMPTY ARRAY
  idx_outer ← 0
  WHILE idx_outer < LENGTH OF arr DO
    sums APPEND digits_sum(arr[idx_outer])
    idx_outer ← idx_outer + 1
  END WHILE

  positive_counts ← 0
  idx_filter ← 0
  WHILE idx_filter < LENGTH OF sums DO
    IF sums[idx_filter] > 0 THEN positive_counts ← positive_counts + 1 END IF
    idx_filter ← idx_filter + 1
  END WHILE

  RETURN positive_counts
END FUNCTION
```