```
FUNCTION sort_third(array_param)
  SET array_param TO array_param AS A NEW LIST
  SET temp_collection TO []
  SET pos_index TO 0
  WHILE pos_index < LENGTH(array_param)
    IF pos_index MOD 3 = 0 THEN
      APPEND array_param[pos_index] TO temp_collection
    END IF
    SET pos_index TO pos_index + 1
  END WHILE

  SET sorted_collection TO []
  FOR EACH element IN temp_collection DO
    APPEND element TO sorted_collection
  END FOR
  CALL sorted_collection.SORT ASCENDING

  PROCEDURE replace_elements(index_replace, values_replace)
    IF index_replace >= LENGTH(array_param) THEN RETURN
    END IF
    IF index_replace MOD 3 = 0 THEN
      SET array_param[index_replace] TO values_replace[0]
      SET values_replace TO values_replace[1:]
    END IF
    CALL replace_elements(index_replace + 1, values_replace)
  END PROCEDURE

  CALL replace_elements(0, sorted_collection)
  RETURN array_param
END FUNCTION
```