```
FUNCTION median(collection)
    DEFINE FUNCTION median_recursive(data, index)
        IF index = LENGTH(data) - 1 THEN 
            RETURN data[index]
        ELSE
            RETURN median_recursive(data, index + 1)
    END FUNCTION
    
    DEFINE FUNCTION median_even(lowData, highData, posA, posB)
        RETURN (lowData[posA] + highData[posB]) / 2.0
    END FUNCTION

    DEFINE FUNCTION median_iterative(sortedData)
        LET size = LENGTH(sortedData)
        LET half = size / 2
        SWITCH (size MOD 2)
            CASE 1:
                RETURN sortedData[half]
            CASE 0:
                RETURN median_even(sortedData, sortedData, half - 1, half)
        END SWITCH
    END FUNCTION

    LET sortedCopy = []
    FOR idx IN RANGE(0, LENGTH(collection))
        APPEND collection[idx] TO sortedCopy
    END FOR
    CALL sortedCopy = SORT(sortedCopy)

    RETURN median_iterative(sortedCopy)
END FUNCTION
```