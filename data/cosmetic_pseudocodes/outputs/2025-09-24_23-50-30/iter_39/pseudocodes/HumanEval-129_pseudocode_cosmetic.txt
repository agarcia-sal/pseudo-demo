```
FUNCTION minPath(inputGrid, countLimit)
  LET dimension BE LENGTH OF inputGrid
  LET threshold BE (dimension * dimension) + 1

  LET cursor1 BE 0
  WHILE cursor1 < dimension
    LET cursor2 BE 0
    WHILE cursor2 < dimension
      IF inputGrid[cursor1][cursor2] = 1 THEN
        LET neighbors BE []

        IF 0 <> cursor1 THEN
          neighbors <- neighbors + [inputGrid[cursor1 - 1][cursor2]]
        END IF

        IF 0 <> cursor2 THEN
          neighbors <- neighbors + [inputGrid[cursor1][cursor2 - 1]]
        END IF

        IF cursor1 <> (dimension - 1) THEN
          neighbors <- neighbors + [inputGrid[cursor1 + 1][cursor2]]
        END IF

        IF cursor2 <> (dimension - 1) THEN
          neighbors <- neighbors + [inputGrid[cursor1][cursor2 + 1]]
        END IF

        LET thresholdCandidate BE neighbors[0]
        LET index1 BE 1
        WHILE index1 < LENGTH OF neighbors
          IF neighbors[index1] < thresholdCandidate THEN
            thresholdCandidate <- neighbors[index1]
          END IF
          index1 <- index1 + 1
        END WHILE
        threshold <- thresholdCandidate
      END IF
      cursor2 <- cursor2 + 1
    END WHILE
    cursor1 <- cursor1 + 1
  END WHILE

  LET resultList BE []
  FOR iterator FROM 0 TO countLimit - 1
    IF (iterator % 2) = 0 THEN
      resultList <- resultList + [1]
    ELSE
      resultList <- resultList + [threshold]
    END IF
  END FOR

  RETURN resultList
END FUNCTION
```