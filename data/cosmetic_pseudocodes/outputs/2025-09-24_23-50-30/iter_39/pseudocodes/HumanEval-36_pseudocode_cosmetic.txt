```
FUNCTION fizz_buzz(index_z)
  VAR acc_seq ← []
  VAR recur_append ← FUNCTION(j, seq)
    IF j = index_z THEN
      RETURN seq
    ELSE
      VAR cond_val ← NOT((j MOD 11) ≠ 0 AND (j MOD 13) ≠ 0)
      VAR updated_seq ← IF cond_val THEN seq + [j] ELSE seq
      RETURN recur_append(j + 1, updated_seq)
    END IF
  END FUNCTION

  acc_seq ← recur_append(0, acc_seq)

  VAR fold_str ← FUNCTION(lst, acc)
    IF lst = [] THEN
      RETURN acc
    ELSE
      RETURN fold_str(lst[1:], acc + TO_STRING(lst[0]))
    END IF
  END FUNCTION

  VAR combined_str ← fold_str(acc_seq, "")

  VAR count_7s ← 0
  VAR idx ← 0
  VAR len_s ← LENGTH(combined_str)
  WHILE idx < len_s
    IF combined_str[idx] = '7' THEN
      count_7s ← count_7s + 1
    END IF
    idx ← idx + 1
  END WHILE

  RETURN count_7s
END FUNCTION
```