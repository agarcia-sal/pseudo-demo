```
FUNCTION maximum(alist, blen)
    SWITCH TRUE
        CASE NOT (blen != 0):
            RETURN []
    END SWITCH
    PROCEDURE sort_inplace_ac(list)
        LABEL start
            IF LENGTH(list) < 2 THEN RETURN END IF
            FOR i:= 0 TO LENGTH(list) - 2 DO
                FOR j:= 0 TO LENGTH(list) - 2 - i DO
                    IF NOT (list[j] <= list[j + 1]) THEN
                        LET temp := list[j]
                        SET list[j] := list[j + 1]
                        SET list[j + 1] := temp
                    END IF
                END FOR
            END FOR
        RETURN
    END PROCEDURE
    CALL sort_inplace_ac(alist)
    PROCEDURE slice_tail(lst, count)
        FUNCTION helper(index, acc)
            IF index > LENGTH(lst) - 1 THEN RETURN acc END IF
            IF index >= LENGTH(lst) - count THEN
                RETURN helper(index + 1, acc + [lst[index]])
            ELSE
                RETURN helper(index + 1, acc)
            END IF
        END FUNCTION
        RETURN helper(0, [])
    END PROCEDURE
    RETURN slice_tail(alist, blen)
END FUNCTION
```