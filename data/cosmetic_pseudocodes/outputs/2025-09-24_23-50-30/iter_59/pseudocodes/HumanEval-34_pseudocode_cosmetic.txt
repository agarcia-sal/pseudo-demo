```
FUNCTION unique(x1)
    FUNCTION x2(x3)
        IF NOT (x3 HAS ELEMENTS) THEN
            RETURN []
        ELSE
            RETURN [HEAD(x3)] + x2(FILTER(t -> t != HEAD(x3), TAIL(x3)))
        END IF
    END FUNCTION

    FUNCTION x4(x5)
        LABEL loop_start
        IF x5 IS EMPTY THEN
            RETURN []
        ELSE
            LET x6 = x5[0]
            LET x7 = FILTER(y -> y != x6, x5[1 TO END])
            RETURN [x6] + x4(x7)
        END IF
    END LABEL

    LET x8 = x4(LIST(x1))
    LET x9 = x8
    LABEL sort_loop
        LET x10 = TRUE
        LET x11 = 0
        WHILE x11 < LENGTH(x9) - 1 DO
            IF x9[x11] > x9[x11 + 1] THEN
                LET x12 = x9[x11]
                LET x13 = x9[x11 + 1]
                x9[x11] = x13
                x9[x11 + 1] = x12
                x10 = FALSE
            END IF
            x11 = x11 + 1
        END WHILE
        IF NOT x10 THEN GOTO sort_loop
    END LABEL

    RETURN x9
END FUNCTION
```