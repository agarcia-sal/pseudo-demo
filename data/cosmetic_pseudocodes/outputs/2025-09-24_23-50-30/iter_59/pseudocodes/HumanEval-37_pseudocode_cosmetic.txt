```
FUNCTION sort_even(arg1)
    SET arg2 TO NEW LIST
    SET arg3 TO NEW LIST
    FOR arg4 FROM 0 TO LENGTH(arg1) - 1 DO
        SWITCH (arg4 MOD 2)
            CASE 0:
                APPEND arg1[arg4] TO arg2
            CASE 1:
                APPEND arg1[arg4] TO arg3
        END SWITCH
    END FOR
    SET arg5 TO LENGTH(arg2)
    SET arg6 TO LENGTH(arg3)
    SET arg7 TO arg5 - 1
    PROCEDURE arg8(arr, low, high)
        WHILE low < high DO
            SET pivot TO arr[(low + high) DIV 2]
            SET i TO low
            SET j TO high
            REPEAT
                WHILE arr[i] < pivot DO
                    SET i TO i + 1
                END WHILE
                WHILE NOT (arr[j] < pivot) DO
                    SET j TO j - 1
                END WHILE
                IF i <= j THEN
                    SET temp TO arr[i]
                    SET arr[i] TO arr[j]
                    SET arr[j] TO temp
                    SET i TO i + 1
                    SET j TO j - 1
                END IF
            UNTIL i > j
            IF low < j THEN
                SET high TO j
            ELSE
                SET low TO i
            END IF
        END WHILE
    END PROCEDURE
    CALL arg8(arg2, 0, arg7)
    SET arg9 TO NEW LIST
    PROCEDURE arg10(listA, listB, index, lengthA, lengthB)
        IF index = lengthB THEN
            RETURN
        ELSE
            APPEND listA[index] TO arg9
            APPEND listB[index] TO arg9
            CALL arg10(listA, listB, index + 1, lengthA, lengthB)
        END IF
    END PROCEDURE
    CALL arg10(arg2, arg3, 0, arg5, arg6)
    IF NOT (arg5 <= arg6) THEN
        APPEND arg2[arg7] TO arg9
    END IF
    RETURN arg9
END FUNCTION
```