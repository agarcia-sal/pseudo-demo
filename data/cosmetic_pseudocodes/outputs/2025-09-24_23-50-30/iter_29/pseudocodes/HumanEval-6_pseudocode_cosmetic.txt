```
FUNCTION parse_nested_parens(str_input)
    FUNCTION parse_paren_group(sub_str)
        FUNCTION loop(index, curr, maxd)
            IF index = LENGTH(sub_str) THEN
                RETURN maxd
            ELSE
                SWITCH sub_str[index]
                    CASE '(':
                        RETURN loop(index + 1, curr + 1, (curr + 1 > maxd) ? curr + 1 : maxd)
                    DEFAULT:
                        RETURN loop(index + 1, curr - 1, maxd)
                END SWITCH
            END IF
        END FUNCTION
        RETURN loop(0, 0, 0)
    END FUNCTION

    SET tokens TO FILTER((x) -> x â‰  "", SPLIT(str_input, " "))
    RETURN MAP(tokens, (t) -> parse_paren_group(t))
END FUNCTION
```