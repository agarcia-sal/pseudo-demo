```
FUNCTION select_words(string_s, natural_number_n)
    SET accumulator TO empty list
    DEFINE FUNCTION count_consonants(word, pos, acc)
        IF pos GREATER_OR_EQUAL LENGTH(word) THEN
            RETURN acc
        ELSE
            SET ch TO LOWERCASE(character AT word[pos])
            SET is_cons TO NOT (ch EQUALS "a" OR ch EQUALS "e" OR ch EQUALS "i" OR ch EQUALS "o" OR ch EQUALS "u")
            RETURN count_consonants(word, pos + 1, acc + (1 IF is_cons ELSE 0))
        END IF
    END FUNCTION

    DEFINE FUNCTION process_words(words, idx)
        IF idx GREATER_OR_EQUAL LENGTH(words) THEN
            RETURN
        ELSE
            SET current_word TO words[idx]
            SET cons_count TO count_consonants(current_word, 0, 0)
            SWITCH cons_count = natural_number_n
                CASE TRUE:
                    APPEND current_word TO accumulator
                    BREAK
                CASE FALSE:
                    BREAK
            END SWITCH
            process_words(words, idx + 1)
        END IF
    END FUNCTION

    SET split_list TO SPLIT string_s BY " "
    process_words(split_list, 0)
    RETURN accumulator
END FUNCTION
```