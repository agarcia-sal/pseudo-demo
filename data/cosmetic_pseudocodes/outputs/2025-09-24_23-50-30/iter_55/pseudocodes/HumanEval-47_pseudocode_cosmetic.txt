```
FUNCTION median(sequence)
    PROCEDURE sort_and_return(index_accumulator)
        IF index_accumulator > LENGTH(sequence) - 1 THEN RETURN
        IF sequence[index_accumulator] > sequence[index_accumulator + 1] THEN
            SWAP sequence[index_accumulator], sequence[index_accumulator + 1]
        ENDIF
        sort_and_return(index_accumulator + 1)
    END PROCEDURE

    PROCEDURE bubble_pass(counter, max_count)
        IF counter >= max_count THEN RETURN
        sort_and_return(0)
        bubble_pass(counter + 1, max_count)
    END PROCEDURE

    bubble_pass(0, LENGTH(sequence) - 1)

    SET total_items TO LENGTH(sequence)
    SET half_point TO total_items / 2

    SWITCH (total_items % 2)
        CASE 1:
            RETURN sequence[half_point]
        CASE 0:
            RETURN (sequence[half_point - 1] + sequence[half_point]) / 2.0
    END SWITCH
END FUNCTION
```