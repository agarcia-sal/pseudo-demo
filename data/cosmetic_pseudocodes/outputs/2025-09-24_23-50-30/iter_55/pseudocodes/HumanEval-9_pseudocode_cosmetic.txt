```
FUNCTION rolling_max(sequence_of_values)
	DEFINE inner_runner(position, current_limit, aggregates) =
		WHEN position EQUALS LENGTH(sequence_of_values)
			RETURN aggregates
		WHEN current_limit IS None
			CALL inner_runner(position + 1, sequence_of_values[position], aggregates + [sequence_of_values[position]])
		ELSE
			LET next_limit = IF current_limit > sequence_of_values[position] THEN current_limit ELSE sequence_of_values[position]
			CALL inner_runner(position + 1, next_limit, aggregates + [next_limit])
		END WHEN
	END DEFINE

	RETURN inner_runner(0, None, [])
END FUNCTION
```