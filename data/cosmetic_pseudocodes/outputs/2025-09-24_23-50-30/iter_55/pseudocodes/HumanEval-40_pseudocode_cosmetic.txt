```
FUNCTION triples_sum_to_zero(sequence)
    PROCEDURE helper_loop_a(counter_a)
        IF counter_a >= LENGTH(sequence) THEN 
            RETURN False 
        ELSE 
            PROCEDURE helper_loop_b(counter_b)
                IF counter_b >= LENGTH(sequence) THEN 
                    RETURN helper_loop_a(counter_a + 1)
                ELSE 
                    PROCEDURE helper_loop_c(counter_c)
                        IF counter_c >= LENGTH(sequence) THEN 
                            RETURN helper_loop_b(counter_b + 1)
                        ELSE 
                            SWITCH ((sequence AT counter_a) + (sequence AT counter_b) + (sequence AT counter_c) = 0)
                                CASE True:
                                    RETURN True
                                CASE False:
                                    RETURN helper_loop_c(counter_c + 1)
                            END SWITCH
                    END PROCEDURE
                    RETURN helper_loop_c(counter_b + 1)
                END IF
            END PROCEDURE
            RETURN helper_loop_b(counter_a + 1)
        END IF
    END PROCEDURE

    RETURN helper_loop_a(0)
END FUNCTION
```