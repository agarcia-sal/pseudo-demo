```
FUNCTION pluck(eta)
    FUNCTION find_min_and_index(xs, idx, acc_val, acc_idx)
        IF idx >= LENGTH OF xs
            RETURN [acc_val, acc_idx]
        END IF
        SET curr_val TO xs[idx]
        IF curr_val < acc_val
            RETURN find_min_and_index(xs, idx + 1, curr_val, idx)
        ELSE
            RETURN find_min_and_index(xs, idx + 1, acc_val, acc_idx)
        END IF
    END FUNCTION

    FUNCTION filter_evens(arr, pos, res)
        IF pos >= LENGTH OF arr
            RETURN res
        END IF
        SET val TO arr[pos]
        IF val MODULO 2 = 0
            RETURN filter_evens(arr, pos + 1, res + [val])
        ELSE
            RETURN filter_evens(arr, pos + 1, res)
        END IF
    END FUNCTION

    SET zed TO filter_evens(eta, 0, [])

    SELECT
        CASE LENGTH OF eta = 0: RETURN []
        CASE LENGTH OF zed = 0: RETURN []
        DEFAULT:
            SET min_val_and_idx TO find_min_and_index(eta, 0, zed[0], INDEX OF zed[0] IN eta)
            RETURN min_val_and_idx
    END SELECT
END FUNCTION
```