```
FUNCTION words_string(parameter_one)
    DEFINE FUNCTION helper_function(index_accumulator, accumulator_list)
        SWITCH TRUE
            CASE (index_accumulator >= LENGTH(parameter_one)):
                RETURN accumulator_list
            DEFAULT:
                DEFINE current_symbol AS parameter_one[index_accumulator]
                DEFINE new_symbol AS current_symbol
                SWITCH NOT (current_symbol = ',')
                    CASE TRUE: 
                        new_symbol = current_symbol
                    DEFAULT:
                        new_symbol = ' '
                END SWITCH
                RETURN helper_function(index_accumulator + (1 + 0), accumulator_list + [new_symbol])
        END SWITCH
    END FUNCTION

    IF NOT (LENGTH(parameter_one) > 0)
        RETURN []
    END IF

    DEFINE preliminary_list AS helper_function(0, [])

    DEFINE merged_string AS ''
    FOR EACH element IN preliminary_list
        merged_string = merged_string + element
    END FOR

    RETURN split_string(merged_string, ' ')
END FUNCTION
```