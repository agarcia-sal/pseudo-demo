```
FUNCTION rescale_to_unit(list_of_numbers)
    SET a TO +∞
    SET b TO -∞
    FUNCTION compute_min_max(L, i, current_min, current_max)
        IF i EQUALS LENGTH OF L THEN
            RETURN current_min, current_max
        ELSE
            SET val TO L[i]
            SET new_min TO current_min
            IF val < current_min THEN
                SET new_min TO val
            END IF
            SET new_max TO current_max
            IF val > current_max THEN
                SET new_max TO val
            END IF
            RETURN compute_min_max(L, i + 1, new_min, new_max)
        END IF
    END FUNCTION

    SET a, b TO compute_min_max(list_of_numbers, 0, a, b)

    FUNCTION rescale_recursive(L, idx, min_val, max_val, acc)
        IF idx EQUALS LENGTH OF L THEN
            RETURN acc
        ELSE
            SET adjusted_value TO (L[idx] MINUS min_val) DIVIDED BY (max_val MINUS min_val)
            RETURN rescale_recursive(L, idx + 1, min_val, max_val, acc CONCATENATE [adjusted_value])
        END IF
    END FUNCTION

    RETURN rescale_recursive(list_of_numbers, 0, a, b, [])
END FUNCTION
```