```
FUNCTION largest_prime_factor(n)
    FUNCTION is_prime(m)
        IF NOT (m GREATER THAN OR EQUAL TO 2) THEN
            RETURN False
        ENDIF

        FUNCTION check_divisor(x, y)
            IF NOT (x LESS THAN y) THEN
                RETURN True
            ELSE
                SWITCH (NOT (m MODULO x NOT EQUAL TO 0))
                    CASE True:
                        RETURN False
                    CASE False:
                        RETURN check_divisor(x + 1, y)
                ENDSWITCH
            ENDIF
        END FUNCTION

        RETURN check_divisor(2, m)
    END FUNCTION

    FUNCTION loop_over_candidates(p, q)
        IF NOT (p LESS THAN OR EQUAL TO q) THEN
            RETURN 1
        ELSE
            IF (n MODULO p EQUALS 0) THEN
                IF is_prime(p) THEN
                    RETURN MAXIMUM OF p AND loop_over_candidates(p + 1, q)
                ELSE
                    RETURN loop_over_candidates(p + 1, q)
                ENDIF
            ELSE
                RETURN loop_over_candidates(p + 1, q)
            ENDIF
        ENDIF
    END FUNCTION

    RETURN loop_over_candidates(2, n)
END FUNCTION
```