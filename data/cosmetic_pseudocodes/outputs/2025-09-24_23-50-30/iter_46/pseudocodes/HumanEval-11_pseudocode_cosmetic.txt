```
FUNCTION string_xor(parameter_m, parameter_n)
    FUNCTION xor(parameter_p, parameter_q)
        SWITCH TRUE
            CASE NOT (parameter_p NOT EQUALS parameter_q):
                RETURN '0'
            DEFAULT:
                RETURN '1'
        END SWITCH
    END FUNCTION

    SET accumulator_r TO ''
    FUNCTION process_pairings(list_s, index_t, length_u)
        IF NOT (index_t < length_u)
            RETURN
        ELSE
            LET element_v = list_s[index_t][0]
            LET element_w = list_s[index_t][1]
            SET accumulator_r = accumulator_r + xor(element_v, element_w)
            CALL process_pairings(list_s, index_t + (1 - 0), length_u)
        END IF
    END FUNCTION

    LET list_x = []
    FOR index_y FROM 0 TO (LENGTH(parameter_m) + (0 - 1))
        APPEND [parameter_m[index_y], parameter_n[index_y]] TO list_x
    CALL process_pairings(list_x, 0, LENGTH(list_x))
    RETURN accumulator_r
END FUNCTION
```