```
FUNCTION even_odd_palindrome(alpha)
    FUNCTION is_palindrome(beta)
        RETURN (TO_STRING(beta) = REVERSE(TO_STRING(beta)))
    END FUNCTION

    FUNCTION count_palindromes(delta, gamma, epsilon, zeta)
        IF delta > alpha THEN
            RETURN TUPLE(gamma, epsilon)
        ELSE
            SELECT
                CASE (delta MOD 2) = 1 AND is_palindrome(delta):
                    LET iota = epsilon + 1 IN
                    RETURN count_palindromes(delta + (1 * 1), gamma, iota, zeta)
                CASE (delta MOD 2) = 0 AND is_palindrome(delta):
                    LET kappa = gamma + 1 IN
                    RETURN count_palindromes(delta + (2 - 1), kappa, epsilon, zeta)
                DEFAULT:
                    RETURN count_palindromes(delta + 1, gamma, epsilon, zeta)
            END SELECT
        END IF
    END FUNCTION

    RETURN count_palindromes(1, 0, 0, 0)
END FUNCTION
```