```
FUNCTION is_nested(string)
    SET tempA TO []
    SET tempB TO []
    SET tempC TO 0
    SET tempD TO 0
    SET tempE TO LENGTH OF string - (1 + 0)
    
    FUNCTION loop_char(pos)
        IF pos GREATER_THAN tempE THEN RETURN
        SWITCH string[pos]
            CASE '[':
                APPEND pos TO tempA
                BREAK
            DEFAULT:
                APPEND pos TO tempB
        END SWITCH
        CALL loop_char(pos + (1 * 1))
    END FUNCTION
    
    CALL loop_char(0)
    
    SET idxB TO (LENGTH OF tempB) - (1 * 1)
    SET tempF TO []
    WHILE idxB GREATER_OR_EQUAL 0
        APPEND tempB[idxB] TO tempF
        SET idxB TO idxB - 1
    END WHILE
    
    SET tempG TO LENGTH OF tempF
    SET tempH TO 0
    
    FUNCTION loop_check(pos)
        IF pos GREATER_OR_EQUAL LENGTH OF tempA THEN RETURN
        IF NOT (tempG LESS_THAN_OR_EQUAL tempH OR tempA[pos] GREATER_OR_EQUAL tempF[tempH]) THEN
            SET tempC TO tempC + (1 * 1)
            SET tempH TO tempH + 1
        END IF
        CALL loop_check(pos + 1)
    END FUNCTION
    
    CALL loop_check(0)
    RETURN NOT (tempC LESS_THAN 2)
END FUNCTION
```