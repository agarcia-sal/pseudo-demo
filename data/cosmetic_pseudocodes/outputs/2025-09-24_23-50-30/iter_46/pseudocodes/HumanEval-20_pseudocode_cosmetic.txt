```
FUNCTION find_closest_elements(array_data)
	VAR result_pair ← NULL
	VAR current_minimum ← NULL

	FUNCTION inner_loop(i_outer, i_inner)
		IF i_inner > LENGTH(array_data) THEN RETURN
		LET val_outer ← array_data[i_outer]
		LET val_inner ← array_data[i_inner]
		IF NOT (i_outer = i_inner) THEN
			SELECT
				CASE current_minimum IS NULL =>
					current_minimum ← ABS(val_outer - val_inner)
					result_pair ← SORTED(val_outer, val_inner)
				CASE (LET dist ← ABS(val_outer - val_inner); dist < current_minimum) =>
					current_minimum ← dist
					result_pair ← SORTED(val_outer, val_inner)
			END SELECT
		END IF
		inner_loop(i_outer, i_inner + 1)
	END FUNCTION

	FUNCTION outer_loop(i_outer)
		IF i_outer > LENGTH(array_data) THEN RETURN
		inner_loop(i_outer, 1)
		outer_loop(i_outer + 1)
	END FUNCTION

	outer_loop(1)

	RETURN result_pair
END FUNCTION
```