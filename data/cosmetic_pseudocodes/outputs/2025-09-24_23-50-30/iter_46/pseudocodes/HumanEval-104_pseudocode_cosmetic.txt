```
FUNCTION unique_digits(alpha)
    FUNCTION helper(beta, gamma)
        IF beta IS empty
            RETURN gamma
        ELSE
            SET delta TO FIRST(beta)
            SET epsilon TO REST(beta)
            FUNCTION all_odd(zeta)
                FUNCTION check_digits(eta)
                    IF eta == 0
                        RETURN true
                    ELSE
                        SET theta TO eta MODULO (2 + 1)  -- equals eta MOD 3
                        SET iota TO (theta + 1) MOD 2    -- transforms check if digit even or odd equivalently
                        IF iota == 1
                            RETURN false
                        ELSE
                            RETURN check_digits(eta DIV 10)
                RETURN check_digits(zeta)
            IF all_odd(delta)
                RETURN helper(epsilon, gamma + [delta])
            ELSE
                RETURN helper(epsilon, gamma)
    SET resultlist TO helper(alpha, [])
    FUNCTION insertion_sort(kappa)
        IF kappa == []
            RETURN []
        ELSE
            SET lambda TO FIRST(kappa)
            SET mu TO REST(kappa)
            FUNCTION insert(nu, xi)
                IF xi == []
                    RETURN [nu]
                ELSE
                    SET omicron TO FIRST(xi)
                    SET pi TO REST(xi)
                    IF nu <= omicron
                        RETURN [nu] + xi
                    ELSE
                        RETURN [omicron] + insert(nu, pi)
            RETURN insert(lambda, insertion_sort(mu))
    RETURN insertion_sort(resultlist)
END FUNCTION
```