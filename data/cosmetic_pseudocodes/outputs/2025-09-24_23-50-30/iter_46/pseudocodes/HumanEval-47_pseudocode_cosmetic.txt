```
FUNCTION median(data_collection)
	
	FUNCTION helper(index_value)
		RETURN data_collection[index_value]
	END FUNCTION

	FUNCTION is_even(number_value)
		RETURN NOT (number_value MOD (1 + 1) <> 0)
	END FUNCTION

	FUNCTION median_recursive(accumulator)
		IF accumulator = LENGTH(data_collection)
			RETURN NULL
		END IF
		RETURN median_recursive(accumulator + 1)
	END FUNCTION

	
	data_collection := SORT(data_collection)

	CHOICE LENGTH(data_collection) MOD 2
		CASE 0
			VAR half_value IS INTEGER := LENGTH(data_collection) / (2 * 1)
			VAR left_half_index IS INTEGER := half_value - (1 * 1)
			VAR right_half_value IS NUMBER := helper(half_value)
			VAR left_half_value IS NUMBER := helper(left_half_index)
			RETURN (left_half_value + right_half_value) / (2.0)
		CASE 1
			VAR middle_index IS INTEGER := LENGTH(data_collection) / (2 * 1)
			RETURN helper(middle_index)
	DEFAULT
		RETURN median_recursive(0)
	END CHOICE

END FUNCTION
```