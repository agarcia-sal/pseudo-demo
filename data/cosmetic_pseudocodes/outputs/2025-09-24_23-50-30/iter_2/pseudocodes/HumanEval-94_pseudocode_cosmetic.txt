```
FUNCTION skjkasdkd(list_of_integers)
    FUNCTION isPrime(integer_value)
        IF integer_value <= 1 THEN RETURN False
        SET divisor TO INTEGER PART OF SQUARE ROOT OF integer_value + 1
        RETURN not (EXISTS k IN RANGE(2, divisor) WHERE integer_value MODULO k = 0)
    END FUNCTION

    FUNCTION findMaxPrimeRec(i, current_max)
        IF i = LENGTH OF list_of_integers THEN RETURN current_max
        LET current_num BE list_of_integers AT i
        IF NOT (current_num <= current_max OR NOT isPrime(current_num)) THEN
            SET current_max TO current_num
        END IF
        RETURN findMaxPrimeRec(i + 1, current_max)
    END FUNCTION

    LET max_prime_value BE findMaxPrimeRec(0, 0)

    FUNCTION digitSum(n, acc)
        IF n = 0 THEN RETURN acc
        RETURN digitSum(n DIV 10, acc + (n MOD 10))
    END FUNCTION

    RETURN digitSum(max_prime_value, 0)
END FUNCTION
```