```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        DECLARE s AS STRING = TO_STRING(number)
        DECLARE left AS INTEGER = 0
        DECLARE right AS INTEGER = LENGTH(s) - 1
        WHILE left < right
            IF s[left] != s[right]
                RETURN FALSE
            left = left + 1
            right = right - 1
        END WHILE
        RETURN TRUE
    END FUNCTION

    DECLARE count_even AS INTEGER = 0
    DECLARE count_odd AS INTEGER = 0

    DECLARE current AS INTEGER = n
    WHILE current > 0
        IF NOT (current MOD 2 = 0) AND is_palindrome(current)
            count_odd = count_odd + 1
        ELSE IF (current MOD 2 = 0) AND is_palindrome(current)
            count_even = count_even + 1
        END IF
        current = current - 1
    END WHILE

    RETURN (count_even, count_odd)
END FUNCTION
```