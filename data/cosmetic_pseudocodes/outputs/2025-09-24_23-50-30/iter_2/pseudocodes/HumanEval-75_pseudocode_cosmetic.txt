```
FUNCTION is_multiply_prime(a)
    FUNCTION is_prime(n)
        FUNCTION check_divisor(d)
            IF d >= n THEN
                RETURN True
            ELSE IF n MOD d = 0 THEN
                RETURN False
            ELSE
                RETURN check_divisor(d + 1)
        END FUNCTION
        RETURN check_divisor(2)
    END FUNCTION

    SET primes TO []
    SET x TO 100
    SET y TO 2
    WHILE y <= x
        IF is_prime(y) = True THEN
            primes APPEND y
        y += 1

    FUNCTION find_combination(index1, index2, index3)
        IF index1 >= LENGTH OF primes THEN
            RETURN False
        IF index2 >= LENGTH OF primes THEN
            RETURN find_combination(index1 + 1, 0, 0)
        IF index3 >= LENGTH OF primes THEN
            RETURN find_combination(index1, index2 + 1, 0)
        IF primes[index1] * primes[index2] * primes[index3] = a THEN
            RETURN True
        RETURN find_combination(index1, index2, index3 + 1)

    RETURN find_combination(0, 0, 0)
END FUNCTION
```