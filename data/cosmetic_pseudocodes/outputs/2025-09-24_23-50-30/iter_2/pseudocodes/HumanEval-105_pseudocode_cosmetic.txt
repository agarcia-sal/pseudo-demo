```
FUNCTION by_length(array_of_integers)
    SET num_names TO [
        (9, "Nine"), (8, "Eight"), (7, "Seven"), (6, "Six"),
        (5, "Five"), (4, "Four"), (3, "Three"), (2, "Two"), (1, "One")
    ]
    DEFINE recurse_map(idx, sorted_nums, acc)
        IF idx >= LENGTH(sorted_nums)
            RETURN acc
        ELSE
            SET current TO sorted_nums[idx]
            SET found_name TO NULL
            FOR pair IN num_names
                IF pair[0] EQUALS current
                    SET found_name TO pair[1]
                    BREAK
            IF found_name IS NOT NULL
                CALL recurse_map(idx + 1, sorted_nums, acc + [found_name])
            ELSE
                CALL recurse_map(idx + 1, sorted_nums, acc)
    SET desc_sorted TO SORTED(array_of_integers)
    SET desc_sorted TO REVERSED(desc_sorted)
    RETURN recurse_map(0, desc_sorted, [])
END FUNCTION
```