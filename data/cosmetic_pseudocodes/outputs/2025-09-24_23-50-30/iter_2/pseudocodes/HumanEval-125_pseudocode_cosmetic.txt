```
FUNCTION split_words(text)
    IF NOT (space character NOT IN text AND comma character NOT IN text) THEN
        IF space character IN text THEN
            RETURN [word FOR word IN text SPLIT BY WHITESPACE]
        ELSE
            DECLARE replaced_text AS EMPTY STRING
            FOR index FROM LENGTH(text)-1 DOWNTO 0 DO
                IF text[index] = comma character THEN
                    replaced_text = replaced_text + space character
                ELSE
                    replaced_text = replaced_text + text[index]
            END FOR
            RETURN [reversed_word FOR reversed_word IN (replaced_text REVERSED) SPLIT BY WHITESPACE]
        END IF
    ELSE
        DECLARE lowercase_chars AS EMPTY LIST
        DEFINE recursive_check(pos, acc):
            IF pos >= LENGTH(text):
                RETURN acc
            ELSE
                current_char = text[pos]
                IF current_char IS lowercase AND ASCII(current_char) MOD 2 = 0 THEN
                    RETURN recursive_check(pos + 1, acc + 1)
                ELSE
                    RETURN recursive_check(pos + 1, acc)
                END IF
        END FUNCTION
        RETURN recursive_check(0, 0)
    END IF
END FUNCTION
```