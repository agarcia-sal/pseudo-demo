```
FUNCTION find_closest_elements(list_of_numbers)
    LET closest_pair = None
    LET minimum_distance = None

    LET length = LENGTH(list_of_numbers)

    DEFINE recurse(i)
        IF i < 0 THEN
            RETURN
        END IF

        DEFINE inner_recurse(j)
            IF j < 0 THEN
                RETURN
            END IF

            IF i IS NOT j THEN
                LET current_distance = ABS(list_of_numbers[i] - list_of_numbers[j])
                IF minimum_distance IS None OR current_distance < minimum_distance THEN
                    minimum_distance = current_distance
                    closest_pair = (list_of_numbers[i], list_of_numbers[j])
                    IF closest_pair[0] > closest_pair[1] THEN
                        closest_pair = (closest_pair[1], closest_pair[0])
                    END IF
                END IF
            END IF

            inner_recurse(j - 1)
        END DEFINE

        inner_recurse(length - 1)
        recurse(i - 1)
    END DEFINE

    recurse(length - 1)

    RETURN closest_pair
END FUNCTION
```