```
FUNCTION fizz_buzz(integer_n)
    DEFINE FUNCTION gather_divisible(k, acc)
        IF k < 0 THEN RETURN acc END IF
        IF NOT((k MOD 11) != 0 AND (k MOD 13) != 0) THEN
            RETURN gather_divisible(k - 1, [k] + acc)
        ELSE
            RETURN gather_divisible(k - 1, acc)
        END IF
    END FUNCTION

    SET numbers_collected TO gather_divisible(integer_n - 1, [])

    DEFINE FUNCTION build_string(lst)
        IF lst = [] THEN RETURN "" END IF
        RETURN build_string(lst[1:]) + TO_STRING(lst[0])
    END FUNCTION

    SET big_str TO build_string(numbers_collected)

    DEFINE FUNCTION count_char(str, idx, total)
        IF idx >= LENGTH(str) THEN RETURN total END IF
        IF str[idx] != '7' THEN
            RETURN count_char(str, idx + 1, total)
        ELSE
            RETURN count_char(str, idx + 1, total + 1)
        END IF
    END FUNCTION

    RETURN count_char(big_str, 0, 0)
END FUNCTION
```