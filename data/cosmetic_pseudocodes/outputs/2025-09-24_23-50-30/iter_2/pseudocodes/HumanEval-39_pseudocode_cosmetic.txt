```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module AS mf

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p >= 2)
            RETURN False
        SET limit TO MIN(integer_p - 1, INTEGER(mf.sqrt(integer_p)) + 1)
        SET divisors TO SET OF NUMBERS FROM limit DOWNTO 2
        FUNCTION check_divisor(divisors_set)
            IF divisors_set IS EMPTY
                RETURN True
            SELECT any_element FROM divisors_set
            IF integer_p MODULO any_element == 0
                RETURN False
            RETURN check_divisor(divisors_set WITHOUT any_element)
        END FUNCTION
        RETURN check_divisor(divisors)
    END FUNCTION

    SET fib_seq TO [0,1]

    FUNCTION extend_and_check(k)
        APPEND fib_seq[k] + fib_seq[k-1] TO fib_seq
        IF integer_n > 0
            IF is_prime(fib_seq[-1])
                SET integer_n TO integer_n - 1
            IF integer_n == 0
                RETURN fib_seq[-1]
            RETURN extend_and_check(k + 1)
    END FUNCTION

    RETURN extend_and_check(2)
END FUNCTION
```