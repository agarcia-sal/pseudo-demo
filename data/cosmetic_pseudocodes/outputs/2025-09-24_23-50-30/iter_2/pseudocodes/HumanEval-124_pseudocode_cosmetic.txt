```
FUNCTION valid_date(date_string)
    SET trimmed_date TO ""
    FOR i FROM LENGTH(date_string) - 1 DOWNTO 0
        IF date_string[i] != ' '
            SET end_idx TO i
            BREAK
    END FOR
    FOR j FROM 0 TO end_idx
        IF date_string[j] != ' '
            SET start_idx TO j
            BREAK
    END FOR
    FOR k FROM start_idx TO end_idx
        SET trimmed_date TO trimmed_date + date_string[k]
    END FOR

    RECURSIVE FUNCTION parse_parts(parts, idx, acc)
        IF idx EQUALS LENGTH(parts)
            RETURN acc
        ELSE
            RETURN parse_parts(parts, idx + 1, acc + [TO_INTEGER(parts[idx])])
        END IF
    END FUNCTION

    TRY
        SET parts_list TO []
        FOR c IN trimmed_date
            IF c EQUALS '-'
                APPEND '' TO parts_list
            ELSE
                IF parts_list IS EMPTY
                    APPEND c TO parts_list
                ELSE
                    SET parts_list[-1] TO parts_list[-1] + c
                END IF
            END IF
        END FOR
        IF LENGTH(parts_list) NOT EQUALS 3
            RETURN False

        SET [month, day, year] TO parse_parts(parts_list, 0, [])

        IF NOT (1 <= month <= 12)
            RETURN False

        IF 2 EQUALS month
            IF day < 1 OR day > 29
                RETURN False
        ELSE IF month IN [4,6,9,11]
            IF day < 1 OR day > 30
                RETURN False
        ELSE IF month IN [1,3,5,7,8,10,12]
            IF day < 1 OR day > 31
                RETURN False
        ELSE
            RETURN False

    CATCH
        RETURN False
    END TRY

    RETURN True
END FUNCTION
```