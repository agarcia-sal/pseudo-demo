```
FUNCTION common(list1, list2)
    DEFINE innerMatch(index1, index2, accumulator)
        IF index1 IS EQUAL TO LENGTH(list1)
            RETURN accumulator
        ELSE IF index2 IS EQUAL TO LENGTH(list2)
            RETURN innerMatch(index1 + 1, 0, accumulator)
        ELSE IF NOT (list1[index1] NOT EQUAL TO list2[index2])
            SET accumulator TO accumulator UNION {list1[index1]}
            RETURN innerMatch(index1, index2 + 1, accumulator)
        ELSE
            RETURN innerMatch(index1, index2 + 1, accumulator)
    END DEFINE
    SET result TO innerMatch(0, 0, empty set)
    RETURN sorted([element FOR element IN result])
END FUNCTION
```