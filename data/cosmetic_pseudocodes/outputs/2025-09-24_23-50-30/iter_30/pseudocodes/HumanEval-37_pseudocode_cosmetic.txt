```
FUNCTION sort_even(input_sequence)
    SET first_subset TO EMPTY ARRAY
    SET second_subset TO EMPTY ARRAY
    SET position_checker TO 0
    WHILE position_checker < LENGTH(input_sequence)
        IF position_checker MOD 2 = 0 THEN
            APPEND input_sequence[position_checker] TO first_subset
        ELSE
            APPEND input_sequence[position_checker] TO second_subset
        END IF
        SET position_checker TO position_checker + 1
    END WHILE
    CALL sort_array_nondescending(first_subset)
    SET combined_result TO EMPTY ARRAY
    SET idx TO 0
    WHILE idx < LENGTH(second_subset)
        APPEND first_subset[idx] TO combined_result
        APPEND second_subset[idx] TO combined_result
        SET idx TO idx + 1
    END WHILE
    IF LENGTH(first_subset) - LENGTH(second_subset) > 0 THEN
        APPEND first_subset[LENGTH(first_subset) - 1] TO combined_result
    END IF
    RETURN combined_result
END FUNCTION

FUNCTION sort_array_nondescending(array_to_sort)
    IF LENGTH(array_to_sort) <= 1 THEN RETURN
    SET pivot_element TO array_to_sort[0]
    SET left_partition TO EMPTY ARRAY
    SET right_partition TO EMPTY ARRAY
    FOR each_elem IN array_to_sort FROM INDEX 1 TO LENGTH(array_to_sort) - 1
        IF each_elem <= pivot_element THEN
            APPEND each_elem TO left_partition
        ELSE
            APPEND each_elem TO right_partition
        END IF
    END FOR
    CALL sort_array_nondescending(left_partition)
    CALL sort_array_nondescending(right_partition)
    FOR i FROM 0 TO LENGTH(left_partition) - 1
        SET array_to_sort[i] TO left_partition[i]
    END FOR
    SET array_to_sort[LENGTH(left_partition)] TO pivot_element
    FOR j FROM 0 TO LENGTH(right_partition) - 1
        SET array_to_sort[LENGTH(left_partition) + 1 + j] TO right_partition[j]
    END FOR
END FUNCTION
```