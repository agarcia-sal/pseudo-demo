```
FUNCTION sort_array(input_sequence)
    DEFINE FUNCTION count_bits(number)
        INITIALIZE bit_counter TO 0
        ASSIGN binary_string TO TO_BINARY(number)
        ASSIGN index_pointer TO 2
        WHILE index_pointer < LENGTH(binary_string)
            IF binary_string[index_pointer] = '1' THEN
                SET bit_counter TO bit_counter + 1
            END IF
            SET index_pointer TO index_pointer + 1
        END WHILE
        RETURN bit_counter
    END FUNCTION

    ASSIGN temp_sorted TO SORT input_sequence USING COMPARATOR (a, b) ->
        IF a < b THEN RETURN -1
        ELSE IF a > b THEN RETURN 1
        ELSE RETURN 0
    END

    ASSIGN comparison_dict TO EMPTY DICTIONARY
    FOR EACH item IN temp_sorted DO
        SET comparison_dict[item] TO count_bits(item)
    END FOR

    DEFINE FUNCTION bit_compare(x, y)
        ASSIGN bits_x TO comparison_dict[x]
        ASSIGN bits_y TO comparison_dict[y]
        IF bits_x < bits_y THEN RETURN -1
        ELSE IF bits_x > bits_y THEN RETURN 1
        ELSE
            IF x < y THEN RETURN -1
            ELSE IF x > y THEN RETURN 1
            ELSE RETURN 0
        END IF
    END FUNCTION

    ASSIGN result_array TO SORT temp_sorted USING bit_compare
    RETURN result_array
END FUNCTION
```