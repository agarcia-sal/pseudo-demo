```
FUNCTION is_nested(cadena)
    DECLARE apertura COMO arreglo VACÍO
    DECLARE cierre COMO arreglo VACÍO
    DECLARE i COMO ENTERO
    i ← 0
    MIENTRAS i < LONGITUD(cadena)
        SI cadena[i] = '[' ENTONCES
            AGREGAR i A apertura
        SINO
            AGREGAR i A cierre
        FIN SI
        i ← i + 1
    FIN MIENTRAS

    cierre ← invertir(cierre)

    DECLARE cantidad, indice_apertura, total_cierre COMO ENTERO
    cantidad ← 0
    indice_apertura ← 0
    total_cierre ← LONGITUD(cierre)

    MIENTRAS indice_apertura < LONGITUD(apertura)
        SI indice_apertura < total_cierre Y apertura[indice_apertura] < cierre[indice_apertura] ENTONCES
            cantidad ← cantidad + 1
            indice_apertura ← indice_apertura + 1
        SINO
            indice_apertura ← indice_apertura + 1
        FIN SI
    FIN MIENTRAS

    RETORNAR cantidad >= 2
END FUNCTION
```