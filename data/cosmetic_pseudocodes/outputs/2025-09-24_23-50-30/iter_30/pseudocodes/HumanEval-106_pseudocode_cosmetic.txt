```
FUNCTION f(z)
	result := []
	
	FUNCTION recur(index, accumulator)
		IF index > z THEN
			RETURN accumulator
		END IF
		
		CASE (index MOD 2) OF
			0:
				prod := 1
				k := 1
				WHILE k <= index DO
					prod = prod * k
					k = k + 1
				END WHILE
				accumulator = accumulator + [prod]
			DEFAULT:
				sumv := 0
				m := 1
				WHILE m <= index DO
					sumv = sumv + m
					m = m + 1
				END WHILE
				accumulator = accumulator + [sumv]
		END CASE
		
		RETURN recur(index + 1, accumulator)
	END FUNCTION
	
	RETURN recur(1, result)
END FUNCTION
```