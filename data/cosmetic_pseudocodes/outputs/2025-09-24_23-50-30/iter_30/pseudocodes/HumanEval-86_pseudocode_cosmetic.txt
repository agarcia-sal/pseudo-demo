```
FUNCTION anti_shuffle(source_text)
  LET tokens ARRAY = source_text SPLIT BY " "
  LET ordered_tokens LIST = NEW LIST
  INDEX idx = 0
  WHILE idx < LENGTH(tokens) DO
    LET element STRING = tokens[idx]
    LET chars ARRAY = NEW ARRAY
    LET pos INT = 0
    WHILE pos < LENGTH(element) DO
      APPEND element[pos] TO chars
      pos = pos + 1
    END WHILE
    LET asc_chars ARRAY = chars SORTED BY (a,b) -> a <= b
    LET rebuilt STRING = ""
    FOR EACH ch IN asc_chars DO
      rebuilt = rebuilt + ch
    END FOR
    APPEND rebuilt TO ordered_tokens
    idx = idx + 1
  END WHILE
  LET final_text STRING = ""
  LET enum_index INT = 0
  FOR enum_index = 0 TO LENGTH(ordered_tokens) - 1 DO
    final_text = final_text + ordered_tokens[enum_index]
    IF enum_index < LENGTH(ordered_tokens) - 1 THEN
      final_text = final_text + " "
    END IF
  END FOR
  RETURN final_text
END FUNCTION
```