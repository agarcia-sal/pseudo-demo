```
FUNCTION minPath(grid, p)
  LET m BE LENGTH OF grid
  LET threshold BE (m * m) + 1
  FOR alpha FROM 0 TO m - 1 DO
    BETA_LOOP:
    FOR beta FROM 0 TO m - 1 DO
      SWITCH grid AT alpha AND beta IS 1
        CASE TRUE:
          LET neighbours BE ARRAY()
          IF NOT (alpha = 0) THEN APPEND grid AT (alpha - 1) AND beta TO neighbours END IF
          IF beta != 0 THEN APPEND grid AT alpha AND (beta - 1) TO neighbours END IF
          IF alpha < (m - 1) THEN APPEND grid AT (alpha + 1) AND beta TO neighbours END IF
          IF beta < (m - 1) THEN APPEND grid AT alpha AND (beta + 1) TO neighbours END IF
          LET threshold BE REDUCE(MIN, neighbours, threshold)
        CASE FALSE: CONTINUE BETA_LOOP
      END SWITCH
    END FOR
  END FOR
  
  LET result ARRAY = []
  LET index BE 0
  WHILE index < p DO
    SWITCH (index MOD 2)
      CASE 0: APPEND 1 TO result
      CASE 1: APPEND threshold TO result
    END SWITCH
    SET index = index + 1
  END WHILE
  RETURN result
END FUNCTION
```