```
FUNCTION get_odd_collatz(q)
    DEFINE FUNCTION accumulate_odds(x, acc)
        SWITCH (x % 2)
            CASE 0: LET y = x / 2
            CASE 1: LET y = 3 * x + 1
        END SWITCH

        IF y <= 1 THEN
            RETURN acc
        ELSE
            LET new_acc = acc
            IF y % 2 != 0 THEN
                LET new_acc = acc + [y]
            END IF
            RETURN accumulate_odds(y, new_acc)
        END IF
    END FUNCTION

    LET result_list = (q % 2 == 0) ? [] : [q]
    LET collected = accumulate_odds(q, result_list)

    LET output_array = collected
    LET i = 0
    WHILE i < LENGTH(output_array) - 1
        LET j = i + 1
        WHILE j < LENGTH(output_array)
            IF output_array[i] > output_array[j]
                LET temp = output_array[i]
                output_array[i] = output_array[j]
                output_array[j] = temp
            END IF
            j = j + 1
        END WHILE
        i = i + 1
    END WHILE

    RETURN output_array
END FUNCTION
```