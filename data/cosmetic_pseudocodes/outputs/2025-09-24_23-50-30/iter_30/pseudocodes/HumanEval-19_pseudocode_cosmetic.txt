```
FUNCTION sort_numbers(bin_string)
  SET val_table TO DICTIONARY WITH ENTRIES
    'zero' -> 0,
    'one' -> 1,
    'two' -> 2,
    'three' -> 3,
    'four' -> 4,
    'five' -> 5,
    'six' -> 6,
    'seven' -> 7,
    'eight' -> 8,
    'nine' -> 9
  SET parts TO []
  FOR EACH c IN SPLIT bin_string BY ' '
    IF LENGTH(c) <> 0 THEN 
      APPEND c TO parts
  END FOR
  DEFINE FUNCTION qsort(xs)
    IF xs IS EMPTY THEN
      RETURN []
    ELSE
      SET p TO xs[0]
      SET left_side TO FILTER xs[1:] WHERE val_table[x] <= val_table[p]
      SET right_side TO FILTER xs[1:] WHERE val_table[x] > val_table[p]
      RETURN CONCATENATE qsort(left_side), [p], qsort(right_side)
    END IF
  END FUNCTION
  SET ordered TO qsort(parts)
  SET result_string TO ordered[0]
  FOR i FROM 1 TO LENGTH(ordered)-1
    SET result_string TO result_string + ' ' + ordered[i]
  END FOR
  RETURN result_string
END FUNCTION
```