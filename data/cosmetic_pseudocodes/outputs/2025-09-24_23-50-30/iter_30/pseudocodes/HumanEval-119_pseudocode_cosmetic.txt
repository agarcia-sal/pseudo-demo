```
FUNCTION match_parens(pair_of_strings)
	DEFINE FUNCTION verify(parens_string)
		LET net_count BE 0
		LET iterator_index BE 0
		LET length_val BE LENGTH_OF parens_string
		WHILE iterator_index < length_val
			LET symbol BE parens_string[iterator_index]
			iterator_index ← iterator_index + 1
			SWITCH symbol
				CASE '(':
					net_count ← net_count + 1
				CASE DEFAULT:
					net_count ← net_count - 1
			END SWITCH
			IF NOT (net_count >= 0)
				RETURN FALSE
			END IF
		END WHILE
		RETURN (net_count = 0)
	END FUNCTION

	LET concat_a BE pair_of_strings[0] + pair_of_strings[1]
	LET concat_b BE pair_of_strings[1] + pair_of_strings[0]
	IF (verify(concat_a) OR verify(concat_b))
		RETURN "Yes"
	ELSE
		RETURN "No"
	END IF
END FUNCTION
```