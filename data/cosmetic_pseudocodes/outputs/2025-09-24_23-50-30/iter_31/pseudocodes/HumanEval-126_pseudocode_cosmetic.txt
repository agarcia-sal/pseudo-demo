```
FUNCTION is_sorted(sequence)
    INITIALIZE frequency_map AS dictionary WITH KEYS sequence AND VALUES 0
    DEFINE procedure accumulate_counts(pos)
        IF pos EQUALS LENGTH(sequence) THEN
            RETURN
        ELSE
            frequency_map[sequence[pos]] = frequency_map[sequence[pos]] + 1
            CALL accumulate_counts(pos + 1)
    CALL accumulate_counts(0)

    DEFINE function check_duplicates(idx)
        IF idx EQUALS LENGTH(sequence) THEN
            RETURN False
        ELSE
            SWITCH frequency_map[sequence[idx]] > 2
                CASE True:
                    RETURN True
                DEFAULT:
                    RETURN check_duplicates(idx + 1)

    IF check_duplicates(0) THEN
        RETURN False

    DEFINE function verify_order(ind)
        RETURN (ind = LENGTH(sequence) - 1) OR ((sequence[ind - 1] <= sequence[ind]) AND verify_order(ind + 1))

    IF LENGTH(sequence) <= 1 THEN
        RETURN True
    ELSE
        RETURN verify_order(1)
END FUNCTION
```