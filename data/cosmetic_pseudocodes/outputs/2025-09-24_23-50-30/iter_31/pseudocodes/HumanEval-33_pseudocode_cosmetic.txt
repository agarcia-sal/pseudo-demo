```
FUNCTION sort_third(beta)
    LET kappa := beta[:]
    LET omega := [kappa[lambda] | lambda IN xrange(len(kappa)) WHERE lambda % 3 = 0]
    LET zeta := qsort_asc(omega, 0)
    LET alpha := 0
    WHILE alpha < LEN(kappa)
        SELECT alpha % 3
            CASE 0:
                kappa[alpha] := zeta[alpha // 3]
            DEFAULT:
                NULL
        END SELECT
        SET alpha := alpha + 1
    END WHILE
    RETURN kappa
END FUNCTION

FUNCTION qsort_asc(arr, start)
    IF LEN(arr) < 2 THEN RETURN arr END IF
    LET pivot := arr[0]
    LET rest := arr[1:]
    LET less_or_equal := FILTER(rest, (x) => x <= pivot)
    LET greater := FILTER(rest, (x) => x > pivot)
    RETURN CONCAT(qsort_asc(less_or_equal, 0), [pivot], qsort_asc(greater, 0))
END FUNCTION
```