```
FUNCTION sort_array(numbers_list)
    SET ascending_ordered TO EMPTY LIST
    FOR index FROM 0 TO LENGTH(numbers_list) - 1
        APPEND numbers_list[index] TO ascending_ordered
    END FOR
    FOR i FROM 0 TO LENGTH(ascending_ordered) - 2
        FOR j FROM 0 TO LENGTH(ascending_ordered) - i - 2
            IF ascending_ordered[j] > ascending_ordered[j + 1]
                SET temp_swap TO ascending_ordered[j]
                SET ascending_ordered[j] TO ascending_ordered[j + 1]
                SET ascending_ordered[j + 1] TO temp_swap
            END IF
        END FOR
    END FOR
    SET counts_dictionary TO EMPTY DICTIONARY
    FOR each_number IN ascending_ordered
        SET binary_string TO EMPTY STRING
        SET quotient TO each_number
        WHILE quotient > 0
            SET binary_string TO CONCATENATE (STRING (quotient MOD 2)) WITH binary_string
            SET quotient TO quotient DIV 2
        END WHILE
        IF binary_string IS EMPTY
            SET binary_string TO "0"
        END IF
        SET counts_dictionary[each_number] TO 0
        FOR char IN binary_string
            IF char EQUALS "1"
                SET counts_dictionary[each_number] TO counts_dictionary[each_number] + 1
            END IF
        END FOR
    END FOR
    SET length_numbers TO LENGTH(ascending_ordered)
    FOR p FROM 0 TO length_numbers - 2
        FOR q FROM 0 TO length_numbers - p - 2
            IF counts_dictionary[ascending_ordered[q]] > counts_dictionary[ascending_ordered[q + 1]]
                SET temp_var TO ascending_ordered[q]
                SET ascending_ordered[q] TO ascending_ordered[q + 1]
                SET ascending_ordered[q + 1] TO temp_var
            END IF
        END FOR
    END FOR
    RETURN ascending_ordered
END FUNCTION
```