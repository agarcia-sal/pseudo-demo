```
FUNCTION unique_digits(collection_numbers)
  LET accumulator <- dictionary()
  FOR idx FROM 0 TO LENGTH(collection_numbers) - 1 DO
    LET item <- collection_numbers[idx]
    LET digits_set <- set()
    LET pointer <- item
    WHILE pointer > 0 DO
      digits_set[item MOD 10] <- true
      pointer <- pointer DIV 10
    END WHILE
    LET is_all_odd <- TRUE
    LET digits_iter <- keys(digits_set)
    FOR j FROM 0 TO LENGTH(digits_iter) - 1 DO
      IF digits_iter[j] MOD 2 = 0 THEN
        is_all_odd <- FALSE
        BREAK
      END IF
    END FOR
    IF NOT is_all_odd THEN
      CONTINUE
    END IF
    accumulator[item] <- true
  END FOR
  LET final_list <- list()
  FOR key IN keys(accumulator) DO
    final_list <- final_list + [key]
  END FOR
  FOR p FROM 0 TO LENGTH(final_list) - 2 DO
    FOR q FROM 0 TO LENGTH(final_list) - p - 2 DO
      IF final_list[q] > final_list[q+1] THEN
        LET temp <- final_list[q]
        final_list[q] <- final_list[q+1]
        final_list[q+1] <- temp
      END IF
    END FOR
  END FOR
  RETURN final_list
END FUNCTION
```