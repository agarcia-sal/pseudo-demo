```
FUNCTION intersection(argA, argB)
    FUNCTION is_prime(varX)
        CASE
            WHEN varX == 0 THEN 
                RETURN False
            WHEN varX == 1 THEN 
                RETURN False
            WHEN varX == 2 THEN 
                RETURN True
        END CASE

        SET index_map TO []
        FOR counter FROM 2 TO varX - 1 DO
            APPEND counter TO index_map
        END FOR

        FOR element IN index_map DO
            IF varX MOD element == 0 THEN
                RETURN False
            END IF
        END FOR

        RETURN True
    END FUNCTION

    SET start_point TO interval1[0]
    SET limit_point TO interval2[0]
    IF start_point < limit_point THEN
        SET lower_bound TO limit_point
    ELSE
        SET lower_bound TO start_point
    END IF

    SET upper_bound1 TO interval1[1]
    SET upper_bound2 TO interval2[1]
    IF upper_bound1 < upper_bound2 THEN
        SET upper_bound TO upper_bound1
    ELSE
        SET upper_bound TO upper_bound2
    END IF

    SET span TO upper_bound + (-lower_bound)
    IF span > 0 THEN
        IF is_prime(span) THEN 
            RETURN "YES"
        END IF
    END IF

    RETURN "NO"
END FUNCTION
```