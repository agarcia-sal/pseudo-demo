```
FUNCTION sort_even(list_of_elements)
    SET first_slice TO NEW ARRAY
    SET second_slice TO NEW ARRAY
    FOR step_index FROM 0 TO LENGTH(list_of_elements) - 1
        IF step_index MOD 2 = 0 THEN
            APPEND list_of_elements[step_index] TO first_slice
        ELSE
            APPEND list_of_elements[step_index] TO second_slice
    SET result_sequence TO EMPTY SEQUENCE
    CALL PUT_SORTED_INTO(first_slice, second_slice, result_sequence)
    RETURN result_sequence
END FUNCTION

FUNCTION PUT_SORTED_INTO(arr_one, arr_two, accumulator)
    WHILE LENGTH(arr_one) > LENGTH(arr_two)
        SORT arr_two IN NON-DECREASING ORDER
        SORT arr_one IN NON-DECREASING ORDER
        BREAK
    IF LENGTH(arr_one) <= LENGTH(arr_two)
        SORT arr_one IN NON-DECREASING ORDER
        SORT arr_two IN NON-DECREASING ORDER
    SET current_pos TO 0
    WHILE current_pos < MIN(LENGTH(arr_one), LENGTH(arr_two))
        MULTI_APPEND accumulator WITH [arr_one[current_pos], arr_two[current_pos]]
        INCREMENT current_pos BY 1
    IF LENGTH(arr_one) > LENGTH(arr_two)
        APPEND arr_one[LENGTH(arr_one) - 1] TO accumulator
END FUNCTION
```