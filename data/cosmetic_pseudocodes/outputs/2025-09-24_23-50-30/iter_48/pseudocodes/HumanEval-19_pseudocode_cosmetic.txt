```
FUNCTION sort_numbers(alpha_sequence)
  SET digit_values TO { 'eight': 8, 'six': 6, 'one': 1, 'four': 4, 'five': 5, 'nine': 9, 'zero': 0, 'three': 3, 'two': 2, 'seven': 7 }
  SET tokens TO []
  SET beta TO 0
  SET length_beta TO LENGTH(alpha_sequence)
  WHILE beta < length_beta
    SET char_to_split TO SUBSTRING(alpha_sequence, beta, 1)
    IF char_to_split = ' '
      SET beta TO beta + 1
    ELSE
      SET start_pos TO beta
      WHILE beta < length_beta AND SUBSTRING(alpha_sequence, beta, 1) ≠ ' '
        SET beta TO beta + 1
      END WHILE
      SET extracted TO SUBSTRING(alpha_sequence, start_pos, beta - start_pos)
      IF LENGTH(extracted) > 0
        APPEND extracted TO tokens
      END IF
    END IF
  END WHILE
  SET arrangement TO []
  SET gamma TO 0
  WHILE gamma < LENGTH(tokens)
    SET current_word TO tokens[gamma]
    APPEND current_word TO arrangement
    SET gamma TO gamma + 1
  END WHILE
  SET i TO 0
  WHILE i < LENGTH(arrangement) - 1
    SET j TO i + 1
    WHILE j < LENGTH(arrangement)
      IF NOT (digit_values[arrangement[i]] ≤ digit_values[arrangement[j]])
        SET temp_var TO arrangement[i]
        SET arrangement[i] TO arrangement[j]
        SET arrangement[j] TO temp_var
      END IF
      SET j TO j + 1
    END WHILE
    SET i TO i + 1
  END WHILE
  SET zeta TO 0
  SET final_string TO ''
  WHILE zeta < LENGTH(arrangement)
    SET final_string TO final_string + arrangement[zeta]
    IF zeta < LENGTH(arrangement) - 1
      SET final_string TO final_string + ' '
    END IF
    SET zeta TO zeta + 1
  END WHILE
  RETURN final_string
END FUNCTION
```