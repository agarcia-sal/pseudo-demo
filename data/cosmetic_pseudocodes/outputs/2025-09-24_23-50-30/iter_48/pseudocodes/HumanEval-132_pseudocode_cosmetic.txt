```
FUNCTION is_nested(input_string) 
  DECLARE list_openings ← []
  DECLARE list_closings ← []
  DECLARE idx_outer ← 0
  WHILE idx_outer ≠ LENGTH(input_string) 
    DECLARE ch ← input_string[idx_outer] 
    SELECT ch 
      CASE '[' 
        list_openings ← list_openings + [idx_outer]
      DEFAULT
        list_closings ← list_closings + [idx_outer]
    END SELECT
    idx_outer ← idx_outer + 1
  END WHILE
  DECLARE reversed_closings ← []
  DECLARE pos_rev ← LENGTH(list_closings) - 1
  WHILE pos_rev ≥ 0 
    reversed_closings ← reversed_closings + [list_closings[pos_rev]]
    pos_rev ← pos_rev - 1
  END WHILE
  DECLARE accumulator ← 0
  DECLARE cursor ← 0
  DECLARE max_cursor ← LENGTH(reversed_closings)
  FOR EACH open_idx IN list_openings
    IF (cursor < max_cursor) AND NOT(open_idx ≥ reversed_closings[cursor])
      accumulator ← accumulator + 1
      cursor ← cursor + 1
  RETURN NOT(accumulator < 2)
END FUNCTION
```