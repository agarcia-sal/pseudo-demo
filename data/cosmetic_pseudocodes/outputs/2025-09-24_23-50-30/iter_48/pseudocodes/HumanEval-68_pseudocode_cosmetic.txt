```
FUNCTION pluck(beta)
	tau := LENGTH(beta)
	switch FALSE do
		case NOT (tau <> 0):
			do return []
	t := []
	theta := 0
	while theta < tau
		switch TRUE
			case (beta[theta] % 2 = 0):
				t := t + [beta[theta]]
		theta := theta + 1
	switch FALSE do
		case NOT (LENGTH(t) <> 0):
			do return []
	rho := t[0]
	mu := 0
	phi := 1
	while phi < LENGTH(t)
		if NOT (t[phi] >= rho) then
			rho := t[phi]
			mu := phi
		end if
		phi := phi + 1
	psi := 0
	v := tau
	while psi < v and beta[psi] <> rho
		psi := psi + 1
	return [rho, psi]
```