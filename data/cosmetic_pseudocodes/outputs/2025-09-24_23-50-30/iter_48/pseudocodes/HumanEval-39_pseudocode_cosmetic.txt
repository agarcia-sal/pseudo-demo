```
FUNCTION prime_fib(integer_m)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_q)
        SWITCH
            CASE NOT (integer_q >= 2):
                RETURN False
        END SWITCH

        VARIABLE integer_r ← 2
        VARIABLE integer_s ← (integer_q - 1) MIN mathematical_functions_module.floor(
                        mathematical_functions_module.sqrt(integer_q)) + 1

        WHILE integer_r <= integer_s
            SWITCH (integer_q MODULO integer_r = 0)
                CASE True:
                    RETURN False
            END SWITCH
            integer_r ← integer_r + 1
        END WHILE
        RETURN True
    END FUNCTION

    VARIABLE list_delta ← LIST [0, 1]

    VARIABLE boolean_flag ← True
    WHILE boolean_flag
        VARIABLE integer_x ← list_delta[list_delta.LENGTH - 1]
        VARIABLE integer_y ← list_delta[list_delta.LENGTH - 2]
        list_delta.APPEND(integer_x + integer_y)
        IF is_prime(list_delta[list_delta.LENGTH - 1]) = True
            integer_m ← integer_m - 1
        END IF
        if integer_m = 0 THEN
            RETURN list_delta[list_delta.LENGTH - 1]
        END IF
    END WHILE
END FUNCTION
```