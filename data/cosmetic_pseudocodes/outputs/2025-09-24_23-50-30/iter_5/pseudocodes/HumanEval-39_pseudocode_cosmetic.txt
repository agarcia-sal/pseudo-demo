```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF integer_p <= 1 THEN RETURN False

        DECLARE FUNCTION check_divisor(integer_x, integer_limit)
            IF integer_x > integer_limit THEN RETURN True
            IF integer_p MODULO integer_x = 0 THEN RETURN False
            RETURN check_divisor(integer_x + 1, integer_limit)
        END FUNCTION

        SET cap = MIN((INTEGER PART OF (mathematical_functions_module.SQRT(integer_p)) + 1), (integer_p - 1))
        RETURN check_divisor(2, cap)
    END FUNCTION

    LIST list_fibonacci = [0, 1]
    LABEL loop_start:
        SET next_value = list_fibonacci[-1] + list_fibonacci[-2]
        list_fibonacci.APPEND(next_value)

        IF is_prime(next_value) THEN
            SET integer_n = integer_n - 1
            IF integer_n = 0 THEN RETURN next_value
        GOTO loop_start
END FUNCTION
```