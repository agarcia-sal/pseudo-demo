```
FUNCTION largest_prime_factor(x)
    FUNCTION is_prime(y)
        FUNCTION check_divisor(z, limit)
            IF z GREATERTHAN limit THEN RETURN True
            IF (y MODULO z) EQUALS 0 THEN RETURN False
            RETURN check_divisor(z + 1, limit)
        END FUNCTION
        RETURN (y GREATERTHAN 1) AND check_divisor(2, y - 1)
    END FUNCTION

    FUNCTION iterate_divisors(current, maximum, record)
        IF current GREATERTHAN maximum THEN RETURN record
        IF (x MODULO current) EQUALS 0 THEN
            IF is_prime(current) THEN
                IF current GREATERTHAN record THEN
                    SET record TO current
        RETURN iterate_divisors(current + 1, maximum, record)
    END FUNCTION

    RETURN iterate_divisors(2, x, 1)
END FUNCTION
```