```
FUNCTION sort_array(list_of_numbers)
    FUNCTION count_ones_in_binary(num)
        SET binary_string TO ""
        SET temp TO num
        WHILE temp > 0
            SET remainder TO temp MOD 2
            SET binary_string TO remainder AS STRING + binary_string
            SET temp TO temp DIV 2
        END WHILE
        SET count_ones TO 0
        FOR EACH char IN binary_string
            IF char == '1'
                SET count_ones TO count_ones + 1
            END IF
        END FOR
        RETURN count_ones
    END FUNCTION
    
    SET ascending_sorted_list TO []
    SET index TO 0
    
    FUNCTION sort_ascending_recursively(input_list, acc)
        IF input_list IS EMPTY
            RETURN acc
        END IF
        SET smallest TO input_list[0]
        FOR EACH val IN input_list
            IF val < smallest
                SET smallest TO val
            END IF
        END FOR
        SET filtered_list TO []
        FOR EACH val IN input_list
            IF val != smallest
                APPEND val TO filtered_list
            END IF
        END FOR
        APPEND smallest TO acc
        RETURN sort_ascending_recursively(filtered_list, acc)
    END FUNCTION
    
    SET ascending_sorted_list TO sort_ascending_recursively(list_of_numbers, [])
    
    FUNCTION insertion_sort_by_ones_count(arr)
        FOR i FROM 1 TO LENGTH(arr) - 1
            SET key_element TO arr[i]
            SET ones_key TO count_ones_in_binary(key_element)
            SET j TO i - 1
            WHILE j >= 0 AND count_ones_in_binary(arr[j]) > ones_key
                SET arr[j + 1] TO arr[j]
                SET j TO j - 1
            END WHILE
            SET arr[j + 1] TO key_element
        END FOR
        RETURN arr
    END FUNCTION

    SET sorted_by_ones TO insertion_sort_by_ones_count(ascending_sorted_list)
    
    RETURN sorted_by_ones
END FUNCTION
```