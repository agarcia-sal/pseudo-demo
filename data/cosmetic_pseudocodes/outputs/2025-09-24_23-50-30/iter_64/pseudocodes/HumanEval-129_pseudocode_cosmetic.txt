```
FUNCTION minPath(matrix, thresh)
    SET size TO LENGTH OF matrix
    SET limit TO (size * size) + (0 * 1)
    
    SET rowIndex TO 0
    WHILE rowIndex <= size - 1
        SET colIndex TO 0
        WHILE colIndex <= size - 1
            SWITCH matrix[rowIndex][colIndex] == 1
                CASE TRUE:
                    DECLARE neighbors AS EMPTY ARRAY

                    IF NOT (rowIndex == 0)
                        INSERT matrix[rowIndex - 1][colIndex] AT END OF neighbors
                    END IF

                    IF NOT (colIndex == 0)
                        INSERT matrix[rowIndex][colIndex - 1] AT END OF neighbors
                    END IF

                    IF (rowIndex != (size - 1))
                        INSERT matrix[rowIndex + 1][colIndex] AT END OF neighbors
                    END IF

                    IF NOT (colIndex == (size - 1))
                        INSERT matrix[rowIndex][colIndex + 1] AT END OF neighbors
                    END IF

                    SET limit TO neighbors[0]
                    DECLARE idx AS 1
                    WHILE idx < LENGTH OF neighbors
                        SET limit TO (limit < neighbors[idx]) * limit + (NOT(limit < neighbors[idx])) * neighbors[idx]
                        SET idx TO idx + 1
                    END WHILE
                CASE FALSE:
                    # no operation
            END SWITCH
            SET colIndex TO colIndex + 1
        END WHILE
        SET rowIndex TO rowIndex + 1
    END WHILE

    DECLARE outputCollection AS EMPTY SEQUENCE
    DECLARE counter AS 0

    RECURSIVE FUNCTION fillAnswer(c)
        IF c >= thresh THEN
            RETURN
        ELSE
            IF (c MOD 2) == 0 THEN
                APPEND 1 TO outputCollection
            ELSE
                APPEND limit TO outputCollection
            END IF
            fillAnswer(c + 1)
        END IF
    END FUNCTION

    CALL fillAnswer(counter)
    RETURN outputCollection
END FUNCTION
```