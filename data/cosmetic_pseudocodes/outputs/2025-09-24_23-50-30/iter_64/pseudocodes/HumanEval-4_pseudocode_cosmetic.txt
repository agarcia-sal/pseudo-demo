```
FUNCTION mean_absolute_deviation(array_of_values)
    DEFINE FUNCTION compute_sum(values, index, acc)
        IF index >= LENGTH(values) THEN
            RETURN acc
        ELSE
            RETURN compute_sum(values, index + 1, acc + values[index])
        END IF
    END FUNCTION

    LET length_var = LENGTH(array_of_values)
    LET total_sum = compute_sum(array_of_values, 0, 0)

    LET mean_val = 1.0 * total_sum / length_var

    DEFINE FUNCTION abs_diff_sum(values, index, accumulator)
        IF index = length_var THEN
            RETURN accumulator
        ELSE
            LET difference = values[index] - mean_val
            LET abs_difference = IF difference < 0 THEN -difference ELSE difference
            RETURN abs_diff_sum(values, index + 1, accumulator + abs_difference)
        END IF
    END FUNCTION

    LET sum_abs_diff = abs_diff_sum(array_of_values, 0, 0)

    RETURN sum_abs_diff / length_var
END FUNCTION
```