```
FUNCTION prime_fib(origVal)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(divisor)
        SWITCH
            CASE divisor < 2:
                RETURN False
        END SWITCH

        LET limit = MIN( FLOOR(SQRT(divisor)) + 1, divisor - 1 )
        LET counter = 2

        WHILE counter <= limit
            IF divisor % counter == 0 THEN RETURN False
            SET counter = counter + 1
        END WHILE

        RETURN True
    END FUNCTION

    LET fibSeq = [0, 1]

    FUNCTION generate_and_check(n_remaining)
        LET idx = 0
        WHILE TRUE DO
            LET nextVal = fibSeq[-1] + fibSeq[-2]
            fibSeq.APPEND(nextVal)

            IF is_prime(nextVal) THEN
                SET n_remaining = n_remaining - 1
            END IF

            IF n_remaining == 0 THEN
                RETURN nextVal
            END IF

            SET idx = idx + 1
        END WHILE
    END FUNCTION

    RETURN generate_and_check(origVal)
END FUNCTION
```