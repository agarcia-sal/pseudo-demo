```
FUNCTION common(paramA, paramB)
    DEFINE FUNCTION helper(indexX, indexY, accumulator)
        IF indexX >= LENGTH(paramA) THEN
            LET sorted_accum = SORTED_LIST(accumulator)
            RETURN sorted_accum
        ELSE
            IF indexY >= LENGTH(paramB) THEN
                RETURN helper(indexX + 1, 0, accumulator)
            ELSE
                LET new_accumulator = accumulator
                SWITCH
                    CASE paramA[indexX] == paramB[indexY]:
                        new_accumulator = accumulator UNION {paramA[indexX]}
                    DEFAULT:
                        NO OP
                END SWITCH
                RETURN helper(indexX, indexY + 1, new_accumulator)
            END IF
        END IF
    END FUNCTION

    RETURN helper(0, 0, EMPTY_SET)
END FUNCTION
```