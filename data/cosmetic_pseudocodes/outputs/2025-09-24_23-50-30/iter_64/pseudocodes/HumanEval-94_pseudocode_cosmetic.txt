```
FUNCTION skjkasdkd(xyz)
    FUNCTION isPrime(abc)
        DEFINE helper(curN, limitN)
            IF curN > limitN THEN
                RETURN True
            ELSE IF abc MODULO curN = 0 THEN
                RETURN False
            ELSE
                RETURN helper(curN + 1, limitN)
            END IF
        END FUNCTION

        RETURN helper(2, FLOOR(SQRT(abc)) + 1)
    END FUNCTION

    SET pqr TO 0
    SET uvw TO 0

    WHILE uvw < LENGTH(xyz) DO
        SWITCH (xyz[uvw] > pqr AND isPrime(xyz[uvw]))
            CASE True:
                pqr = xyz[uvw]
            CASE False:
                ;
        END SWITCH
        uvw = uvw + 1
    END WHILE

    SET mno TO 0
    DEFINE str_repr AS STRING(pqr)

    DEFINE recur_sum(i, acc)
        IF i = LENGTH(str_repr) THEN
            RETURN acc
        ELSE
            RETURN recur_sum(i + 1, acc + INTEGER(str_repr[i]))
        END IF
    END FUNCTION

    SET mno = recur_sum(0, 0)

    RETURN mno
END FUNCTION
```