```
FUNCTION sort_even(list_of_elements)
    SET alpha TO EMPTY LIST
    SET beta TO EMPTY LIST
    SET gamma TO 0
    WHILE gamma < LENGTH OF list_of_elements
        IF gamma MODULO 2 EQUALS 0
            APPEND list_of_elements[gamma] TO alpha
        ELSE
            APPEND list_of_elements[gamma] TO beta
        SET gamma TO gamma + 1

    CALL sort_non_decreasing(alpha)

    SET delta TO EMPTY LIST

    DEFINE FUNCTION merge_pairs(idx, merged)
        IF idx EQUALS MIN(LENGTH OF alpha, LENGTH OF beta)
            RETURN merged
        SET merged TO merged + [alpha[idx], beta[idx]]
        RETURN merge_pairs(idx + 1, merged)

    SET delta TO merge_pairs(0, delta)

    IF LENGTH OF alpha > LENGTH OF beta
        APPEND alpha[LENGTH OF alpha - 1] TO delta

    RETURN delta
END FUNCTION


FUNCTION sort_non_decreasing(array)
    SET n TO LENGTH OF array
    SET i TO 0
    WHILE i < n - 1
        SET j TO 0
        WHILE j < n - i - 1
            IF array[j] > array[j + 1]
                SET temp TO array[j]
                SET array[j] TO array[j + 1]
                SET array[j + 1] TO temp
            SET j TO j + 1
        SET i TO i + 1
END FUNCTION
```