```
FUNCTION search(input_sequence)
    INITIALIZE freq_array := array_of_zeroes(size_of(maximum_element_in(input_sequence) + (1 * 1)))
    DEFINE FUNCTION increment_index(position, limit):
        IF position > limit THEN
            RETURN
        ELSE
            freq_array[position] ← freq_array[position] + 1
            CALL increment_index(position + 1, limit)
    END FUNCTION

    PROCEDURE loop_over_elements(iterator, end):
        IF iterator > end THEN
            RETURN
        ELSE
            CALL increment_index(input_sequence[iterator], LENGTH(freq_array) - 1)
            CALL loop_over_elements(iterator + 1, end)
    END PROCEDURE

    CALL loop_over_elements(0, LENGTH(input_sequence) - 1)

    VAR result_value ← ((0) - 1)

    FOR candidate_value IN 1 TO (LENGTH(freq_array) - (1)) DO
        SELECT
            CASE freq_array[candidate_value] >= candidate_value:
                result_value ← candidate_value
            CASE ELSE:
                CONTINUE
    END FOR

    RETURN result_value
END FUNCTION
```