```
FUNCTION parse_nested_parens(parentheses_string)
    FUNCTION parse_paren_group(group_string)
        PROCEDURE recurse(index, cur_depth, max_depth)
            IF index = LENGTH(group_string) THEN
                RETURN max_depth
            ELSE
                CHAR = group_string[index]
                NEW_CUR_DEPTH = cur_depth + (1 IF CHAR = '(' ELSE -1)
                NEW_MAX_DEPTH = max_depth
                IF NEW_CUR_DEPTH > max_depth THEN
                    NEW_MAX_DEPTH = NEW_CUR_DEPTH
                END IF
                RETURN recurse(index + 1, NEW_CUR_DEPTH, NEW_MAX_DEPTH)
            END IF
        END PROCEDURE
        RETURN recurse(0, 0, 0)
    END FUNCTION

    NON_EMPTY_GROUPS = FILTER(LAMBDA x: LENGTH(x) > 0, SPLIT(parentheses_string, ' '))
    RESULT = []
    INDEX = 0
    WHILE INDEX < LENGTH(NON_EMPTY_GROUPS)
        RESULT = RESULT + [parse_paren_group(NON_EMPTY_GROUPS[INDEX])]
        INDEX = INDEX + 1
    END WHILE
    RETURN RESULT
END FUNCTION
```