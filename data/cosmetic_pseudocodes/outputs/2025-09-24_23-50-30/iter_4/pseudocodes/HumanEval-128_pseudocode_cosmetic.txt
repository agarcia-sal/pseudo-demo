```
FUNCTION prod_signs(array_of_integers)
    DEFINE recursive_count_neg(arr, idx, acc)
        IF idx = LENGTH(arr) THEN RETURN acc END IF
        RETURN recursive_count_neg(arr, idx + 1, acc + (arr[idx] < 0 ? 1 : 0))
    END DEFINE

    IF LENGTH(array_of_integers) = 0 THEN RETURN None END IF

    DECLARE has_zero_flag := False
    DECLARE i := 0
    WHILE i < LENGTH(array_of_integers) AND NOT has_zero_flag
        IF array_of_integers[i] = 0 THEN has_zero_flag := True END IF
        i := i + 1
    END WHILE

    DECLARE sign := IF has_zero_flag THEN 0 ELSE (-1) ^ recursive_count_neg(array_of_integers, 0, 0) END IF

    DECLARE total_magnitude := 0
    FOR each_value IN array_of_integers
        total_magnitude := total_magnitude + (each_value < 0 ? -each_value : each_value)
    END FOR

    RETURN sign * total_magnitude
END FUNCTION
```