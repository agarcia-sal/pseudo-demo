```
FUNCTION sort_array(array_of_integers)
    FUNCTION count_ones(n, total)
        IF n == 0 THEN
            RETURN total
        ELSE
            RETURN count_ones(n DIV 2, total + (n MOD 2))
        END IF
    END FUNCTION

    FUNCTION by_ones(x)
        RETURN count_ones(x, 0)
    END FUNCTION

    SET temp_sorted TO array_of_integers
    SET index TO 0

    WHILE index < LENGTH(temp_sorted) - 1 DO
        IF temp_sorted[index] > temp_sorted[index + 1] THEN
            SET temp_sorted[index], temp_sorted[index + 1] TO temp_sorted[index + 1], temp_sorted[index]
            SET index TO 0
        ELSE
            SET index TO index + 1
        END IF
    END WHILE

    SET final_result TO []
    WHILE LENGTH(temp_sorted) > 0 DO
        SET min_value TO temp_sorted[0]
        FOR EACH element IN temp_sorted DO
            IF by_ones(element) < by_ones(min_value) OR 
               (by_ones(element) == by_ones(min_value) AND element < min_value) THEN
                SET min_value TO element
            END IF
        END FOR
        APPEND min_value TO final_result
        REMOVE min_value FROM temp_sorted
    END WHILE

    RETURN final_result
END FUNCTION
```