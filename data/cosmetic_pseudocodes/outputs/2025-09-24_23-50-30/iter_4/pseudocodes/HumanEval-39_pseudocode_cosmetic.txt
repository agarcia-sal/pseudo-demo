```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        RETURN (integer_p >= 2) AND NOT ANY(
            integer_p MODULO divisor == 0 
            FOR divisor IN RANGE(2, MIN(INTEGER(SQUARE_ROOT(integer_p)) + 1, integer_p))
        )
    END FUNCTION

    SET fib_sequence TO [0, 1]

    FUNCTION fetch_prime_fibonacci(remaining_count)
        IF remaining_count == 0 THEN
            RETURN fib_sequence[-1]
        END IF
        SET next_val TO fib_sequence[-1] + fib_sequence[-2]
        fib_sequence.APPEND(next_val)
        RETURN fetch_prime_fibonacci(remaining_count - (1 IF is_prime(next_val) ELSE 0))
    END FUNCTION

    RETURN fetch_prime_fibonacci(integer_n)
END FUNCTION
```