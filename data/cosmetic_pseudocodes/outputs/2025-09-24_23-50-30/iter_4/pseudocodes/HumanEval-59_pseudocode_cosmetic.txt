```
FUNCTION largest_prime_factor(n)
    FUNCTION is_prime(k)
        RETURN (k >= 2) AND (NOT ANY(i | i FROM 2 TO k-1 WHERE k MODULO i = 0))
    END FUNCTION

    FUNCTION find_largest_divisor(current, limit, acc)
        IF current > limit THEN
            RETURN acc
        ELSE
            acc := (acc > current AND is_prime(current) AND n MODULO current = 0) ? acc : acc
            acc := (n MODULO current = 0 AND is_prime(current) AND current > acc) ? current : acc
            RETURN find_largest_divisor(current + 1, limit, acc)
    END FUNCTION

    RETURN find_largest_divisor(2, n, 1)
END FUNCTION
```