```
FUNCTION get_row(two_dimensional_list, target_integer)
    FUNCTION find_positions(current_row, acc)
        IF current_row >= LENGTH(two_dimensional_list) THEN
            RETURN acc
        ELSE
            FUNCTION scan_columns(col, acc_col)
                IF col >= LENGTH(two_dimensional_list[current_row]) THEN
                    RETURN acc_col
                ELSE
                    acc_col_new = IF two_dimensional_list[current_row][col] = target_integer THEN acc_col + [(current_row, col)] ELSE acc_col
                    RETURN scan_columns(col + 1, acc_col_new)
            END FUNCTION
            updated_acc = acc + scan_columns(0, [])
            RETURN find_positions(current_row + 1, updated_acc)
    END FUNCTION

    matches = find_positions(0, [])

    matches_sorted_first = SORT(matches, BY=(lambda x: x[0]), ORDER=ASCENDING)
    matches_sorted = SORT(matches_sorted_first, BY=(lambda x: x[1]), ORDER=DESCENDING)

    RETURN matches_sorted
END FUNCTION
```