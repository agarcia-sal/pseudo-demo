```
FUNCTION minSubArraySum(list_of_integers)
    LET negate = FUNCTION(x) RETURN -x END FUNCTION
    LET accumulate = FUNCTION(arr, index, current_sum, best_sum)
        IF index == LENGTH(arr) THEN
            RETURN best_sum
        ELSE
            LET updated_sum = MAX(0, current_sum + negate(arr[index]))
            LET updated_best = MAX(best_sum, updated_sum)
            RETURN accumulate(arr, index + 1, updated_sum, updated_best)
        END IF
    END FUNCTION
    LET best_neg_sum = accumulate(list_of_integers, 0, 0, 0)
    LET minimum_sum = IF best_neg_sum == 0 THEN MAXIMUM(APPLY(negate, list_of_integers)) ELSE best_neg_sum END IF
    RETURN -minimum_sum
END FUNCTION
```