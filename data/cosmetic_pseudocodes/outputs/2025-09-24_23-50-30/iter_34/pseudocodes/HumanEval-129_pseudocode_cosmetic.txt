```
FUNCTION minPath(grid, k)
  LET m ← LENGTH OF grid
  LET w ← m * m + 1
  LET u ← 0
  WHILE u < m
    LET v ← 0
    WHILE v < m
      WHEN grid AT u AND v = 1 DO
        LET z ← []
        IF u > 0
          APPEND grid AT (u - 1) AND v TO z
        END IF
        IF v > 0
          APPEND grid AT u AND (v - 1) TO z
        END IF
        IF u < m - 1
          APPEND grid AT (u + 1) AND v TO z
        END IF
        IF v < m - 1
          APPEND grid AT u AND (v + 1) TO z
        END IF
        LET w ← MINIMUM OF z
      END
      v ← v + 1
    END WHILE
    u ← u + 1
  END WHILE

  LET x ← []
  FOR y FROM 0 TO k - 1
    LET r ← (y MOD 2) = 0 ? 1 : w
    APPEND r TO x
  END FOR

  RETURN x
END FUNCTION
```