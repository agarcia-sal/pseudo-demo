```
FUNCTION tri(omega)
    MATCH omega WITH
        | 0 -> RETURN [1]
        | _ ->
            LET kappa <- [1, 3]
            LET FUNCTION loop(delta, epsilon)
                IF delta > omega THEN RETURN epsilon
                LET zeta <- delta MOD 2 = 0
                IF zeta THEN 
                    LET rho <- (delta DIV 2) + 1
                    LET sigma <- epsilon + [rho]
                    RETURN loop(delta + 1, sigma)
                ELSE 
                    LET tau <- (epsilon AT (delta - 1)) + (epsilon AT (delta - 2)) + ((delta + 3) DIV 2)
                    LET upsilon <- epsilon + [tau]
                    RETURN loop(delta + 1, upsilon)
                END IF
            END FUNCTION
            RETURN loop(2, kappa)
    END MATCH
END FUNCTION
```