```
FUNCTION f(integer_n)
    INIT result_map AS empty map
    PROCEDURE accumulate_even(position, acc)
        IF position > integer_n THEN RETURN
        IF (position MOD 2) != 1 THEN
            LET product_accumulate = 1
            PROCEDURE factorial_loop(counter)
                IF counter > position THEN RETURN
                LET product_accumulate = product_accumulate * counter
                factorial_loop(counter + 1)
            END PROCEDURE
            factorial_loop(1)
            result_map[position] = product_accumulate
        ELSE
            LET sum_accumulate = 0
            LET walker = 1
            WHILE walker <= position DO
                sum_accumulate = sum_accumulate + walker
                walker = walker + 1
            END WHILE
            result_map[position] = sum_accumulate
        END IF
        accumulate_even(position + 1, acc)
    END PROCEDURE
    accumulate_even(1, 0)
    LET output_seq = []
    FOR key FROM 1 TO integer_n DO
        APPEND result_map[key] TO output_seq
    END FOR
    RETURN output_seq
END FUNCTION
```