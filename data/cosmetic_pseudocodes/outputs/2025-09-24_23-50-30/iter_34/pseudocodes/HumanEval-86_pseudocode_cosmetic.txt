```
FUNCTION anti_shuffle(input_string)
    SET word_map TO MAP()
    SET word_sequence TO SPLIT input_string BY " "
    SET index TO 0

    FUNCTION process_words(idx)
        IF idx EQUALS LENGTH(word_sequence) THEN
            RETURN
        END IF
        SET current_word TO word_sequence[idx]
        SET char_array TO ARRAY FROM current_word
        SET sorted_array TO char_array
        CALL sorted_array.SORT_ASC()

        SET reordered_word TO ""
        SET pos TO 0
        WHILE pos < LENGTH(sorted_array) DO
            SET reordered_word TO reordered_word + sorted_array[pos]
            SET pos TO pos + 1
        END WHILE

        SET word_map[idx] TO reordered_word
        CALL process_words(idx + 1)
    END FUNCTION

    CALL process_words(index)

    SET result_parts TO ARRAY()
    SET key TO 0
    WHILE key < LENGTH(word_map) DO
        APPEND word_map[key] TO result_parts
        SET key TO key + 1
    END WHILE

    SET final_string TO ""
    SET counter TO 0
    WHILE counter < LENGTH(result_parts) DO
        SET final_string TO final_string + result_parts[counter]
        IF counter < LENGTH(result_parts) - 1 THEN
            SET final_string TO final_string + " "
        END IF
        SET counter TO counter + 1
    END WHILE

    RETURN final_string
END FUNCTION
```