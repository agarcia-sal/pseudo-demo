```
FUNCTION search(collection_of_numbers)
    FUNCTION accumulate_frequencies(items, counts, position)
        IF position >= LENGTH(items)
            RETURN counts
        ELSE
            LET current_number = items[position]
            LET updated_counts = counts
            updated_counts[current_number] = updated_counts[current_number] + 1
            RETURN accumulate_frequencies(items, updated_counts, position + 1)
    END FUNCTION

    LET maximum_value = 0
    FUNCTION find_maximum(items, pos, current_max)
        IF pos >= LENGTH(items)
            RETURN current_max
        ELSE
            LET temp = items[pos]
            LET new_max = IF temp > current_max THEN temp ELSE current_max
            RETURN find_maximum(items, pos + 1, new_max)
    END FUNCTION

    LET max_num = find_maximum(collection_of_numbers, 0, 0)
    LET frequency_array = ARRAY_OF_LENGTH(max_num + 1) WITH_ALL_VALUES 0

    LET frequency_array = accumulate_frequencies(collection_of_numbers, frequency_array, 0)

    FUNCTION check_indices(freq_array, idx, current_ans)
        IF idx > LENGTH(freq_array) - 1
            RETURN current_ans
        ELSE
            LET condition_true = freq_array[idx] >= idx
            LET new_ans = IF condition_true THEN idx ELSE current_ans
            RETURN check_indices(freq_array, idx + 1, new_ans)
    END FUNCTION

    LET result_value = check_indices(frequency_array, 1, -1)
    RETURN result_value
END FUNCTION
```