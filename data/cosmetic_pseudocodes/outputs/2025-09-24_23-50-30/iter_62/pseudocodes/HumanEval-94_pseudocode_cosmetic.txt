```
FUNCTION skjkasdkd(array_input)
  FUNCTION isPrime(number_param)
    FUNCTION checkDivisor(current_divisor, limit_divisor)
      IF current_divisor > limit_divisor THEN
        RETURN True
      ELSE
        IF number_param MOD current_divisor = 0 THEN
          RETURN False
        ELSE
          RETURN checkDivisor(current_divisor + 1, limit_divisor)
        END IF
      END IF
    END FUNCTION
    RETURN checkDivisor(2, FLOOR(SQRT(number_param)) + 1)
  END FUNCTION

  SET highest_prime TO 0
  SET position_counter TO 0

  WHILE NOT (position_counter >= LENGTH(array_input)) DO
    IF (array_input[position_counter] > highest_prime) AND isPrime(array_input[position_counter]) THEN
      SET highest_prime TO array_input[position_counter]
    END IF
    SET position_counter TO position_counter + 1
  END WHILE

  FUNCTION sumDigits(digit_chars, accumulator)
    IF LENGTH(digit_chars) = 0 THEN
      RETURN accumulator
    ELSE
      RETURN sumDigits(SUBSTRING(digit_chars, 1), accumulator + TO_INTEGER(digit_chars[0]))
    END IF
  END FUNCTION

  RETURN sumDigits(TO_STRING(highest_prime), 0)
END FUNCTION
```