```
FUNCTION unique_digits(sequence_of_numbers)
  FUNCTION contains_only_odd_digits(number, accumulator)
    IF accumulator == 0 THEN
      RETURN TRUE
    ELSE
      LET digit = accumulator MOD 10
      LET remaining = accumulator DIV 10
      RETURN (digit MOD 2 == 1) AND contains_only_odd_digits(number, remaining)
    END IF
  END FUNCTION

  FUNCTION filter_odd_digits(index, input_list, collected)
    IF index == LENGTH(input_list) THEN
      RETURN collected
    ELSE
      LET current_value = input_list[index]
      LET new_collected = 
        IF contains_only_odd_digits(current_value, current_value) THEN
          collected + [current_value]
        ELSE
          collected
        END IF
      RETURN filter_odd_digits(index + 1, input_list, new_collected)
    END IF
  END FUNCTION
  
  LET filtered_list = filter_odd_digits(0, sequence_of_numbers, [])
  RETURN SORT(filtered_list)
END FUNCTION
```