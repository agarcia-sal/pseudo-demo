```
FUNCTION same_chars(sequence_alpha, sequence_beta)
    FUNCTION build_character_map(text_input)
        FUNCTION recursive_map(index, accumulator)
            IF index < 0 THEN
                RETURN accumulator
            ELSE
                SET current_character = text_input[index]
                SET updated_accumulator = accumulator WITH current_character MAPPED TO TRUE
                RETURN recursive_map(index - 1, updated_accumulator)
            END IF
        END FUNCTION
        RETURN recursive_map(LENGTH(text_input) - 1, EMPTY MAP)
    END FUNCTION

    FUNCTION maps_equal(map_one, map_two)
        FUNCTION keys_equal(list_one, list_two)
            IF LENGTH(list_one) <> LENGTH(list_two) THEN
                RETURN FALSE
            ELSE
                FUNCTION check_all(i)
                    IF i = LENGTH(list_one) THEN
                        RETURN TRUE
                    ELSE
                        IF (list_one[i] IN map_two) THEN
                            RETURN check_all(i + 1)
                        ELSE
                            RETURN FALSE
                        END IF
                    END IF
                END FUNCTION
                RETURN check_all(0)
            END IF
        END FUNCTION

        RETURN keys_equal(LIST OF KEYS IN map_one, LIST OF KEYS IN map_two)
    END FUNCTION

    RETURN maps_equal(build_character_map(sequence_alpha), build_character_map(sequence_beta))
END FUNCTION
```