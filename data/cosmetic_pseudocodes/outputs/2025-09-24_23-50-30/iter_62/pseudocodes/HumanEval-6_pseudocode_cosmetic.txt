```
FUNCTION parse_nested_parens(spaced_parentheses)
  FUNCTION parse_paren_group(inner_sequence)
    FUNCTION recursive_count(chars, index, depth_acc, max_acc)
      IF index EQUALS LENGTH(chars)
        RETURN max_acc
      ELSE
        SET current_char TO chars[index]
        SET updated_depth TO depth_acc + (IF current_char EQUALS '(' THEN 1 ELSE -1)
        SET updated_max TO (IF updated_depth > max_acc THEN updated_depth ELSE max_acc)
        RETURN recursive_count(chars, index + 1, updated_depth, updated_max)
      END IF
    END FUNCTION

    RETURN recursive_count(inner_sequence, 0, 0, 0)
  END FUNCTION

  SET split_groups TO FILTER(SPLIT(spaced_parentheses, ' '), LAMBDA x: LENGTH(x) > 0)
  SET result_list TO EMPTY_LIST
  FOR EACH element IN split_groups
    APPEND parse_paren_group(element) TO result_list
  END FOR
  RETURN result_list
END FUNCTION
```