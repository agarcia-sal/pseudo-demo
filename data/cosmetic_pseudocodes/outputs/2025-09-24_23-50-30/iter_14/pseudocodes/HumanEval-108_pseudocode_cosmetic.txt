```
FUNCTION count_nums(arr)
  FUNCTION digits_sum(num)
    IF NOT (num < 0) RETURN (FOLD_LEFT (+) (MAP TO_INT (TO_ARRAY (TO_STRING num))))
    LET abs_val = num * -1
    LET digits = MAP TO_INT (TO_ARRAY (TO_STRING abs_val))
    LET negated = CONS(head digits * -1, tail digits)
    RETURN FOLD_LEFT (+) negated
  END FUNCTION

  LET sums = []
  FOR idx = 0 TO LENGTH(arr) - 1
    LET current = arr[idx]
    sums = sums + [digits_sum(current)]
  END FOR

  LET positive_sums = []
  FOR val IN sums
    IF val > 0 THEN positive_sums = positive_sums + [val]
  END FOR

  RETURN LENGTH(positive_sums)
END FUNCTION
```