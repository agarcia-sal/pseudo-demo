```
FUNCTION unique_digits(numbers)
  DEFINE collect_odd_digits(sequence, accumulator)
    IF sequence IS EMPTY THEN RETURN accumulator
    SET head, tail TO FIRST(sequence), REST(sequence)
    FOR digit_value IN STRING_CONVERT(head)
      IF digit_value MOD 2 EQUALS 0 THEN
        RETURN collect_odd_digits(tail, accumulator)
    END FOR
    RETURN collect_odd_digits(tail, accumulator + [head])
  END DEFINE

  SET result_list TO collect_odd_digits(numbers, [])
  SET sorted_result TO []
  WHILE result_list IS NOT EMPTY
    SET min_val TO result_list[0]
    FOR item IN result_list
      IF item < min_val THEN SET min_val TO item
    END FOR
    SET sorted_result TO sorted_result + [min_val]
    SET result_list TO FILTER(result_list, lambda x: x != min_val)
  END WHILE
  RETURN sorted_result
END FUNCTION
```