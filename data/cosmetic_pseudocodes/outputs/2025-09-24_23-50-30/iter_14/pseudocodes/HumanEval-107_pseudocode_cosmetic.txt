```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        DECLARE str_num = TO_STRING(number)
        DECLARE idx_start = 0
        DECLARE idx_end = LENGTH(str_num) - 1

        WHILE idx_start < idx_end
            IF str_num[idx_start] != str_num[idx_end]
                RETURN FALSE
            idx_start = idx_start + 1
            idx_end = idx_end - 1
        END WHILE

        RETURN TRUE
    END FUNCTION

    DECLARE count_even = 0
    DECLARE count_odd = 0

    DECLARE current = 1
    WHILE current <= n
        IF NOT is_palindrome(current)
            current = current + 1
            CONTINUE
        END IF

        SWITCH current MOD 2
            CASE 0:
                count_even = count_even + 1
            CASE 1:
                count_odd = count_odd + 1
        END SWITCH

        current = current + 1
    END WHILE

    RETURN (count_even, count_odd)
END FUNCTION
```