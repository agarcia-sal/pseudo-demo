```
FUNCTION find_closest_elements(numbers)
    FUNCTION iterate_outer(i, best_pair, best_diff)
        IF i >= LENGTH(numbers)
            RETURN best_pair
        END IF

        FUNCTION iterate_inner(j, current_best_pair, current_best_diff)
            IF j >= LENGTH(numbers)
                RETURN (current_best_pair, current_best_diff)
            END IF

            IF i = j
                RETURN iterate_inner(j + 1, current_best_pair, current_best_diff)
            END IF

            DIFF <- numbers[i] - numbers[j]
            DIST <- IF DIFF >= 0 THEN DIFF ELSE -DIFF

            IF current_best_diff = NULL OR DIST < current_best_diff
                PAIR <- IF numbers[i] <= numbers[j] THEN (numbers[i], numbers[j]) ELSE (numbers[j], numbers[i])
                RETURN iterate_inner(j + 1, PAIR, DIST)
            ELSE
                RETURN iterate_inner(j + 1, current_best_pair, current_best_diff)
            END IF
        END FUNCTION

        (updated_pair, updated_diff) <- iterate_inner(0, best_pair, best_diff)
        RETURN iterate_outer(i + 1, updated_pair, updated_diff)
    END FUNCTION

    RETURN iterate_outer(0, NULL, NULL)
END FUNCTION
```