```
FUNCTION derivative(array_of_terms)
	DEFINE FUNCTION process_at_index(array_of_terms, integer_index)
		RETURN integer_index * array_of_terms[integer_index]
	END FUNCTION
	DEFINE FUNCTION build_result(integer_count)
		DEFINE FUNCTION iterate_accum(integer_current, integer_limit, list_accumulator)
			IF integer_current > integer_limit THEN
				RETURN list_accumulator
			ELSE
				RETURN iterate_accum(integer_current + 1, integer_limit, list_accumulator + [process_at_index(array_of_terms, integer_current)])
			END IF
		END FUNCTION
		RETURN iterate_accum(1, integer_count - 1, [])
	END FUNCTION
	RETURN build_result(LENGTH(array_of_terms))
END FUNCTION
```