```
FUNCTION median(sequence)
    DEFINE FUNCTION sorted_sequence(seq, idx, acc)
        IF idx < LENGTH(seq)
            RETURN sorted_sequence(seq, idx + 1, acc APPEND seq[idx])
        ELSE
            RETURN acc
    END FUNCTION

    DEFINE FUNCTION half_length(len)
        RETURN len / 2
    END FUNCTION

    DEFINE FUNCTION is_odd(len)
        RETURN (len % 2) == 1
    END FUNCTION

    DEFINE FUNCTION get_element(seq, position)
        RETURN seq[position]
    END FUNCTION

    VAR temp_sequence = sorted_sequence(sequence, 0, [])
    VAR size = LENGTH(temp_sequence)
    VAR middle = half_length(size)

    SWITCH TRUE
        CASE is_odd(size):
            RETURN get_element(temp_sequence, middle)
        DEFAULT:
            RETURN (get_element(temp_sequence, middle - 1) + get_element(temp_sequence, middle)) * 0.5
    END SWITCH
END FUNCTION
```