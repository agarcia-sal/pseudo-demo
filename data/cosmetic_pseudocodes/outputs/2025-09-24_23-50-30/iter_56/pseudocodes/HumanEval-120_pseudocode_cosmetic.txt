```
FUNCTION maximum(array_of_integers, positive_integer_k)
    LOOP_START:
        CASE positive_integer_k = 0 OF
            TRUE:
                RETURN []
            FALSE:
                BREAK LOOP_START
        ENDCASE
    DEFINE sorted_collection AS array_of_integers
    SET i_aux TO 0
    WHILE i_aux < LENGTH(sorted_collection) - 1
        SET j_aux TO 0
        WHILE j_aux < LENGTH(sorted_collection) - i_aux - 1
            IF NOT (sorted_collection[j_aux] <= sorted_collection[j_aux + 1]) THEN
                SET temp_aux TO sorted_collection[j_aux]
                SET sorted_collection[j_aux] TO sorted_collection[j_aux + 1]
                SET sorted_collection[j_aux + 1] TO temp_aux
            ENDIF
            SET j_aux TO j_aux + 1
        ENDWHILE
        SET i_aux TO i_aux + 1
    ENDWHILE
    DEFINE length_aux AS LENGTH(sorted_collection)
    DEFINE start_index_aux AS length_aux - positive_integer_k
    DEFINE output_list_aux AS []
    SET index_aux TO start_index_aux
    WHILE index_aux < length_aux
        APPEND sorted_collection[index_aux] TO output_list_aux
        SET index_aux TO index_aux + 1
    ENDWHILE
    RETURN output_list_aux
END FUNCTION
```