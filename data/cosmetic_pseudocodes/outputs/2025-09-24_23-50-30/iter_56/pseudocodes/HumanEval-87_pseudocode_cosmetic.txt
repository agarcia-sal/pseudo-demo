```
FUNCTION get_row(p_matrix, p_value)
    PROCEDURE traverse_rows(i_r, acc)
        IF i_r < LENGTH(p_matrix) THEN
            PROCEDURE traverse_cols(i_c, acc2)
                IF i_c < LENGTH(p_matrix[i_r]) THEN
                    SET acc2 TO ((p_matrix[i_r][i_c] = p_value) ? acc2 + [(i_r, i_c)] : acc2)
                    RETURN traverse_cols(i_c + 1, acc2)
                ELSE 
                    RETURN acc2
            END PROCEDURE
            RETURN traverse_rows(i_r + 1, traverse_cols(0, acc))
        ELSE 
            RETURN acc
    END PROCEDURE

    SET coords TO traverse_rows(0, [])

    FUNCTION compare_by_first_then_second(t1, t2)
        SWITCH TRUE
            CASE t1[0] < t2[0]: RETURN -1
            CASE t1[0] > t2[0]: RETURN 1
            CASE t1[1] > t2[1]: RETURN -1
            CASE t1[1] < t2[1]: RETURN 1
            DEFAULT: RETURN 0
    END FUNCTION

    SET coords TO SORT(coords, compare_by_first_then_second)

    RETURN coords
END FUNCTION
```