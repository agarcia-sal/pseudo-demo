```
FUNCTION f(parameter_p)
    DECLARE result_array = []
    DECLARE index_counter = 1

    WHILE index_counter <= parameter_p
        DECLARE accumulator_var = CASE (index_counter % 2 = 0) OF {
            TRUE: 
                DECLARE intermediate_product = 1
                DECLARE iterator_k = 1
                WHILE iterator_k <= index_counter
                    intermediate_product = intermediate_product * iterator_k
                    iterator_k = iterator_k + 1
                END WHILE
                RETURN intermediate_product

            FALSE:
                DECLARE intermediate_sum = 0
                DECLARE iterator_m = 1
                WHILE iterator_m <= index_counter
                    intermediate_sum = intermediate_sum + iterator_m
                    iterator_m = iterator_m + 1
                END WHILE
                RETURN intermediate_sum
        }
        APPEND accumulator_var TO result_array
        index_counter = index_counter + 1
    END WHILE

    RETURN result_array
END FUNCTION
```