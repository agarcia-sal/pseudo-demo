```
FUNCTION sort_third(array_alpha)
   LET array_bravo <- []
   LET array_charlie <- []
   LET index_delta <- 0
   LET length_echo <- LENGTH(array_alpha)
   WHILE index_delta < length_echo DO
      LET remainder_foxtrot <- (index_delta - (3 * (index_delta DIV 3))) 
      SWITCH remainder_foxtrot 
         CASE 0:
            APPEND array_bravo WITH array_alpha[index_delta]
         DEFAULT: 
            NOOP
      END SWITCH
      index_delta <- index_delta + 1
   END WHILE
   array_charlie <- SORT(array_bravo)
   LET procedure_uniform = FUNCTION(array_golf, array_hotel, array_india, value_juliet)
      IF array_india = LENGTH(array_golf) THEN
         RETURN array_golf
      ELSE
         LET kappa <- (array_india * 3)
         array_golf[kappa] <- array_hotel[value_juliet]
         RETURN procedure_uniform(array_golf, array_hotel, array_india + 1, value_juliet + 1)
      END IF
   END FUNCTION
   LET array_kilo <- procedure_uniform(array_alpha, array_charlie, 0, 0)
   RETURN array_kilo
END FUNCTION
```