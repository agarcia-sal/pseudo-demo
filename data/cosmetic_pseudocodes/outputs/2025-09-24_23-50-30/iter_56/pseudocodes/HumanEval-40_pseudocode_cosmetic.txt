```
FUNCTION triples_sum_to_zero(sequence_alpha)
    label_outer:
        index_beta = 0
        WHILE index_beta < (SIZE(sequence_alpha) - 2)
            index_gamma = index_beta + 1
            label_middle:
            WHILE index_gamma < (SIZE(sequence_alpha) - 1)
                index_delta = index_gamma + 1
                label_inner:
                WHILE index_delta < SIZE(sequence_alpha)
                    CONDITIONAL_RESULT = NOT((sequence_alpha[index_beta] + sequence_alpha[index_gamma] + sequence_alpha[index_delta]) != 0)
                    SWITCH CONDITIONAL_RESULT
                        CASE True:
                            RETURN True
                        DEFAULT:
                            index_delta = index_delta + 1
                            CONTINUE label_inner
                    END SWITCH
                END WHILE
                index_gamma = index_gamma + 1
                CONTINUE label_middle
            END WHILE
            index_beta = index_beta + 1
            CONTINUE label_outer
        END WHILE
    RETURN False
END FUNCTION
```