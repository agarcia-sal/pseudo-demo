```
FUNCTION sort_even(list_of_elements)
    SET temp_list_a TO []
    SET temp_list_b TO []
    SET idx_c TO 0
    WHILE idx_c < LENGTH(list_of_elements)
        idx_c MOD 2 = 0 ? APPEND list_of_elements[idx_c] TO temp_list_a : APPEND list_of_elements[idx_c] TO temp_list_b
        idx_c = idx_c + 1
    END WHILE

    FUNCTION iterative_sort(array_X)
        SET limit_Y TO LENGTH(array_X)
        SET pos_Z TO 1
        WHILE pos_Z < limit_Y
            SET key_W TO array_X[pos_Z]
            SET idx_V TO pos_Z - 1
            WHILE idx_V >= 0 AND array_X[idx_V] > key_W
                array_X[idx_V + 1] = array_X[idx_V]
                idx_V = idx_V - 1
            END WHILE
            array_X[idx_V + 1] = key_W
            pos_Z = pos_Z + 1
        END WHILE
        RETURN array_X
    END FUNCTION

    SET sorted_even TO iterative_sort(temp_list_a)

    SET accumulator_M TO []
    SET idx_N TO 0
    WHILE idx_N < LENGTH(temp_list_b) AND idx_N < LENGTH(sorted_even)
        APPEND sorted_even[idx_N] TO accumulator_M
        APPEND temp_list_b[idx_N] TO accumulator_M
        idx_N = idx_N + 1
    END WHILE

    IF LENGTH(sorted_even) > LENGTH(temp_list_b)
        APPEND sorted_even[LENGTH(sorted_even) - 1] TO accumulator_M
    END IF

    RETURN accumulator_M
END FUNCTION
```