```
FUNCTION fibfib(index_k)
    SWITCH TRUE
        CASE (index_k EQUALS 0): RETURN 0
        CASE (index_k EQUALS 1): RETURN 0
        CASE (index_k EQUALS 2): RETURN 1
    END SWITCH

    FUNCTION helper(depth_x)
        LET queue_sequence BE [0, 0, 1]
        LET pointer_y BE 3
        LOOP_LABEL:
            IF pointer_y GREATER_THAN depth_x THEN
                RETURN queue_sequence[depth_x]
            END IF
            LET fresh_z BE queue_sequence[pointer_y - 1] + queue_sequence[pointer_y - 2] + queue_sequence[pointer_y - 3]
            CALL queue_sequence.APPEND(fresh_z)
            LET pointer_y BE pointer_y + 1
            GOTO LOOP_LABEL
    END FUNCTION

    RETURN helper(index_k)
END FUNCTION
```