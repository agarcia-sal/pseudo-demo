```
FUNCTION unique_digits(list_of_positive_integers)
  
  FUNCTION digits_all_odd?(number_param)
    FUNCTION aux_check_odd(dividend_param)
      SELECT 
        CASE dividend_param = 0:
          RETURN true
        CASE (dividend_param MOD 10) MOD 2 = 0:
          RETURN false
        DEFAULT:
          RETURN aux_check_odd((dividend_param - (dividend_param MOD 10)) / 10)
      END SELECT
    END FUNCTION
    RETURN aux_check_odd(number_param)
  END FUNCTION

  VAR accumulation_list VAR12345 TO empty array
  VAR iteration_index VAR67890 TO 0
  VAR upper_limit VAR54321 TO LENGTH(list_of_positive_integers)

  WHILE NOT (iteration_index VAR67890 = upper_limit VAR54321)
    VAR current_candidate VAR99999 TO list_of_positive_integers[iteration_index VAR67890]
    IF digits_all_odd?(current_candidate VAR99999)
      accumulation_list VAR12345 PUSH current_candidate VAR99999
    END IF
    iteration_index VAR67890 = iteration_index VAR67890 + 1
  END WHILE
  
  RETURN SORT(accumulation_list VAR12345, ascending)
END FUNCTION
```