```
FUNCTION max_fill(container, limit)
    IMPORT math
    FUNCTION aggregate(values, accumulator, index)
        IF index = LENGTH(values) THEN
            RETURN accumulator
        ELSE
            RETURN aggregate(values, accumulator + values[index], index + 1)
        ENDIF
    END FUNCTION

    FUNCTION row_total(row_data)
        RETURN aggregate(row_data, 0, 0)
    END FUNCTION

    FUNCTION compute_ceiling(dividend, divisor)
        RETURN math ceiling(dividend / divisor)
    END FUNCTION

    FUNCTION process_rows(data, idx, tally)
        IF idx = LENGTH(data) THEN
            RETURN tally
        ELSE
            LET current_sum = row_total(data[idx])
            RETURN process_rows(data, idx + 1, tally + compute_ceiling(current_sum, limit))
        ENDIF
    END FUNCTION

    RETURN process_rows(container, 0, 0)
END FUNCTION
```