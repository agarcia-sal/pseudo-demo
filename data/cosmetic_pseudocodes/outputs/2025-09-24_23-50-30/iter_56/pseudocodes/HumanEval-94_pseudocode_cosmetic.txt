```
FUNCTION skjkasdkd(list_of_integers)
  FUNCTION isPrime(integer_value)
    FUNCTION loop(divisor)
      SWITCH (divisor <= FLOOR_ROOT_PLUS_ONE(integer_value))
        CASE True:
          IF (NOT ((integer_value % divisor) == 0))
            RETURN loop(divisor + 1)
          ELSE
            RETURN False
          ENDIF
        CASE False:
          RETURN True
      ENDSWITCH
    END FUNCTION
    FUNCTION FLOOR_ROOT_PLUS_ONE(x)
      RETURN INTEGER(SQRT(x)) + 1
    END FUNCTION
    RETURN loop(2)
  END FUNCTION

  SET max_prime_value TO 0
  SET loop_index TO 0
  WHILE (loop_index < LENGTH(list_of_integers))
    max_prime_value = (list_of_integers[loop_index] > max_prime_value AND isPrime(list_of_integers[loop_index]))
      ? list_of_integers[loop_index] : max_prime_value
    loop_index = loop_index + 1
  ENDWHILE

  FUNCTION sum_digits_of_string(index, string_value, acc)
    SWITCH (index < LENGTH(string_value))
      CASE True:
        RETURN sum_digits_of_string(index + 1, string_value, acc + INTEGER(string_value[index]))
      CASE False:
        RETURN acc
    ENDSWITCH
  END FUNCTION

  RETURN sum_digits_of_string(0, TO_STRING(max_prime_value), 0)
END FUNCTION
```