```
FUNCTION select_words(omega_alpha, beta_gamma)
  DECLARE theta_lambda AS list = []
  DECLARE delta_phi AS list = []
  DECLARE mu_sigma AS integer = 0

  PROCEDURE epsilon_kappa(zeta_eta)
    IF zeta_eta = LENGTH(delta_phi) THEN RETURN
    ELSE
      IF NOT((LOWERCASE(delta_phi[zeta_eta]) = "a") OR (LOWERCASE(delta_phi[zeta_eta]) = "e") OR (LOWERCASE(delta_phi[zeta_eta]) = "i") OR (LOWERCASE(delta_phi[zeta_eta]) = "o") OR (LOWERCASE(delta_phi[zeta_eta]) = "u")) THEN
        mu_sigma = mu_sigma + 1
      END IF
      epsilon_kappa(zeta_eta + 1)
    END IF
  END PROCEDURE

  PROCEDURE eta_xi(phi_pi)
    IF phi_pi = LENGTH(beta_gamma_xi) THEN RETURN
    ELSE
      delta_phi = LIST_FROM_STRING(beta_gamma_xi[phi_pi])
      mu_sigma = 0
      epsilon_kappa(0)
      IF mu_sigma = beta_gamma THEN theta_lambda = APPEND(theta_lambda, beta_gamma_xi[phi_pi]) END IF
      eta_xi(phi_pi + 1)
    END IF
  END PROCEDURE

  beta_gamma_xi = STRING_SPLIT(omega_alpha, " ")
  eta_xi(0)
  RETURN theta_lambda
END FUNCTION
```