```
FUNCTION pluck(delta)
  IF NOT (1 <= LENGTH OF delta) THEN
    RETURN []
  ENDIF

  FUNCTION extract_evens(epsilon, zeta)
    IF zeta < 1 THEN RETURN epsilon ENDIF
    LET eta = delta[zeta - 1]
    LET theta = (eta MOD 2 = 0)
    RETURN extract_evens(IF theta THEN epsilon + [eta] ELSE epsilon ENDIF, zeta - 1)
  ENDFUNCTION

  LET iota = extract_evens([], LENGTH OF delta)
  IF NOT (1 <= LENGTH OF iota) THEN RETURN [] ENDIF

  FUNCTION find_minimum(kappa, lambda)
    IF lambda = 1 THEN RETURN kappa[1] ENDIF
    LET mu = find_minimum(kappa, lambda - 1)
    RETURN IF kappa[lambda] < mu THEN kappa[lambda] ELSE mu ENDIF
  ENDFUNCTION

  LET nu = find_minimum(iota, LENGTH OF iota)

  FUNCTION locate_index(xi, omicron, pi)
    IF pi > LENGTH OF xi THEN RETURN -1 ENDIF
    IF xi[pi] = omicron THEN RETURN pi - 1 ELSE RETURN locate_index(xi, omicron, pi + 1) ENDIF
  ENDFUNCTION

  LET rho = locate_index(delta, nu, 1)

  RETURN [nu, rho]
END FUNCTION
```