```
FUNCTION sort_numbers(alphanumeric_blob)
  LET numeric_lookup BE A MAPPING FROM STRING TO INTEGER WHERE
    'one' => 1,
    'seven' => 7,
    'two' => 2,
    'zero' => 0,
    'five' => 5,
    'six' => 6,
    'three' => 3,
    'eight' => 8,
    'four' => 4,
    'nine' => 9
  LET fragment_collection BE AN EMPTY LIST
  FOR EACH token IN SPLIT alphanumeric_blob BY ' '
    IF LENGTH(token) > 0 THEN
      APPEND token TO fragment_collection
  LET ordered_fragments BE A LIST CONTAINING THE SAME ELEMENTS AS fragment_collection
  PERFORM SORT ON ordered_fragments USING COMPARATOR comp_func WHERE
    comp_func(x, y) RETURNS TRUE IF numeric_lookup[x] - numeric_lookup[y] < 0 ELSE FALSE
  LET result_string BE EMPTY STRING
  LET index_variable BE 0
  WHILE index_variable < LENGTH(ordered_fragments)
    IF index_variable != 0 THEN APPEND ' ' TO result_string
    CONCATENATE ordered_fragments[index_variable] TO result_string
    INCREMENT index_variable BY 1
  RETURN result_string
END FUNCTION
```