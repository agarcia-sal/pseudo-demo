```
FUNCTION common(epsilon, delta)
    DECLARE omega as empty list
    PROCEDURE traverse_alpha_beta(xi, zeta, eta)
        IF xi > length(epsilon) THEN RETURN
        IF zeta > length(delta) THEN
            CALL traverse_alpha_beta(xi + 1, 1, eta)
        ELSE
            IF NOT (epsilon[xi] <> delta[zeta]) THEN
                IF NOT (epsilon[xi] IN eta) THEN
                    APPEND epsilon[xi] TO eta
                ENDIF
            ENDIF
            CALL traverse_alpha_beta(xi, zeta + 1, eta)
        ENDIF
    END PROCEDURE
    CALL traverse_alpha_beta(1, 1, omega)
    DECLARE theta as empty list
    FOR i FROM 1 TO length(omega) DO
        DECLARE j as 1
        WHILE j <= length(theta) AND NOT (theta[j] > omega[i]) DO
            j = j + 1
        END WHILE
        INSERT omega[i] INTO theta AT POSITION j
    END FOR
    RETURN theta
END FUNCTION
```