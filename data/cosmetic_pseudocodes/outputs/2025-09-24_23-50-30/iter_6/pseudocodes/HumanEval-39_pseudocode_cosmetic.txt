```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF 1 GREATER OR EQUAL integer_p
            RETURN False

        SET integer_q TO 2
        SET integer_r TO MIN((FLOOR(SQUARE_ROOT(integer_p)) + 1), integer_p - 1)

        WHILE integer_q LESS OR EQUAL integer_r
            IF (integer_p - (integer_p DIV integer_q) * integer_q) EQUALS 0
                RETURN False
            INCREMENT integer_q BY 1

        RETURN True
    END FUNCTION

    SET list_fibonacci TO [0,1]

    LOOP_FOREVER:
        LET integer_a BE list_fibonacci[COUNT(list_fibonacci) - 1]
        LET integer_b BE list_fibonacci[COUNT(list_fibonacci) - 2]
        APPEND (integer_a + integer_b) TO list_fibonacci

        IF is_prime(list_fibonacci[COUNT(list_fibonacci) - 1])
            integer_n ‚Üê integer_n - 1

        IF integer_n EQUALS 0
            RETURN list_fibonacci[COUNT(list_fibonacci) - 1]

        GOTO LOOP_FOREVER
END FUNCTION
```