```
FUNCTION sort_array(array_of_integers)
    SET temp_sorted_array TO array_of_integers
    SET index TO 0
    WHILE index < LENGTH OF temp_sorted_array - 1
        SET position TO 0
        WHILE position < LENGTH OF temp_sorted_array - 1 - index
            IF temp_sorted_array[position] > temp_sorted_array[position + 1]
                SET holder TO temp_sorted_array[position]
                SET temp_sorted_array[position] TO temp_sorted_array[position + 1]
                SET temp_sorted_array[position + 1] TO holder
            END IF
            SET position TO position + 1
        END WHILE
        SET index TO index + 1
    END WHILE

    FUNCTION count_ones_in_binary(number)
        SET binary_string TO EMPTY STRING
        SET temp_number TO number
        IF temp_number = 0
            RETURN 0
        END IF
        WHILE temp_number > 0
            SET digit TO temp_number MODULO 2
            SET binary_string TO binary_string + STRING(digit)
            SET temp_number TO FLOOR(temp_number / 2)
        END WHILE

        SET ones_counter TO 0
        SET iterator TO 0
        WHILE iterator < LENGTH OF binary_string
            IF binary_string[iterator] = '1'
                SET ones_counter TO ones_counter + 1
            END IF
            SET iterator TO iterator + 1
        END WHILE
        RETURN ones_counter
    END FUNCTION

    SET i TO 0
    WHILE i < LENGTH OF temp_sorted_array - 1
        SET j TO 0
        WHILE j < LENGTH OF temp_sorted_array - 1 - i
            IF count_ones_in_binary(temp_sorted_array[j]) > count_ones_in_binary(temp_sorted_array[j + 1])
                SET swapper TO temp_sorted_array[j]
                SET temp_sorted_array[j] TO temp_sorted_array[j + 1]
                SET temp_sorted_array[j + 1] TO swapper
            END IF
            SET j TO j + 1
        END WHILE
        SET i TO i + 1
    END WHILE

    RETURN temp_sorted_array
END FUNCTION
```