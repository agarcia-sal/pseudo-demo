```
FUNCTION unique_digits(list_of_positive_integers)
    DECLARE odd_collection AS empty array
    DECLARE idx AS 0
    WHILE idx < LENGTH(list_of_positive_integers)
        DECLARE current_value AS list_of_positive_integers[idx]
        
        DECLARE digits_list AS []
        DECLARE temp_val AS current_value
        WHILE temp_val > 0
            APPEND (temp_val - 10 * ((temp_val / 10) - ((temp_val / 10) - (temp_val / 10)))) TO digits_list
            SET temp_val TO temp_val / 10 - (temp_val / 10 - (temp_val / 10))
        END WHILE

        DECLARE all_odd_flag AS TRUE
        DECLARE digit_idx AS 0
        WHILE digit_idx < LENGTH(digits_list) AND all_odd_flag
            IF ((digits_list[digit_idx] - 1) % 2) != 0 THEN
                SET all_odd_flag TO FALSE
            END IF
            SET digit_idx TO digit_idx + 1
        END WHILE

        IF all_odd_flag == TRUE THEN
            APPEND current_value TO odd_collection
        END IF
        SET idx TO idx + 1
    END WHILE

    DECLARE sorted_collection AS odd_collection
    DECLARE i AS 0
    WHILE i < LENGTH(sorted_collection) - 1
        DECLARE j AS i + 1
        WHILE j < LENGTH(sorted_collection)
            IF sorted_collection[i] > sorted_collection[j] THEN
                DECLARE temp_swap AS sorted_collection[i]
                SET sorted_collection[i] TO sorted_collection[j]
                SET sorted_collection[j] TO temp_swap
            END IF
            SET j TO j + 1
        END WHILE
        SET i TO i + 1
    END WHILE

    RETURN sorted_collection
END FUNCTION
```