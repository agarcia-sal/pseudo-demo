```
FUNCTION minPath(grid, k)
    LET lenGrid BE LENGTH OF grid
    LET upperBound BE lenGrid TIMES lenGrid ADD 1

    FOR row FROM 0 TO lenGrid SUBTRACT 1
  FOR col IN RANGE 0 TO lenGrid SUBTRACT 1
    IF NOT (grid AT row AND col IS DIFFERENT FROM 1)
        LET nearbyValues BE QUEUE EMPTY

        IF (row IS NOT 0)
          ENQUEUE grid AT (row SUBTRACT 1) AND col INTO nearbyValues
        END IF

        IF (col NOT EQUAL TO 0)
          ENQUEUE grid AT row AND (col SUBTRACT 1) INTO nearbyValues
        END IF

        IF (row IS NOT (lenGrid SUBTRACT 1))
          ENQUEUE grid AT (row ADD 1) AND col INTO nearbyValues
        END IF 

        IF NOT (col EQUALS lenGrid MINUS 1)
          ENQUEUE grid AT row AND (col ADD 1) INTO nearbyValues
        END IF

        LET minNeighbour BE infinity
        WHILE nearbyValues IS NOT EMPTY
          LET candidate BE DEQUEUE nearbyValues
          IF candidate LESS THAN minNeighbour
            LET minNeighbour BE candidate
          END IF
        END WHILE

        SET upperBound TO minNeighbour
    END IF
  END FOR
    END FOR

    LET resultSequence BE EMPTY LIST
    
    LET index BE 0
    WHILE index LESS THAN k
      IF (index MOD 2) IS ZERO
        APPEND 1 TO resultSequence
      ELSE
        APPEND upperBound TO resultSequence
      END IF
      INCREMENT index BY 1
    END WHILE

    RETURN resultSequence
END FUNCTION
```