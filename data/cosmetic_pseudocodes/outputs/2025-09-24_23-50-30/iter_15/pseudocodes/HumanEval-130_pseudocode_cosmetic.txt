```
FUNCTION tri(integer_n)
    DECLARE result_queue AS QUEUE
    IF NOT (integer_n > 0) THEN
        ENQUEUE 1 INTO result_queue
        RETURN LIST(result_queue)
    END IF

    SET result_queue TO QUEUE CONTAINING 1, 3

    DECLARE loop_counter AS INTEGER
    SET loop_counter TO 2

    WHILE (loop_counter <= integer_n) DO
        DECLARE condition_flag AS BOOLEAN
        SET condition_flag TO ((loop_counter MOD 2) = 0)

        IF condition_flag THEN
            ENQUEUE ((loop_counter / 2) + 1) INTO result_queue
        ELSE
            DECLARE prev_val1 AS INTEGER
            DECLARE prev_val2 AS INTEGER
            SET prev_val1 TO VALUE AT (loop_counter - 1) FROM result_queue AS LIST
            SET prev_val2 TO VALUE AT (loop_counter - 2) FROM result_queue AS LIST
            ENQUEUE (prev_val1 + prev_val2 + ((loop_counter + 3) / 2)) INTO result_queue
        END IF

        SET loop_counter TO loop_counter + 1
    END WHILE

    RETURN LIST(result_queue)
END FUNCTION
```