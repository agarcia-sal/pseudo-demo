``` 
FUNCTION intersection(interval1, interval2)
    FUNCTION is_prime(number)
        DECLARE divisor QUEUE
        SET divisor TO EMPTY QUEUE
        IF NOT (number IS GREATER THAN 2)
            IF number EQUALS 2
                RETURN True
            END IF
            RETURN False
        END IF
        
        DECLARE result BOOLEAN
        SET result TO True

        SET index TO 2
        WHILE index LESS THAN number
            IF number MODULO index IS 0
                SET result TO False
                BREAK
            END IF
            INCREMENT index BY 1
        END WHILE

        RETURN result
    END FUNCTION

    DECLARE a_number, b_number, length_value
    SET a_number TO interval1 AT 0
    SET b_number TO interval2 AT 0
    IF a_number LESS THAN b_number
        SET a_number TO b_number
    END IF

    SET b_number TO interval1 AT 1
    DECLARE temp_number
    SET temp_number TO interval2 AT 1
    IF b_number GREATER THAN temp_number
        SET b_number TO temp_number
    END IF

    SET length_value TO b_number - a_number

    IF NOT (length_value LESS THAN OR EQUAL TO 0) AND is_prime(length_value)
        RETURN "YES"
    END IF

    RETURN "NO"
END FUNCTION
```