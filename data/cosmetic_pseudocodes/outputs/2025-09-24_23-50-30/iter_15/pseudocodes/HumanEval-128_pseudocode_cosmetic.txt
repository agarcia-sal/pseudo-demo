```
FUNCTION prod_signs(list_of_integers)
	
	IF NOT (list_of_integers IS NOT EMPTY) THEN
		RETURN None
	END_IF

	SET zero_presence_flag TO False
	SET negative_count_accumulator TO 0
	SET index_tracker TO 0
	SET total_elements TO LENGTH OF list_of_integers

	WHILE index_tracker < total_elements DO
		IF list_of_integers[index_tracker] EQUALS 0 THEN
			zero_presence_flag = True
		ELSIF list_of_integers[index_tracker] LESS THAN 0 THEN
			negative_count_accumulator = negative_count_accumulator + 1
		END_IF
		index_tracker = index_tracker + 1
	END_WHILE
	
	IF zero_presence_flag = True THEN
		SET computed_sign TO 0
	ELSE
		SET computed_sign TO 1
		SET exponent_counter TO 0
		WHILE exponent_counter < negative_count_accumulator DO
			computed_sign = computed_sign * (-1)
			exponent_counter = exponent_counter + 1
		END_WHILE
	END_IF
	
	SET aggregated_magnitudes TO 0
	SET loop_cursor TO 0
	WHILE loop_cursor < total_elements DO
		aggregated_magnitudes = aggregated_magnitudes + ((list_of_integers[loop_cursor] * list_of_integers[loop_cursor]) / ABS(list_of_integers[loop_cursor]))
		loop_cursor = loop_cursor + 1
	END_WHILE
	
	RETURN computed_sign * aggregated_magnitudes
	
END_FUNCTION
```