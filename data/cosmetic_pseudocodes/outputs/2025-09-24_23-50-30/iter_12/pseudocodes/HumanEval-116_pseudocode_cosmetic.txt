```
FUNCTION sort_array(array_of_integers)
    DEFINE FUNCTION count_ones(binary_string)
        SET accumulator TO 0
        FOR EACH char IN binary_string
            IF char IS '1' THEN
                SET accumulator TO accumulator + 1
        RETURN accumulator
    END FUNCTION

    SET temp_list TO []
    SET index TO 0
    WHILE index < LENGTH(array_of_integers)
        SET item TO array_of_integers[index]
        SET temp_list TO temp_list + [item]
        SET index TO index + 1

    SET temp_list TO temp_list SORTED BY ascending order

    DEFINE FUNCTION sort_by_ones(list_to_sort)
        IF LENGTH(list_to_sort) <= 1 THEN
            RETURN list_to_sort
        ELSE
            SET pivot TO list_to_sort[0]
            SET pivot_key TO count_ones(STRING_BINARY(pivot)[FROM 3rd CHARACTER TO END])
            SET less_equal TO []
            SET greater TO []

            FOR i FROM 1 TO LENGTH(list_to_sort) - 1
                SET current TO list_to_sort[i]
                SET current_key TO count_ones(STRING_BINARY(current)[FROM 3rd CHARACTER TO END])
                IF current_key <= pivot_key THEN
                    SET less_equal TO less_equal + [current]
                ELSE
                    SET greater TO greater + [current]

            SET left_sorted TO sort_by_ones(less_equal)
            SET right_sorted TO sort_by_ones(greater)

            RETURN left_sorted + [pivot] + right_sorted
    END FUNCTION

    RETURN sort_by_ones(temp_list)
END FUNCTION
```