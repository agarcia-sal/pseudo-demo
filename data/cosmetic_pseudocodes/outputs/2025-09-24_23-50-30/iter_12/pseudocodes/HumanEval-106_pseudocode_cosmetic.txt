```
FUNCTION f(number_end)
    FUNCTION compute_factorial(current_num)
        IF current_num LESS THAN 2 THEN
            RETURN 1
        ELSE
            RETURN current_num MULTIPLIED BY compute_factorial(current_num MINUS 1)
        END IF
    END FUNCTION

    FUNCTION compute_sum(limit_num)
        SET seq TO [x FOR x FROM 1 TO limit_num]
        RETURN REDUCE(seq, (acc, val) -> acc PLUS val, 0)
    END FUNCTION

    SET output_array TO []
    SET counter TO 1

    WHILE counter LESS THAN OR EQUAL TO number_end
        SET is_even_flag TO NOT (counter MODULO 2 EQUALS 1)
        SET value_result TO is_even_flag ? compute_factorial(counter) : compute_sum(counter)
        APPEND value_result TO output_array
        INCREMENT counter BY 1
    END WHILE

    RETURN output_array
END FUNCTION
```