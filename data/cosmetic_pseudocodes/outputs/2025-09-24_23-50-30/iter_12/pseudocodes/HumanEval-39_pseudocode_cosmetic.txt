```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p GREATER_OR_EQUAL 2)
            RETURN False

        FUNCTION check_divisor(integer_k)
            IF integer_k GREATER_OR_EQUAL MINIMUM((integer_p MINUS 1), FLOOR(SQRT(integer_p)) PLUS 1)
                RETURN True
            IF integer_p MODULO integer_k EQUALS 0
                RETURN False
            RETURN check_divisor(integer_k PLUS 1)

        RETURN check_divisor(2)
    END FUNCTION

    SET list_fibonacci TO [0, 1]

    FUNCTION generate_next(list_fib)
        SET new_value TO list_fib[LAST INDEX] PLUS list_fib[LAST INDEX MINUS 1]
        RETURN list_fib CONCATENATED WITH [new_value]

    WHILE NOT (integer_n EQUALS 0)
        SET list_fibonacci TO generate_next(list_fibonacci)
        IF is_prime(list_fibonacci[LAST INDEX])
            SET integer_n TO integer_n MINUS 1
    RETURN list_fibonacci[LAST INDEX]
END FUNCTION
```