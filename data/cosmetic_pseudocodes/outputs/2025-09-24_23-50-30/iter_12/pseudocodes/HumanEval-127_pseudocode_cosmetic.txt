```
FUNCTION intersection(interval1, interval2)
    FUNCTION is_prime(number)
        IF number LESS THAN 2 THEN
            RETURN False
        END IF
        SET divisor TO 2
        WHILE divisor LESS THAN number
            IF (number - (number DIV divisor) * divisor) EQUAL 0 THEN
                RETURN False
            END IF
            SET divisor TO divisor + 1
        END WHILE
        RETURN True
    END FUNCTION

    SET start_pos TO interval1[0]
    IF interval2[0] GREATER THAN start_pos THEN
        SET start_pos TO interval2[0]
    END IF

    SET end_pos TO interval1[1]
    IF interval2[1] LESS THAN end_pos THEN
        SET end_pos TO interval2[1]
    END IF

    SET diff TO end_pos - start_pos
    SWITCH
        CASE diff LESS THAN OR EQUAL TO 0:
            RETURN "NO"
        CASE NOT is_prime(diff):
            RETURN "NO"
        DEFAULT:
            RETURN "YES"
    END SWITCH
END FUNCTION
```