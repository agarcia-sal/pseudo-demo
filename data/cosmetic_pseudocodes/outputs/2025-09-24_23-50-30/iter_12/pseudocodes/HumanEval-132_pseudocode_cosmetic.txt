```
FUNCTION is_nested(string)
    INITIALIZE start_positions AS empty list
    INITIALIZE end_positions AS empty list
    SET iterator TO 0
    WHILE iterator < LENGTH(string)
        IF string[iterator] == '[' THEN
            ADD iterator TO start_positions
        ELSE
            ADD iterator TO end_positions
        ENDIF
        INCREMENT iterator BY 1
    ENDWHILE
    SET end_positions TO REVERSE(end_positions)
    
    SET matched TO 0
    SET current_end TO 0
    SET total_ends TO LENGTH(end_positions)
    
    FOR each start_index IN start_positions
        IF current_end < total_ends AND start_index < end_positions[current_end] THEN
            SET matched TO matched + 1
            SET current_end TO current_end + 1
        ENDIF
    ENDFOR

    RETURN matched >= 2
END FUNCTION
```