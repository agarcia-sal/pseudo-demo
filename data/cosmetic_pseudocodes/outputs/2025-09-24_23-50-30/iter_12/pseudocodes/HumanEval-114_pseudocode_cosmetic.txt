```
FUNCTION minSubArraySum(array_of_nums)
    DEFINE helper(index, current_acc, max_acc)
        IF index EQUALS LENGTH OF array_of_nums THEN
            RETURN max_acc
        ELSE
            SET updated_acc TO current_acc + (-1 * array_of_nums[index])
            SET reset_acc TO (updated_acc < 0) ? 0 : updated_acc
            SET new_max TO (reset_acc > max_acc) ? reset_acc : max_acc
            RETURN helper(index + 1, reset_acc, new_max)
        END IF
    END DEFINE

    SET peak_sum TO helper(0, 0, 0)

    IF NOT(peak_sum != 0) THEN
        SET peak_sum TO MAXIMUM OF (MAP array_of_nums WITH (x -> -x))
    END IF

    RETURN -peak_sum
END FUNCTION
```