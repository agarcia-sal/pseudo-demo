```
FUNCTION is_sorted(collection)
    DECLARE tally AS mapping FROM elements IN collection TO 0
    PROCEDURE tally_elements(sequence, index)
        IF index == LENGTH(sequence)
            RETURN
        tally[sequence[index]] = tally[sequence[index]] + 1
        tally_elements(sequence, index + 1)
    END PROCEDURE
    tally_elements(collection, 0)

    PROCEDURE has_excess_duplicates(keys)
        IF keys IS EMPTY
            RETURN False
        LET head = keys[0]
        LET tail = keys[1:]
        IF tally[head] > 2
            RETURN True
        RETURN has_excess_duplicates(tail)
    END PROCEDURE
    IF has_excess_duplicates([x FOR x IN collection])
        RETURN False

    PROCEDURE check_non_decreasing(sequence, pointer)
        IF pointer == LENGTH(sequence)
            RETURN True
        IF sequence[pointer - 1] > sequence[pointer]
            RETURN False
        RETURN check_non_decreasing(sequence, pointer + 1)
    END PROCEDURE
    RETURN check_non_decreasing(collection, 1)
END FUNCTION
```