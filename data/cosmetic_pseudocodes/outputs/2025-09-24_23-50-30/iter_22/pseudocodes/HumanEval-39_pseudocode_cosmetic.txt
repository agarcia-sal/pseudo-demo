```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF integer_p LESS THAN 2 THEN
            RETURN False
        SET integer_m TO MIN((FLOOR(SQUARE_ROOT(integer_p)) + 1), (integer_p - 1))
        SET integer_i TO 2
        LOOP WHILE integer_i <= integer_m
            IF (integer_p MOD integer_i) EQUALS 0 THEN
                RETURN False
            SET integer_i TO integer_i + 1
        RETURN True
    END FUNCTION

    SET list_fibonacci TO [0, 1]

    LABEL main_loop
    LOOP
        LET integer_a BE list_fibonacci[LENGTH(list_fibonacci) - 2]
        LET integer_b BE list_fibonacci[LENGTH(list_fibonacci) - 1]
        APPEND (integer_a + integer_b) TO list_fibonacci

        IF is_prime(list_fibonacci[LENGTH(list_fibonacci) - 1]) THEN
            SET integer_n TO integer_n - 1
        IF integer_n EQUALS 0 THEN
            RETURN list_fibonacci[LENGTH(list_fibonacci) - 1]
    END LOOP
END FUNCTION
```