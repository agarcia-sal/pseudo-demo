```
FUNCTION is_nested(string)
    SET starts TO new list
    SET ends TO new list
    FOR idx FROM 0 TO (LENGTH(string) - 1)
        IF string[idx] == '[' THEN
            ADD idx TO starts
        ELSE
            ADD idx TO ends
    SET ends TO REVERSE(ends)
    SET tally TO 0
    SET pointer TO 0
    SET maxEnds TO LENGTH(ends)
    FOR each startIdx IN starts
        IF pointer < maxEnds THEN
            IF startIdx < ends[pointer] THEN
                tally = tally + 1
                pointer = pointer + 1
    RETURN (tally >= 2)
END FUNCTION
```