```
FUNCTION pluck(array_of_nodes)
    DEFINE FUNCTION find_minimum_and_index(values_list, pos)
        IF pos >= LENGTH OF values_list
            RETURN (INFINITY, -1)
        ELSE
            LET (current_min, current_idx) = find_minimum_and_index(values_list, pos + 1)
            IF values_list[pos] < current_min
                RETURN (values_list[pos], pos)
            ELSE
                RETURN (current_min, current_idx)
            END IF
        END IF
    END FUNCTION

    IF NOT (LENGTH OF array_of_nodes <> 0)
        RETURN EMPTY_LIST
    END IF

    LET filtered_evens = []
    FOR each_node IN array_of_nodes
        IF NOT (each_node MOD 2 <> 0)
            APPEND each_node TO filtered_evens
        END IF
    END FOR

    IF NOT (LENGTH OF filtered_evens <> 0)
        RETURN EMPTY_LIST
    END IF

    LET (minimum_even_value, minimum_even_position) = find_minimum_and_index(filtered_evens, 0)

    LET index_of_minimum_even = 0
    WHILE index_of_minimum_even < LENGTH OF array_of_nodes
        IF array_of_nodes[index_of_minimum_even] = minimum_even_value
            BREAK
        END IF
        SET index_of_minimum_even = index_of_minimum_even + 1
    END WHILE

    RETURN [minimum_even_value, index_of_minimum_even]
END FUNCTION
```