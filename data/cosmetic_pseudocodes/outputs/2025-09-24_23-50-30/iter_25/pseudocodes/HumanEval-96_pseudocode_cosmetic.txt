```
FUNCTION count_up_to(m)
    SET accumulatedPrimes TO []
    
    PROCEDURE checkDivisor(candidate, divisor)
        IF divisor >= candidate THEN
            RETURN true
        ELSE IF candidate MOD divisor = 0 THEN
            RETURN false
        ELSE
            RETURN checkDivisor(candidate, divisor + 1)
        END IF
    END PROCEDURE

    FOR iterator FROM 2 TO m - 1 DO
        IF checkDivisor(iterator, 2) THEN
            APPEND iterator TO accumulatedPrimes
        END IF
    END FOR

    RETURN accumulatedPrimes
END FUNCTION
```