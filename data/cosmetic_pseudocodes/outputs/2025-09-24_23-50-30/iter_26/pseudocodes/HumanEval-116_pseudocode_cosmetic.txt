```
FUNCTION sort_array(list_of_numbers)
    FUNCTION count_ones_in_binary(num)
        SET binary_string TO CONVERT num TO BINARY STRING
        SET clean_binary TO SUBSTRING binary_string FROM INDEX 2 TO END
        SET accumulator TO 0
        FOR index FROM 0 TO LENGTH(clean_binary) - 1
            IF CHAR_AT(clean_binary, index) EQUALS '1'
                SET accumulator TO accumulator + 1
        RETURN accumulator
    END FUNCTION

    SET ascending_ordered TO ARRAY_COPY(list_of_numbers)
    CALL ascending_ordered.SORT()

    FUNCTION sort_by_ones(arr, start, end)
        IF start >= end THEN RETURN
        SET pivot TO arr[end]
        SET pivot_count TO count_ones_in_binary(pivot)
        SET partition_index TO start

        FOR position FROM start TO end - 1
            IF count_ones_in_binary(arr[position]) <= pivot_count THEN
                SWAP arr[position] WITH arr[partition_index]
                SET partition_index TO partition_index + 1
        SWAP arr[partition_index] WITH arr[end]
        CALL sort_by_ones(arr, start, partition_index - 1)
        CALL sort_by_ones(arr, partition_index + 1, end)
    END FUNCTION

    CALL sort_by_ones(ascending_ordered, 0, LENGTH(ascending_ordered) - 1)
    RETURN ascending_ordered
END FUNCTION
```