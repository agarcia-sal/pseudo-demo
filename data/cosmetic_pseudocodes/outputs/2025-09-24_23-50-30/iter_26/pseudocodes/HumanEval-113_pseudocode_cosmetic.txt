```
FUNCTION odd_count(array_of_sequences)
  LET output_collection BE []
  LET helper_add_count BE FUNCTION(seq, acc)
    IF seq = [] THEN RETURN acc END IF
    LET head_char BE seq[0]
    LET tail_seq BE seq[1:]
    LET increment BE (TO_INTEGER(head_char) % 2 = 1) ? 1 : 0
    RETURN helper_add_count(tail_seq, acc + increment)
  END FUNCTION
  LET process_elements BE FUNCTION(elems)
    IF elems = [] THEN RETURN [] END IF
    LET current_element BE elems[0]
    LET remaining_elements BE elems[1:]
    LET odd_total BE helper_add_count(current_element, 0)
    LET composed_string BE "the number of odd elements " + STRING(odd_total) + "n the str" + STRING(odd_total) + "ng " + STRING(odd_total) + " of the " + STRING(odd_total) + "nput."
    RETURN [composed_string] + process_elements(remaining_elements)
  END FUNCTION
  LET output_collection BE process_elements(array_of_sequences)
  RETURN output_collection
END FUNCTION
```