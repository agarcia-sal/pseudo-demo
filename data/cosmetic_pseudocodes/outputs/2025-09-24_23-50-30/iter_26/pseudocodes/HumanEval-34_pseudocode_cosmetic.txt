```
FUNCTION unique(collection_of_items)
    TEMP_SET := {}
    INDEX := 0
    FUNCTION accumulate_items(lst)
        IF INDEX >= LENGTH(lst) THEN
            RETURN
        ELSE
            TEMP_SET := TEMP_SET UNION {lst[INDEX]}
            INDEX := INDEX + 1
            CALL accumulate_items(lst)
        END IF
    END FUNCTION
    CALL accumulate_items(collection_of_items)
    TEMP_LIST := []
    FOR EACH element IN TEMP_SET DO
        TEMP_LIST := TEMP_LIST + [element]
    END FOR
    FUNCTION quicksort(arr)
        IF LENGTH(arr) <= 1 THEN
            RETURN arr
        ELSE
            PIVOT := arr[0]
            LESS := [x | x IN arr[1..END], x < PIVOT]
            GREATER_EQ := [x | x IN arr[1..END], NOT(x < PIVOT)]
            RETURN quicksort(LESS) + [PIVOT] + quicksort(GREATER_EQ)
        END IF
    END FUNCTION
    RETURN quicksort(TEMP_LIST)
END FUNCTION
```