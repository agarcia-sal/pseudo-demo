```
FUNCTION get_row(matrix, key)
    FUNCTION inner_collect(i, acc)
        IF i >= LENGTH(matrix) THEN
            RETURN acc
        ELSE
            FUNCTION inner_col(j, row_acc)
                IF j >= LENGTH(matrix[i]) THEN
                    RETURN row_acc
                ELSE
                    updated_acc = IF matrix[i][j] = key THEN row_acc + [(i, j)] ELSE row_acc
                    RETURN inner_col(j + 1, updated_acc)
                END IF
            END FUNCTION
            new_acc = inner_col(0, acc)
            RETURN inner_collect(i + 1, new_acc)
        END IF
    END FUNCTION

    collected = inner_collect(0, [])

    FUNCTION sort_by_first_then_second(lst)
        FUNCTION insert_firstwise(el, sorted_lst)
            IF sorted_lst = [] THEN RETURN [el]
            ELSE
                h = sorted_lst[0]
                t = sorted_lst[1..]
                IF el[0] < h[0] THEN RETURN [el] + sorted_lst
                ELSIF el[0] = h[0] AND el[1] > h[1] THEN RETURN [el] + sorted_lst
                ELSE RETURN [h] + insert_firstwise(el, t)
                END IF
            END IF
        END FUNCTION

        res = []
        FOR item IN lst DO
            res = insert_firstwise(item, res)
        END FOR
        RETURN res
    END FUNCTION

    RETURN sort_by_first_then_second(collected)
END FUNCTION
```