```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        SWITCH
            CASE (integer_p < 2): RETURN False
        END SWITCH

        FUNCTION check_divisor(integer_k)
            IF integer_k > MIN((FLOOR(SQRT(integer_p)) + 1), integer_p - 1)
                RETURN True
            ELSE IF (integer_p MOD integer_k) = 0
                RETURN False
            ELSE
                RETURN check_divisor(integer_k + 1)
        RETURN check_divisor(2)
    END FUNCTION

    SET seq_fibo TO [0,1]

    FUNCTION loop_fib(counter_n, seq_fibo_inner)
        IF counter_n = 0 THEN 
            RETURN seq_fibo_inner[ LENGTH(seq_fibo_inner) - 1 ]
        ELSE
            SET next_val TO seq_fibo_inner[ LENGTH(seq_fibo_inner) - 1 ] + seq_fibo_inner[ LENGTH(seq_fibo_inner) - 2 ]
            SET seq_new TO seq_fibo_inner + [next_val]
            IF is_prime(next_val) THEN
                RETURN loop_fib(counter_n - 1, seq_new)
            ELSE
                RETURN loop_fib(counter_n, seq_new)
    RETURN loop_fib(integer_n, seq_fibo)
END FUNCTION
```