```
FUNCTION is_sorted(sequence)
    SET frequency_map TO dictionary WHERE EACH key IS element OF sequence MAPPED TO 0
    FUNCTION tally(index, freq_accum)
        IF index EQUALS LENGTH(sequence) THEN
            RETURN freq_accum
        ELSE
            LET element = sequence[index]
            SET freq_accum[element] TO freq_accum[element] + 1
            RETURN tally(index + 1, freq_accum)
    LET counted = tally(0, frequency_map)
    FOR key IN sequence
        IF NOT (counted[key] <= 2)
            RETURN False
    FUNCTION check_order(pos)
        SWITCH
            CASE (pos EQUALS LENGTH(sequence) - 1):
                RETURN True
            CASE (sequence[pos - 1] <= sequence[pos]):
                RETURN check_order(pos + 1)
            DEFAULT:
                RETURN False
    RETURN check_order(1)
END FUNCTION
```