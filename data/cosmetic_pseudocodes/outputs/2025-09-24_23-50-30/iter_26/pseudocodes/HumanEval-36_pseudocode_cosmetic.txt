```
FUNCTION fizz_buzz(integer_n)
	NESTED FUNCTION accumulate_multiples(integer_p, collection_acc)
		IF integer_p EQUALS integer_n THEN
			RETURN collection_acc
		ELSE
			LET updated_acc TO
				((integer_p MODULO 11 NOT EQUAL 0) AND (integer_p MODULO 13 NOT EQUAL 0))
					? collection_acc
					: collection_acc + [integer_p]
			RETURN accumulate_multiples(integer_p + 1, updated_acc)
		END IF
	END FUNCTION

	NESTED FUNCTION merge_numbers(collection_w)
		NESTED FUNCTION helper(idx, builder)
			IF idx EQUALS LENGTH(collection_w) THEN
				RETURN builder
			ELSE
				RETURN helper(idx + 1, builder + TO_STRING(collection_w[idx]))
			END IF
		END FUNCTION
		RETURN helper(0, "")
	END FUNCTION

	NESTED FUNCTION count_char(character_stream, tally)
		IF character_stream IS EMPTY THEN
			RETURN tally
		ELSE
			LET head TO character_stream[0]
			LET tail TO character_stream[1 TO END]
			LET increment TO (head EQUALS '7') ? 1 : 0
			RETURN count_char(tail, tally + increment)
		END IF
	END FUNCTION

	LET multiples_list TO accumulate_multiples(0, [])
	LET merged_str TO merge_numbers(multiples_list)
	RETURN count_char(merged_str, 0)
END FUNCTION
```