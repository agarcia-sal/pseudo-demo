```
FUNCTION intersection(interval1, interval2)
    FUNCTION is_prime(value)
        SWITCH
            CASE value = 0 OR value = 1:
                RETURN False
            CASE value = 2:
                RETURN True
            DEFAULT:
                FUNCTION check_divisor(dividing_val, limit)
                    IF dividing_val = limit THEN
                        RETURN True
                    ELSE IF value MODULO dividing_val = 0 THEN
                        RETURN False
                    ELSE
                        RETURN check_divisor(dividing_val + 1, limit)
                    END IF
                END FUNCTION
                RETURN check_divisor(2, value - 1)
        END SWITCH
    END FUNCTION

    LET left_bound BE interval1[0] > interval2[0] ? interval1[0] : interval2[0]
    LET right_bound BE interval1[1] < interval2[1] ? interval1[1] : interval2[1]
    LET overlap_size BE right_bound - left_bound

    IF overlap_size > 0 AND is_prime(overlap_size)
        RETURN "YES"
    ELSE
        RETURN "NO"
    END IF
END FUNCTION
```