```
FUNCTION rescale_to_unit(sequence_of_values)
    SET start_value TO sequence_of_values[0]
    FOR index FROM 1 TO LENGTH(sequence_of_values) - 1
        IF sequence_of_values[index] < start_value
            SET start_value TO sequence_of_values[index]
    END FOR
    SET end_value TO sequence_of_values[0]
    FOR step FROM 1 TO LENGTH(sequence_of_values) - 1
        IF sequence_of_values[step] > end_value
            SET end_value TO sequence_of_values[step]
    END FOR

    FUNCTION helper(current_idx, accumulator)
        IF current_idx = LENGTH(sequence_of_values)
            RETURN accumulator
        ELSE
            SET normalized_value TO (sequence_of_values[current_idx] - start_value) / (end_value - start_value)
            APPEND normalized_value TO accumulator
            RETURN helper(current_idx + 1, accumulator)
    END FUNCTION

    RETURN helper(0, EMPTY LIST)
END FUNCTION
```