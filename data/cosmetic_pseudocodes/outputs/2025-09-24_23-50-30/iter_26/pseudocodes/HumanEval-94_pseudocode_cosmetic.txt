```
FUNCTION skjkasdkd(alphanumeric_collection)
    FUNCTION isPrime(check_val)
        DEFINE FUNCTION recurse_check(current_divisor, limit_divisor)
            IF current_divisor > limit_divisor THEN RETURN True
            ELSE SWITCH
                CASE (check_val MOD current_divisor) = 0: RETURN False
                DEFAULT: RETURN recurse_check(current_divisor + 1, limit_divisor)
            END SWITCH
        END FUNCTION
        RETURN recurse_check(2, FLOOR(SQRT(check_val)) + 1)
    END FUNCTION

    SET highest_prime TO 0
    SET pointer TO 0
    WHILE pointer < LENGTH(alphanumeric_collection)
        IF NOT (alphanumeric_collection[pointer] <= highest_prime OR NOT isPrime(alphanumeric_collection[pointer]))
            highest_prime = alphanumeric_collection[pointer]
        END IF
        pointer = pointer + 1
    END WHILE

    SET aggregate_digits TO 0
    FOR EACH digit_symbol IN CONVERT_TO_STRING(highest_prime)
        SET aggregate_digits = aggregate_digits + (digit_symbol - '0')
    END FOR

    RETURN aggregate_digits
END FUNCTION
```