```
FUNCTION sort_numbers(string_of_number_words)
    DECLARE value_map AS DICTIONARY
    value_map['zero'] = 0
    value_map['one'] = 1
    value_map['two'] = 2
    value_map['three'] = 3
    value_map['four'] = 4
    value_map['five'] = 5
    value_map['six'] = 6
    value_map['seven'] = 7
    value_map['eight'] = 8
    value_map['nine'] = 9

    DECLARE words_array AS ARRAY = []
    FOR EACH char_index FROM 0 TO LENGTH(string_of_number_words) - 1
        IF string_of_number_words[char_index] = ' ' OR char_index = LENGTH(string_of_number_words) - 1 THEN
            IF char_index = LENGTH(string_of_number_words) - 1 THEN
                words_array.ADD(SUBSTRING(string_of_number_words, prev_space+1, char_index+1))
            ELSE IF char_index > 0 AND string_of_number_words[char_index - 1] != ' ' THEN
                words_array.ADD(SUBSTRING(string_of_number_words, prev_space+1, char_index))
            END IF
            prev_space = char_index
        END IF
    END FOR

    DECLARE filtered_words AS ARRAY = []
    FOR EACH word IN words_array
        IF LENGTH(word) > 0 THEN
            filtered_words.ADD(word)
        END IF
    END FOR

    FOR i FROM 0 TO LENGTH(filtered_words) - 2
        FOR j FROM i + 1 TO LENGTH(filtered_words) - 1
            IF value_map[filtered_words[i]] > value_map[filtered_words[j]] THEN
                DECLARE temp AS STRING = filtered_words[i]
                filtered_words[i] = filtered_words[j]
                filtered_words[j] = temp
            END IF
        END FOR
    END FOR

    DECLARE result_string AS STRING = ""
    FOR k FROM 0 TO LENGTH(filtered_words) - 1
        result_string = result_string + filtered_words[k]
        IF k < LENGTH(filtered_words) - 1 THEN
            result_string = result_string + " "
        END IF
    END FOR

    RETURN result_string
END FUNCTION
```