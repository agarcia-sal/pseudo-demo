```
FUNCTION common(sequenceA, sequenceB)
    SET accumulator TO new empty dictionary
    SET indexP TO 0
    WHILE indexP < length(sequenceA)
        SET indexQ TO 0
        WHILE indexQ < length(sequenceB)
            SWITCH (sequenceA[indexP] = sequenceB[indexQ])
                CASE true:
                    accumulator[sequenceA[indexP]] ← true
                    indexQ ← indexQ + 1
                    BREAK
                DEFAULT:
                    indexQ ← indexQ + 1
            END SWITCH
        END WHILE
        indexP ← indexP + 1
    END WHILE
    SET collected TO []
    FOR key IN accumulator
        APPEND key TO collected
    RETURN sort(collected)
END FUNCTION
```