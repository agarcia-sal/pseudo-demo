```
FUNCTION count_nums(sequence_of_numbers)
    FUNCTION digits_sum(numerical_input)
        SET factor TO 1
        SWITCH numerical_input < 0
            CASE true:
                SET numerical_input TO numerical_input * (-1)
                SET factor TO (-1)
            CASE false:
                CONTINUE
        END SWITCH
        SET digits_arr TO TO_LIST(TO_STRING(numerical_input))
        SET idx TO 0
        SET digits_arr[idx] TO digits_arr[idx] * factor
        SET total_sum TO 0
        SET idx2 TO 0
        WHILE idx2 < LENGTH(digits_arr)
            SET total_sum TO total_sum + digits_arr[idx2]
            SET idx2 TO idx2 + 1
        END WHILE
        RETURN total_sum
    END FUNCTION

    SET collected_sums TO []
    SET pos_counter TO 0
    WHILE pos_counter < LENGTH(sequence_of_numbers)
        SET current_val TO sequence_of_numbers[pos_counter]
        SET computed_sum TO digits_sum(current_val)
        collected_sums APPEND(computed_sum)
        SET pos_counter TO pos_counter + 1
    END WHILE

    SET result_list TO []
    SET iterator_idx TO 0
    WHILE iterator_idx < LENGTH(collected_sums)
        IF NOT (collected_sums[iterator_idx] <= 0)
            result_list APPEND(collected_sums[iterator_idx])
        END IF
        SET iterator_idx TO iterator_idx + 1
    END WHILE

    RETURN LENGTH(result_list)
END FUNCTION
```