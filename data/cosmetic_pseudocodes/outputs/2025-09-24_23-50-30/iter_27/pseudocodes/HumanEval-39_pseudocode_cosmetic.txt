```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        SWITCH
            CASE integer_p < 2:
                RETURN False
            DEFAULT:
                SET array_candidates TO []
                SET integer_q TO FLOOR(SQRT(integer_p)) + 1
                SET integer_r TO integer_p - 1
                SET integer_s TO (integer_q < integer_r) ? integer_q : integer_r
                SET integer_t TO 2
                WHILE integer_t <= integer_s
                    APPEND integer_t TO array_candidates
                    SET integer_t TO integer_t + 1
                END WHILE
                SET integer_u TO 0
                WHILE integer_u < LENGTH(array_candidates)
                    SET integer_v TO array_candidates[integer_u]
                    IF (integer_p MOD integer_v) == 0
                        RETURN False
                    SET integer_u TO integer_u + 1
                END WHILE
                RETURN True
        END SWITCH
    END FUNCTION

    SET array_sequence TO [0, 1]

    LOOP
        SET integer_w TO array_sequence[LENGTH(array_sequence) - 1] + array_sequence[LENGTH(array_sequence) - 2]
        APPEND integer_w TO array_sequence
        IF is_prime(integer_w)
            SET integer_n TO integer_n - 1
        IF integer_n == 0
            RETURN integer_w
    END LOOP
END FUNCTION
```