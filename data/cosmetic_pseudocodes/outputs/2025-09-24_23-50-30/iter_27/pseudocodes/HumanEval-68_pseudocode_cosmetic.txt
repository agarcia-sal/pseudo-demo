```
FUNCTION pluck(collection_of_items)
	NODE_COUNT := 0
	WHILE NODE_COUNT < LENGTH OF collection_of_items
		NODE_COUNT := NODE_COUNT + 1
	END WHILE
	IF NOT (NODE_COUNT <> 0)
		RETURN []
	END IF

	temp_storage := []
	I := 0
	WHILE I < LENGTH OF collection_of_items
		ELEMENT := collection_of_items[I]
		IF (ELEMENT % 2) = 0
			temp_storage := temp_storage ++ [ELEMENT]
		END IF
		I := I + 1
	END WHILE

	CASE (LENGTH OF temp_storage = 0) OF
		TRUE: RETURN []
		DEFAULT: 
			smallest := temp_storage[0]
			J := 1
			WHILE J < LENGTH OF temp_storage
				IF NOT (temp_storage[J] >= smallest)
					smallest := temp_storage[J]
				END IF
				J := J + 1
			END WHILE

			K := 0
			smallest_position := -1
			WHILE K < LENGTH OF collection_of_items AND smallest_position = -1
				IF collection_of_items[K] = smallest
					smallest_position := K
				END IF
				K := K + 1
			END WHILE

			RETURN [smallest, smallest_position]
	END CASE
END FUNCTION
```