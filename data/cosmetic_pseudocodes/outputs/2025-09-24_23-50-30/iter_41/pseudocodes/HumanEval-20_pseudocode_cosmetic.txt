```
FUNCTION find_closest_elements(p_sequence)
   VAR result_pair := None
   VAR least_gap := None

   VAR outer := 0
   WHILE outer < LENGTH(p_sequence)
      VAR inner := 0
      WHILE inner < LENGTH(p_sequence)
         IF NOT(outer = inner)
            CASE least_gap OF
               None:
                  LET temp_gap := (p_sequence[outer] - p_sequence[inner])
                  IF temp_gap < 0 THEN LET temp_gap := -temp_gap ENDIF
                  least_gap := temp_gap
                  result_pair := (p_sequence[outer], p_sequence[inner])
                  IF result_pair[0] > result_pair[1] THEN
                     LET temp := result_pair[0]
                     result_pair[0] := result_pair[1]
                     result_pair[1] := temp
                  ENDIF
               DEFAULT:
                  LET diff := p_sequence[outer] - p_sequence[inner]
                  IF diff < 0 THEN LET diff := -diff ENDIF
                  IF diff < least_gap THEN
                     least_gap := diff
                     result_pair := (p_sequence[outer], p_sequence[inner])
                     IF result_pair[0] > result_pair[1] THEN
                        LET temp_var := result_pair[0]
                        result_pair[0] := result_pair[1]
                        result_pair[1] := temp_var
                     ENDIF
                  ENDIF
            ENDCASE
         ENDIF
         inner := inner + 1
      ENDWHILE
      outer := outer + 1
   ENDWHILE

   RETURN result_pair
END FUNCTION
```