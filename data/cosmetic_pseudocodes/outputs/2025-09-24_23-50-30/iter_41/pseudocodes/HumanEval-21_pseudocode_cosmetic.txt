```
FUNCTION rescale_to_unit(input_sequence)
    FUNCTION compute_min_max(seq, low, high, idx)
        IF idx = LENGTH(seq) THEN
            RETURN (low, high)
        ELSE
            SET current_val TO seq[idx]
            SET updated_low TO (low IF low < current_val ELSE current_val)
            SET updated_high TO (high IF high > current_val ELSE current_val)
            RETURN compute_min_max(seq, updated_low, updated_high, idx + 1)
        END IF
    END FUNCTION

    SET (min_val, max_val) TO compute_min_max(input_sequence, input_sequence[0], input_sequence[0], 1)

    FUNCTION normalize_element(value, minimum, maximum)
        RETURN (value - minimum) / (maximum - minimum)
    END FUNCTION

    SET index TO 0
    SET scaled_list TO EMPTY LIST
    WHILE index < LENGTH(input_sequence) DO
        APPEND normalize_element(input_sequence[index], min_val, max_val) TO scaled_list
        SET index TO index + 1
    END WHILE
    RETURN scaled_list
END FUNCTION
```