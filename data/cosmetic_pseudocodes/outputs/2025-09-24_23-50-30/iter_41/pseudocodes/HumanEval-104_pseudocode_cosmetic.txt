```
FUNCTION unique_digits(list_of_positive_integers)
  FUNCTION check_all_odd(number, position, digits_list)
    IF position = LENGTH(digits_list) THEN 
      RETURN TRUE 
    ELSE 
      RETURN ((digits_list[position] MOD 2) = 1) AND check_all_odd(number, position + 1, digits_list)
    END IF
  END FUNCTION

  SET intermediate_collection TO EMPTY LIST
  SET index_counter TO 0
  WHILE index_counter < LENGTH(list_of_positive_integers) DO
    SET current_value TO list_of_positive_integers[index_counter]
    SET digit_array TO []
    SET temp_value TO current_value
    WHILE temp_value > 0 DO
      SET digit_array TO [temp_value MOD 10] + digit_array
      SET temp_value TO temp_value DIV 10
    END WHILE
    IF check_all_odd(current_value, 0, digit_array) THEN
      SET intermediate_collection TO intermediate_collection + [current_value]
    END IF
    SET index_counter TO index_counter + 1
  END WHILE

  SET sorted_result TO []
  FOR EACH element IN intermediate_collection DO
    INSERT element INTO sorted_result AT POSITION WHERE sorted_result IS SORTED IN ASCENDING ORDER
  END FOR

  RETURN sorted_result
END FUNCTION
```