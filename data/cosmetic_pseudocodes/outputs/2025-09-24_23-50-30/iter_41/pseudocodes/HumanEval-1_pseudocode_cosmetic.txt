```
FUNCTION separate_paren_groups(string_of_parentheses)
    DEFINE FUNCTION helper(index_accumulator, depth_counter, acc_string_list, result_list)
        IF index_accumulator > LENGTH(string_of_parentheses) THEN
            RETURN result_list
        ELSE
            SET current_char TO string_of_parentheses[index_accumulator]
            SWITCH current_char
                CASE '(':
                    SET updated_depth TO depth_counter + 1
                    SET updated_acc_string_list TO acc_string_list + [current_char]
                    RETURN helper(index_accumulator + 1, updated_depth, updated_acc_string_list, result_list)
                CASE ')':
                    SET updated_depth TO depth_counter - 1
                    SET updated_acc_string_list TO acc_string_list + [current_char]
                    IF updated_depth = 0 THEN
                        SET new_result_list TO result_list + [JOIN(updated_acc_string_list)]
                        RETURN helper(index_accumulator + 1, updated_depth, [], new_result_list)
                    ELSE
                        RETURN helper(index_accumulator + 1, updated_depth, updated_acc_string_list, result_list)
                    END IF
                DEFAULT:
                    RETURN helper(index_accumulator + 1, depth_counter, acc_string_list, result_list)
            END SWITCH
        END IF
    END FUNCTION

    RETURN helper(1, 0, [], [])
END FUNCTION
```