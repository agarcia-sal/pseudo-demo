```
FUNCTION is_sorted(container_of_values)
	list_identifier = { key_from_container : 0 | key_from_container IN container_of_values }
	
	PROCEDURE accumulate_count(index)
		IF index >= LENGTH(container_of_values)
			RETURN
		ELSE
			element_token <- container_of_values[index]
			list_identifier[element_token] <- list_identifier[element_token] + 1
			accumulate_count(index + 1)
	END PROCEDURE
	accumulate_count(0)
	
	SWITCH
		CASE EXISTS(element FROM container_of_values WHERE list_identifier[element] > 2):
			RETURN False
		DEFAULT:
			PROCEDURE check_sorted(position)
				IF position == LENGTH(container_of_values)
					RETURN True
				ELSE IF container_of_values[position - 1] <= container_of_values[position]
					RETURN check_sorted(position + 1)
				ELSE
					RETURN False
			END PROCEDURE
			RETURN check_sorted(1)
END FUNCTION
```