```
FUNCTION prod_signs(collection_of_numbers)
    FUNCTION compute_sign(items)
        IF items IS EMPTY
            RETURN None
        ELSE IF 0 IN items
            RETURN 0
        ELSE
            PROCEDURE count_negatives(seq, accumulator)
                IF seq IS EMPTY
                    RETURN accumulator
                ELSE
                    RETURN count_negatives(SEQ_TAIL(seq), accumulator + (1 IF SEQ_HEAD(seq) < 0 ELSE 0))
                END IF
            END PROCEDURE
            VAR negatives_count = count_negatives(items, 0)
            RETURN 1 IF (negatives_count MOD 2) = 0 ELSE -1
        END IF
    END FUNCTION

    FUNCTION total_absolute(items, index, acc)
        IF index = LENGTH(items)
            RETURN acc
        ELSE
            RETURN total_absolute(items, index + 1, acc + ABS(items[index]))
        END IF
    END FUNCTION

    VAR sign_value = compute_sign(collection_of_numbers)
    IF sign_value IS None
        RETURN None
    END IF
    VAR magnitude_sum = total_absolute(collection_of_numbers, 0, 0)
    RETURN sign_value * magnitude_sum
END FUNCTION
```