```
FUNCTION common(list1, list2)
    PROCEDURE accumulateResults(idxA, idxB, accSet)
        IF idxA >= LENGTH(list1) THEN
            RETURN accSet
        ELSEIF idxB >= LENGTH(list2) THEN
            RETURN accumulateResults(idxA + 1, 0, accSet)
        ELSE
            LET valX = list1[idxA]
            LET valY = list2[idxB]
            LET updatedSet = (valX = valY) ? accSet UNION {valX} : accSet
            RETURN accumulateResults(idxA, idxB + 1, updatedSet)
    LET finalSet = accumulateResults(0, 0, {})
    LET outputList = []
    FOR EACH item IN finalSet DO
        APPEND item TO outputList
    FOR i FROM 0 TO LENGTH(outputList) - 2 DO
        FOR j FROM i + 1 TO LENGTH(outputList) - 1 DO
            IF outputList[i] > outputList[j] THEN
                LET tempVal = outputList[i]
                outputList[i] = outputList[j]
                outputList[j] = tempVal
    RETURN outputList
END FUNCTION
```