```
FUNCTION search(collection_of_numbers)
    DEFINE counter AS array_of_zeroes WITH SIZE (max_element(collection_of_numbers) + 1)

    FUNCTION recurse_count(pos)
        IF pos >= length(collection_of_numbers) THEN
            RETURN
        ENDIF
        counter[collection_of_numbers[pos]] = counter[collection_of_numbers[pos]] + 1
        recurse_count(pos + 1)
    END FUNCTION

    CALL recurse_count(0)

    DECLARE result = -1

    FUNCTION find_result(iterator)
        IF iterator > length(counter) - 1 THEN
            RETURN
        ENDIF
        IF counter[iterator] >= iterator THEN
            result = iterator
        ENDIF
        find_result(iterator + 1)
    END FUNCTION

    CALL find_result(1)

    RETURN result
END FUNCTION
```