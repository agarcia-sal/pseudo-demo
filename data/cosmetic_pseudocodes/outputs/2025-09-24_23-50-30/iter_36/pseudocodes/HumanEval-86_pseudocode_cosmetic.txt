```
FUNCTION anti_shuffle(input_string)
    FUNCTION helper(remaining_words, accumulated_sorted)
        IF remaining_words IS EMPTY
            RETURN accumulated_sorted
        ELSE
            SET current_word TO FIRST ELEMENT OF remaining_words
            SET chars_array TO ARRAY OF CHARACTERS IN current_word
            CALL chars_array.SORT_ASC()
            SET ordered_word TO EMPTY STRING
            FOR EACH character IN chars_array
                SET ordered_word TO CONCATENATE STRING(ordered_word, character)
            END FOR
            RETURN helper(SUBARRAY(remaining_words, 1, LENGTH(remaining_words)), APPEND(accumulated_sorted, ordered_word))
        END IF
    END FUNCTION

    SET words_list TO SPLIT input_string BY ' '
    SET sorted_words_list TO helper(words_list, EMPTY LIST)
    SET final_string TO EMPTY STRING
    FOR INDEX FROM 0 TO LENGTH(sorted_words_list) - 1
        SET final_string TO CONCATENATE(final_string, sorted_words_list[INDEX])
        IF INDEX < LENGTH(sorted_words_list) - 1
            SET final_string TO CONCATENATE(final_string, ' ')
        END IF
    END FOR

    RETURN final_string
END FUNCTION
```