```
FUNCTION skjkasdkd(container_of_numbers)
    FUNCTION isPrime(n)
      IF n < 2 THEN
        RETURN False
      END IF

      FUNCTION checkDiv(div)
          IF div * div > n THEN
              RETURN True
          ELSE IF n MOD div = 0 THEN
              RETURN False
          ELSE
              RETURN checkDiv(div + 1)
          END IF
      END FUNCTION

      RETURN checkDiv(2)
    END FUNCTION

    FUNCTION findMaxPrime(idx, currentMax)
        IF idx >= LENGTH(container_of_numbers) THEN
            RETURN currentMax
        END IF
        LET val = container_of_numbers[idx]
        LET nextMax = (val > currentMax AND isPrime(val)) ? val : currentMax
        RETURN findMaxPrime(idx + 1, nextMax)
    END FUNCTION

    LET maximumPrimeFound = findMaxPrime(0, 0)

    FUNCTION digitSum(strNum, pos, acc)
        IF pos >= LENGTH(strNum) THEN
            RETURN acc
        ELSE
            LET digitVal = CAST_TO_INTEGER(strNum[pos])
            RETURN digitSum(strNum, pos + 1, acc + digitVal)
        END IF
    END FUNCTION

    RETURN digitSum(TO_STRING(maximumPrimeFound), 0, 0)
END FUNCTION
```