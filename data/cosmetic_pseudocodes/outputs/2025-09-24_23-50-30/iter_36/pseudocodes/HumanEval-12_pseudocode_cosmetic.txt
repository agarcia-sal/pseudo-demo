```
FUNCTION longest(list_of_strings)
    DEFINE FUNCTION find_max_length(lst, current_max)
        IF lst IS EMPTY THEN
            RETURN current_max
        ELSE
            DEFINE head = REMOVE_FIRST_ELEMENT(lst)
            DEFINE updated_max = (LENGTH_OF(head) > current_max) ? LENGTH_OF(head) : current_max
            RETURN find_max_length(lst, updated_max)
        END IF
    END FUNCTION

    DEFINE FUNCTION locate_string_with_length(lst, target_length)
        IF lst IS EMPTY THEN
            RETURN None
        ELSE
            DEFINE head = REMOVE_FIRST_ELEMENT(lst)
            RETURN (LENGTH_OF(head) == target_length) ? head : locate_string_with_length(lst, target_length)
        END IF
    END FUNCTION

    IF list_of_strings IS EMPTY THEN
        RETURN None
    END IF

    DEFINE max_len = find_max_length(COPY_OF(list_of_strings), 0)
    RETURN locate_string_with_length(COPY_OF(list_of_strings), max_len)
END FUNCTION
```