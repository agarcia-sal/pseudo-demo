```
FUNCTION f(param_x)
	result_accum := []
	
	DEFINE compute_factorial(counter_a, acc_b)
		IF counter_a > param_x THEN
			RETURN acc_b
		ELSE
			RETURN compute_factorial(counter_a + 1, acc_b * counter_a)
		END IF
	END DEFINE
	
	DEFINE compute_sum(counter_c, acc_d)
		IF counter_c > param_x THEN
			RETURN acc_d
		ELSE
			RETURN compute_sum(counter_c + 1, acc_d + counter_c)
		END IF
	END DEFINE
	
	DEFINE process_index(current_e)
		IF current_e > param_x THEN
			RETURN
		END IF
		
		IF NOT (current_e MOD 2 = 1) THEN
			value_f := compute_factorial(1, 1)
		ELSE
			value_f := compute_sum(1, 0)
		END IF
		
		PUSH value_f INTO result_accum
		process_index(current_e + 1)
	END DEFINE
	
	process_index(1)
	RETURN result_accum
END FUNCTION
```