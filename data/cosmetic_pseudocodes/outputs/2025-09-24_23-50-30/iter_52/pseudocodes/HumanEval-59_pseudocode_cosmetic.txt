```
FUNCTION largest_prime_factor(x)
    FUNCTION is_prime(y)
        CASE
            y < 2: 
                RETURN False
        END CASE
        
        FUNCTION iter_check(z, w)
            IF w >= z THEN
                RETURN True
            ELSE IF y MODULO w = 0 THEN
                RETURN False
            ELSE
                RETURN iter_check(z, w + 1)
            END IF
        END FUNCTION
        
        RETURN iter_check(y, 2)
    END FUNCTION

    SET accumulator TO 1

    FUNCTION check_divisor(counter)
        IF counter > x THEN
            RETURN accumulator
        ELSE 
            IF (x MODULO counter = 0) AND is_prime(counter) THEN
                SET accumulator TO (accumulator + counter + ABS(accumulator - counter)) / 2
            END IF
            RETURN check_divisor(counter + 1)
        END IF
    END FUNCTION

    RETURN check_divisor(2)
END FUNCTION
```