```
FUNCTION prod_signs(list_values)
    PROCEDURE compute_sign(idx, acc_neg_count)
        IF idx = LENGTH(list_values)
            IF acc_neg_count % 2 = 0
                RETURN 1
            ELSE
                RETURN -1
            END IF
        ELSE
            RETURN compute_sign(
                idx + 1,
                acc_neg_count + (IF list_values[idx] < 0 THEN 1 ELSE 0)
            )
        END IF
    END PROCEDURE

    IF LENGTH(list_values) = 0 THEN
        RETURN None
    END IF

    IF list_values CONTAINS 0 THEN
        SET tmp_sign TO 0
    ELSE
        SET tmp_sign TO compute_sign(0, 0)
    END IF

    PROCEDURE sum_abs_values(i, acc_sum)
        IF i = LENGTH(list_values)
            RETURN acc_sum
        ELSE
            RETURN sum_abs_values(i + 1, acc_sum + ABS(list_values[i]))
        END IF
    END PROCEDURE

    SET total_magnitude TO sum_abs_values(0, 0)
    RETURN tmp_sign * total_magnitude
END FUNCTION
```