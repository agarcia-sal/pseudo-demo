```
FUNCTION histogram(input_string)
    FUNCTION find_maximum_value(collection, current_index, current_max)
        IF current_index >= LENGTH(collection)
            RETURN current_max
        LET current_element = collection[current_index]
        LET element_count = COUNT_OCCURRENCES(collection, current_element)
        IF element_count > current_max AND current_element != ""
            RETURN find_maximum_value(collection, current_index + 1, element_count)
        ELSE
            RETURN find_maximum_value(collection, current_index + 1, current_max)
    END FUNCTION

    FUNCTION filter_by_max(collection, maximum, current_index, accumulator)
        IF current_index >= LENGTH(collection)
            RETURN accumulator
        LET candidate = collection[current_index]
        LET candidate_count = COUNT_OCCURRENCES(collection, candidate)
        IF candidate_count = maximum
            SET accumulator[candidate] = maximum
        RETURN filter_by_max(collection, maximum, current_index + 1, accumulator)
    END FUNCTION

    LET elements_list = SPLIT(input_string, " ")
    LET max_frequency = find_maximum_value(elements_list, 0, 0)
    LET result_mapping = DICTIONARY()
    IF max_frequency > 0 THEN
        SET result_mapping = filter_by_max(elements_list, max_frequency, 0, DICTIONARY())
    END IF
    RETURN result_mapping
END FUNCTION
```