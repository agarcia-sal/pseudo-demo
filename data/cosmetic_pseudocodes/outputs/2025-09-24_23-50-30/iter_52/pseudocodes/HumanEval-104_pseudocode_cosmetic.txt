```
FUNCTION unique_digits(input_collection)
    FUNCTION digits_all_odd(number)
        FUNCTION check_odd_digits(index, digit_list)
            IF index == LENGTH(digit_list)
                RETURN TRUE
            IF NOT (digit_list[index] MOD 2 == 1)
                RETURN FALSE
            RETURN check_odd_digits(index + 1, digit_list)
        END FUNCTION
        
        SET digit_array TO []
        SET temp_num TO number
        WHILE temp_num > 0
            SET digit_array TO [ (temp_num MOD 10) ] + digit_array
            SET temp_num TO temp_num DIV 10
        END WHILE

        RETURN check_odd_digits(0, digit_array)
    END FUNCTION

    FUNCTION filter_odds(collection, acc, idx)
        IF idx == LENGTH(collection)
            RETURN acc
        IF digits_all_odd(collection[idx])
            SET acc TO acc + [collection[idx]]
        RETURN filter_odds(collection, acc, idx + 1)
    END FUNCTION

    SET filtered_elements TO filter_odds(input_collection, [], 0)

    FUNCTION insertion_sort(arr, n)
        IF n <= 1
            RETURN 
        insertion_sort(arr, n - 1)
        SET key TO arr[n - 1]
        SET j TO n - 2
        WHILE j >= 0 AND arr[j] > key
            SET arr[j + 1] TO arr[j]
            SET j TO j - 1
        END WHILE
        SET arr[j + 1] TO key
    END FUNCTION

    insertion_sort(filtered_elements, LENGTH(filtered_elements))

    RETURN filtered_elements
END FUNCTION
```