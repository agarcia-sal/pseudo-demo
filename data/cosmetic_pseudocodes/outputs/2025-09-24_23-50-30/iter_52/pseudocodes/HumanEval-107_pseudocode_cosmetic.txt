```
FUNCTION even_odd_palindrome(varX)
    FUNCTION is_palindrome(varY)
        FUNCTION reverse_string(varZ, varW)
            IF varW < 0 THEN
                RETURN ""
            ELSE
                RETURN varZ[varW] + reverse_string(varZ, varW - 1)
            END IF
        END FUNCTION

        SET varA TO STRING(varY)
        SET varB TO reverse_string(varA, LENGTH(varA) - 1)
        RETURN varA = varB
    END FUNCTION

    FUNCTION process_index(varC, varD, varE)
        IF varC > varD THEN
            RETURN TUPLE(varE[1], varE[2])
        END IF

        IF (varC MOD 2 = 1) AND is_palindrome(varC) THEN
            SET varF TO varE[2] + 1
            SET varG TO varE[1]
        ELSE IF (varC MOD 2 = 0) AND is_palindrome(varC) THEN
            SET varG TO varE[1] + 1
            SET varF TO varE[2]
        ELSE
            SET varG TO varE[1]
            SET varF TO varE[2]
        END IF

        RETURN process_index(varC + 1, varD, LIST(varG, varF))
    END FUNCTION

    RETURN process_index(1, varX, LIST(0, 0))
END FUNCTION
```