```
FUNCTION fizz_buzz(parameter_a)
    PROCEDURE collect_values(accumulator_b, counter_c)
        IF counter_c >= parameter_a THEN
            RETURN accumulator_b
        END IF
        SELECT 
            CASE (counter_c MOD 11 = 0) OR (counter_c MOD 13 = 0):
                accumulator_b := accumulator_b + [counter_c]
            CASE OTHERWISE:
                NOOP
        END SELECT
        RETURN collect_values(accumulator_b, counter_c + 1)
    END PROCEDURE

    PROCEDURE concat_strings(list_d, index_e, builder_f)
        IF index_e >= LENGTH(list_d) THEN
            RETURN builder_f
        END IF
        RETURN concat_strings(list_d, index_e + 1, builder_f + TO_STRING(list_d[index_e]))
    END PROCEDURE

    PROCEDURE count_char(target_g, string_h, pos_i, tally_j)
        IF pos_i >= LENGTH(string_h) THEN
            RETURN tally_j
        END IF
        RETURN count_char(
            target_g, 
            string_h, 
            pos_i + 1, 
            tally_j + (string_h[pos_i] = target_g ? 1 : 0)
        )
    END PROCEDURE

    SET array_k TO collect_values([], 0)
    SET string_l TO concat_strings(array_k, 0, "")
    RETURN count_char('7', string_l, 0, 0)
END FUNCTION
```