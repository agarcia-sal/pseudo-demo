```
FUNCTION minSubArraySum(collection_of_ints)
	LET acc_sum = 0
	LET max_sum = 0
	FOR idx IN 0 TO LENGTH(collection_of_ints) - 1
		acc_sum = (acc_sum + (0 - collection_of_ints[idx])) < 0 ? 0 : acc_sum + (0 - collection_of_ints[idx])
		max_sum = max_sum > acc_sum ? max_sum : acc_sum
	END FOR
	CASE max_sum OF
		0: max_sum = MAXIMUM( MAP( collection_of_ints, LAMBDA(x) => 0 - x ))
	DEFAULT: SKIP
	END CASE
	LET result = 0 - max_sum
	RETURN result
END FUNCTION
```