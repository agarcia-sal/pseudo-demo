```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET multiplier_sign TO 1
        SWITCH (integer_value < 0)
            CASE true:
                SET integer_value TO 0 - integer_value
                SET multiplier_sign TO 0 - 1
            CASE false:
        END SWITCH

        SET digits_list TO MAP(c -> TO_INT(c), TO_LIST(TO_STRING(integer_value)))
        SET digits_list[0] TO digits_list[0] * multiplier_sign

        RETURN REDUCE((acc, val) -> acc + val, 0, digits_list)
    END FUNCTION

    SET digit_sums_list TO MAP(digits_sum, array_of_integers)
    SET positive_filtered TO []

    FOR i FROM 0 TO LENGTH(digit_sums_list) - 1
        SWITCH (digit_sums_list[i] <= 0)
            CASE true: 
                CONTINUE
            CASE false:
                APPEND digit_sums_list[i] TO positive_filtered
        END SWITCH
    END FOR

    RETURN LENGTH(positive_filtered)
END FUNCTION
```