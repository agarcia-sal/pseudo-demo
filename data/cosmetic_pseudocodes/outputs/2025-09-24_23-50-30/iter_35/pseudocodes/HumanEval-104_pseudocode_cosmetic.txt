```
FUNCTION unique_digits(sequence_of_positive_numbers)
    SET filtered_numbers TO []
    SET index_counter TO 0
    WHILE index_counter < LENGTH(sequence_of_positive_numbers)
        SET current_number TO sequence_of_positive_numbers[index_counter]
        SET digit_array TO []
        SET temp_value TO current_number
        WHILE temp_value > 0
            APPEND (temp_value MOD 10) TO digit_array
            SET temp_value TO temp_value DIV 10
        END WHILE
        SET has_even_digit TO FALSE
        SET digit_index TO 0
        WHILE digit_index < LENGTH(digit_array) AND NOT has_even_digit
            SET has_even_digit TO (digit_array[digit_index] MOD 2) = 0
            SET digit_index TO digit_index + 1
        END WHILE
        SWITCH has_even_digit
            CASE FALSE:
                APPEND current_number TO filtered_numbers
            CASE TRUE:
                NO-OP
        END SWITCH
        SET index_counter TO index_counter + 1
    END WHILE
    SET sorted_result TO filtered_numbers
    FOR i FROM 1 TO LENGTH(filtered_numbers) - 1
        FOR j FROM LENGTH(filtered_numbers) - 1 DOWNTO i
            IF sorted_result[j-1] > sorted_result[j]
                SET temp_swap TO sorted_result[j-1]
                SET sorted_result[j-1] TO sorted_result[j]
                SET sorted_result[j] TO temp_swap
            END IF
        END FOR
    END FOR
    RETURN sorted_result
END FUNCTION
```