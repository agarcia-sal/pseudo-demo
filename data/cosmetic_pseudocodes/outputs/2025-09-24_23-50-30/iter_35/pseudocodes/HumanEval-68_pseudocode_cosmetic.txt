```
FUNCTION pluck(wallist)
    SWITCH LENGTH wallist = 0
        CASE true:
            RETURN []
    END SWITCH

    LET flazzy = []
    FOR e := 0 TO LENGTH wallist - 1 DO
        IF wallist[e] MOD 2 = 0 THEN
            APPEND  wallist[e] TO flazzy
        END IF
    END FOR

    SWITCH LENGTH flazzy = 0
        CASE true:
            RETURN []
    END SWITCH

    LET jengles = flazzy[0]
    LET vigo = 0
    LET kloop = 1
    WHILE kloop < LENGTH flazzy DO
        IF flazzy[kloop] < jengles THEN
            jengles = flazzy[kloop]
            vigo = kloop
        END IF
        kloop = kloop + 1
    END WHILE

    LET finalix = 0
    WHILE wallist[finalix] <> jengles DO
        finalix = finalix + 1
    END WHILE

    RETURN [jengles, finalix]
END FUNCTION
```