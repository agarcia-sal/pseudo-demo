```
FUNCTION solution(array_of_numbers)
    FUNCTION inner_accumulate(position, accumulation_value)
        IF NOT (position < LENGTH(array_of_numbers)) THEN
            RETURN accumulation_value
        ELSE
            LET current_element BE array_of_numbers[position]
            LET updated_accumulation BE accumulation_value
            SWITCH ((position MOD 2 = 0), (current_element MOD 2 = 1))
                CASE (TRUE, TRUE):
                    LET updated_accumulation BE accumulation_value + current_element
                DEFAULT:
                    LET updated_accumulation BE accumulation_value
            END SWITCH
            RETURN inner_accumulate(position + 1, updated_accumulation)
        END IF
    END FUNCTION

    RETURN inner_accumulate(0, 0)
END FUNCTION
```