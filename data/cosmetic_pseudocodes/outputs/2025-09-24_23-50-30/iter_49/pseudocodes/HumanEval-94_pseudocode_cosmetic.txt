```
FUNCTION skjkasdkd(array_of_numbers)
    FUNCTION isPrime(test_num)
        DEFINE check_factor AS FUNCTION(current_candidate)
            IF NOT (current_candidate < FLOOR(SQRT(test_num)) + 2) THEN
                RETURN True
            ELSE
                IF (test_num MOD current_candidate) = 0 THEN RETURN False ELSE RETURN check_factor(current_candidate + 1)
            END IF
        END FUNCTION
        RETURN check_factor(2)
    END FUNCTION

    DEFINE find_max_prime AS FUNCTION(pos, highest_found)
        IF pos >= LENGTH(array_of_numbers) THEN
            RETURN highest_found
        ELSE
            IF (array_of_numbers[pos] > highest_found) AND isPrime(array_of_numbers[pos]) THEN
                RETURN find_max_prime(pos + 1, array_of_numbers[pos])
            ELSE
                RETURN find_max_prime(pos + 1, highest_found)
            END IF
        END IF
    END FUNCTION

    SET greatest_prime TO find_max_prime(0, 0)

    DEFINE digits_sum AS FUNCTION(str_value, accumulated)
        IF LENGTH(str_value) = 0 THEN
            RETURN accumulated
        ELSE
            RETURN digits_sum(SUBSTRING(str_value,1), accumulated + TO_INTEGER(SUBSTRING(str_value,0,1)))
        END IF
    END FUNCTION

    RETURN digits_sum(TO_STRING(greatest_prime), 0)
END FUNCTION
```