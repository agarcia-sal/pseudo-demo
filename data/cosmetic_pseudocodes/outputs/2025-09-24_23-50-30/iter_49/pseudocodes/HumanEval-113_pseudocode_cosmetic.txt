```
FUNCTION odd_count(list_of_strings)
    SET accumulated_result TO []
    FUNCTION process_element(index_counter)
        IF index_counter >= LENGTH(list_of_strings) THEN 
            RETURN 
        END IF
        SET string_candidate TO list_of_strings[index_counter]
        FUNCTION compute_odd_character_count(char_index, accumulator)
            IF char_index = LENGTH(string_candidate) THEN 
                RETURN accumulator
            END IF
            SET current_character TO string_candidate[char_index]
            SET digit_value TO INTEGER(current_character)
            SET updated_accumulator TO accumulator + (1 * ((digit_value BITWISE_AND 1) = 1))
            RETURN compute_odd_character_count(char_index + 1, updated_accumulator)
        END FUNCTION
        SET odd_digit_total TO compute_odd_character_count(0, 0)
        SET appended_text TO ("the number of odd elements " + STRING(odd_digit_total) + "n the str" + STRING(odd_digit_total) + "ng " + STRING(odd_digit_total) + " of the " + STRING(odd_digit_total) + "nput.")
        APPEND appended_text TO accumulated_result
        RETURN process_element(index_counter + 1)
    END FUNCTION
    CALL process_element(0)
    RETURN accumulated_result
END FUNCTION
```