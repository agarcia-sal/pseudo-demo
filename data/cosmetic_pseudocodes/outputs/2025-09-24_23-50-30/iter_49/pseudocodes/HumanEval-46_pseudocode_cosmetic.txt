```
FUNCTION fib4(integer_alpha)
  DEFINE FUNCTION sumNewestFour(return_list, index_pointer)
    RETURN (return_list[index_pointer-1] + return_list[index_pointer-2] + return_list[index_pointer-3] + return_list[index_pointer-4])
  END FUNCTION

  SET stockpile TO ARRAY(0, 0, 2, 0)

  IF NOT (integer_alpha >= 4) THEN
    RETURN stockpile[integer_alpha]
  ELSE
    PROCEDURE recurseDelta(current_step, max_limit, buffer)
      IF current_step > max_limit THEN
        RETURN buffer[3]
      ELSE
        LET sum_of_quadruple = sumNewestFour(buffer, 4)
        SHIFT_LEFT buffer BY ONE POSITION INSERTING sum_of_quadruple AT END
        RETURN recurseDelta(current_step + 1, max_limit, buffer)
      END IF
    END PROCEDURE

    RETURN recurseDelta(4, integer_alpha, stockpile)
  END IF
END FUNCTION
```