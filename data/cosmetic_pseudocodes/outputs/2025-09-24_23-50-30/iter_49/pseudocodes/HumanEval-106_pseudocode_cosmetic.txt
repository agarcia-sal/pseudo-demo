```
FUNCTION f(alpha)
	VAR omega ← []
	VAR psi ← 1
	VAR delta ← 0

	VAR xi ← 1
	WHILE xi <= alpha DO
		IF NOT (xi MOD 2 == 1) THEN
			// even case: factorial via recursion
			FUNCTION recur_factor(beta, gamma)
				IF gamma > beta THEN
					RETURN 1
				END IF
				RETURN gamma * recur_factor(beta, gamma + 1)
			END FUNCTION
			omega.APPEND(recur_factor(xi, 1))
		ELSE
			// odd case: summation with loop unrolled recursively
			FUNCTION accum_sum(zeta, eta)
				IF eta > zeta THEN
					RETURN 0
				END IF
				RETURN eta + accum_sum(zeta, eta + 1)
			END FUNCTION
			omega.APPEND(accum_sum(xi, 1))
		END IF
		xi ← xi + 1
	END WHILE

	RETURN omega
END FUNCTION
```