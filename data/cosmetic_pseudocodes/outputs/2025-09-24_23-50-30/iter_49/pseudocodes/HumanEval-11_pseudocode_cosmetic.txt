```
FUNCTION string_xor(string_a, string_b)
    FUNCTION helper_function(param_m, param_n)
        RETURN ( (param_m NOT_EQUALS param_n) ? '1' : '0' )
    END FUNCTION

    FUNCTION loop_process(index_p, accumulator_q)
        IF index_p >= MIN(LENGTH(string_a), LENGTH(string_b)) THEN
            RETURN accumulator_q
        ELSE
            LET current_char1 = string_a[index_p]
            LET current_char2 = string_b[index_p]
            LET updated_accumulator = accumulator_q + helper_function(current_char1, current_char2)
            RETURN loop_process(index_p + 1, updated_accumulator)
        END IF
    END FUNCTION

    RETURN loop_process(0, "")
END FUNCTION
```