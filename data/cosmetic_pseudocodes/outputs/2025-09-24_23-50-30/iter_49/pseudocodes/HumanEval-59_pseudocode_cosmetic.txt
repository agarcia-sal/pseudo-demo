```
FUNCTION largest_prime_factor(magnitude)
    FUNCTION is_prime(candidate)
        IF NOT (candidate >= 2)
            RETURN False
        SET divisor_candidate TO 2
        WHILE divisor_candidate < candidate
            IF (candidate MOD divisor_candidate) = 0
                RETURN False
            SET divisor_candidate TO divisor_candidate + 1
        END WHILE
        RETURN True
    END FUNCTION

    FUNCTION scan_divisors(current_factor, max_factor)
        IF current_factor > max_factor
            RETURN 1
        SET next_largest TO scan_divisors(current_factor + 1, max_factor)
        IF (magnitude MOD current_factor) = 0 AND is_prime(current_factor)
            IF current_factor > next_largest
                RETURN current_factor
            ELSE
                RETURN next_largest
            END IF
        ELSE
            RETURN next_largest
        END IF
    END FUNCTION

    RETURN scan_divisors(2, magnitude)
END FUNCTION
```