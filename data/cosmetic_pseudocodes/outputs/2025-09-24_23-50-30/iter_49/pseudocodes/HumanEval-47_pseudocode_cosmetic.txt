```
FUNCTION median(input_sequence)
  
  PROCEDURE perform_sort(unsorted_seq, sorted_acc)
    IF LENGTH OF unsorted_seq = 0 THEN
      RETURN sorted_acc
    ELSE
      LET min_val = unsorted_seq[0]
      LET rest_vals = []
      FOR EACH item IN unsorted_seq DO
        IF item < min_val THEN
          SET rest_vals TO rest_vals PLUS min_val
          SET min_val TO item
        ELSE
          SET rest_vals TO rest_vals PLUS item
      END FOR
      RETURN perform_sort(rest_vals, sorted_acc PLUS min_val)
    END IF
  END PROCEDURE
  
  LET orderded_sequence = perform_sort(input_sequence, [])

  LET seq_length = LENGTH OF orderded_sequence
  LET mid_index = (seq_length / 2) - (IF seq_length MODULO 2 = 0 THEN 1 ELSE 0)

  SWITCH
    CASE seq_length MODULO 2 â‰  0:
      RETURN orderded_sequence[mid_index + 1]
    CASE seq_length MODULO 2 = 0:
      LET first_elem = orderded_sequence[mid_index]
      LET second_elem = orderded_sequence[mid_index + 1]
      RETURN (first_elem + second_elem) / 2.0
  END SWITCH

END FUNCTION
```