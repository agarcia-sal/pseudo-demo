```
FUNCTION intersperse(scrutiny_bucket, wedge)
    DEFINE nestle_worm(bead_trove, final_recap, beacon_set)
        IF final_recap = LENGTH(bead_trove) THEN
            RETURN beacon_set
        ELSE
            LET beacon_set_next = CONCATENATE(beacon_set, [bead_trove[final_recap], wedge])
            RETURN nestle_worm(bead_trove, final_recap + 1, beacon_set_next)
        END IF
    END DEFINE

    IF scrutiny_bucket = [] THEN
        RETURN []
    ELSE
        LET hibernate_relic = nestle_worm(scrutiny_bucket, 0, [])
        RETURN CONCATENATE(hibernate_relic, [scrutiny_bucket[LENGTH(scrutiny_bucket) - 1]])
    END IF

END FUNCTION
```