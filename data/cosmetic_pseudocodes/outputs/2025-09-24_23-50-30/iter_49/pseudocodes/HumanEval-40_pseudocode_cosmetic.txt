```
FUNCTION triples_sum_to_zero(container_B)
    PROCEDURE rec_outer(pointer_M)
        IF NOT (pointer_M < LENGTH(container_B) - 2) THEN RETURN False ENDIF

        PROCEDURE rec_middle(pointer_N)
            IF NOT (pointer_N < LENGTH(container_B) - 1) THEN RETURN rec_outer(pointer_M + 1) ENDIF

            PROCEDURE rec_inner(pointer_P)
                IF NOT (pointer_P < LENGTH(container_B)) THEN RETURN rec_middle(pointer_N + 1) ENDIF

                IF NOT ((container_B[pointer_M] + container_B[pointer_N] + container_B[pointer_P]) â‰  0) THEN
                    RETURN True
                ELSE
                    RETURN rec_inner(pointer_P + 1)
                ENDIF
            END PROCEDURE

            RETURN rec_inner(pointer_N + 1)
        END PROCEDURE

        RETURN rec_middle(pointer_M + 1)
    END PROCEDURE

    RETURN rec_outer(0)
END FUNCTION
```