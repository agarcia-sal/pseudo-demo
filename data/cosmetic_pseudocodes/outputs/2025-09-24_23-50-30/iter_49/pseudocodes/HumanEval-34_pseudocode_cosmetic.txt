```
FUNCTION unique(alpha)
    FUNCTION helper(beta, gamma)
        IF gamma = LENGTH(beta) THEN RETURN beta END IF
        IF NOT(CONTAINS(beta, beta[gamma])) THEN
            RETURN helper(beta + [beta[gamma]], gamma + 1)
        ELSE
            RETURN helper(beta, gamma + 1)
        END IF
    END FUNCTION
    DECLARE delta = helper([], 0)
    DECLARE epsilon = delta
    FOR i FROM 0 TO LENGTH(epsilon) - 2 DO
        FOR j FROM i + 1 TO LENGTH(epsilon) - 1 DO
            IF epsilon[i] > epsilon[j] THEN
                DECLARE temp = epsilon[i]
                epsilon[i] = epsilon[j]
                epsilon[j] = temp
            END IF
        END FOR
    END FOR
    RETURN epsilon
END FUNCTION
```