```
FUNCTION even_odd_palindrome(alpha)
  FUNCTION is_palindrome(beta)
    FUNCTION reverse_string(chars, left_index, right_index)
      IF left_index >= right_index THEN
        RETURN chars
      ELSE
        SWAP chars[left_index], chars[right_index]
        RETURN reverse_string(chars, left_index + 1, right_index - 1)
      END IF
    END FUNCTION

    LET char_array = ARRAY_OF_CHAR(beta TO_STRING)
    LET reversed_chars = reverse_string(char_array, 0, LENGTH(char_array) - 1)
    RETURN (beta TO_STRING) = JOIN(reversed_chars, "")
  END FUNCTION

  FUNCTION loop_counter(gamma, delta_even, delta_odd)
    IF gamma > alpha THEN
      RETURN (delta_even, delta_odd)
    ELSE
      LET is_sym = is_palindrome(gamma)
      LET is_odd = (gamma BITWISE_AND 1) = 1
      LET new_even = delta_even
      LET new_odd = delta_odd

      IF is_sym THEN
        IF is_odd THEN
          new_odd = delta_odd + 1
        ELSE
          new_even = delta_even + 1
        END IF
      END IF

      RETURN loop_counter(gamma + 1, new_even, new_odd)
    END IF
  END FUNCTION

  RETURN loop_counter(1, 0, 0)
END FUNCTION
```