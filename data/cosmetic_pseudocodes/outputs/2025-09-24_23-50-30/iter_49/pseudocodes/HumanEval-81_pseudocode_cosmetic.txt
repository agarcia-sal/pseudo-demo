```
FUNCTION numerical_letter_grade(mutable_collection)
    DEFINE FUNCTION auxiliary_reducer(current_index, accumulator)
        IF current_index == LENGTH(mutable_collection)
            RETURN accumulator
        SET provisional = (FUNCTION(value)
            SELECT CASE TRUE
                CASE value == 4.0: RETURN "A+"
                CASE value > 3.7: RETURN "A"
                CASE value > 3.3: RETURN "A-"
                CASE value > 3.0: RETURN "B+"
                CASE value > 2.7: RETURN "B"
                CASE value > 2.3: RETURN "B-"
                CASE value > 2.0: RETURN "C+"
                CASE value > 1.7: RETURN "C"
                CASE value > 1.3: RETURN "C-"
                CASE value > 1.0: RETURN "D+"
                CASE value > 0.7: RETURN "D"
                CASE value > 0.0: RETURN "D-"
                DEFAULT: RETURN "E"
            END CASE
        )(mutable_collection[current_index])
        RETURN auxiliary_reducer(current_index + 1, accumulator + [provisional])
    END FUNCTION
    RETURN auxiliary_reducer(0, [])
END FUNCTION
```