```
FUNCTION circular_shift(integer_x, integer_shift)
	string_list <- []  
	integer_length <- 0
	PROCEDURE build_list(pos)
		IF pos EQUALS LENGTH(CONVERT integer_x TO STRING)
			integer_length <- pos
		ELSE
			string_list.APPEND(CONVERT integer_x TO STRING)[pos]
			build_list(pos + 1)
		END IF
	END PROCEDURE
	build_list(0)

	PROCEDURE reverse_list(input_list, idx, acc)
		WHEN (idx < 0)
			RETURN acc
		ELSE
			RETURN reverse_list(input_list, idx - 1, acc + input_list[idx])
		END WHEN
	END PROCEDURE

	PROCEDURE circular_rec(i, acc1, acc2)
		SWITCH
			CASE i < integer_length - integer_shift
				circular_rec(i + 1, acc1, acc2 + string_list[i])
			CASE i < integer_length
				circular_rec(i + 1, acc1 + string_list[i], acc2)
			DEFAULT
				RETURN acc1 + acc2
		END SWITCH
	END PROCEDURE

	WHEN (integer_shift > integer_length)
		RETURN reverse_list(string_list, integer_length - 1, "")
	DEFAULT
		RETURN circular_rec(integer_length - integer_shift, "", "")
	END WHEN
END FUNCTION
```