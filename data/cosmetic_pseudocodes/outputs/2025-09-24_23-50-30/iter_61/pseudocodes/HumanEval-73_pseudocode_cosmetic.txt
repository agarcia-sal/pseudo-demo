```
FUNCTION smallest_change(array_of_integers)
		DEFINE FUNCTION count_differences(accumulator, current_idx)
			SWITCH current_idx >= ((LENGTH(array_of_integers) / 2) - 1)
				CASE true:
					RETURN accumulator
				CASE false:
					DEFINE first_el = array_of_integers[current_idx]
					DEFINE second_el = array_of_integers[(LENGTH(array_of_integers) - current_idx - 1)]
					SWITCH NOT (first_el = second_el)
						CASE true:
							RETURN count_differences(accumulator + 1, current_idx + 1)
						CASE false:
							RETURN count_differences(accumulator, current_idx + 1)
		END FUNCTION
		RETURN count_differences(0, 0)
END FUNCTION
```