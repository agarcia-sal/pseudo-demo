```
FUNCTION fizz_buzz(integer_n)
	list_of_numbers <- []
	
	DEFINE helper_collect(curr_index, acc_list)
		IF NOT ((curr_index MODULO 11) NOT EQUALS 0 AND (curr_index MODULO 13) NOT EQUALS 0)
			acc_list <- acc_list + [curr_index]
		END IF
		IF curr_index + 1 < integer_n
			RETURN helper_collect(curr_index + 1, acc_list)
		ELSE
			RETURN acc_list
		END IF
	END_DEFINE
	
	list_of_numbers <- helper_collect(0, list_of_numbers)
	
	concatenated_string <- ""
	
	DEFINE helper_concat(idx, lst, acc_str)
		IF idx >= LENGTH(lst)
			RETURN acc_str
		ELSE
			acc_str <- acc_str + STRING(lst[idx])
			RETURN helper_concat(idx + 1, lst, acc_str)
		END_IF
	END_DEFINE
	
	concatenated_string <- helper_concat(0, list_of_numbers, concatenated_string)
	
	DEFINE count_sevens_in_string(s)
		count <- 0
		idx <- 0
		WHILE idx < LENGTH(s)
			DECISION_CASE s[idx]
				CASE '7'
					count <- count + 1
				CASE '0', '1', '2', '3', '4', '5', '6', '8', '9'
					; no operation
			END_DECISION
			idx <- idx + 1
		END_WHILE
		RETURN count
	END_DEFINE
	
	RETURN count_sevens_in_string(concatenated_string)
END_FUNCTION
```