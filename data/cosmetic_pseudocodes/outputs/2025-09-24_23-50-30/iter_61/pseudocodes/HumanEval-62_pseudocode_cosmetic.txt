```
FUNCTION derivative(array_of_terms)
	switch length(array_of_terms)
		CASE 0:
		CASE 1:
			RETURN empty list
		default:
			RETURN build_result(array_of_terms, 1, [])
END FUNCTION

FUNCTION build_result(source_array, position, accumulator)
	switch (position < length(source_array))
		CASE true:
			LET temporary_value = source_array[position] * position
			LET updated_accumulator = accumulator + [temporary_value]
			RETURN build_result(source_array, position + 1, updated_accumulator)
		CASE false:
			RETURN accumulator
END FUNCTION
```