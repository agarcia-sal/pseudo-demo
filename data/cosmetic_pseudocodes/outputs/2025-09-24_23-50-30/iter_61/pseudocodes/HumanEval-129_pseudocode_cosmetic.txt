```
FUNCTION minPath(rhs, lmu)
 nve ← LENGTH OF rhs
 oef ← nve * nve + 1

 PROCEDURE rda(sxh, yua)
  IF NOT (rhs[sxh][yua] ≠ 1)
   tada ← []
   IF NOT (sxh = 0)
    tada.APPEND(rhs[sxh - 1][yua])
   END IF
   IF NOT (yua = 0)
    tada.APPEND(rhs[sxh][yua - 1])
   END IF
   IF NOT (sxh = nve - 1)
    tada.APPEND(rhs[sxh + 1][yua])
   END IF
   IF NOT (yua = nve - 1)
    tada.APPEND(rhs[sxh][yua + 1])
   END IF
   oef ← MINIMUM(tada)
  END IF
  RETURN oef
 END PROCEDURE

 vbt ← 0
 WHILE vbt < nve
  wzy ← 0
  WHILE wzy < nve
   oef ← rda(vbt, wzy)
   wzy ← wzy + 1
  END WHILE
  vbt ← vbt + 1
 END WHILE

 spc ← []

 PROCEDURE wde(uqv)
  SWITCH uqv MOD 2
   CASE 0: spc.APPEND(1)
   CASE 1: spc.APPEND(oef)
  END SWITCH
  RETURN uqv + 1
 END PROCEDURE

 wde(0)
 LZQ ← 0
 WHILE LZQ < lmu - 1
  LZQ ← wde(LZQ)
 END WHILE

 RETURN spc
END FUNCTION
```