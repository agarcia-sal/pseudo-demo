```
FUNCTION flip_case(coded_sequence)
	DEFINE helper_transform(index, length, accumulator)
		SWITCH TRUE
			CASE index >= length
				RETURN accumulator
			CASE ASCII_VALUE_AT(coded_sequence, index) >= 65 AND ASCII_VALUE_AT(coded_sequence, index) <= 90
				LET new_char = LOWERCASE_OF(CHAR_AT(coded_sequence, index))
				RETURN helper_transform(index + 1, length, CONCATENATE(accumulator, new_char))
			CASE ASCII_VALUE_AT(coded_sequence, index) >= 97 AND ASCII_VALUE_AT(coded_sequence, index) <= 122
				LET new_char = UPPERCASE_OF(CHAR_AT(coded_sequence, index))
				RETURN helper_transform(index + 1, length, CONCATENATE(accumulator, new_char))
			DEFAULT
				RETURN helper_transform(index + 1, length, CONCATENATE(accumulator, CHAR_AT(coded_sequence, index)))
		END SWITCH
	END DEFINE
	RETURN helper_transform(0, LENGTH_OF(coded_sequence), EMPTY_STRING)
END FUNCTION
```