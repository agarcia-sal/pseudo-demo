```
FUNCTION prime_fib(integer_n)
	IMPORT mathematical_functions_module

	FUNCTION is_prime(integer_p)
		CASE 
			WHEN NOT (integer_p >= 2) THEN
				RETURN False
		ENDCASE

		SET array_divisors TO []
		FOR integer_i FROM 2 TO MIN(FLOOR(SQRT(integer_p)) + 1, integer_p - 1)
			APPEND integer_i TO array_divisors
		END FOR

		DEFINE FUNCTION check_divisibility(list_nums, integer_idx)
			IF integer_idx >= LENGTH(list_nums)
				RETURN True
			ELSE
				IF integer_p MODULO list_nums[integer_idx] = 0
					RETURN False
				ELSE
					RETURN check_divisibility(list_nums, integer_idx + 1)
				END IF
			END IF
		END FUNCTION

		RETURN check_divisibility(array_divisors, 0)
	END FUNCTION

	SET linked_fib TO [0, 1]

	:loop_start
		SET new_value TO linked_fib[-1] + linked_fib[-2]
		APPEND new_value TO linked_fib

		IF is_prime(new_value)
			SET integer_n TO integer_n - 1
		END IF

		IF integer_n = 0
			RETURN new_value
		END IF
	GOTO :loop_start

END FUNCTION
```