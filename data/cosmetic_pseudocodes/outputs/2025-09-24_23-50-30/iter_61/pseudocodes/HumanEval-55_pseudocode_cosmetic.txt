```
FUNCTION fib(w1)
	SWITCH w1
		CASE 0
			RETURN 0
		CASE 1
			RETURN 1
		DEFAULT
			TYPE Frame
				x : integer
				y : integer
				z : integer
			END TYPE
			SET stack TO [Frame{x=w1, y=0, z=0}]
			SET result TO 0
			WHILE length_of(stack) NOT EQUAL TO 0
				POP frame FROM stack
				IF frame.x EQUALS 0
					SET temp TO 0
				ELSE IF frame.x EQUALS 1
					SET temp TO 1
				ELSE
					IF frame.y EQUALS 0
						PUSH Frame{x=frame.x, y=1, z=frame.z} TO stack
						PUSH Frame{x=frame.x MINUS 1, y=0, z=0} TO stack
						CONTINUE
					ELSE IF frame.y EQUALS 1
						SET frame.y TO 2
						PUSH frame TO stack
						PUSH Frame{x=frame.x MINUS 2, y=0, z=0} TO stack
						CONTINUE
					ELSE
						SET temp TO frame.z PLUS result
					END IF
				END IF
				SET result TO temp
				IF length_of(stack) NOT EQUAL TO 0
					LET top = stack[length_of(stack) MINUS 1]
					IF top.y EQUALS 1
						SET top.z TO temp
					END IF
				END IF
			END WHILE
			RETURN result
	END SWITCH
END FUNCTION
```