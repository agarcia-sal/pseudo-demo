```
FUNCTION count_nums(array_of_integers)
	FUNCTION digits_sum(integer_value)
		VAR temporary_multiplier = 1
		switch
			case integer_value < 0:
				integer_value = -1 * integer_value
				temporary_multiplier = -1
				break
			default:
				break
		end switch

		VAR digits_list = CONVERT integer_value TO STRING
		VAR digits_collection = EMPTY LIST
		VAR index_var = 0
		WHILE index_var < LENGTH(digits_list)
			APPEND CONVERT digits_list[index_var] TO INTEGER TO digits_collection
			index_var = index_var + 1
		END WHILE

		digits_collection[0] = digits_collection[0] * temporary_multiplier

		VAR sum_total = 0
		VAR j = 0
		WHILE j < LENGTH(digits_collection)
			sum_total = sum_total + digits_collection[j]
			j = j + 1
		END WHILE

		RETURN sum_total
	END FUNCTION

	VAR secondary_list = EMPTY LIST
	VAR k = 0
	WHILE k < LENGTH(array_of_integers)
		APPEND digits_sum(array_of_integers[k]) TO secondary_list
		k = k + 1
	END WHILE

	VAR filtered_collection = EMPTY LIST
	VAR m = 0
	WHILE m < LENGTH(secondary_list)
		switch
			case secondary_list[m] > 0:
				APPEND secondary_list[m] TO filtered_collection
				break
			default:
				break
		end switch
		m = m + 1
	END WHILE

	RETURN LENGTH(filtered_collection)
END FUNCTION
```