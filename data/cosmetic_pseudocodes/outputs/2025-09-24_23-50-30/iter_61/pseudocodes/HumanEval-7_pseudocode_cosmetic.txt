```
FUNCTION filter_by_substring(list_of_strings, substring_value)
	DEFINE PROCEDURE recursive_filter(source_list, filter_value, position_index, accumulator_list)
		IF position_index >= LENGTH(source_list) THEN
			RETURN accumulator_list
		END IF

		DEFINE VARIABLE current_element = source_list[position_index]
		DEFINE VARIABLE includes_substring = FALSE
		
		SWITCH TRUE
			CASE current_element CONTAINS filter_value:
				includes_substring = TRUE
			CASE ELSE:
				includes_substring = FALSE
		END SWITCH
		
		IF includes_substring THEN
			PROCEDURE_CALL recursive_filter(source_list,filter_value,position_index + 1, accumulator_list + [current_element])
		ELSE
			PROCEDURE_CALL recursive_filter(source_list,filter_value,position_index + 1, accumulator_list)
		END IF
	END PROCEDURE

	RETURN recursive_filter(list_of_strings, substring_value, 0, [])
END FUNCTION
```