```
FUNCTION rounded_avg(x, y)
	SUBFUNCTION compute_sum(p, q, acc)
		SWITCH
			CASE p > q:
				RETURN acc
			DEFAULT:
				RETURN compute_sum(p + 1, q, acc + p)
		END SWITCH
	END SUBFUNCTION
	IF y < x THEN RETURN -1
	ELSE
		LET total_sum = compute_sum(x, y, 0)
		LET count = (y + 1) - x
		LET avg_expr = total_sum / count
		LET rounded_val = (avg_expr + 0.5) - ((avg_expr + 0.5) % 1)
		LET bin_str = ""
		LET val = rounded_val
		WHILE TRUE DO
			SWITCH
				CASE val = 0 AND bin_str != "":
					EXIT WHILE
				CASE val = 0:
					bin_str = "0"
					EXIT WHILE
				DEFAULT:
					bin_str = (val % 2) + bin_str
					val = val / 2
					val = val - (val % 1)
			END SWITCH
		END WHILE
		RETURN bin_str
	END IF
END FUNCTION
```