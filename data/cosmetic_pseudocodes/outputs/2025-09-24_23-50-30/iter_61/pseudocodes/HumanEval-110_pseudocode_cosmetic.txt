```
FUNCTION exchange(list_one, list_two)
	fun loopOne(aList, idx, c_odd) 
		switch ( idx < length(aList) )
			case TRUE:
				switch ( (aList[idx] % 2) == 1 )
					case TRUE: return loopOne(aList, idx + 1, c_odd + 1)
					case FALSE: return loopOne(aList, idx + 1, c_odd)
			case FALSE: return c_odd
	END SWITCH
	END FUNCTION
	
	fun loopTwo(bList, jdx, c_even)
		if jdx >= length(bList)
			return c_even
		else
			var cond := (bList[jdx] % 2) == 0
			if cond
				return loopTwo(bList, jdx + 1, c_even + 1)
			else
				return loopTwo(bList, jdx + 1, c_even)
			end if
		end if
	END FUNCTION
	
	VAR odd_counter := loopOne(list_one, 0, 0)
	VAR even_counter := loopTwo(list_two, 0, 0)
	
	switch (even_counter >= odd_counter)
		case TRUE: return "YES"
		case FALSE: return "NO"
	END SWITCH
END FUNCTION
```