```
FUNCTION triples_sum_to_zero(sequence)
	RETURN helper_outer(0)
	
	FUNCTION helper_outer(counter)
		IF counter EQUALS LENGTH OF sequence
			RETURN False
		ELSE
			RETURN helper_middle(counter, counter + 1)
		END IF
	END FUNCTION

	FUNCTION helper_middle(first, second)
		IF second EQUALS LENGTH OF sequence
			RETURN helper_outer(first + 1)
		ELSE
			RETURN helper_inner(first, second, second + 1)
		END IF
	END FUNCTION

	FUNCTION helper_inner(a, b, c)
		IF c EQUALS LENGTH OF sequence
			RETURN helper_middle(a, b + 1)
		ELSE
			SWITCH (sequence[a] + sequence[b] + sequence[c])
				CASE 0:
					RETURN True
				DEFAULT:
					RETURN helper_inner(a, b, c + 1)
			END SWITCH
		END IF
	END FUNCTION
END FUNCTION
```