```
FUNCTION even_odd_palindrome(n)
	FUNCTION is_palindrome(j)
		DEFINE seq1 AS LIST OF CHARACTERS FROM STRING(j)
		DEFINE seq2 AS EMPTY LIST
		FOR idx FROM LENGTH(seq1) DOWNTO 1
			APPEND seq1[idx] TO seq2
		END FOR
		RETURN seq1 EQUALS seq2
	END FUNCTION

	DEFINE total_even AS 0
	DEFINE total_odd AS 0

	DEFINE list_values AS []
	DEFINE k AS 1
	WHILE k <= n
		APPEND k TO list_values
		SET k TO k + 1
	END WHILE

	DEFINE pos AS 1

	WHILE pos <= LENGTH(list_values)
		DEFINE val AS list_values[pos]
		DEFINE check_even AS (val MOD 2) EQUALS 0
		DEFINE check_odd AS (val MOD 2) NOT EQUAL 0
		DEFINE palindrome_result AS is_palindrome(val)

		SWITCH TRUE
			CASE check_odd AND palindrome_result
				total_odd = total_odd + 1
			CASE check_even AND palindrome_result
				total_even = total_even + 1
			DEFAULT
				NULL
		END SWITCH
		SET pos TO pos + 1
	END WHILE

	RETURN (total_even, total_odd)
END FUNCTION
```