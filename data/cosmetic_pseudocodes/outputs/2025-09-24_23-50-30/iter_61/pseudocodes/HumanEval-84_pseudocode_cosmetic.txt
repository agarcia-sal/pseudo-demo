```
FUNCTION solve(integer_N)
	LABEL start
		SET contextQueue TO LIST OF CHARACTERS IN STRING REPRESENTATION OF integer_N
		CALL recursiveSum(contextQueue, 0)

	DEFINE FUNCTION recursiveSum(charList, progress_accumulator)
		IF charList IS EMPTY
			RETURN progress_accumulator
		SWITCH charList[0]
			CASE '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'
				SWITCH charList[0]
					CASE '0': SET digitValue TO 0
					CASE '1': SET digitValue TO 1
					CASE '2': SET digitValue TO 2
					CASE '3': SET digitValue TO 3
					CASE '4': SET digitValue TO 4
					CASE '5': SET digitValue TO 5
					CASE '6': SET digitValue TO 6
					CASE '7': SET digitValue TO 7
					CASE '8': SET digitValue TO 8
					CASE '9': SET digitValue TO 9
				END SWITCH
				REMOVE FIRST ELEMENT FROM charList
				RETURN recursiveSum(charList, progress_accumulator + digitValue)
		END SWITCH
		
	SET totalSum TO recursiveSum(contextQueue, 0)
	SET fullBinaryString TO TO_BINARY_STRING(totalSum)
	RETURN SUBSTRING(fullBinaryString, 2, LENGTH(fullBinaryString))
END FUNCTION
```