```
FUNCTION string_sequence(integer_n)
	LIST string_list <- EMPTY LIST
	FUNCTION build_sequence(integer_d, LIST acc)
		IF integer_d < 0 THEN
			RETURN acc
		ELSE
			LIST new_acc <- acc
			new_acc.APPEND(TO_STRING(integer_d))
			RETURN build_sequence(integer_d - 1, new_acc)
		END IF
	END FUNCTION
	LIST collected_strings <- build_sequence(integer_n, string_list)
	LIST reversed_list <- EMPTY LIST
	FOR integer_x FROM LENGTH(collected_strings) - 1 DOWNTO 0 DO
		reversed_list.APPEND(collected_strings[integer_x])
	END FOR
	STRING result_string <- EMPTY STRING
	INTEGER index_i <- 0
	WHILE index_i < LENGTH(reversed_list) DO
		IF NOT (index_i = LENGTH(reversed_list) - 1) THEN
			result_string <- result_string + reversed_list[index_i] + " "
		ELSE
			result_string <- result_string + reversed_list[index_i]
		END IF
		index_i <- index_i + 1
	END WHILE
	RETURN result_string
END FUNCTION
```