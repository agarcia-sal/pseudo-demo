```
FUNCTION find_closest_elements(list_of_numbers)
	TYPE Pair = TUPLE OF (number, number)
	VAR queue: LIST OF Pair = EMPTY LIST
	VAR acc_min: NUMBER OR None = None
	VAR res: Pair OR None = None

	VAR idx_outer: NUMBER = 0
	WHILE idx_outer < LENGTH(list_of_numbers) DO
		VAR idx_inner: NUMBER = 0
		WHILE idx_inner < LENGTH(list_of_numbers) DO
			IF NOT (idx_outer = idx_inner) THEN
				VAR val_outer: NUMBER = list_of_numbers[idx_outer]
				VAR val_inner: NUMBER = list_of_numbers[idx_inner]
				VAR calc_dist: NUMBER = ABS(val_outer - val_inner)
				IF acc_min IS None THEN
					acc_min = calc_dist
					res = (MIN(val_outer, val_inner), MAX(val_outer, val_inner))
				ELSE
					SELECT CASE
						CASE calc_dist < acc_min:
							acc_min = calc_dist
							res = (MIN(val_outer, val_inner), MAX(val_outer, val_inner))
						CASE ELSE:
							# no update
					END SELECT
				END IF
			END IF
			ADD idx_inner BY 1
		END WHILE
		ADD idx_outer BY 1
	END WHILE

	RETURN res
END FUNCTION
```