```
FUNCTION longest(array_of_words)
	LABEL search_max:
		IF NOT (0 = LENGTH(array_of_words)) THEN
			DEFINE idx, max_len, candidate
			ASSIGN idx := 0
			ASSIGN max_len := 0
			WHILE idx < LENGTH(array_of_words) DO
				IF (LENGTH(array_of_words[idx]) > max_len) THEN
					ASSIGN max_len := LENGTH(array_of_words[idx])
				END IF
				ASSIGN idx := idx + 1
			END WHILE

			ASSIGN idx := 0
			WHILE idx < LENGTH(array_of_words) DO
				SWITCH (LENGTH(array_of_words[idx])) {
					CASE max_len:
						ASSIGN candidate := array_of_words[idx]
						// Immediately return candidate when found
						GOTO return_candidate
					DEFAULT:
						ASSIGN idx := idx + 1
				}
			}
		ELSE
			RETURN None
		END IF

		RETURN None
		LABEL return_candidate:
			RETURN candidate
	END LABEL
	END LABEL
END FUNCTION
```