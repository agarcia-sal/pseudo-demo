```
FUNCTION is_sorted(sequence)
	DEFINE FUNCTION check_non_decreasing(index, prev_value)
		IF index >= LENGTH(sequence)
			RETURN True
		SWITCH (TRUE)
			CASE sequence[index] < prev_value:
				RETURN False
			DEFAULT:
				RETURN check_non_decreasing(index + 1, sequence[index])
		END SWITCH
	END FUNCTION

	SET frequency_map TO empty map
	DEFINE FUNCTION count_occurrences(pos)
		IF pos >= LENGTH(sequence)
			RETURN
		SET current_element TO sequence[pos]
		SET frequency_map[current_element] TO (frequency_map[current_element] + 1) IF current_element IN frequency_map ELSE 1
		count_occurrences(pos + 1)
	END FUNCTION

	count_occurrences(0)

	DEFINE FUNCTION has_any_excessive_repetition(keys_list, idx)
		IF idx >= LENGTH(keys_list)
			RETURN False
		IF frequency_map[keys_list[idx]] > 2
			RETURN True
		RETURN has_any_excessive_repetition(keys_list, idx + 1)
	END FUNCTION

	IF has_any_excessive_repetition(sequence, 0)
		RETURN False

	RETURN check_non_decreasing(1, sequence[0])
END FUNCTION
```