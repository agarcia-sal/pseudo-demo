```
FUNCTION next_smallest(list_of_integers)
	kata = [] 
	ema = {} 
	FUNC add_element(lambda_i)
		IF lambda_i NOT_IN ema THEN
			INSERT kata END lambda_i
			ema[lambda_i] = True
		END IF
	END FUNC
	FUNC process_list(index)
		IF index >= LENGTH(list_of_integers) THEN
			RETURN
		END IF
		add_element(list_of_integers[index])
		process_list(index+1)
	END FUNC
	process_list(0)
	FUNC insertion_sort_by_recursion(ubound)
		IF ubound < 1 THEN
			RETURN
		END IF
		insertion_sort_by_recursion(ubound - 1)
		val = kata[ubound]
		pos = ubound - 1
		WHILE pos >= 0 AND kata[pos] > val
			kata[pos + 1] = kata[pos]
			pos = pos - 1
		END WHILE
		kata[pos + 1] = val
	END FUNC
	insertion_sort_by_recursion(LENGTH(kata) - 1)
	CASE
		WHEN LENGTH(kata) < 2 THEN RETURN None
		ELSE RETURN kata[1]
	END CASE
END FUNCTION
```