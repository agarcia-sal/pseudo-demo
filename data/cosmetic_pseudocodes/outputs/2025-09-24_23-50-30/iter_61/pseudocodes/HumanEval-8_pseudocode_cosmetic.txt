```
FUNCTION sum_product(list_of_integers)
	DEFINE FUNCTION recurse(index_stack, acc_sum, acc_product)
		CASE index_stack OF
			EMPTY_LIST :
				RETURN tuple(acc_sum, acc_product)
			DEFAULT :
				DEFINE head_element = index_stack[0]
				DEFINE tail_stack = index_stack[1:]
				RETURN recurse(tail_stack, acc_sum + head_element, acc_product * head_element)
		END CASE
	END FUNCTION

	RETURN recurse(list_of_integers, 0, 1)
END FUNCTION
```