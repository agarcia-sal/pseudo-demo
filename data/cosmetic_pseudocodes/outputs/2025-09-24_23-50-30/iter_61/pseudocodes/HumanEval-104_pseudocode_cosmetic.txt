```
FUNCTION unique_digits(list_of_positive_integers)
	DEFINE FUNCTION all_digits_odd_rec(x, y)
		IF y == 0 THEN
			RETURN true
		ELSE
			RETURN (NOT ( ( (y MOD 10) MOD 2) == 0)) AND all_digits_odd_rec(x, y DIV 10)
		END IF
	END FUNCTION

	DEFINE FUNCTION accumulate_odds(index, acc_list)
		IF index == length(list_of_positive_integers) THEN
			RETURN acc_list
		ELSE
			DEFINE current_number = list_of_positive_integers[index]
			DEFINE condition_result = all_digits_odd_rec(current_number, current_number)
			IF condition_result THEN
				RETURN accumulate_odds(index + 1, acc_list + [current_number])
			ELSE
				RETURN accumulate_odds(index + 1, acc_list)
			END IF
		END IF
	END FUNCTION

	DEFINE unsorted_odds = accumulate_odds(0, [])
	DEFINE FUNCTION insert_sorted(lst, val)
		IF lst == [] THEN
			RETURN [val]
		ELSEIF val <= lst[0] THEN
			RETURN [val] + lst
		ELSE
			RETURN [lst[0]] + insert_sorted(lst[1:], val)
		END IF
	END FUNCTION

	DEFINE FUNCTION sort_list(input_list)
		IF input_list == [] THEN RETURN [] END IF
		RETURN insert_sorted(sort_list(input_list[1:]), input_list[0])
	END FUNCTION

	RETURN sort_list(unsorted_odds)
END FUNCTION
```