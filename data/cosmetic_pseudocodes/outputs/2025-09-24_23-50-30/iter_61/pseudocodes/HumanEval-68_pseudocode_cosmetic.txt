```
FUNCTION pluck(variables1)
	switch LENGTH OF variables1
		case 0:
			RETURN empty_list
	end switch

	DEFINE variables2 AS empty_list
	DEFINE variables3 AS 0

	DEFINE FUNCTION find_even_values_helper(variables4)
		if variables4 < LENGTH OF variables1 then
			IF NOT (variables1[variables4] MODULO 2) = 0 THEN
				CALL find_even_values_helper(variables4 + 1)
			ELSE
				APPEND variables1[variables4] TO variables2
				APPEND variables4 TO variables3
				CALL find_even_values_helper(variables4 + 1)
			END IF
		END IF
	END FUNCTION

	CALL find_even_values_helper(0)

	switch LENGTH OF variables2
		case 0:
			RETURN empty_list
	end switch

	DEFINE variables5 AS variables2[0]
	DEFINE variables6 AS variables3[0]
	DEFINE variables7 AS 1

	WHILE variables7 < LENGTH OF variables2
		// Find minimum even value and its index
		IF NOT (variables2[variables7] < variables5) THEN
			variables7 = variables7 + 1
		ELSE
			variables5 = variables2[variables7]
			variables6 = variables3[variables7]
			variables7 = variables7 + 1
		END IF
	END WHILE

	RETURN list_containing variables5 AND variables6
END FUNCTION
```