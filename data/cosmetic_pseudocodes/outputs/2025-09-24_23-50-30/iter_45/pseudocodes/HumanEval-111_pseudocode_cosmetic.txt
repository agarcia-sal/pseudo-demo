```
FUNCTION histogram(test_string)
    INITIALIZE letter_freq_map AS empty dictionary
    SPLIT test_string BY " " INTO tokens_array
    INITIALIZE peak_frequency TO 0

    DEFINE FUNCTION count_occurrences(collection, target) RETURNS INTEGER
        INITIALIZE idx TO 0
        INITIALIZE acc TO 0
        WHILE idx < LENGTH(collection) DO
            IF collection[idx] = target THEN
                acc ← acc + 1
            ENDIF
            idx ← idx + 1
        ENDWHILE
        RETURN acc
    END FUNCTION

    SET index_a TO 0
    WHILE index_a < LENGTH(tokens_array) DO
        SET current_token TO tokens_array[index_a]
        IF current_token ≠ "" THEN
            SET current_count TO count_occurrences(tokens_array, current_token)
            IF NOT (current_count ≤ peak_frequency) THEN
                peak_frequency ← current_count
            ENDIF
        ENDIF
        index_a ← index_a + 1
    ENDWHILE

    IF peak_frequency > 0 THEN
        SET index_b TO 0
        WHILE index_b < LENGTH(tokens_array) DO
            SET candidate_token TO tokens_array[index_b]
            IF count_occurrences(tokens_array, candidate_token) = peak_frequency THEN
                letter_freq_map[candidate_token] ← peak_frequency
            ENDIF
            index_b ← index_b + 1
        ENDWHILE
    ENDIF

    RETURN letter_freq_map
END FUNCTION
```