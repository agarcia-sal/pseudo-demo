```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        VARIABLE str_form IS TO_STRING(number)
        VARIABLE reversed_str IS ""
        FOR index FROM LENGTH(str_form) - 1 DOWNTO 0 STEP -1
            reversed_str <- CONCAT(reversed_str, str_form[index])
        END FOR
        RETURN (str_form = reversed_str)
    END FUNCTION

    VARIABLE count_evens <- 0
    VARIABLE count_odds <- 0

    VARIABLE current <- 1
    WHILE current <= n DO
        SWITCH (current MOD 2)
            CASE 1:
                IF is_palindrome(current) THEN
                    count_odds <- count_odds + 1
                END IF
                BREAK
            CASE 0:
                IF is_palindrome(current) THEN
                    count_evens <- count_evens + 1
                END IF
                BREAK
        END SWITCH
        current <- current + 1
    END WHILE

    RETURN (count_evens, count_odds)
END FUNCTION
```