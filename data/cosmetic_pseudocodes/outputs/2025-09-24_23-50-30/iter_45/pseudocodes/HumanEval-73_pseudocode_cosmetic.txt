```
FUNCTION smallest_change(sequence_of_numbers)
    LET alteration_count BE 0
    LET midpoint BE FLOOR(LENGTH(sequence_of_numbers) / 2)
    LET iterator BE 0
    WHILE iterator < midpoint DO
        LET front_element BE sequence_of_numbers[iterator]
        LET rear_element BE sequence_of_numbers[LENGTH(sequence_of_numbers) - 1 - iterator]
        IF NOT (front_element = rear_element) THEN
            alteration_count ← alteration_count + 1
        END IF
        iterator ← iterator + 1
    END WHILE
    RETURN alteration_count
END FUNCTION
```