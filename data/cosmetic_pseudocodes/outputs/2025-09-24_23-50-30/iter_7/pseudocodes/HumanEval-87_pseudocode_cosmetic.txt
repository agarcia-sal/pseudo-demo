```
FUNCTION get_row(matrix, number)
    DEFINE helper_find_positions(pos_list, r, c)
        IF r IS EQUAL TO LENGTH OF matrix THEN
            RETURN pos_list
        ENDIF
        IF c IS EQUAL TO LENGTH OF matrix AT r THEN
            RETURN helper_find_positions(pos_list, r + 1, 0)
        ENDIF
        IF NOT (matrix AT r AT c IS number) THEN
            RETURN helper_find_positions(pos_list, r, c + 1)
        ENDIF
        RETURN helper_find_positions(pos_list CONCAT (r, c), r, c + 1)
    ENDDEFINE

    SET result_positions TO helper_find_positions(EMPTY LIST, 0, 0)

    DEFINE sort_by_row_then_col(lst)
        SET idx TO 1
        WHILE idx LESS THAN LENGTH OF lst DO
            IF lst AT idx FIRST ELEMENT LESS THAN lst AT idx - 1 FIRST ELEMENT THEN
                SWAP lst AT idx WITH lst AT idx - 1
                SET idx TO 1
                CONTINUE
            ENDIF
            IF lst AT idx FIRST ELEMENT IS EQUAL TO lst AT idx - 1 FIRST ELEMENT THEN
                IF lst AT idx SECOND ELEMENT GREATER THAN lst AT idx -1 SECOND ELEMENT THEN
                    SWAP lst AT idx WITH lst AT idx - 1
                    SET idx TO 1
                    CONTINUE
                ENDIF
            ENDIF
            SET idx TO idx + 1
        ENDWHILE
        RETURN lst
    ENDDEFINE

    SET ordered_positions TO sort_by_row_then_col(result_positions)

    RETURN ordered_positions
END FUNCTION
```