```
FUNCTION sort_even(list_of_elements)
    FUNCTION interleave(elems_A, elems_B, position, accumulator)
        IF position = LENGTH(elems_B) THEN 
            RETURN accumulator + [elems_A[position]]
        ENDIF
        RETURN interleave(elems_A, elems_B, position + 1, accumulator + [elems_A[position], elems_B[position]])
    END FUNCTION

    SET subset_one TO EMPTY LIST
    SET idx_one TO 0
    WHILE idx_one < LENGTH(list_of_elements)
        SET subset_one TO subset_one + [list_of_elements[idx_one]]
        SET idx_one TO idx_one + 2
    ENDWHILE

    SET subset_two TO EMPTY LIST
    SET idx_two TO 1
    WHILE idx_two < LENGTH(list_of_elements)
        SET subset_two TO subset_two + [list_of_elements[idx_two]]
        SET idx_two TO idx_two + 2
    ENDWHILE

    CALL quicksort(subset_one, 0, LENGTH(subset_one) - 1)

    FUNCTION quicksort(arr, low, high)
        IF low >= high THEN RETURN ENDIF
        SET pivot_val TO arr[high]
        SET i TO low - 1
        FOR j FROM low TO high - 1
            IF NOT (arr[j] > pivot_val) THEN
                SET i TO i + 1
                SWAP arr[i], arr[j]
            ENDIF
        ENDFOR
        SWAP arr[i + 1], arr[high]
        SET pi TO i + 1
        CALL quicksort(arr, low, pi - 1)
        CALL quicksort(arr, pi + 1, high)
    END FUNCTION

    IF LENGTH(subset_two) >= LENGTH(subset_one) THEN
        RETURN interleave(subset_one, subset_two, 0, [])
    ENDIF

    RETURN interleave(subset_one, subset_two, 0, [])
END FUNCTION
```