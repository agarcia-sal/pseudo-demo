```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p >= 2)
            RETURN False
        
        FUNCTION check_divisor(integer_d, integer_limit)
            IF integer_d > integer_limit THEN
                RETURN True
            IF NOT (integer_p MODULO integer_d <> 0) THEN
                RETURN False
            RETURN check_divisor(integer_d + 1, integer_limit)
        END FUNCTION

        SET integer_limit TO (INTEGER PART OF (mathematical_functions_module.sqroot(integer_p))) + 1
        IF integer_limit > integer_p - 1 THEN
            SET integer_limit TO integer_p - 1

        RETURN check_divisor(2, integer_limit)
    END FUNCTION

    SET list_sequence TO [0,1]

    LOOP INDEFINITELY
        SET integer_new TO (list_sequence[-1] - (- list_sequence[-2]))
        list_sequence APPEND integer_new

        IF is_prime(list_sequence[-1])
            integer_n = integer_n - 1

        IF (integer_n = 0)
            RETURN list_sequence[-1]
END FUNCTION
```