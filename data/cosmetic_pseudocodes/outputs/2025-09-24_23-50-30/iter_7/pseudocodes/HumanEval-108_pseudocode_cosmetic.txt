```
FUNCTION count_nums(array_of_integers)
  FUNCTION digits_sum(integer_value)
    SET flag TO 1
    IF NOT (integer_value >= 0) THEN
      SET integer_value TO 0 - integer_value
      SET flag TO 0 - 1
    END IF
    SET digit_chars TO []
    FOR i FROM 1 TO LENGTH(STRING(integer_value)) DO
      SET digit_chars APPEND INTEGER(CHAR_AT(STRING(integer_value), i))
    END FOR
    SET digit_chars[1] TO digit_chars[1] * flag

    FUNCTION sum_list(numbers, idx, acc)
      IF idx > LENGTH(numbers) THEN
        RETURN acc
      END IF
      RETURN sum_list(numbers, idx + 1, acc + numbers[idx])
    END FUNCTION

    RETURN sum_list(digit_chars, 1, 0)
  END FUNCTION

  FUNCTION map_digits_sums(arr, idx, acc)
    IF idx > LENGTH(arr) THEN
      RETURN acc
    END IF
    RETURN map_digits_sums(arr, idx + 1, acc + [digits_sum(arr[idx])])
  END FUNCTION

  SET intermediate_list TO map_digits_sums(array_of_integers, 1, [])

  SET filtered_list TO []
  FOR element IN intermediate_list DO
    IF element > 0 THEN
      SET filtered_list APPEND element
    END IF
  END FOR

  RETURN LENGTH(filtered_list)
END FUNCTION
```