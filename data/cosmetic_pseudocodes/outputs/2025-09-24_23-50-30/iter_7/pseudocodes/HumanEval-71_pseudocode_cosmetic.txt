```
FUNCTION triangle_area(u1, u2, u3)
    IF NOT((u1 + u2) > u3 AND (u1 + u3) > u2 AND (u2 + u3) > u1) THEN
        RETURN -1
    END IF

    LET u4 = (u1 + u2 + u3) / 2

    FUNCTION compute_product(val, list)
        IF list IS EMPTY THEN
            RETURN val
        END IF
        LET head = FIRST_ELEMENT(list)
        LET tail = REMAINDER(list)
        RETURN compute_product(val * head, tail)
    END FUNCTION

    LET u5 = compute_product(u4, [u4 - u1, u4 - u2, u4 - u3])

    FUNCTION sqrt_newton(r, x)
        LET approx = r
        LET better = 0.5 * (approx + x / approx)
        IF ABS(better - approx) < 0.00001 THEN
            RETURN better
        ELSE
            RETURN sqrt_newton(better, x)
        END IF
    END FUNCTION

    LET u6 = sqrt_newton(u5, u5)

    FUNCTION round_val(value, places)
        LET factor = 1
        FOR i FROM 1 TO places DO
            factor = factor * 10
        END FOR
        RETURN (INT(value * factor + 0.5)) / factor
    END FUNCTION

    RETURN round_val(u6, 2)
END FUNCTION
```