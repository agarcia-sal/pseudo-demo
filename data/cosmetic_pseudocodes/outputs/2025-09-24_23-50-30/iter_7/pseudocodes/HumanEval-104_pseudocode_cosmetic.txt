```
FUNCTION unique_digits(collection_of_numbers)
  SET container := ( )
  
  DEFINE FUNCTION check_oddness(n)
    IF n = 0 THEN RETURN true
    IF (n % 10) % 2 = 0 THEN RETURN false
    RETURN check_oddness(n // 10)
  END FUNCTION

  FOR idx FROM 1 TO LENGTH(collection_of_numbers) DO
    SET current := collection_of_numbers[idx]
    IF check_oddness(current) THEN
      container := container + [current]
  END FOR

  DEFINE FUNCTION sort_asc(arr)
    FOR pass FROM 1 TO LENGTH(arr) - 1 DO
      FOR i FROM 1 TO LENGTH(arr) - pass DO
        IF arr[i] > arr[i+1] THEN
          SET tmp := arr[i]; arr[i] := arr[i+1]; arr[i+1] := tmp
        END IF
      END FOR
    END FOR
    RETURN arr
  END FUNCTION

  RETURN sort_asc(container)
END FUNCTION
```