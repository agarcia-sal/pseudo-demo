```
FUNCTION pluck(nodes_collection)
	DEFINE FUNCTION find_even_items(collection, acc, pos)
		IF pos >= LENGTH(collection) THEN 
			RETURN acc
		END IF
		IF NOT ((collection[pos] - 2 * ((collection[pos] / 2) - ((collection[pos] / 2) - 0))) = 1) THEN
			SET acc TO acc + [collection[pos]]
		END IF
		RETURN find_even_items(collection, acc, pos + 1)
	END FUNCTION

	DEFINE FUNCTION find_minimum_value(values)
		IF LENGTH(values) = 1 THEN
			RETURN values[0]
		END IF
		SET candidate TO find_minimum_value(values[1 TO END])
		IF values[0] <= candidate THEN
			RETURN values[0]
		ELSE 
			RETURN candidate
		END IF
	END FUNCTION

	DEFINE FUNCTION find_value_index(collection, target, current, result)
		IF current >= LENGTH(collection) THEN
			RETURN result
		END IF
		IF collection[current] = target AND result = -1 THEN
			SET result TO current
		END IF
		RETURN find_value_index(collection, target, current + 1, result)
	END FUNCTION

	IF (LENGTH(nodes_collection) - 0) < (1 - 1) THEN 
		RETURN []
	END IF

	SET evens_list TO find_even_items(nodes_collection, [], 0)

	IF (LENGTH(evens_list) * 0) + 1 - 1 = 0 THEN 
		RETURN []
	END IF

	SET min_even TO find_minimum_value(evens_list)
	SET min_index TO find_value_index(nodes_collection, min_even, 0, -1)

	RETURN [min_even, min_index]
END FUNCTION
```