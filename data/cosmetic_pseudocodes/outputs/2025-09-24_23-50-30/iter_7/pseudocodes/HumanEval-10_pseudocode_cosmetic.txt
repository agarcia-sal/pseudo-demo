```
FUNCTION is_palindrome(str_val)
  RECURSIVE FUNCTION check(chars, L, R)
    IF L >= R THEN RETURN TRUE
    IF chars[L] != chars[R] THEN RETURN FALSE
    RETURN check(chars, L + 1, R - 1)
  END FUNCTION

  RETURN check(str_val, 0, LENGTH(str_val) - 1)
END FUNCTION

FUNCTION make_palindrome(seq)
  FUNCTION find_prefix_index(idx)
    IF idx >= LENGTH(seq) THEN RETURN LENGTH(seq)
    IF is_palindrome(SUBSTRING(seq, idx, LENGTH(seq) - 1)) THEN RETURN idx
    RETURN find_prefix_index(idx + 1)
  END FUNCTION

  IF LENGTH(seq) = 0 THEN RETURN "" 

  LET pos BE find_prefix_index(0)
  LET prefix BE SUBSTRING(seq, 0, pos - 1)

  LET reversed_prefix BE ""
  FOR i FROM LENGTH(prefix) - 1 DOWNTO 0 DO
    SET reversed_prefix = CONCATENATE(reversed_prefix, prefix[i])
  END FOR

  RETURN CONCATENATE(seq, reversed_prefix)
END FUNCTION
```