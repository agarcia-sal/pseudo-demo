```
FUNCTION separate_paren_groups(string_of_parentheses)
	
	DEFINE FUNCTION process_chars(index_counter, depth_counter, acc_current, acc_results)  
		IF index_counter >= LENGTH(string_of_parentheses) 
			RETURN acc_results
		END IF
		
		SWITCH string_of_parentheses[index_counter]
			
			CASE '(':
				LET new_depth BE depth_counter + 1
				LET new_current BE acc_current + [ '(' ]
				RETURN process_chars(index_counter + 1, new_depth, new_current, acc_results)
			
			CASE ')':
				LET new_depth BE depth_counter - 1
				LET new_current BE acc_current + [ ')' ]
				IF new_depth = 0
					RETURN process_chars(index_counter + 1, new_depth, [], acc_results + [ JOIN(new_current) ])
				ELSE
					RETURN process_chars(index_counter + 1, new_depth, new_current, acc_results)
				END IF
			
			DEFAULT:
				RETURN process_chars(index_counter + 1, depth_counter, acc_current, acc_results)
		END SWITCH
	END FUNCTION
	
	RETURN process_chars(0, 0, [], [])
END FUNCTION
```