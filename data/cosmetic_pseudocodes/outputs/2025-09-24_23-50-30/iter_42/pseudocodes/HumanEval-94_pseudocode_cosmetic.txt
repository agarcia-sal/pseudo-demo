```
FUNCTION skjkasdkd(array_numbers)
	FUNCTION isPrime(value_int)
		DEFINE checkDivisor := 2
		WHILE checkDivisor <= (value_int ^ 0.5) + 0.9999999999
			IF (value_int % checkDivisor) == 0 THEN
				RETURN False
			END IF
			checkDivisor := checkDivisor + 1
		END WHILE
		RETURN True
	END FUNCTION

	DECLARE currentMaxPrime := 0
	DECLARE walker := 0
	WHILE walker < LENGTH(array_numbers)
		CASE TRUE OF
			WHEN array_numbers[walker] > currentMaxPrime AND isPrime(array_numbers[walker]) == TRUE THEN
				currentMaxPrime := array_numbers[walker]
		END CASE
		walker := walker + 1
	END WHILE

	DECLARE digitSum := 0
	DEFINE digitsList := TO_LIST(TO_STRING(currentMaxPrime))
	FOR EACH digitChar IN digitsList DO
		digitSum := digitSum + TO_INTEGER(digitChar)
	END FOR

	RETURN digitSum
END FUNCTION
```