```
FUNCTION is_sorted(list_of_numbers)
	count_map := map()
	
	INDEX := 0
	N := LENGTH(list_of_numbers)
	WHILE INDEX < N DO
		ELEMENT := list_of_numbers[INDEX]
		IF ELEMENT IN count_map THEN
			count_map[ELEMENT] := count_map[ELEMENT] + 1
		ELSE
			count_map[ELEMENT] := 1
		END IF
		INDEX := INDEX + 1
	END WHILE
	
	KEYS := KEYS_OF(count_map)
	INDEX2 := 0
	LIMIT := LENGTH(KEYS)
	WHILE INDEX2 < LIMIT DO
		KEY := KEYS[INDEX2]
		COUNT_VAL := count_map[KEY]
		IF NOT (COUNT_VAL <= 2) THEN
			RETURN False
		END IF
		INDEX2 := INDEX2 + 1
	END WHILE
	
	INDEX3 := 1
	IS_NONDECREASING := True
	WHILE INDEX3 < N AND IS_NONDECREASING DO
		PREVIOUS_VAL := list_of_numbers[INDEX3-1]
		CURRENT_VAL := list_of_numbers[INDEX3]
		IF PREVIOUS_VAL > CURRENT_VAL THEN
			IS_NONDECREASING := False
		END IF
		INDEX3 := INDEX3 + 1
	END WHILE
	
	RETURN IS_NONDECREASING
END FUNCTION
```