```
FUNCTION common(list1, list2)
	return sort(to_list(collect_matches(list1, list2, create_set())))

FUNCTION collect_matches(queueA, queueB, accumulator)
	IF is_empty(queueA)
		RETURN accumulator
	ELSE
		DEFINE headA AS first(queueA)
		DEFINE tailA AS rest(queueA)
		RETURN collect_matches(tailA, queueB, gather_matches(headA, queueB, accumulator))
END FUNCTION

FUNCTION gather_matches(itemX, queueY, current_set)
	IF is_empty(queueY)
		RETURN current_set
	ELSE
		DEFINE headY AS first(queueY)
		DEFINE tailY AS rest(queueY)
		DEFINE next_set AS (headY = itemX) ? add_to_set(current_set, itemX) : current_set
		RETURN gather_matches(itemX, tailY, next_set)
END FUNCTION
```