```
FUNCTION count_nums(array_of_integers)
	TYPE PosNegIndex = 0
	FUNCTION digits_sum(integer_value)
		VARIABLE sign_flag := 1
		VARIABLE abs_value := integer_value
		IF NOT (integer_value >= 0)
			abs_value := integer_value * (-1)
			sign_flag := -1
		END IF
		VARIABLE digits_list := []
		FUNCTION build_digits(index)
			IF index EQUALS LENGTH(STRING(abs_value))
				RETURN
			ELSE
				digits_list APPEND TO INTEGER(CHAR_AT(STRING(abs_value), index))
				build_digits(index + 1)
			END IF
		END FUNCTION
		build_digits(0)
		digits_list[0] := digits_list[0] * sign_flag
		VARIABLE accumulator := 0
		VARIABLE idx := 0
		WHILE idx < LENGTH(digits_list)
			accumulator := accumulator + digits_list[idx]
			idx := idx + 1
		END WHILE
		RETURN accumulator
	END FUNCTION

	VARIABLE intermediate_list := []
	VARIABLE pos := 0
	WHILE pos < LENGTH(array_of_integers)
		intermediate_list APPEND TO digits_sum(array_of_integers[pos])
		pos := pos + 1
	END WHILE

	VARIABLE count := 0
	VARIABLE cursor := 0
	WHILE cursor < LENGTH(intermediate_list)
		IF intermediate_list[cursor] > 0
			count := count + 1
		END IF
		cursor := cursor + 1
	END WHILE
	RETURN count
END FUNCTION
```