```
FUNCTION prime_fib(integer_n)
	import mathematical_functions_module

	FUNCTION is_prime(integer_p)
		IF integer_p < 2
			RETURN False

		integer_limit ← integer_p - 1
		integer_bound ← (INTEGER_PART(SQUARE_ROOT(integer_p)) + 1)
		integer_check_limit ← IF integer_limit < integer_bound THEN integer_limit ELSE integer_bound

		integer_current ← 2
		WHILE integer_current ≤ integer_check_limit
			IF (integer_p MOD integer_current) = 0
				RETURN False
			integer_current ← integer_current + 1
		END WHILE

		RETURN True
	END FUNCTION

	list_fib ← [0, 1]

	LABEL recursion_loop
		list_fib.APPEND(list_fib[-1] + list_fib[-2])
		IF is_prime(list_fib[-1])
			integer_n ← integer_n - 1
		IF integer_n = 0
			RETURN list_fib[-1]
		GOTO recursion_loop
END FUNCTION
```