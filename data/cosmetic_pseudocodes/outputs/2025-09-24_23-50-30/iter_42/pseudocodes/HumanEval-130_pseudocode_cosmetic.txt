```
FUNCTION tri(number_z)
	LIST result_w := [1]
	IF NOT (0 NOT_EQUALS number_z) THEN
		RETURN result_w
	END IF
	result_w := [1, 3]
	DEF helper_loop(pos_v, acc_u)
		IF pos_v > number_z THEN
			RETURN acc_u
		END IF
		IF pos_v % 2 = 0 THEN
			acc_u := acc_u + [(pos_v / 2) + 1]
		ELSE
			acc_u := acc_u + [acc_u[pos_v - 1] + acc_u[pos_v - 2] + ((pos_v + 3) / 2)]
		END IF
		RETURN helper_loop(pos_v + 1, acc_u)
	END DEF
	RETURN helper_loop(2, result_w)
END FUNCTION
```