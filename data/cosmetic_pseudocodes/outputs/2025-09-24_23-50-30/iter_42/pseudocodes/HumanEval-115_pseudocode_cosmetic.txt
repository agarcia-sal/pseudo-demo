```
FUNCTION max_fill(grid, capacity)
	mathModule ← IMPORT math
	accumulateRows ← 0

	FUNCTION processRows(idx, accumulated)
		IF idx >= LENGTH(grid) THEN
			RETURN accumulated
		ELSE
			sumCurrentRow ← 0
			iterator ← 0
			WHILE iterator < LENGTH(grid[idx])
				sumCurrentRow ← sumCurrentRow + grid[idx][iterator]
				iterator ← iterator + 1
			END WHILE
			currentFill ← mathModule.ceiling(sumCurrentRow / capacity)
			RETURN processRows(idx + 1, accumulated + currentFill)
		END IF
	END FUNCTION

	accumulateRows ← processRows(0, 0)
	RETURN accumulateRows
END FUNCTION
```