```
FUNCTION find_closest_elements(input_sequence)
	minimal_gap ← None
	adjacent_elements ← None

	index_outer ← 0
	WHILE index_outer < LENGTH(input_sequence)
		element_outer ← input_sequence[index_outer]
		index_inner ← 0
		WHILE index_inner < LENGTH(input_sequence)
			element_inner ← input_sequence[index_inner]
			condition_check ← NOT (index_inner = index_outer)
			IF condition_check = TRUE THEN
				computed_gap ← ABS(element_outer - element_inner)
				IF minimal_gap = None THEN
					minimal_gap ← computed_gap
					adjacent_elements ← (element_outer <= element_inner) ? (element_outer, element_inner) : (element_inner, element_outer)
				ELSE
					IF computed_gap < minimal_gap THEN
						minimal_gap ← computed_gap
						adjacent_elements ← (element_outer <= element_inner) ? (element_outer, element_inner) : (element_inner, element_outer)
					END IF
				END IF
			END IF
			index_inner ← index_inner + 1
		END WHILE
		index_outer ← index_outer + 1
	END WHILE

	RETURN adjacent_elements
END FUNCTION
```