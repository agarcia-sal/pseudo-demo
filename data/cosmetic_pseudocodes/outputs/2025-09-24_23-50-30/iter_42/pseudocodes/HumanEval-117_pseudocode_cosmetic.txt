```
FUNCTION select_words(string_s, natural_number_n)
	result_sequence ← []
	word_list ← SPLIT string_s BY " "
	
	FUNCTION count_consonants(string_x, idx, acc)
		IF idx >= LENGTH string_x THEN
			RETURN acc
		ELSE
			current_char_lower ← LOWERCASE string_x[idx]
			is_vowel ← current_char_lower = "a" OR current_char_lower = "e" OR current_char_lower = "i" OR current_char_lower = "o" OR current_char_lower = "u"
			next_acc ← acc + (0 IF is_vowel ELSE 1)
			RETURN count_consonants(string_x, idx + 1, next_acc)
		END IF
	END FUNCTION
	
	FUNCTION process_words(lst, pos, res_acc)
		IF pos >= LENGTH lst THEN
			RETURN res_acc
		ELSE
			current_word ← lst[pos]
			consonant_count ← count_consonants(current_word, 0, 0)
			ADD_TO_LIST ← (consonant_count = natural_number_n)
			new_res ← (res_acc + [current_word]) IF ADD_TO_LIST ELSE res_acc
			RETURN process_words(lst, pos + 1, new_res)
		END IF
	END FUNCTION
	
	RETURN process_words(word_list, 0, result_sequence)
END FUNCTION
```