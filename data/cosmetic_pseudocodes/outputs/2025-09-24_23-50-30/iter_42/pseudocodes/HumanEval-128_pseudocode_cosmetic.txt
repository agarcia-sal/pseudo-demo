```
FUNCTION prod_signs(list_of_nums)
	WHILE NOT list_of_nums IS EMPTY DO
		EXIT
	END WHILE
	IF list_of_nums CONTAINS 0 THEN
		LET result_sign <- 0
	ELSE
		LET negative_counter <- 0
		LET index_var <- 0
		WHILE index_var < LENGTH OF list_of_nums DO
			IF list_of_nums[index_var] < 0 THEN
				negative_counter <- negative_counter + 1
			END IF
			index_var <- index_var + 1
		END WHILE
		result_sign <- 1
		LET neg_index <- negative_counter
		WHILE neg_index > 0 DO
			result_sign <- -1 * result_sign
			neg_index <- neg_index - 1
		END WHILE
	END IF
	LET magnitude_sum <- 0
	LET pos <- 0
	WHILE pos < LENGTH OF list_of_nums DO
		LET val <- list_of_nums[pos]
		magnitude_sum <- magnitude_sum + (val >= 0 ? val : -val)
		pos <- pos + 1
	END WHILE
	RETURN result_sign * magnitude_sum
END FUNCTION
```