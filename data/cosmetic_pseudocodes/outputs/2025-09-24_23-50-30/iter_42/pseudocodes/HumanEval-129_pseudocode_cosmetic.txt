```
FUNCTION minPath(grid, delta)
	n = LENGTH(grid)
	tempVal = (n * n) + 1
	INDEX_X = 0
	WHILE INDEX_X < n
		INDEX_Y = 0
		WHILE INDEX_Y < n
			IF (grid[INDEX_X][INDEX_Y] = 1) THEN
				tmp_collection ← SET()
				IF NOT (INDEX_X = 0) THEN tmp_collection.ADD(grid[(INDEX_X - 1)][INDEX_Y]) END IF
				IF NOT (INDEX_Y = 0) THEN tmp_collection.ADD(grid[INDEX_X][(INDEX_Y - 1)]) END IF
				IF NOT (INDEX_X = (n - 1)) THEN tmp_collection.ADD(grid[(INDEX_X + 1)][INDEX_Y]) END IF
				IF NOT (INDEX_Y = (n - 1)) THEN tmp_collection.ADD(grid[INDEX_X][(INDEX_Y + 1)]) END IF
				tempVal = MIN(tmp_collection)
			END IF
			INDEX_Y = INDEX_Y + 1
		END WHILE
		INDEX_X = INDEX_X + 1
	END WHILE
	result_arr ← []
	ITERATE idx FROM 0 TO (delta - 1) DO
		CASE (idx MOD 2) OF
			0: result_arr.APPEND(1)
			ELSE result_arr.APPEND(tempVal)
		END CASE
	END ITERATE
	RETURN result_arr
END FUNCTION
```