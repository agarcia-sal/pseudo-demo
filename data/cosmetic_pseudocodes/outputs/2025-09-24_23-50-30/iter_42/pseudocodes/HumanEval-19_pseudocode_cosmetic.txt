```
FUNCTION sort_numbers(alphabetic_string)
	value_map = 
		{
			"four":4,
			"two":2,
			"nine":9,
			"eight":8,
			"three":3,
			"five":5,
			"seven":7,
			"one":1,
			"zero":0,
			"six":6
		}
	
	FUNCTION split_filter(accum, idx, tokens)
		IF idx < LENGTH(tokens) THEN
			IF tokens[idx] <> "" THEN
				APPEND tokens[idx] TO accum
			END IF
			RETURN split_filter(accum, idx + 1, tokens)
		ELSE
			RETURN accum
		END IF
	END FUNCTION
	
	_partials = SPLIT(alphabetic_string, " ")
	_filtered = split_filter([], 0, _partials)
	
	FUNCTION quicksort(data)
		IF LENGTH(data) <= 1 THEN
			RETURN data
		END IF
		pivot = data[0]
		less = []
		greater = []
		FOR idx IN 1 TO LENGTH(data) - 1 DO
			IF value_map[data[idx]] < value_map[pivot] THEN
				APPEND data[idx] TO less
			ELSE
				APPEND data[idx] TO greater
			END IF
		END FOR
		RETURN CONCAT(quicksort(less), [pivot], quicksort(greater))
	END FUNCTION
	
	sorted_list = quicksort(_filtered)
	
	RETURN CONCATENATE_WITH_DELIMITER(sorted_list, " ")
END FUNCTION
```