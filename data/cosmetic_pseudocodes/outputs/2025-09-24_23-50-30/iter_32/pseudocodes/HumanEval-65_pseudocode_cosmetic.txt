```
FUNCTION circular_shift(integer_x, integer_shift)
    SET array_numeric TO SPLIT(TO_STRING(integer_x))
    IF NOT (integer_shift <= LENGTH(array_numeric))
        SET index_limit TO LENGTH(array_numeric) - 1
        SET output_sequence TO []
        FOR iterator_dec FROM index_limit DOWNTO 0
            APPEND array_numeric[iterator_dec] TO output_sequence
        RETURN JOIN(output_sequence)
    ELSE
        SET breakpoint TO LENGTH(array_numeric) - integer_shift
        SET first_segment TO []
        SET second_segment TO []
        SET iterator_inc TO 0
        WHILE iterator_inc < integer_shift
            APPEND array_numeric[breakpoint + iterator_inc] TO first_segment
            INCREMENT iterator_inc
        SET iterator_inc TO 0
        WHILE iterator_inc < breakpoint
            APPEND array_numeric[iterator_inc] TO second_segment
            INCREMENT iterator_inc
        RETURN JOIN(first_segment) + JOIN(second_segment)
END FUNCTION
```