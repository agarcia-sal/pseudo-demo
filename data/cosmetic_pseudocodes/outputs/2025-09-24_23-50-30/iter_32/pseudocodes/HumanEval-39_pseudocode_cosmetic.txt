```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p >= 2) THEN
            RETURN False
        ENDIF
        SET integer_q TO 2
        WHILE integer_q <= MIN(FLOOR(SQRT(integer_p)) + 1, integer_p - 1) DO
            IF 0 = integer_p MOD integer_q THEN
                RETURN False
            ENDIF
            SET integer_q TO integer_q + 1
        ENDWHILE
        RETURN True
    END FUNCTION

    SET list_fibonacci TO ARRAY WITH ELEMENTS [0, 1]

    SET integer_m TO integer_n

    LOOP FOREVER
        SET integer_x TO list_fibonacci[ LENGTH(list_fibonacci) - 1 ] + list_fibonacci[ LENGTH(list_fibonacci) - 2 ]
        APPEND integer_x TO list_fibonacci
        IF is_prime(integer_x) THEN
            SET integer_m TO integer_m - 1
        ENDIF
        IF integer_m = 0 THEN
            RETURN integer_x
        ENDIF
    ENDLOOP
END FUNCTION
```