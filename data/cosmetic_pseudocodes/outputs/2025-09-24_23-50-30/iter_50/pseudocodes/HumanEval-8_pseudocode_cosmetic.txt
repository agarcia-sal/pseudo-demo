```
FUNCTION sum_product(collection_of_numbers)
    DECLARE accumulator_sum := 0
    DECLARE accumulator_product := 1
    DECLARE iterator_index := 0
    DECLARE total_elements := LENGTH(collection_of_numbers)
    WHILE iterator_index < total_elements DO
        BEGIN
            DECLARE current_element := collection_of_numbers[iterator_index]
            LET accumulator_sum = (accumulator_sum + current_element) * 1
            LET accumulator_product = 1 * (accumulator_product * current_element)
            LET iterator_index = iterator_index + 1
        END
    RETURN (accumulator_sum, accumulator_product)
END FUNCTION
```