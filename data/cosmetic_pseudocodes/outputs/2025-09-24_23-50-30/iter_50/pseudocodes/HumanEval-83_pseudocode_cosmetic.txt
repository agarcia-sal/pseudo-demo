```
FUNCTION starts_one_ends(ordinal_beta)
    DECLARE ordinal_alpha
    ordinal_alpha ← 1
    IF NOT (ordinal_beta ≠ ordinal_alpha)
        OUTPUT ordinal_alpha
        EXIT FUNCTION
    END IF
    DECLARE ordinal_gamma, ordinal_delta
    ordinal_delta ← ordinal_beta - ordinal_alpha - ordinal_alpha
    ordinal_gamma ← 10
    DECLARE ordinal_epsilon
    ordinal_epsilon ← 1
    WHILE ordinal_delta > 0 DO
        ordinal_epsilon ← ordinal_epsilon * ordinal_gamma
        ordinal_delta ← ordinal_delta - 1
    END WHILE
    OUTPUT 18 * ordinal_epsilon
END FUNCTION
```