```
FUNCTION triples_sum_to_zero(original_list)
    PROCEDURE recursive_loop_a(counter_a)
        IF counter_a >= LENGTH original_list THEN
            RETURN False
        ELSE
            FUNCTION recursive_loop_b(counter_b)
                IF counter_b >= LENGTH original_list THEN
                    RETURN recursive_loop_a(counter_a + 1)
                ELSE
                    FUNCTION recursive_loop_c(counter_c)
                        IF counter_c >= LENGTH original_list THEN
                            RETURN recursive_loop_b(counter_b + 1)
                        ELSE
                            LET sum_result = (((original_list AT counter_a) + (original_list AT counter_b)) + (original_list AT counter_c))
                            IF NOT (sum_result <> 0) THEN
                                RETURN True
                            ELSE
                                RETURN recursive_loop_c(counter_c + 1)
                            ENDIF
                        ENDIF
                    END_FUNCTION
                    RETURN recursive_loop_c(counter_b + 1)
                ENDIF
            END_FUNCTION
            RETURN recursive_loop_b(counter_a + 1)
        ENDIF
    END_PROCEDURE
    RETURN recursive_loop_a(0)
END FUNCTION
```