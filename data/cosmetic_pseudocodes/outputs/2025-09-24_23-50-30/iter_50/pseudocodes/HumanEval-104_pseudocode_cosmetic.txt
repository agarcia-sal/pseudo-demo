```
FUNCTION unique_digits(arr_of_pos_ints)
    DEFINE FUNCTION are_all_digits_odd(num,acc)
        IF num == 0 THEN
            RETURN acc
        ELSE
            LET digit = num MOD 10
            LET is_odd_digit = (digit MOD 2) != 0
            RETURN are_all_digits_odd( num DIV 10, acc AND is_odd_digit )
    END FUNCTION

    DEFINE FUNCTION gather_odd_digits_elements(input_list,index,result_stack)
        IF index >= LENGTH(input_list) THEN
            RETURN result_stack
        ELSE
            LET current_value = input_list[index]
            IF are_all_digits_odd(current_value, TRUE) THEN
                RETURN gather_odd_digits_elements(input_list, index + 1, result_stack + [current_value])
            ELSE
                RETURN gather_odd_digits_elements(input_list, index + 1, result_stack)
    END FUNCTION

    LET filtered_list = gather_odd_digits_elements(arr_of_pos_ints, 0, [])

    LET sorted_filtered = filtered_list
    FOR i FROM 0 TO LENGTH(filtered_list) - 2 DO
        FOR j FROM 0 TO LENGTH(filtered_list) - 2 - i DO
            IF sorted_filtered[j] > sorted_filtered[j+1] THEN
                LET temp_swap = sorted_filtered[j]
                SET sorted_filtered[j] = sorted_filtered[j+1]
                SET sorted_filtered[j+1] = temp_swap
    RETURN sorted_filtered
END FUNCTION
```