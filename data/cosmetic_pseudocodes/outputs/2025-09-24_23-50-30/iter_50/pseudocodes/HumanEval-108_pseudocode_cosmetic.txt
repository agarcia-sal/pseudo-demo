```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        SET sign_flag TO 1
        IF NOT (integer_value >= 0)
            SET integer_value TO 0 - integer_value
            SET sign_flag TO 0 - 1
        END IF

        SET digit_str TO STRING_OF(integer_value)
        SET converted_digits TO EMPTY LIST
        FOR index FROM 0 TO LENGTH(digit_str) - 1
            APPEND INTEGER_OF(digit_str[index]) TO converted_digits
        END FOR

        SET converted_digits[0] TO converted_digits[0] * sign_flag

        SET accumulator TO 0
        FOR each num_element IN converted_digits
            SET accumulator TO accumulator + num_element
        END FOR

        RETURN accumulator
    END FUNCTION


    FUNCTION helper(accum_results, remaining_numbers)
        IF LENGTH(remaining_numbers) = 0 THEN
            RETURN accum_results
        ELSE
            SET head TO remaining_numbers[0]
            SET tail TO SLICE(remaining_numbers, 1, LENGTH(remaining_numbers))
            RETURN helper(accum_results + [digits_sum(head)], tail)
        END IF
    END FUNCTION


    SET sums_list TO helper([], array_of_integers)

    FUNCTION select_positive(collection)
        SET positive_elements TO EMPTY LIST
        FOR each element IN collection
            IF element > 0 THEN
                APPEND element TO positive_elements
            END IF
        END FOR
        RETURN positive_elements
    END FUNCTION

    RETURN LENGTH(select_positive(sums_list))
END FUNCTION
```