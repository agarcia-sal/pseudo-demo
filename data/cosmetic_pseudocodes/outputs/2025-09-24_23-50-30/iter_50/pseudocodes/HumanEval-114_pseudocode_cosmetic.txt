```
FUNCTION minSubArraySum(list_of_integers)
    VAR idx ← 0
    VAR len_list ← LENGTH(list_of_integers)
    VAR accum_neg ← 0
    VAR peak_val ← 0

    WHILE idx < len_list DO
        accum_neg ← accum_neg + (0 - list_of_integers[idx])
        IF NOT (accum_neg >= 0) THEN
            accum_neg ← 0
        END IF
        peak_val ← (IF accum_neg > peak_val THEN accum_neg ELSE peak_val)
        idx ← idx + 1
    END WHILE

    IF peak_val = 0 THEN
        VAR max_neg ← (list_of_integers[0] * -1)
        VAR scan ← 1
        WHILE scan < len_list DO
            VAR candidate ← (0 - list_of_integers[scan])
            IF candidate > max_neg THEN
                max_neg ← candidate
            END IF
            scan ← scan + 1
        END WHILE
        peak_val ← max_neg
    END IF

    VAR final_result ← 0 - peak_val
    RETURN final_result
END FUNCTION
```