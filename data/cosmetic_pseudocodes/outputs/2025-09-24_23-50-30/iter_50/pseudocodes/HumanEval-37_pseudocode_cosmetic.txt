```
FUNCTION sort_even(list_of_elements)
    DEFINE FUNCTION build_result(accumulator, pairs)
        IF pairs IS EMPTY
            RETURN accumulator
        LET head_pair BE pairs[0]
        LET tail_pairs BE pairs[1 TO END]
        RETURN build_result(accumulator + [head_pair[0], head_pair[1]], tail_pairs)
    END FUNCTION

    LET p1 BE [list_of_elements[i] FOR i IN RANGE(0, LENGTH(list_of_elements), 2)]
    LET p2 BE []
    LET j BE 1
    WHILE j < LENGTH(list_of_elements)
        APPEND list_of_elements[j] TO p2
        SET j TO j + 2
    END WHILE

    LET sorted_p1 BE p1
    LET k BE 0
    WHILE k < LENGTH(sorted_p1) - 1
        LET m BE k + 1
        WHILE m < LENGTH(sorted_p1)
            IF sorted_p1[m] < sorted_p1[k]
                LET temp BE sorted_p1[k]
                SET sorted_p1[k] TO sorted_p1[m]
                SET sorted_p1[m] TO temp
            END IF
            SET m TO m + 1
        END WHILE
        SET k TO k + 1
    END WHILE

    LET combined_pairs BE []
    LET x BE 0
    LET y_max BE MIN(LENGTH(sorted_p1), LENGTH(p2))
    WHILE x < y_max
        APPEND [sorted_p1[x], p2[x]] TO combined_pairs
        SET x TO x + 1
    END WHILE

    LET result_list BE build_result([], combined_pairs)
    IF LENGTH(sorted_p1) > LENGTH(p2)
        SET result_list TO result_list + [sorted_p1[LENGTH(sorted_p1) - 1]]
    END IF

    RETURN result_list
END FUNCTION
```