```
FUNCTION skjkasdkd(list_of_integers)
    FUNCTION isPrime(integer_value)
        DEFINE checkDivisor(current_divisor, limit)
            IF current_divisor >= limit THEN
                RETURN True
            ELSE
                IF (integer_value MOD current_divisor) = 0 THEN
                    RETURN False
                ELSE
                    RETURN checkDivisor(current_divisor + 1, limit)
                END IF
            END IF
        END DEFINE

        RETURN checkDivisor(2, FLOOR(SQRT(integer_value)) + 1)
    END FUNCTION

    DECLARE highestPrimeSoFar <- 0
    DECLARE positionCursor <- 0
    WHILE positionCursor < LENGTH(list_of_integers) DO
        DECLARE candidateValue <- list_of_integers[positionCursor]
        IF (candidateValue > highestPrimeSoFar) AND (isPrime(candidateValue) = True) THEN
            highestPrimeSoFar <- candidateValue
        END IF
        positionCursor <- positionCursor + 1
    END WHILE

    DECLARE digitSum <- 0
    DECLARE stringRepresentation <- CONVERT_TO_STRING(highestPrimeSoFar)
    FOR EACH singleChar IN stringRepresentation DO
        digitSum <- digitSum + (ORD(singleChar) - ORD('0'))
    END FOR

    RETURN digitSum
END FUNCTION
```