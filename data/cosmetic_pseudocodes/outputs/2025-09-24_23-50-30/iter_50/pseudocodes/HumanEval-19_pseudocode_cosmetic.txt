```
FUNCTION sort_numbers(string_of_number_words)
    value_dictionary := {
        'nine': 9,
        'one': 1,
        'five': 5,
        'three': 3,
        'six': 6,
        'eight': 8,
        'two': 2,
        'zero': 0,
        'seven': 7,
        'four': 4
    }
    FUNCTION recursive_filter(words_list, index, accumulator)
        IF index >= LENGTH(words_list) THEN
            RETURN accumulator
        ELSE
            current_word := words_list[index]
            IF (current_word != '') THEN
                accumulator := accumulator + [current_word]
            END IF
            RETURN recursive_filter(words_list, index + 1, accumulator)
        END IF
    END FUNCTION

    words_array := SPLIT(string_of_number_words, ' ')
    filtered_words := recursive_filter(words_array, 0, [])

    FUNCTION insertion_sort(arr, n)
        IF n > 1 THEN
            insertion_sort(arr, n - 1)
            key := arr[n - 1]
            key_val := value_dictionary[key]
            j := n - 2
            WHILE j >= 0 AND value_dictionary[arr[j]] > key_val DO
                arr[j + 1] := arr[j]
                j := j - 1
            END WHILE
            arr[j + 1] := key
        END IF
    END FUNCTION

    insertion_sort(filtered_words, LENGTH(filtered_words))

    RETURN JOIN(filtered_words, ' ')
END FUNCTION
```