```
FUNCTION get_odd_collatz(alpha)
    DEFINE FUNCTION collatz_iter(beta, gamma)
        IF gamma <= 1 THEN
            RETURN gamma
        END IF
        SWITCH (gamma MOD 2)
            CASE 0:
                gamma <- gamma / 2
                RETURN collatz_iter(beta, gamma)
            CASE 1:
                gamma <- gamma * 3 + 1
                beta <- beta + [gamma]
                RETURN collatz_iter(beta, gamma)
        END SWITCH
    END FUNCTION

    DEFINE FUNCTION sort_list(delta)
        RETURN delta sorted ascending
    END FUNCTION

    gamma_list <- []
    SELECT CASE (alpha MOD 2)
        CASE 0:
            gamma_list <- []
        CASE 1:
            gamma_list <- [alpha]
    END SELECT
    
    WHILE alpha > 1
        IF alpha MOD 2 = 0 THEN
            alpha <- alpha / 2
        ELSE
            alpha <- alpha * 3 + 1
        END IF
        IF alpha MOD 2 = 1 THEN
            gamma_list <- gamma_list + [alpha]
        END IF
    END WHILE

    RETURN sort_list(gamma_list)
END FUNCTION
```