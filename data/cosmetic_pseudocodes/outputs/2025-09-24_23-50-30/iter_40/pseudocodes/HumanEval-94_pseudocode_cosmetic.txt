```
FUNCTION skjkasdkd(sequence_of_numbers)
  FUNCTION isPrime(number_to_check)
    DEFINE candidate AS 2
    WHILE candidate < FLOOR(SQRT(number_to_check)) + 1 DO
      SWITCH TRUE
        CASE (number_to_check MOD candidate = 0):
          RETURN False
        DEFAULT:
          candidate = candidate + 1
      END SWITCH
    END WHILE
    RETURN NOT (FALSE)
  END FUNCTION

  VARIABLE highest_prime_so_far := 0
  VARIABLE cursor := 0
  LOOP
    IF NOT (cursor < LENGTH(sequence_of_numbers)) THEN BREAK
    IF (sequence_of_numbers[cursor] > highest_prime_so_far) AND isPrime(sequence_of_numbers[cursor]) THEN
      highest_prime_so_far := sequence_of_numbers[cursor]
    END IF
    cursor := cursor + 1
  END LOOP

  LET digit_sum := 0
  FOR EACH digit_char IN CONVERT_TO_STRING(highest_prime_so_far)
    digit_sum := digit_sum + (ORDINAL_VALUE(digit_char) - ORDINAL_VALUE('0'))
  END FOR

  RETURN digit_sum
END FUNCTION
```