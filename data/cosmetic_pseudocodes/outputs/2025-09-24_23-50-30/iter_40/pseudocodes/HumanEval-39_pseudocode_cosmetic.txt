```
FUNCTION prime_fib(number_m)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(number_q)
        IF NOT (number_q >= 2) THEN
            RETURN False
        ENDIF

        DECLARE counter_x = 2
        DECLARE upper_bound = MIN(integer( (mathematical_functions_module.sqrt(number_q)) + 1), (number_q - 1))

        WHILE counter_x <= upper_bound DO
            IF (number_q MOD counter_x) == 0 THEN
                RETURN False
            ENDIF
            SET counter_x = counter_x + 1
        ENDWHILE

        RETURN True
    END FUNCTION

    DECLARE fib_sequence = ARRAY [0, 1]

    REPEAT
        LET first_last = fib_sequence[LENGTH(fib_sequence) - 1]
        LET second_last = fib_sequence[LENGTH(fib_sequence) - 2]
        APPEND fib_sequence, first_last + second_last

        IF is_prime(fib_sequence[LENGTH(fib_sequence) - 1]) THEN
            SET number_m = number_m - 1
        ENDIF

        IF number_m == 0 THEN
            RETURN fib_sequence[LENGTH(fib_sequence) - 1]
        ENDIF
    UNTIL FALSE
END FUNCTION
```