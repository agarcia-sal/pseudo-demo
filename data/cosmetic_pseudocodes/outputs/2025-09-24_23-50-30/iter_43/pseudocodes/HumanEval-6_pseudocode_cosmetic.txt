```
FUNCTION parse_nested_parens(zeta_lambda)
    FUNCTION parse_paren_group(omega_tau)
        SET alpha_beta TO 0
        SET gamma_delta TO 0
        SET kappa_iota TO 0
        WHILE kappa_iota < LENGTH(omega_tau)
            SET sigma_phi TO CHAR_AT(omega_tau, kappa_iota)
            kappa_iota = kappa_iota + 1
            SWITCH sigma_phi
                CASE '(':
                    alpha_beta = alpha_beta + 1
                    gamma_delta = (alpha_beta + gamma_delta + ABS(alpha_beta - gamma_delta)) / 2
                CASE ')':
                    alpha_beta = alpha_beta - 1
            END SWITCH
        END WHILE
        RETURN gamma_delta
    END FUNCTION

    SET delta_theta TO []
    SET epsilon_zeta TO 0
    SET eta_mu TO LENGTH(zeta_lambda)
    WHILE epsilon_zeta < eta_mu
        SET iota_kappa TO ""
        WHILE epsilon_zeta < eta_mu AND CHAR_AT(zeta_lambda, epsilon_zeta) != ' '
            iota_kappa = iota_kappa + CHAR_AT(zeta_lambda, epsilon_zeta)
            epsilon_zeta = epsilon_zeta + 1
        END WHILE
        IF iota_kappa != ""
            APPEND parse_paren_group(iota_kappa) TO delta_theta
        END IF
        WHILE epsilon_zeta < eta_mu AND CHAR_AT(zeta_lambda, epsilon_zeta) == ' '
            epsilon_zeta = epsilon_zeta + 1
        END WHILE
    END WHILE
    RETURN delta_theta
END FUNCTION
```