```
FUNCTION find_closest_elements(target_sequence)
    SET accumulator_result TO None
    SET boundary_metric TO None
    SET cursor_primary TO 0

    WHILE cursor_primary < LENGTH(target_sequence)
        SET cursor_secondary TO 0
        LOOP
            EXIT WHEN cursor_secondary >= LENGTH(target_sequence)
            SWITCH cursor_primary = cursor_secondary
                CASE TRUE:
                    BREAK
                CASE FALSE:
                    SET delta_metric TO ABS(target_sequence[cursor_primary] - target_sequence[cursor_secondary])
                    SWITCH boundary_metric IS None
                        CASE TRUE:
                            SET boundary_metric TO delta_metric
                            SET accumulator_result TO SORTED_TUPLE(target_sequence[cursor_primary], target_sequence[cursor_secondary])
                        CASE FALSE:
                            IF delta_metric < boundary_metric THEN
                                SET boundary_metric TO delta_metric
                                SET accumulator_result TO SORTED_TUPLE(target_sequence[cursor_primary], target_sequence[cursor_secondary])
                            END IF
                    END SWITCH
            END SWITCH
            SET cursor_secondary TO cursor_secondary + 1
        END LOOP
        SET cursor_primary TO cursor_primary + 1
    END WHILE

    RETURN accumulator_result
END FUNCTION
```