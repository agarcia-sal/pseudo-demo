```
FUNCTION get_row(wide_matrix, sought_value)
    SET positions TO EMPTY ARRAY
    SET row_marker TO 0
    WHILE row_marker < LENGTH(wide_matrix)
        SET col_marker TO 0
        WHILE col_marker < LENGTH(wide_matrix[row_marker])
            SWITCH (wide_matrix[row_marker][col_marker] = sought_value)
                CASE TRUE:
                    positions APPEND (row_marker, col_marker)
                    BREAK
                DEFAULT:
                    BREAK
            END SWITCH
            SET col_marker TO col_marker + 1
        END WHILE
        SET row_marker TO row_marker + 1
    END WHILE

    PERFORM 
        SET temp_positions TO EMPTY ARRAY
        SET index_loop TO 0
        WHILE index_loop < LENGTH(positions)
            SET insert_idx TO 0
            WHILE insert_idx < LENGTH(temp_positions)
                IF temp_positions[insert_idx][1] < positions[index_loop][1] THEN
                    BREAK
                END IF
                SET insert_idx TO insert_idx + 1
            END WHILE
            INSERT positions[index_loop] INTO temp_positions AT POSITION insert_idx
            SET index_loop TO index_loop + 1
        END WHILE
        SET positions TO temp_positions
    END PERFORM

    SET sorted_positions TO EMPTY ARRAY
    SET pos_index TO 0
    WHILE pos_index < LENGTH(positions)
        SET insert_index TO 0
        WHILE insert_index < LENGTH(sorted_positions)
            IF sorted_positions[insert_index][0] > positions[pos_index][0] THEN
                BREAK
            END IF
            SET insert_index TO insert_index + 1
        END WHILE
        INSERT positions[pos_index] INTO sorted_positions AT POSITION insert_index
        SET pos_index TO pos_index + 1
    END WHILE

    RETURN sorted_positions
END FUNCTION
```