```
FUNCTION prod_signs(list_of_numbers)
  SWITCH LENGTH of list_of_numbers
    CASE 0: RETURN None
  END SWITCH
  FRONTIERS:
  FOR i FROM 0 TO LENGTH of list_of_numbers - 1 DO
    IF list_of_numbers[i] = 0 THEN
      LET result_sign <- 0
      GOTO COMPUTE_SUM
    END IF
  END FOR
  LET neg_count <- 0
  LET index_counter <- 0
  WHILE index_counter < LENGTH of list_of_numbers DO
    IF list_of_numbers[index_counter] < 0 THEN
      neg_count <- neg_count + 1
    END IF
    index_counter <- index_counter + 1
  END WHILE
  LET result_sign <- 1
  LET temp_power <- neg_count
  WHILE temp_power > 0 DO
    result_sign <- result_sign * (-1)
    temp_power <- temp_power - 1
  END WHILE
  COMPUTE_SUM:
  LET aggregate_abs_sum <- 0
  FOR num_index FROM 0 TO LENGTH of list_of_numbers - 1 DO
    aggregate_abs_sum <- aggregate_abs_sum + (IF list_of_numbers[num_index] < 0 THEN (-list_of_numbers[num_index]) ELSE list_of_numbers[num_index])
  END FOR
  RETURN result_sign * aggregate_abs_sum
END FUNCTION
```