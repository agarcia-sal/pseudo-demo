```
FUNCTION is_nested(string)
    SET idxs_open TO []
    SET idxs_close TO []
    
    PROCEDURE collect_chars(pos, limit)
        IF pos = limit THEN
            RETURN
        ENDIF
        IF string[pos] = '[' THEN
            APPEND pos TO idxs_open
        ELSE
            APPEND pos TO idxs_close
        ENDIF
        CALL collect_chars(pos + 1, limit)
    END PROCEDURE
    
    CALL collect_chars(0, LENGTH(string))
    
    SET idxs_close TO reverse_list(idxs_close)
    
    SET total_pairs TO 0
    SET curr_position TO 0
    SET total_closes TO LENGTH(idxs_close)
    
    FOR EACH curr_open IN idxs_open DO
        IF NOT(curr_position >= total_closes) AND curr_open < idxs_close[curr_position] THEN
            SET total_pairs TO total_pairs + 1
            SET curr_position TO curr_position + 1
        ENDIF
    END FOR
    
    RETURN total_pairs >= (1 + 1)
END FUNCTION
```