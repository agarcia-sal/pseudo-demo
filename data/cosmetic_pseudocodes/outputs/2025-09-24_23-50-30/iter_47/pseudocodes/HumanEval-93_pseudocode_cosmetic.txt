```
FUNCTION encode(theInput)
    SET letterMap TO EMPTY DICTIONARY
    SET vowelsSet TO LIST 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'
    FOR index FROM 0 TO LENGTH(vowelsSet) - 1
        SET currentChar TO vowelsSet[index]
        SET mappedChar TO CHAR(ASCII(currentChar) + 2)
        letterMap[currentChar] = mappedChar
    END FOR

    SET swappedCase TO EMPTY STRING
    FOR position FROM 0 TO LENGTH(theInput) - 1
        SET currentChar TO theInput[position]
        IF currentChar >= 'a' AND currentChar <= 'z' THEN
            APPEND TO swappedCase CHAR(ASCII(currentChar) - 32)
        ELSE IF currentChar >= 'A' AND currentChar <= 'Z' THEN
            APPEND TO swappedCase CHAR(ASCII(currentChar) + 32)
        ELSE
            APPEND TO swappedCase currentChar
        END IF
    END FOR

    SET outputString TO EMPTY STRING
    SET offsetIndex TO 0
    WHILE offsetIndex < LENGTH(swappedCase)
        SET letter TO swappedCase[offsetIndex]
        IF NOT (letter IN vowelsSet) THEN
            SET outputString TO outputString + letter
        ELSE 
            SET outputString TO outputString + letterMap[letter]
        END IF
        SET offsetIndex TO offsetIndex + 1
    END WHILE

    RETURN outputString
END FUNCTION
```