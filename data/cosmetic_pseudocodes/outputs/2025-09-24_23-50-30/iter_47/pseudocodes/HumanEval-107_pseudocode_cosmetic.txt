```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        SET str_num TO TO_STRING(number)
        SET rev_str TO EMPTY_STRING
        SET idx TO LENGTH(str_num) - 1
        WHILE idx >= 0
            SET rev_str TO rev_str + str_num[idx]
            DECREMENT idx BY 1
        END WHILE
        RETURN (str_num = rev_str)
    END FUNCTION

    SET cnt_even TO 0
    SET cnt_odd TO 0
    SET curr TO 1

    WHILE curr <= n
        SWITCH (curr MOD 2)
            CASE 0:
                IF is_palindrome(curr) = TRUE THEN
                    SET cnt_even TO cnt_even + 1
                END IF
                BREAK
            CASE 1:
                IF is_palindrome(curr) THEN
                    SET cnt_odd TO cnt_odd + 1
                END IF
                BREAK
        END SWITCH
        SET curr TO curr + 1
    END WHILE

    RETURN (cnt_even, cnt_odd)
END FUNCTION
```