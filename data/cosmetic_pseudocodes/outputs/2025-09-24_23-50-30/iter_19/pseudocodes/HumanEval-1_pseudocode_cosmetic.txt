```
FUNCTION separate_paren_groups(string_of_parentheses)
  DEFINE result_accumulator := []
  DEFINE buffer_collector := []
  DEFINE depth_counter := 0
  DEFINE idx := 0
  DEFINE length_limit := LENGTH(string_of_parentheses) - 1

  WHILE idx <= length_limit DO
    DEFINE current_char := string_of_parentheses[idx]

    SWITCH current_char
      CASE '(':
        depth_counter := depth_counter + 1
        buffer_collector := buffer_collector + [current_char]
      CASE ')':
        depth_counter := depth_counter - 1
        buffer_collector := buffer_collector + [current_char]

        IF NOT (depth_counter != 0) THEN
          result_accumulator := result_accumulator + [JOIN(buffer_collector)]
          buffer_collector := []
        END IF
    END SWITCH

    idx := idx + 1
  END WHILE

  RETURN result_accumulator
END FUNCTION
```