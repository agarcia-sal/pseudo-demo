```
FUNCTION reverse_delete(string_s, string_c)
  DECLARE result_chars AS LIST INITIALIZED TO EMPTY
  FOR index FROM 0 TO LENGTH(string_s) - 1
    IF NOT (string_s[index] IN string_c) THEN
      APPEND string_s[index] TO result_chars
    END IF
  END FOR

  DECLARE filtered_string AS STRING INITIALIZED TO EMPTY
  FOR element IN result_chars
    SET filtered_string TO filtered_string + element
  END FOR

  DECLARE pointer_front AS INTEGER INITIALIZED TO 0
  DECLARE pointer_back AS INTEGER INITIALIZED TO LENGTH(filtered_string) - 1
  DECLARE palindrome_flag AS BOOLEAN INITIALIZED TO TRUE
  WHILE pointer_front < pointer_back AND palindrome_flag
    IF filtered_string[pointer_front] != filtered_string[pointer_back] THEN
      SET palindrome_flag TO FALSE
    END IF
    SET pointer_front TO pointer_front + 1
    SET pointer_back TO pointer_back - 1
  END WHILE

  RETURN (filtered_string, palindrome_flag)
END FUNCTION
```