```
FUNCTION histogram(test_string)
  DECLARE frequency_map AS empty dictionary
  DECLARE split_letters AS SPLIT test_string BY " "
  DECLARE peak_value AS 0

  DECLARE index AS 0
  WHILE index < LENGTH(split_letters)
    DECLARE current_symbol AS split_letters[index]
    DECLARE occurrences AS 0
    DECLARE inner_idx AS 0
    WHILE inner_idx < LENGTH(split_letters)
      IF split_letters[inner_idx] = current_symbol THEN
        SET occurrences TO occurrences + 1
      SET inner_idx TO inner_idx + 1
    IF current_symbol ≠ "" AND occurrences > peak_value THEN
      SET peak_value TO occurrences
    SET index TO index + 1

  IF NOT (peak_value ≤ 0) THEN
    FOR position FROM 0 TO LENGTH(split_letters) - 1
      DECLARE candidate AS split_letters[position]
      DECLARE count_candidate AS 0
      DECLARE counter AS 0
      WHILE counter < LENGTH(split_letters)
        IF split_letters[counter] = candidate THEN
          SET count_candidate TO count_candidate + 1
        SET counter TO counter + 1
      IF count_candidate = peak_value THEN
        SET frequency_map[candidate] TO peak_value

  RETURN frequency_map
END FUNCTION
```