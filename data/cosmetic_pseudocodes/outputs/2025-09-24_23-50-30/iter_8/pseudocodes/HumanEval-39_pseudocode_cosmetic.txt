```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF NOT (integer_p GREATER THAN OR EQUAL TO 2)
            RETURN False

        SET integer_max_divisor TO (INTEGER PART OF (SQUARE ROOT OF integer_p)) + 1
        SET integer_limit TO integer_p - 1
        SET integer_bound TO IF integer_max_divisor LESS THAN integer_limit THEN integer_max_divisor ELSE integer_limit

        SET integer_i TO 2
        WHILE integer_i NOT GREATER THAN integer_bound
            IF (integer_p MODULO integer_i) EQUALS 0
                RETURN False
            INCREMENT integer_i BY 1
        RETURN True
    END FUNCTION

    SET list_sequence TO [0, 1]

    REPEAT
        SET integer_next TO (list_sequence[SIZE OF list_sequence - 1]) + (list_sequence[SIZE OF list_sequence - 2])
        APPEND integer_next TO list_sequence

        IF is_prime(integer_next)
            SET integer_n TO integer_n - 1

        IF integer_n EQUALS 0
            RETURN integer_next
    UNTIL FALSE
END FUNCTION
```