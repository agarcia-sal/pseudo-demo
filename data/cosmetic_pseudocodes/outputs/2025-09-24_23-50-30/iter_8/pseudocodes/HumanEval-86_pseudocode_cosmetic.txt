```
FUNCTION anti_shuffle(input_string)
  DECLARE temp_sequence AS ARRAY = []
  DECLARE idx AS INTEGER = 0
  DECLARE words_array AS ARRAY = SPLIT input_string AT " "
  WHILE idx < LENGTH(words_array)
    DECLARE current AS STRING = words_array[idx]
    DECLARE char_array AS ARRAY = []
    DECLARE position AS INTEGER = 0
    WHILE position < LENGTH(current)
      APPEND current[position] TO char_array
      SET position = position + 1
    END WHILE
    CALL SORT_ASCENDING(char_array)
    DECLARE reconstructed AS STRING = ""
    DECLARE pointer AS INTEGER = 0
    WHILE pointer < LENGTH(char_array)
      SET reconstructed = reconstructed + char_array[pointer]
      SET pointer = pointer + 1
    END WHILE
    APPEND reconstructed TO temp_sequence
    SET idx = idx + 1
  END WHILE
  DECLARE output_line AS STRING = ""
  DECLARE q AS INTEGER = 0
  WHILE q < LENGTH(temp_sequence)
    SET output_line = output_line + temp_sequence[q]
    IF q != LENGTH(temp_sequence) - 1 THEN
      SET output_line = output_line + " "
    END IF
    SET q = q + 1
  END WHILE
  RETURN output_line
END FUNCTION
```