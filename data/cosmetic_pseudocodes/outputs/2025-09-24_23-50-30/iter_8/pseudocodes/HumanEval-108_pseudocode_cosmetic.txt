```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        IF NOT (integer_value >= 0) THEN
            LET integer_value = 0 - integer_value
            LET sign_multiplier = -1
        ELSE
            LET sign_multiplier = 1
        ENDIF

        LET digit_chars = STRINGIFY(integer_value)
        LET digits_array = []
        FOR index FROM 1 TO LENGTH(digit_chars)
            APPEND TO digits_array: CHAR_TO_INT(digit_chars[index])
        END FOR

        digits_array[1] = digits_array[1] * sign_multiplier

        LET total_sum = 0
        LET iterator = 1
        WHILE iterator <= LENGTH(digits_array)
            total_sum = total_sum + digits_array[iterator]
            iterator = iterator + 1
        END WHILE
        RETURN total_sum
    END FUNCTION

    LET transformed_sums = []
    LET iterator_outer = 1
    WHILE iterator_outer <= LENGTH(array_of_integers)
        LET current_element = array_of_integers[iterator_outer]
        LET summed_digits = digits_sum(current_element)
        APPEND TO transformed_sums: summed_digits
        iterator_outer = iterator_outer + 1
    END WHILE

    LET count_positive = 0
    FOR element IN transformed_sums
        IF element > 0 THEN
            count_positive = count_positive + 1
        ENDIF
    END FOR

    RETURN count_positive
END FUNCTION
```