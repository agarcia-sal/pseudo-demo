```
FUNCTION encode(message)
  LET reference_vowels = ['a','e','i','o','u','A','E','I','O','U']
  LET translation_map = EMPTY MAP
  FOR index FROM 0 TO LENGTH(reference_vowels) - 1 DO
    LET current_char = reference_vowels[index]
    LET mapped_char = CHAR(CHAR_TO_INT(current_char) + (4/2))
    translation_map[current_char] = mapped_char
  END FOR
  LET swapped_message = ""
  FOR iterator FROM 0 TO LENGTH(message) - 1 DO
    LET ch = message[iterator]
    IF LOWERCASE(ch) == ch THEN
      LET upper_flag = false
    ELSE
      LET upper_flag = true
    END IF
    IF upper_flag THEN
      swapped_message = swapped_message + LOWERCASE(ch)
    ELSE
      swapped_message = swapped_message + UPPERCASE(ch)
    END IF
  END FOR
  LET result_string = ""
  FOR each_character IN swapped_message DO
    IF translation_map CONTAINS_KEY each_character THEN
      result_string = result_string + translation_map[each_character]
    ELSE
      result_string = result_string + each_character
    END IF
  END FOR
  RETURN result_string
END FUNCTION
```