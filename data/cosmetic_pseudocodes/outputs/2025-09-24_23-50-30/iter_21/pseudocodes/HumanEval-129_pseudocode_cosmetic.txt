```
FUNCTION minPath(grid, k)
  LET size = LENGTH(grid)
  LET limit = (size * size) + 1
  FOR row_idx = 0 TO size - 1 DO
    FOR col_idx = 0 TO size - 1 DO
      IF grid[row_idx][col_idx] == 1 THEN
        LET neighbors = []
        IF NOT (row_idx == 0) THEN APPEND grid[row_idx - 1][col_idx] TO neighbors END IF
        IF NOT (col_idx == 0) THEN APPEND grid[row_idx][col_idx - 1] TO neighbors END IF
        IF NOT (row_idx == (size - 1)) THEN APPEND grid[row_idx + 1][col_idx] TO neighbors END IF
        IF NOT (col_idx == (size - 1)) THEN APPEND grid[row_idx][col_idx + 1] TO neighbors END IF
        LET limit = MIN(neighbors)
      END IF
    END FOR
  END FOR

  LET result = []
  LET counter = 0
  WHILE counter < k DO
    IF (counter % 2) == 0 THEN
      APPEND 1 TO result
    ELSE
      APPEND limit TO result
    END IF
    SET counter = counter + 1
  END WHILE

  RETURN result
END FUNCTION
```