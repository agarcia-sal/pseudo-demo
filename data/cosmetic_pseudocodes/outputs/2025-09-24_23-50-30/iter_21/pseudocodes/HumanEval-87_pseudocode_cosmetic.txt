```
FUNCTION get_row(two_dimensional_list, target_integer)
    INITIALIZE found_positions AS EMPTY LIST
    SET outer_index TO 0
    WHILE outer_index < LENGTH(two_dimensional_list)
        SET inner_index TO 0
        WHILE inner_index < LENGTH(two_dimensional_list[outer_index])
            IF NOT (two_dimensional_list[outer_index][inner_index] != target_integer)
                found_positions APPEND (outer_index, inner_index)
            END IF
            SET inner_index TO inner_index + 1
        END WHILE
        SET outer_index TO outer_index + 1
    END WHILE

    DEFINE FUNCTION sort_by_second_desc_then_first_asc(list_to_sort)
        RETURN list_to_sort SORTED WITH comparator AS:
            IF comparator(a, b) IS
                SWITCH
                    CASE a[0] < b[0]: RETURN TRUE
                    CASE a[0] > b[0]: RETURN FALSE
                    DEFAULT: RETURN a[1] > b[1]
                END SWITCH
        END comparator
    END FUNCTION

    SET found_positions TO sort_by_second_desc_then_first_asc(found_positions)
    RETURN found_positions
END FUNCTION
```