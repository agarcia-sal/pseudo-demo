```
FUNCTION monotonic(sequence)
    PROCEDURE sorted_asc(arr, idx, max_idx, acc)
        IF idx > max_idx THEN
            RETURN acc
        ELSE
            RETURN sorted_asc(arr, idx + 1, max_idx, acc + [arr[idx]])
    END PROCEDURE

    PROCEDURE sorted_desc(arr, idx, max_idx, acc)
        IF idx > max_idx THEN
            RETURN acc
        ELSE
            RETURN sorted_desc(arr, idx + 1, max_idx, acc + [arr[idx]])
    END PROCEDURE

    PROCEDURE compare_arrays(a1, a2, pos, length)
        IF pos > length THEN
            RETURN True
        ELSE IF a1[pos] == a2[pos] THEN
            RETURN compare_arrays(a1, a2, pos + 1, length)
        ELSE
            RETURN False
    END PROCEDURE

    length_var ← LENGTH(sequence) - 1
    ascending_sorted ← sorted_asc(sequence, 0, length_var, [])
    descending_sorted ← sorted_desc(REV(sequence), 0, length_var, [])

    IF compare_arrays(sequence, ascending_sorted, 0, length_var) THEN
        RETURN True
    ELSE IF compare_arrays(sequence, descending_sorted, 0, length_var) THEN
        RETURN True
    ELSE
        RETURN False
END FUNCTION
```