```
FUNCTION mean_absolute_deviation(numbers_collection)
    DECLARE idx AS INTEGER ← 0
    DECLARE sum_accumulator AS NUMBER ← 0
    DECLARE count AS INTEGER ← LENGTH(numbers_collection)
    
    WHILE idx < count DO
        sum_accumulator ← sum_accumulator + numbers_collection[idx]
        idx ← idx + 1
    END WHILE
    
    DECLARE average_value AS NUMBER ← sum_accumulator / count
    
    FUNCTION absolute_difference_sum(collection, pivot, position, accumulator)
        IF position == count THEN
            RETURN accumulator
        ELSE
            DECLARE deviation AS NUMBER ← IF collection[position] < pivot THEN pivot - collection[position] ELSE collection[position] - pivot
            RETURN absolute_difference_sum(collection, pivot, position + 1, accumulator + deviation)
        END IF
    END FUNCTION
    
    DECLARE total_deviation AS NUMBER ← absolute_difference_sum(numbers_collection, average_value, 0, 0)
    
    RETURN total_deviation / count
END FUNCTION
```