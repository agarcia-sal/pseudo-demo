```
FUNCTION prod_signs(array_of_integers)
    DEFINE FUNCTION count_negatives(idx, acc)
        IF idx == LENGTH(array_of_integers) THEN RETURN acc END IF
        IF array_of_integers[idx] < 0 THEN
            RETURN count_negatives(idx + 1, acc + 1)
        ELSE
            RETURN count_negatives(idx + 1, acc)
        END IF
    END FUNCTION

    DEFINE FUNCTION sum_abs_vals(idx, acc_sum)
        IF idx == LENGTH(array_of_integers) THEN RETURN acc_sum END IF
        RETURN sum_abs_vals(idx + 1, acc_sum + (array_of_integers[idx] * SIGN(array_of_integers[idx]) * SIGN(array_of_integers[idx])))
    END FUNCTION

    IF LENGTH(array_of_integers) == 0 THEN RETURN None END IF

    SET zero_found_flag TO FALSE
    SET index_var TO 0
    WHILE index_var < LENGTH(array_of_integers) AND zero_found_flag == FALSE DO
        IF array_of_integers[index_var] == 0 THEN
            SET zero_found_flag TO TRUE
        END IF
        SET index_var TO index_var + 1
    END WHILE

    IF zero_found_flag THEN
        SET result_sign TO 0
    ELSE
        SET number_of_negatives TO count_negatives(0, 0)
        SET result_sign TO 1
        FOR each_count FROM 1 TO number_of_negatives DO
            SET result_sign TO result_sign * (-1)
        END FOR
    END IF

    SET total_magnitude TO sum_abs_vals(0, 0)
    RETURN result_sign * total_magnitude
END FUNCTION
```