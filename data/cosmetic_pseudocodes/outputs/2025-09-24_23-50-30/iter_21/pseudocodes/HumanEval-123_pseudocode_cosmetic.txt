```
FUNCTION get_odd_collatz(number)
    DEFINE FUNCTION process_step(x, acc)
        IF x == 1 THEN
            RETURN acc
        END IF

        IF (x % 2) == 0 THEN
            x := x / 2
        ELSE
            x := (3 * x) + 1
        END IF

        IF (x % 2) == 1 THEN
            acc := acc + [INT(x)]
        END IF

        RETURN process_step(x, acc)
    END FUNCTION

    INITIALIZE sequence AS EMPTY LIST
    IF NOT ((number % 2) == 0) THEN
        sequence := [number]
    END IF

    LET result_sequence BE process_step(number, sequence)
    LET sorted_sequence BE EMPTY LIST

    WHILE LENGTH(result_sequence) > 0 DO
        LET max_val := result_sequence[0]
        FOR EACH elem IN result_sequence DO
            IF elem > max_val THEN
                max_val := elem
            END IF
        END FOR
        sorted_sequence := [max_val] + sorted_sequence
        result_sequence := FILTER result_sequence WHERE item != max_val
    END WHILE

    RETURN sorted_sequence
END FUNCTION
```