```
FUNCTION next_smallest(input_sequence)
    PROCEDURE to_unique_ordered(collection, result_accumulator)
        IF collection IS EMPTY
            RETURN result_accumulator
        ELSE
            SET head_element TO FIRST ELEMENT OF collection
            SET tail_collection TO REST OF collection
            IF head_element IN result_accumulator
                RETURN to_unique_ordered(tail_collection, result_accumulator)
            ELSE
                RETURN to_unique_ordered(tail_collection, result_accumulator + [head_element])
    SET filtered_unique TO to_unique_ordered(input_sequence, [])
    SET sorted_unique TO []
    WHILE LENGTH OF filtered_unique IS GREATER THAN 0
        SET smallest_element TO filtered_unique[0]
        FOR each_element IN filtered_unique
            IF each_element < smallest_element
                SET smallest_element TO each_element
        SET sorted_unique TO sorted_unique + [smallest_element]
        SET filtered_unique TO [x FOR x IN filtered_unique IF x != smallest_element]
    IF LENGTH OF sorted_unique < 2 THEN RETURN None
    RETURN sorted_unique[1]
END FUNCTION
```