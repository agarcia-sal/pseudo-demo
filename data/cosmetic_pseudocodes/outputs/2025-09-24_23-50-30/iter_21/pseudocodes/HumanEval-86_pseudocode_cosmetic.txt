```
FUNCTION anti_shuffle(input_string)
    DEFINE FUNCTION sort_word(rec_chars)
        IF LENGTH(rec_chars) < 2 THEN
            RETURN rec_chars
        END IF
        SET pivot_char TO rec_chars[0]
        SET lesser_chars TO EMPTY LIST
        SET greater_chars TO EMPTY LIST
        FOR idx FROM 1 TO LENGTH(rec_chars) - 1
            IF rec_chars[idx] < pivot_char THEN
                ADD rec_chars[idx] TO lesser_chars
            ELSE
                ADD rec_chars[idx] TO greater_chars
            END IF
        END FOR
        RETURN CONCATENATE(sort_word(lesser_chars), [pivot_char], sort_word(greater_chars))
    END FUNCTION

    SET words_queue TO SPLIT input_string BY " "
    SET sorted_words_list TO EMPTY LIST

    WHILE LENGTH(words_queue) > 0
        SET current_word TO REMOVE_FIRST(words_queue)
        SET char_array TO EMPTY LIST
        FOR char_idx FROM 1 TO LENGTH(current_word)
            ADD current_word[char_idx] TO char_array
        END FOR
        SET sorted_chars TO sort_word(char_array)
        SET rebuilt_word TO ""
        FOR letter IN sorted_chars
            rebuilt_word = rebuilt_word + letter
        END FOR
        ADD rebuilt_word TO sorted_words_list
    END WHILE

    SET output_string TO ""
    FOR index FROM 1 TO LENGTH(sorted_words_list)
        output_string = output_string + sorted_words_list[index]
        IF index < LENGTH(sorted_words_list) THEN
            output_string = output_string + " "
        END IF
    END FOR

    RETURN output_string
END FUNCTION
```