```
FUNCTION skjkasdkd(array_numbers)
    FUNCTION checkPrime(num_val)
        DEFINE recurseCheck(current)
            IF current > FLOOR(SQRT(num_val))
                RETURN True
            ELSE
                IF (num_val MOD current) == 0 THEN 
                    RETURN False
                ELSE
                    RETURN recurseCheck(current + 1)
                END IF
            END IF
        END FUNCTION
        RETURN recurseCheck(2)
    END FUNCTION

    DECLARE bestPrime = 0
    DECLARE pos = 0

    WHILE pos < SIZE(array_numbers) DO
        IF NOT (array_numbers[pos] <= bestPrime) THEN
            IF checkPrime(array_numbers[pos]) THEN
                bestPrime = array_numbers[pos]
            END IF
        END IF
        pos = pos + 1
    END WHILE

    DECLARE digitsSum = REDUCE((acc, val) -> acc + val, MAP((ch) -> TO_INTEGER(ch), SPLIT(TO_STRING(bestPrime), "")), 0)

    RETURN digitsSum
END FUNCTION
```