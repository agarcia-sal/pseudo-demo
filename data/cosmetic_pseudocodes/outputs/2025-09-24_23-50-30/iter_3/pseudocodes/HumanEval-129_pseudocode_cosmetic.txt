```
FUNCTION minPath(grid, k)
    LET size = LENGTH(grid)
    LET limit = size * size + 1
    LET current_i = 0
    REPEAT WHILE current_i < size
        LET current_j = 0
        REPEAT WHILE current_j < size
            IF grid[current_i][current_j] == 1 THEN
                LET neighbors = []
                IF current_i > 0 THEN
                    neighbors.ADD(grid[current_i - 1][current_j])
                END IF
                IF current_j > 0 THEN
                    neighbors.ADD(grid[current_i][current_j - 1])
                END IF
                IF current_i < size - 1 THEN
                    neighbors.ADD(grid[current_i + 1][current_j])
                END IF
                IF current_j < size - 1 THEN
                    neighbors.ADD(grid[current_i][current_j + 1])
                END IF
                limit = neighbors.SORTED()[0]
            END IF
            current_j = current_j + 1
        END REPEAT
        current_i = current_i + 1
    END REPEAT
    LET output = []
    FOR index IN RANGE(0, k)
        CHOOSEVal = 1 IF (index % 2 == 0) ELSE limit
        output.ADD(CHOOSEVal)
    END FOR
    RETURN output
END FUNCTION
```