```
FUNCTION prime_fib(integer_n)
    IMPORT mathematical_functions_module

    FUNCTION is_prime(integer_p)
        IF integer_p <= 1 THEN
            RETURN False
        END IF
        FOR integer_k IN 2 TO MIN(FLOOR(SQRT(integer_p)) + 1, integer_p - 1) DO
            IF (integer_p MOD integer_k) = 0 THEN
                RETURN False
            END IF
        END FOR
        RETURN True
    END FUNCTION

    fibonacci_sequence ← [0, 1]

    FOR ;; ;; DO
        new_value ← fibonacci_sequence[COUNT(fibonacci_sequence) - 1] + fibonacci_sequence[COUNT(fibonacci_sequence) - 2]
        APPEND new_value TO fibonacci_sequence
        IF is_prime(new_value) THEN
            integer_n ← integer_n - 1
        END IF
        IF integer_n = 0 THEN
            RETURN new_value
        END IF
    END FOR
END FUNCTION
```