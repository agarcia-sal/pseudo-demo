```
FUNCTION even_odd_palindrome(n)
    FUNCTION is_palindrome(number)
        DECLARE str_num AS STRING = TO_STRING(number)
        DECLARE rev_num AS STRING = ""
        FOR idx FROM LENGTH(str_num) DOWNTO 1 STEP -1
            rev_num = CONCATENATE(rev_num, str_num[idx])
        END FOR
        RETURN rev_num = str_num
    END FUNCTION

    DECLARE count_even_palindromes = 0
    DECLARE count_odd_palindromes = 0
    DECLARE counter = 1

    WHILE counter <= n
        IF is_palindrome(counter) THEN
            SELECT CASE counter % 2
                CASE 0:
                    count_even_palindromes = count_even_palindromes + 1
                CASE 1:
                    count_odd_palindromes = count_odd_palindromes + 1
            END SELECT
        END IF
        counter = counter + 1
    END WHILE

    RETURN (count_even_palindromes, count_odd_palindromes)
END FUNCTION
```