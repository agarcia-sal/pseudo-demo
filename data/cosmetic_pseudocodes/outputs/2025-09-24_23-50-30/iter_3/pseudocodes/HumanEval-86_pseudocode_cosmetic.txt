```
FUNCTION anti_shuffle(input_string)
    DECLARE index := 0
    DECLARE words_arr := input_string SPLIT BY " "
    DECLARE transformed_words := []
    REPEAT
        IF index >= LENGTH(words_arr) THEN BREAK
        DECLARE current_word := words_arr[index]
        DECLARE char_array := []
        DECLARE char_pos := 0
        WHILE char_pos < LENGTH(current_word)
            char_array APPEND current_word[char_pos]
            char_pos := char_pos + 1
        END WHILE
        CALL char_array SORT_ASCENDING()
        DECLARE reassembled := ""
        FOR i FROM 0 TO LENGTH(char_array) - 1
            reassembled := reassembled + char_array[i]
        END FOR
        transformed_words APPEND reassembled
        index := index + 1
    END REPEAT
    DECLARE final_result := ""
    FOR k FROM 0 TO LENGTH(transformed_words) - 1
        final_result := final_result + transformed_words[k]
        IF k < LENGTH(transformed_words) - 1 THEN
            final_result := final_result + " "
        END IF
    END FOR
    RETURN final_result
END FUNCTION
```