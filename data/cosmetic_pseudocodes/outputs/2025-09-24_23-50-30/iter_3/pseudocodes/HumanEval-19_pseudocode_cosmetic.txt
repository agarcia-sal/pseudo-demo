```
FUNCTION sort_numbers(string_of_number_words)
    LET digit_values BE A MAPPING FROM 
        'zero' TO 0,
        'one' TO 1,
        'two' TO 2,
        'three' TO 3,
        'four' TO 4,
        'five' TO 5,
        'six' TO 6,
        'seven' TO 7,
        'eight' TO 8,
        'nine' TO 9
    LET tokens BE AN EMPTY LIST
    FOR index FROM 0 TO LENGTH(string_of_number_words)
        LET current_char BE CHARACTER AT POSITION index IN string_of_number_words
        IF current_char IS NOT ' '
            APPEND current_char TO tokens[-1] IF tokens IS NOT EMPTY AND LAST ELEMENT IS NOT EMPTY ELSE APPEND NEW STRING current_char TO tokens
        ELSE
            IF tokens IS EMPTY OR tokens[-1] IS NOT EMPTY
                APPEND EMPTY STRING TO tokens
    REMOVE ALL EMPTY STRINGS FROM tokens
    DEFINE FUNCTION get_value(word)
        RETURN digit_values[word]
    END FUNCTION
    FOR i FROM 0 TO LENGTH(tokens) - 2
        FOR j FROM 0 TO LENGTH(tokens) - i - 2
            IF get_value(tokens[j]) > get_value(tokens[j + 1])
                LET temp BE tokens[j]
                tokens[j] = tokens[j + 1]
                tokens[j + 1] = temp
    LET result_string BE EMPTY STRING
    FOR k FROM 0 TO LENGTH(tokens) - 1
        LET result_string = result_string + tokens[k]
        IF k < LENGTH(tokens) - 1
            result_string = result_string + ' '
    RETURN result_string
END FUNCTION
```