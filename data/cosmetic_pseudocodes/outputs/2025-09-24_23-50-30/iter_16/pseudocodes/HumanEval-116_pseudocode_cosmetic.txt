```
FUNCTION sort_array(numbers_list)
    FUNCTION count_ones(binary_string)
        SET total TO 0
        FOR index FROM 0 TO LENGTH(binary_string) - 1
            total = total + ((binary_string[index] = '1') ? 1 : 0)
        END FOR
        RETURN total
    END FUNCTION

    SET temp_sorted TO []
    SET length_numbers TO LENGTH(numbers_list)
    FOR i FROM 0 TO length_numbers - 2
        FOR j FROM i + 1 TO length_numbers - 1
            IF numbers_list[i] > numbers_list[j] THEN
                SET temp TO numbers_list[i]
                numbers_list[i] = numbers_list[j]
                numbers_list[j] = temp
            END IF
        END FOR
    END FOR
    temp_sorted = numbers_list

    SET result_sorted TO []
    SET dict_groups TO MAP FROM INTEGER TO LIST OF INTEGER
    FOR each_value IN temp_sorted
        SET binary_rep TO SUBSTRING(TO_BINARY_STRING(each_value), 2, LENGTH(TO_BINARY_STRING(each_value)) - 1)
        SET key_count TO count_ones(binary_rep)
        IF NOT dict_groups HAS KEY key_count THEN
            dict_groups[key_count] = []
        END IF
        APPEND each_value TO dict_groups[key_count]
    END FOR

    FOR each_key IN SORTED KEYS OF dict_groups IN ASCENDING ORDER
        result_sorted = result_sorted + dict_groups[each_key]
    END FOR

    RETURN result_sorted
END FUNCTION
```