```
FUNCTION max_fill(grid, capacity)
    DEFINE sum_list(numbers) {
        total := 0
        FOR each n IN numbers DO total := total + n
        RETURN total
    }

    DEFINE ceiling_division(value, divisor) {
        IF value - divisor * (value DIV divisor) > 0 THEN
            RETURN (value DIV divisor) + 1
        ELSE
            RETURN value DIV divisor
    }

    DEFINE helper(rows, index, acc) {
        IF index >= LENGTH(rows) THEN
            RETURN acc
        LET row_sum := sum_list(rows[index])
        LET ceil_val := ceiling_division(row_sum, capacity)
        RETURN helper(rows, index + 1, acc + ceil_val)
    }

    RETURN helper(grid, 0, 0)
END FUNCTION
```