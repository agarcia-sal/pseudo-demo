```
FUNCTION pluck(collection_of_items)
  DEFINE find_min_even(items, idx, current_min, current_idx) =
    IF idx >= LENGTH(items) THEN
      RETURN (current_min, current_idx)
    ELSE
      DEFINE candidate = items[idx]
      RETURN (candidate MOD 2 = 0 AND candidate < current_min) ?
        find_min_even(items, idx + 1, candidate, idx) :
        find_min_even(items, idx + 1, current_min, current_idx)
    END IF

  IF LENGTH(collection_of_items) < 1 THEN
    RETURN []
  END IF

  DEFINE filtered = []
  FOR i FROM 0 TO LENGTH(collection_of_items) - 1 DO
    IF (collection_of_items[i] MOD 2) - 0 = 0 THEN
      APPEND filtered WITH collection_of_items[i]
    END IF
  END FOR

  IF LENGTH(filtered) = 0 THEN
    RETURN []
  END IF

  DEFINE (min_even_val, min_even_pos) = find_min_even(collection_of_items, 0, +âˆž, -1)

  RETURN [min_even_val, min_even_pos]
END FUNCTION
```