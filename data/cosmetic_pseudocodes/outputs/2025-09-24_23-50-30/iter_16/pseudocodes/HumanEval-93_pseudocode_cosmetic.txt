```
FUNCTION encode(inputText)
  LET vowelsCollection BE "AEIOUaeiou"
  LET mappingTable BE EMPTY MAP
  FOR EACH symbol IN vowelsCollection DO
    LET codePoint BE ASCII(symbol)
    LET substituteChar BE CHAR(codePoint + 2)
    SET mappingTable[symbol] := substituteChar
  END FOR

  LET toggledText BE EMPTY LIST
  LET index BE 0
  WHILE index < LENGTH(inputText) DO
    LET currChar BE inputText[index]
    IF currChar >= 'A' AND currChar <= 'Z' THEN
      APPEND TO toggledText LOWERCASE(currChar)
    ELSE IF currChar >= 'a' AND currChar <= 'z' THEN
      APPEND TO toggledText UPPERCASE(currChar)
    ELSE
      APPEND TO toggledText currChar
    END IF
    INCREMENT index
  END WHILE

  LET modifiedText BE EMPTY STRING
  FOR EACH element IN toggledText DO
    LET mappedValue BE mappingTable[element]
    IF mappedValue IS DEFINED THEN
      SET modifiedText := CONCAT(modifiedText, mappedValue)
    ELSE
      SET modifiedText := CONCAT(modifiedText, element)
    END IF
  END FOR

  RETURN modifiedText
END FUNCTION
```