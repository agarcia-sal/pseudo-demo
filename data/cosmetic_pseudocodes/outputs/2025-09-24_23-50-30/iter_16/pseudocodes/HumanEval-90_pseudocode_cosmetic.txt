```
FUNCTION next_smallest(sequence_of_numbers)
    DEFINE helper(map_iterable, accum_map)
        IF map_iterable IS EMPTY RETURN accum_map
        LET current_element BE FIRST OF map_iterable
        LET rest_elements BE REST OF map_iterable
        IF current_element NOT IN accum_map
            RETURN helper(rest_elements, accum_map + {current_element: true})
        ELSE
            RETURN helper(rest_elements, accum_map)
    END DEFINE

    LET unique_map = helper(sequence_of_numbers, {})
    LET unique_keys = KEYS OF unique_map
    LET sorted_unique_keys = unique_keys SORTED BY (a,b) -> (a > b)

    IF NOT (LENGTH(sorted_unique_keys) >= 2)
        RETURN NIL
    RETURN sorted_unique_keys[1]
END FUNCTION
```