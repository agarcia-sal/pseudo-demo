```
FUNCTION count_nums(array_of_integers)
    FUNCTION digits_sum(integer_value)
        IF NOT (integer_value >= 0) THEN
            integer_value ← 0 - integer_value
            sign_multiplier ← 0 - 1
        ELSE
            sign_multiplier ← 1
        END IF

        digits_as_chars ← SPLIT(STRINGIFY(integer_value))
        digits_as_numbers ← MAP digits_as_chars BY converting each TO integer
        digits_as_numbers[0] ← digits_as_numbers[0] + sign_multiplier - 1
        total ← 0
        index ← 0
        WHILE index < LENGTH(digits_as_numbers)
            total ← total + digits_as_numbers[index]
            index ← index + 1
        END WHILE
        RETURN total
    END FUNCTION

    digit_sums_collected ← []
    IDX ← 0
    WHILE IDX < LENGTH(array_of_integers)
        APPEND digits_sum(array_of_integers[IDX]) TO digit_sums_collected
        IDX ← IDX + 1
    END WHILE

    positive_only_sums ← []
    ITER ← 0
    WHILE ITER < LENGTH(digit_sums_collected)
        IF 0 < digit_sums_collected[ITER] THEN
            APPEND digit_sums_collected[ITER] TO positive_only_sums
        END IF
        ITER ← ITER + 1
    END WHILE

    RETURN LENGTH(positive_only_sums)
END FUNCTION
```