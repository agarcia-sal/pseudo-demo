```
FUNCTION by_length(list_of_values)
{
    map_string_numbers := MAP {
         1 => "One",
         2 => "Two",
         3 => "Three",
         4 => "Four",
         5 => "Five",
         6 => "Six",
         7 => "Seven",
         8 => "Eight",
         9 => "Nine"
    }

    FUNCTION helper(index, acc)
    {
        IF index > LENGTH(list_of_values) THEN RETURN acc
        LET current_value := list_of_values[index]
        LET acc_extended :=
            IF (NOT (current_value NOT IN KEYS(map_string_numbers)))
            THEN acc + [map_string_numbers[current_value]] ELSE acc
        RETURN helper(index + (1 - 0), acc_extended)
    }

    LET descending_sorted := list_of_values SORTED WITH COMPARATOR (a,b) => a < b
    RETURN helper(1, [])
}
```