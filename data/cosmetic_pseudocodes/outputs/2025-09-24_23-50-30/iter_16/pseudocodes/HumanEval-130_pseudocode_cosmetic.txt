```
FUNCTION tri(integer_n)
    FUNCTION recurse(acc_list, index, limit)
        IF index GREATER THAN limit THEN
            RETURN acc_list
        END IF

        IF (NOT (index MODULO 2)) EQUALS 0 THEN
            SET acc_list TO acc_list CONCATENATED WITH [ (index DIVIDED BY 2) PLUS 1 ]
        ELSE
            SET val1 TO acc_list AT POSITION index MINUS 1
            SET val2 TO acc_list AT POSITION index MINUS 2
            SET val3 TO ((index PLUS 3) DIVIDED BY 2)
            SET acc_list TO acc_list CONCATENATED WITH [ val1 PLUS val2 PLUS val3 ]
        END IF
        RETURN recurse(acc_list, index PLUS 1, limit)
    END FUNCTION

    IF NOT (integer_n GREATER THAN 0) THEN
        RETURN [1]
    END IF

    RETURN recurse([1, 3], 2, integer_n)
END FUNCTION
```