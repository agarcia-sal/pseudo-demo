```
FUNCTION select_words(string_s, natural_number_n)
  DEFINE FUNCTION count_consonants(sequence_p, position_q) RETURNS natural_number
    IF position_q GREATER THAN OR EQUAL TO LENGTH(sequence_p) THEN
      RETURN 0
    ELSE
      LET current_letter = LOWERCASE(sequence_p[position_q])
      LET is_consonant = NOT (current_letter EQUALS "a" OR current_letter EQUALS "e" OR current_letter EQUALS "i" OR current_letter EQUALS "o" OR current_letter EQUALS "u")
      RETURN (is_consonant ? 1 : 0) + count_consonants(sequence_p, position_q + 1)
    END IF
  END FUNCTION

  LET separated_words = []
  FOR EACH char IN string_s
    IF char EQUALS " "
      separated_words APPEND ""
    ELSE
      IF LENGTH(separated_words) EQUALS 0 THEN
        separated_words APPEND char
      ELSE
        LET last_index = LENGTH(separated_words) - 1
        separated_words[last_index] = separated_words[last_index] + char
      END IF
    END IF
  END FOR
  
  LET filtered_words = []
  LET iterator_k = 0
  WHILE iterator_k LESS THAN LENGTH(separated_words)
    LET candidate = separated_words[iterator_k]
    IF count_consonants(candidate, 0) EQUALS natural_number_n THEN
      filtered_words APPEND candidate
    END IF
    iterator_k = iterator_k + 1
  END WHILE
  
  RETURN filtered_words
END FUNCTION
```