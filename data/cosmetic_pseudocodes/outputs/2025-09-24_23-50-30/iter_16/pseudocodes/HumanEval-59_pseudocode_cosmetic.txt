```
FUNCTION largest_prime_factor(x)
    FUNCTION is_prime(y)
        IF NOT (y >= 2) THEN RETURN false END IF

        FUNCTION check_divisor(z, limit)
            IF z > limit THEN RETURN true END IF
            IF y MOD z = 0 THEN RETURN false END IF
            RETURN check_divisor(z + 1, limit)
        END FUNCTION

        RETURN check_divisor(2, y - 1)
    END FUNCTION

    PROCEDURE iterate_divisors(a, max_candidate)
        IF a > max_candidate THEN RETURN max_candidate END IF

        IF (x MOD a = 0) AND is_prime(a) THEN
            max_candidate := (a > max_candidate) ? a : max_candidate
        END IF

        RETURN iterate_divisors(a + 1, max_candidate)
    END PROCEDURE

    RETURN iterate_divisors(2, 1)
END FUNCTION
```