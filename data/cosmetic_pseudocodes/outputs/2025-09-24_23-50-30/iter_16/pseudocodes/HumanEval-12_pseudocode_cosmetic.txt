```
FUNCTION longest(list_of_strings)
    DEFINE FUNCTION find_first_match(strings, target_length, idx)
        IF idx > LENGTH(strings)
            RETURN None
        ENDIF

        DEFINE current_string AS strings[idx]
        RETURN (LENGTH(current_string) = target_length) 
            ? current_string 
            : find_first_match(strings, target_length, idx + 1)
    END FUNCTION

    IF LENGTH(list_of_strings) < 1
        RETURN None
    ENDIF

    DEFINE lengths_collection AS MAP each_item TO LENGTH(each_item) IN list_of_strings
    DEFINE highest_length AS REDUCE (acc, val) => (acc > val ? acc : val) OVER lengths_collection STARTING WITH lengths_collection[1]

    RETURN find_first_match(list_of_strings, highest_length, 1)
END FUNCTION
```