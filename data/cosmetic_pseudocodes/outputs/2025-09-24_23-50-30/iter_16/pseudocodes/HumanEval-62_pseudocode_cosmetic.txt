```
FUNCTION derivative(list_of_coefficients)
    DEFINE FUNCTION multiply_index(accumulated_list, pair_with_index)
        IF pair_with_index IS EMPTY
            RETURN accumulated_list
        ELSE
            LET (coeff_value, coeff_index) = pair_with_index[0]
            RETURN multiply_index(
                accumulated_list + [coeff_value * coeff_index],
                pair_with_index[1:]
            )
        END IF
    END FUNCTION

    LET indexed_pairs = zip(list_of_coefficients, range(0, length(list_of_coefficients)))
    LET filtered_pairs = filter(lambda p: p[1] != 0, indexed_pairs)
    RETURN multiply_index([], filtered_pairs)
END FUNCTION
```