```
FUNCTION match_parens(list_of_two_strings)
    FUNCTION check(string_to_verify)
        FUNCTION recursive_validate(index_accumulator)
            LET index BE index_accumulator[0]
            LET accumulator BE index_accumulator[1]
            IF index IS GREATER THAN OR EQUAL TO LENGTH(string_to_verify)
                RETURN accumulator EQUALS 0
            END IF
            LET symbol BE string_to_verify[index]
            LET updated_accumulator BE accumulator
            IF symbol IS '('
                LET updated_accumulator BE accumulator PLUS 1
            ELSE
                LET updated_accumulator BE accumulator MINUS 1
            END IF
            IF updated_accumulator IS LESS THAN 0
                RETURN False
            ELSE
                RETURN recursive_validate([index PLUS 1, updated_accumulator])
            END IF
        END FUNCTION

        RETURN recursive_validate([0, 0])
    END FUNCTION

    LET first_concat BE list_of_two_strings[0] PLUS list_of_two_strings[1]
    LET second_concat BE list_of_two_strings[1] PLUS list_of_two_strings[0]

    FOR condition_result IN [check(first_concat), check(second_concat)]
        IF condition_result
            RETURN 'Yes'
        END IF
    END FOR

    RETURN 'No'
END FUNCTION
```