CLASS Solution  
    FUNCTION findAnswer(n, edges)  
        SET graph TO a new mapping from keys to empty lists  
        FOR each element u v w IN edges  
            APPEND the tuple of element v and element w TO the list mapped from key u in graph  
            APPEND the tuple of element u and element w TO the list mapped from key v in graph  
        END FOR  
      
        SET dist TO a list of length n with each element set to infinite value  
        SET the element at position zero of dist TO zero  
        SET pq TO a list containing the tuple of zero and zero  
        WHILE the list pq holds at least one element  
            REMOVE and RETURN the tuple of current_dist and u with smallest first element from pq  
            IF current_dist GREATER THAN the element at position u of dist  
                CONTINUE to the next iteration of the WHILE loop  
            END IF  
            FOR each element v w IN the list mapped from key u in graph  
                SET distance TO current_dist PLUS element w  
                IF distance LESS THAN the element at position v of dist  
                    SET the element at position v of dist TO distance  
                    ADD the tuple of distance and v TO the list pq maintaining heap property  
                END IF  
            END FOR  
        END WHILE  
      
        SET shortest_path_edges TO an empty set  
        SET stack TO a list containing the tuple of the element n MINUS one and the element at position n MINUS one of dist  
        SET visited TO a list of length n with each element set to False  
        WHILE the list stack holds at least one element  
            REMOVE and RETURN the last tuple of u and current_dist from stack  
            IF the element at position u of visited is True  
                CONTINUE to the next iteration of the WHILE loop  
            END IF  
            SET the element at position u of visited TO True  
            FOR each element v w IN the list mapped from key u in graph  
                IF current_dist EQUALS the element at position v of dist PLUS element w  
                    ADD the tuple of the lesser of u and v and the greater of u and v TO the set shortest_path_edges  
                    APPEND the tuple of element v and the element at position v of dist TO the list stack  
                END IF  
            END FOR  
        END WHILE  
      
        SET answer TO an empty list  
        FOR each element u v _ IN edges  
            APPEND the boolean value of whether the tuple of the lesser of u and v and the greater of u and v is contained in shortest_path_edges TO answer  
        END FOR  
      
        RETURN answer  
    END FUNCTION  
END CLASS