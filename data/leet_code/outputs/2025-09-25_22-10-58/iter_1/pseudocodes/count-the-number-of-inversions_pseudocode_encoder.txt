CLASS Solution  
    FUNCTION numberOfPermutations(n, requirements)  
        SET MOD TO ten RAISED TO THE power OF nine PLUS seven  
        SET req_dict TO an empty dictionary  
        FOR each pair OF endi AND cnti IN requirements  
            SET the element at key endi OF req_dict TO cnti  
        END FOR  
        
        FUNCTION count_permutations(prefix_length, inversions, used_bits)  
            IF prefix_length EQUALS n THEN  
                IF inversions EQUALS the value in req_dict at key n MINUS one OR zero IF key n MINUS one NOT FOUND THEN  
                    RETURN one  
                ELSE  
                    RETURN zero  
                END IF  
            END IF  
            
            IF prefix_length GREATER THAN zero AND inversions NOT EQUALS the value in req_dict at key prefix_length MINUS one OR inversions IF key prefix_length MINUS one NOT FOUND THEN  
                RETURN zero  
            END IF  
            
            SET count TO zero  
            FOR num FROM zero TO n MINUS one  
                IF the bitwise AND of used_bits AND one LEFT SHIFTED BY num EQUALS zero THEN  
                    SET new_inversions TO inversions  
                    FOR j FROM num PLUS one TO n MINUS one  
                        IF the bitwise AND of used_bits AND one LEFT SHIFTED BY j NOT EQUALS zero THEN  
                            INCREMENT new_inversions BY one  
                        END IF  
                    END FOR  
                    SET count TO the remainder of count PLUS the result of count_permutations with arguments prefix_length PLUS one AND new_inversions AND the bitwise OR of used_bits AND one LEFT SHIFTED BY num DIVIDED BY MOD  
                END IF  
            END FOR  
            RETURN count  
        END FUNCTION  
        
        RETURN the result of count_permutations with arguments zero AND zero AND zero  
    END FUNCTION  
END CLASS