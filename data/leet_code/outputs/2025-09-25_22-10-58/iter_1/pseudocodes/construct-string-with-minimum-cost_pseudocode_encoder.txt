CLASS Solution  
    FUNCTION minimumCost(target, words, costs)  
        SET word_cost_dict TO an empty dictionary  
        FOR each pair word AND cost IN the parallel iteration of words AND costs  
            IF word NOT IN word_cost_dict  
                SET element at key word in word_cost_dict TO cost  
            ELSE IF cost LESS THAN element at key word in word_cost_dict  
                SET element at key word in word_cost_dict TO cost  
            END IF  
        END FOR  
        SET target_list TO the list of characters in target  
        FUNCTION min_cost_to_form_target(start)  
            IF start EQUALS the length of target_list  
                RETURN zero  
            END IF  
            SET min_cost TO infinity  
            FOR each pair word AND cost IN the items of word_cost_dict  
                IF the sum of start PLUS the length of word LESS THAN OR EQUAL TO the length of target_list  
                AND the slice of target_list from position start TO position start PLUS the length of word EQUALS the list of characters in word  
                    SET cost_to_complete TO the invocation of min_cost_to_form_target with argument start PLUS the length of word  
                    IF cost_to_complete NOT EQUALS infinity  
                        IF cost PLUS cost_to_complete LESS THAN min_cost  
                            SET min_cost TO cost PLUS cost_to_complete  
                        END IF  
                    END IF  
                END IF  
            END FOR  
            IF min_cost NOT EQUALS infinity  
                RETURN min_cost  
            ELSE  
                RETURN infinity  
            END IF  
        END FUNCTION  
        SET result TO the invocation of min_cost_to_form_target with argument zero  
        IF result NOT EQUALS infinity  
            RETURN result  
        ELSE  
            RETURN minus one  
        END IF  
    END FUNCTION  
END CLASS