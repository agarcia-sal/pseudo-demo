CLASS Solution  
    FUNCTION minimumSubarrayLength(nums LIST OF integers k integer) RETURNS integer  
        FUNCTION update_count(count LIST OF integers num integer add integer)  
            SET mask TO integer one  
            FOR i FROM integer zero TO integer thirty-one  
                IF bitwise AND of num AND mask NOT EQUALS zero  
                    INCREMENT element at position i of count BY add  
                END IF  
                SET mask TO mask MULTIPLIED BY integer two  
            END FOR  
        END FUNCTION  

        FUNCTION compute_current_or(count LIST OF integers) RETURNS integer  
            SET current_or TO integer zero  
            FOR i FROM integer zero TO integer thirty-one  
                IF element at position i of count GREATER THAN zero  
                    SET current_or TO bitwise OR of current_or AND bitwise shift integer one LEFT BY i positions  
                END IF  
            END FOR  
            RETURN current_or  
        END FUNCTION  

        SET n TO LENGTH OF nums  
        SET count TO a list containing integer zero repeated thirty-two times  
        SET current_or TO integer zero  
        SET left TO integer zero  
        SET min_length TO positive infinity  

        FOR right FROM integer zero TO n MINUS integer one  
            CALL update_count WITH count nums at position right integer one  
            SET current_or TO bitwise OR of current_or AND element at position right of nums  

            WHILE current_or GREATER THAN OR EQUAL TO k AND left LESS THAN OR EQUAL TO right  
                IF min_length GREATER THAN right MINUS left PLUS integer one  
                    SET min_length TO right MINUS left PLUS integer one  
                END IF  
                CALL update_count WITH count nums at position left MINUS integer one  
                SET current_or TO CALL compute_current_or WITH count  
                INCREMENT left BY integer one  
            END WHILE  
        END FOR  

        IF min_length EQUALS positive infinity  
            RETURN negative integer one  
        ELSE  
            RETURN min_length  
        END IF  
    END FUNCTION  
END CLASS