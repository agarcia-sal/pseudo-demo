CLASS Solution  
    FUNCTION minimumTime(n, edges, disappear)  
        SET graph TO an empty mapping with default value an empty list  
        FOR each u v length IN edges  
            APPEND tuple of neighbor v and length TO the list at key u in graph  
            APPEND tuple of neighbor u and length TO the list at key v in graph  
        END FOR  
          
        SET distances TO a list of length n with each element set to infinity  
        SET element at position zero of distances TO zero  
          
        SET min_heap TO a list containing a tuple of zero and zero  
          
        WHILE the LENGTH OF min_heap holds greater than zero  
            REMOVE the tuple with the smallest first element from min_heap and ASSIGN to current_distance and current_node  
              
            IF current_distance GREATER THAN OR EQUAL TO element at position current_node of disappear  
                CONTINUE to next iteration of WHILE loop  
            END IF  
              
            IF current_distance GREATER THAN element at position current_node of distances  
                CONTINUE to next iteration of WHILE loop  
            END IF  
              
            FOR each neighbor and length IN the list at key current_node in graph  
                SET distance TO current_distance PLUS length  
                  
                IF distance LESS THAN element at position neighbor of distances AND distance LESS THAN element at position neighbor of disappear  
                    SET element at position neighbor of distances TO distance  
                    INSERT tuple of distance and neighbor into min_heap preserving heap property  
                END IF  
            END FOR  
        END WHILE  
          
        SET result TO a list of length n with each element set to minus one  
        FOR i FROM zero TO n MINUS one  
            IF element at position i of distances LESS THAN element at position i of disappear  
                SET element at position i of result TO element at position i of distances  
            END IF  
        END FOR  
          
        RETURN result  
    END FUNCTION  
END CLASS