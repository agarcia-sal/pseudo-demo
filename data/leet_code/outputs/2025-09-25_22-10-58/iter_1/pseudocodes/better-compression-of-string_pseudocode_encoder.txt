CLASS Solution  
    FUNCTION betterCompression(compressed)  
        CREATE an empty dictionary named char_count that returns zero for any nonexistent key  
        SET current_char TO an empty string  
        SET current_count TO zero  
        FOR each character IN compressed  
            IF character is an alphabetical letter  
                IF current_char is not an empty string  
                    INCREMENT the value at key current_char in char_count BY current_count  
                END IF  
                SET current_char TO character  
                SET current_count TO zero  
            ELSE  
                SET current_count TO current_count MULTIPLIED BY ten PLUS the integer value of character  
            END IF  
        END FOR  
        IF current_char is not an empty string  
            INCREMENT the value at key current_char in char_count BY current_count  
        END IF  
        CREATE an empty list named better_compressed_parts  
        FOR each character IN the alphabetical ordering of the keys of char_count  
            APPEND the concatenation of character and the string representation of the value at key character in char_count TO better_compressed_parts  
        END FOR  
        SET better_compressed TO the concatenation of all elements in better_compressed_parts without any separator  
        RETURN better_compressed  
    END FUNCTION  
END CLASS