CLASS Solution  
    FUNCTION earliestSecondToMarkIndices(nums PARAMETER changeIndices)  
        SET n TO the LENGTH OF nums  
        SET m TO the LENGTH OF changeIndices  
        
        FUNCTION can_mark_by_second(k)  
            SET last_occurrence TO a list of size n FILLED WITH negative one  
            FOR s FROM zero TO k MINUS one  
                SET i TO element at position s of changeIndices MINUS one  
                SET element at position i of last_occurrence TO s  
            END FOR  
            
            SET total_decrements_needed TO the SUM OF nums  
            SET available_decrements TO zero  
            SET marked_indices TO an empty set  
            
            FOR s FROM zero TO k MINUS one  
                SET i TO element at position s of changeIndices MINUS one  
                IF i IS NOT IN marked_indices  
                    IF element at position i of last_occurrence EQUALS s  
                        IF element at position i of nums IS LESS THAN OR EQUAL TO available_decrements  
                            DECREMENT available_decrements BY element at position i of nums  
                            ADD i TO marked_indices  
                        ELSE  
                            RETURN False  
                        END IF  
                    ELSE  
                        INCREMENT available_decrements BY one  
                    END IF  
                ELSE  
                    INCREMENT available_decrements BY one  
                END IF  
            END FOR  
            
            RETURN the LENGTH OF marked_indices EQUALS n  
        END FUNCTION  
        
        SET left TO zero  
        SET right TO m PLUS one  
        WHILE left IS LESS THAN right  
            SET mid TO left PLUS right DIVIDED BY two USING INTEGER DIVISION  
            IF can_mark_by_second(mid)  
                SET right TO mid  
            ELSE  
                SET left TO left PLUS one  
            END IF  
        END WHILE  
        
        IF left IS LESS THAN OR EQUAL TO m  
            RETURN left  
        ELSE  
            RETURN negative one  
        END IF  
    END FUNCTION  
END CLASS