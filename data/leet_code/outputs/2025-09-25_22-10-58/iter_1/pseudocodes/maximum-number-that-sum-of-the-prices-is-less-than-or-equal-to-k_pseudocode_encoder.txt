CLASS Solution  
    FUNCTION findMaximumNumber(k, x)  
        FUNCTION count_set_bits(n, pos)  
            SET count TO zero  
            SET block_size TO one MULTIPLIED BY two RAISED TO THE POWER OF pos  
            SET full_blocks TO n DIVIDED BY block_size  
            INCREMENT count BY full_blocks DIVIDED BY two MULTIPLIED BY block_size  
            IF full_blocks MODULO two EQUALS one  
                INCREMENT count BY n MODULO block_size PLUS one  
            END IF  
            RETURN count  
        END FUNCTION  

        FUNCTION accumulated_price(n)  
            SET price TO zero  
            SET i TO one  
            WHILE two RAISED TO THE POWER OF (i MULTIPLIED BY x MINUS one) LESS THAN OR EQUAL TO n  
                INCREMENT price BY count_set_bits(n, i MULTIPLIED BY x MINUS one)  
                INCREMENT i BY one  
            END WHILE  
            RETURN price  
        END FUNCTION  

        SET low TO one  
        SET high TO one MULTIPLIED BY two RAISED TO THE POWER OF sixty  
        WHILE low LESS THAN OR EQUAL TO high  
            SET mid TO low PLUS high DIVIDED BY two  
            IF accumulated_price(mid) LESS THAN OR EQUAL TO k  
                SET low TO mid PLUS one  
            ELSE  
                SET high TO mid MINUS one  
            END IF  
        END WHILE  
        RETURN high  
    END FUNCTION  
END CLASS