CLASS Solution  
    FUNCTION largestSquareArea(bottomLeft, topRight)  
        FUNCTION intersecting_square_area(bl1, tr1, bl2, tr2)  
            SET left TO the greater value BETWEEN the element at position zero of bl1 AND the element at position zero of bl2  
            SET right TO the lesser value BETWEEN the element at position zero of tr1 AND the element at position zero of tr2  
            SET bottom TO the greater value BETWEEN the element at position one of bl1 AND the element at position one of bl2  
            SET top TO the lesser value BETWEEN the element at position one of tr1 AND the element at position one of tr2  
            IF left GREATER THAN OR EQUAL TO right OR bottom GREATER THAN OR EQUAL TO top  
                RETURN zero  
            END IF  
            SET side TO the lesser value BETWEEN right MINUS left AND top MINUS bottom  
            RETURN side MULTIPLIED BY side  
        END FUNCTION  

        SET max_area TO zero  
        SET n TO the length of bottomLeft  
        FOR i FROM zero TO n MINUS one  
            FOR j FROM i PLUS one TO n MINUS one  
                SET candidate_area TO intersecting_square_area(element at position i of bottomLeft, element at position i of topRight, element at position j of bottomLeft, element at position j of topRight)  
                SET max_area TO the greater value BETWEEN max_area AND candidate_area  
            END FOR  
        END FOR  
        RETURN max_area  
    END FUNCTION  
END CLASS